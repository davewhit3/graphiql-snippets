{
  "version": 3,
  "sources": ["../../.pnpm/meros@1.3.0/node_modules/meros/browser/index.mjs", "../../.pnpm/@n1ru4l+push-pull-async-iterable-iterator@3.2.0/node_modules/@n1ru4l/push-pull-async-iterable-iterator/index.mjs"],
  "sourcesContent": ["var e=new TextDecoder;async function t(t,n){if(!t.ok||!t.body||t.bodyUsed)return t;let i=t.headers.get(\"content-type\");if(!i||!~i.indexOf(\"multipart/\"))return t;let l=i.indexOf(\"boundary=\"),r=\"-\";if(~l){let e=l+9,t=i.indexOf(\";\",e);r=i.slice(e,t>-1?t:void 0).trim().replace(/\"/g,\"\")}return async function*(t,n,i){let l,r,d,o=t.getReader(),a=!i||!i.multiple,f=n.length,s=\"\",c=[];try{let t;e:for(;!(t=await o.read()).done;){let i=e.decode(t.value);l=s.length,s+=i;let o=i.indexOf(n);for(~o?l+=o:l=s.indexOf(n),c=[];~l;){let e=s.slice(0,l),t=s.slice(l+f);if(r){let n=e.indexOf(\"\\r\\n\\r\\n\")+4,i=e.lastIndexOf(\"\\r\\n\",n),l=!1,r=e.slice(n,i>-1?void 0:i),o=String(e.slice(0,n)).trim().split(\"\\r\\n\"),f={},s=o.length;for(;d=o[--s];d=d.split(\": \"),f[d.shift().toLowerCase()]=d.join(\": \"));if(d=f[\"content-type\"],d&&~d.indexOf(\"application/json\"))try{r=JSON.parse(r),l=!0}catch(e){}if(d={headers:f,body:r,json:l},a?yield d:c.push(d),\"--\"===t.slice(0,2))break e}else n=\"\\r\\n\"+n,r=f+=2;s=t,l=s.indexOf(n)}c.length&&(yield c)}}finally{c.length&&(yield c),await o.cancel()}}(t.body,`--${r}`,n)}export{t as meros};", "/**\r\n * Attaches a cleanup handler to a AsyncIterable.\r\n *\r\n * @param source The source that should have a return handler attached\r\n * @param onReturn The return handler that should be attached\r\n * @returns\r\n */\r\nfunction withHandlers(source, onReturn, onThrow) {\r\n    const stream = (async function* withReturnSource() {\r\n        yield* source;\r\n    })();\r\n    const originalReturn = stream.return.bind(stream);\r\n    if (onReturn) {\r\n        stream.return = (...args) => {\r\n            onReturn();\r\n            return originalReturn(...args);\r\n        };\r\n    }\r\n    if (onThrow) {\r\n        const originalThrow = stream.throw.bind(stream);\r\n        stream.throw = (err) => {\r\n            onThrow(err);\r\n            return originalThrow(err);\r\n        };\r\n    }\r\n    return stream;\r\n}\n\nfunction createDeferred() {\r\n    const d = {};\r\n    d.promise = new Promise((resolve, reject) => {\r\n        d.resolve = resolve;\r\n        d.reject = reject;\r\n    });\r\n    return d;\r\n}\r\n/**\r\n * makePushPullAsyncIterableIterator\r\n *\r\n * The iterable will publish values until return or throw is called.\r\n * Afterwards it is in the completed state and cannot be used for publishing any further values.\r\n * It will handle back-pressure and keep pushed values until they are consumed by a source.\r\n */\r\nfunction makePushPullAsyncIterableIterator() {\r\n    let state = {\r\n        type: \"running\" /* running */\r\n    };\r\n    let next = createDeferred();\r\n    const values = [];\r\n    function pushValue(value) {\r\n        if (state.type !== \"running\" /* running */) {\r\n            return;\r\n        }\r\n        values.push(value);\r\n        next.resolve();\r\n        next = createDeferred();\r\n    }\r\n    const source = (async function* PushPullAsyncIterableIterator() {\r\n        while (true) {\r\n            if (values.length > 0) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                yield values.shift();\r\n            }\r\n            else {\r\n                if (state.type === \"error\" /* error */) {\r\n                    throw state.error;\r\n                }\r\n                if (state.type === \"finished\" /* finished */) {\r\n                    return;\r\n                }\r\n                await next.promise;\r\n            }\r\n        }\r\n    })();\r\n    const stream = withHandlers(source, () => {\r\n        if (state.type !== \"running\" /* running */) {\r\n            return;\r\n        }\r\n        state = {\r\n            type: \"finished\" /* finished */\r\n        };\r\n        next.resolve();\r\n    }, (error) => {\r\n        if (state.type !== \"running\" /* running */) {\r\n            return;\r\n        }\r\n        state = {\r\n            type: \"error\" /* error */,\r\n            error\r\n        };\r\n        next.resolve();\r\n    });\r\n    return {\r\n        pushValue,\r\n        asyncIterableIterator: stream\r\n    };\r\n}\n\nconst makeAsyncIterableIteratorFromSink = (make) => {\r\n    const { pushValue, asyncIterableIterator } = makePushPullAsyncIterableIterator();\r\n    const dispose = make({\r\n        next: (value) => {\r\n            pushValue(value);\r\n        },\r\n        complete: () => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            asyncIterableIterator.return();\r\n        },\r\n        error: (err) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            asyncIterableIterator.throw(err);\r\n        }\r\n    });\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const originalReturn = asyncIterableIterator.return;\r\n    let returnValue = undefined;\r\n    asyncIterableIterator.return = () => {\r\n        if (returnValue === undefined) {\r\n            dispose();\r\n            returnValue = originalReturn();\r\n        }\r\n        return returnValue;\r\n    };\r\n    return asyncIterableIterator;\r\n};\n\nfunction applyAsyncIterableIteratorToSink(asyncIterableIterator, sink) {\r\n    const run = async () => {\r\n        try {\r\n            for await (const value of asyncIterableIterator) {\r\n                sink.next(value);\r\n            }\r\n            sink.complete();\r\n        }\r\n        catch (err) {\r\n            sink.error(err);\r\n        }\r\n    };\r\n    run();\r\n    return () => {\r\n        var _a;\r\n        (_a = asyncIterableIterator.return) === null || _a === void 0 ? void 0 : _a.call(asyncIterableIterator);\r\n    };\r\n}\n\nfunction isAsyncIterable(input) {\r\n    return (typeof input === \"object\" &&\r\n        input !== null &&\r\n        // The AsyncGenerator check is for Safari on iOS which currently does not have\r\n        // Symbol.asyncIterator implemented\r\n        // That means every custom AsyncIterable must be built using a AsyncGeneratorFunction (async function * () {})\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        (input[Symbol.toStringTag] === \"AsyncGenerator\" ||\r\n            (Symbol.asyncIterator && Symbol.asyncIterator in input)));\r\n}\n\n/**\r\n * Attaches a cleanup handler from and AsyncIterable to an AsyncIterable.\r\n *\r\n * @param source\r\n * @param target\r\n */\r\nfunction withHandlersFrom(\r\n/** The source that should be returned with attached handlers. */\r\nsource, \r\n/**The target on which the return and throw methods should be called. */\r\ntarget) {\r\n    return withHandlers(source, () => { var _a; return (_a = target.return) === null || _a === void 0 ? void 0 : _a.call(target); }, err => { var _a; return (_a = target.throw) === null || _a === void 0 ? void 0 : _a.call(target, err); });\r\n}\n\nfunction filter(filter) {\r\n    return async function* filterGenerator(asyncIterable) {\r\n        for await (const value of asyncIterable) {\r\n            if (filter(value)) {\r\n                yield value;\r\n            }\r\n        }\r\n    };\r\n}\n\n/**\r\n * Map the events published by an AsyncIterable.\r\n */\r\nconst map = (map) => async function* mapGenerator(asyncIterable) {\r\n    for await (const value of asyncIterable) {\r\n        yield map(value);\r\n    }\r\n};\n\nexport { applyAsyncIterableIteratorToSink, filter, isAsyncIterable, makeAsyncIterableIteratorFromSink, makePushPullAsyncIterableIterator, map, withHandlers, withHandlersFrom };\n"],
  "mappings": "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",
  "names": ["t", "e", "n", "i", "l", "r", "o", "f", "s"]
}
