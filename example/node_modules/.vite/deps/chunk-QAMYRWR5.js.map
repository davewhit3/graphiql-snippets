{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/utils/forEachState.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { State, Maybe } from 'graphql-language-service';\n\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\nexport default function forEachState(stack: State, fn: (state: State) => void) {\n  const reverseStateStack = [];\n  let state: Maybe<State> = stack;\n  while (state?.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n"],
  "mappings": ";AAYc,SAAP,aAA8B,OAAc,IAA0B;AAC3E,QAAM,oBAAoB,CAAA;AAC1B,MAAI,QAAsB;AAC1B,SAAO,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,MAAM;AAClB,sBAAkB,KAAK,KAAK;AAC5B,YAAQ,MAAM;;AAEhB,WAAS,IAAI,kBAAkB,SAAS,GAAG,KAAK,GAAG,KAAK;AACtD,OAAG,kBAAkB,CAAC,CAAC;;AAE3B;",
  "names": []
}
