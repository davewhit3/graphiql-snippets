{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/results/mode.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\n\nimport { list, t, onlineParser, p, Token } from 'graphql-language-service';\nimport indent from '../utils/mode-indent';\n\n/**\n * This mode defines JSON, but provides a data-laden parser state to enable\n * better code intelligence.\n */\nCodeMirror.defineMode('graphql-results', config => {\n  const parser = onlineParser({\n    eatWhitespace: stream => stream.eatSpace(),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize },\n  });\n\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token as unknown as CodeMirror.Mode<any>['token'], // TODO: Check if the types are indeed compatible\n    indent,\n    electricInput: /^\\s*[}\\]]/,\n    fold: 'brace',\n    closeBrackets: {\n      pairs: '[]{}\"\"',\n      explode: '[]{}',\n    },\n  };\n});\n\n/**\n * The lexer rules. These are exactly as described by the spec.\n */\nconst LexRules = {\n  // All Punctuation used in JSON.\n  Punctuation: /^\\[|]|\\{|\\}|:|,/,\n\n  // JSON Number.\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n\n  // JSON String.\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n\n  // JSON literal keywords.\n  Keyword: /^true|false|null/,\n};\n\n/**\n * The parser rules for JSON.\n */\nconst ParseRules = {\n  Document: [p('{'), list('Entry', p(',')), p('}')],\n  Entry: [t('String', 'def'), p(':'), 'Value'],\n  Value(token: Token) {\n    switch (token.kind) {\n      case 'Number':\n        return 'NumberValue';\n      case 'String':\n        return 'StringValue';\n      case 'Punctuation':\n        switch (token.value) {\n          case '[':\n            return 'ListValue';\n          case '{':\n            return 'ObjectValue';\n        }\n        return null;\n      case 'Keyword':\n        switch (token.value) {\n          case 'true':\n          case 'false':\n            return 'BooleanValue';\n          case 'null':\n            return 'NullValue';\n        }\n        return null;\n    }\n  },\n  NumberValue: [t('Number', 'number')],\n  StringValue: [t('String', 'string')],\n  BooleanValue: [t('Keyword', 'builtin')],\n  NullValue: [t('Keyword', 'keyword')],\n  ListValue: [p('['), list('Value', p(',')), p(']')],\n  ObjectValue: [p('{'), list('ObjectField', p(',')), p('}')],\n  ObjectField: [t('String', 'property'), p(':'), 'Value'],\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AASA,wBAAuB;AASvB,kBAAAA,QAAW,WAAW,mBAAmB,YAAS;AAChD,QAAM,SAAS,aAAa;IAC1B,eAAe,YAAU,OAAO,SAAQ;IACxC,UAAU;IACV,YAAY;IACZ,cAAc,EAAE,SAAS,OAAO,QAAO;GACxC;AAED,SAAO;IACL;IACA,YAAY,OAAO;IACnB,OAAO,OAAO;IACd;IACA,eAAe;IACf,MAAM;IACN,eAAe;MACb,OAAO;MACP,SAAS;;;AAGf,CAAC;AAKD,IAAM,WAAW;EAEf,aAAa;EAGb,QAAQ;EAGR,QAAQ;EAGR,SAAS;;AAMX,IAAM,aAAa;EACjB,UAAU,CAAC,EAAE,GAAG,GAAG,KAAK,SAAS,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAChD,OAAO,CAAC,EAAE,UAAU,KAAK,GAAG,EAAE,GAAG,GAAG,OAAO;EAC3C,MAAM,OAAY;AAChB,YAAQ,MAAM,MAAM;MAClB,KAAK;AACH,eAAO;MACT,KAAK;AACH,eAAO;MACT,KAAK;AACH,gBAAQ,MAAM,OAAO;UACnB,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;;AAEX,eAAO;MACT,KAAK;AACH,gBAAQ,MAAM,OAAO;UACnB,KAAK;UACL,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;;AAEX,eAAO;;EAEb;EACA,aAAa,CAAC,EAAE,UAAU,QAAQ,CAAC;EACnC,aAAa,CAAC,EAAE,UAAU,QAAQ,CAAC;EACnC,cAAc,CAAC,EAAE,WAAW,SAAS,CAAC;EACtC,WAAW,CAAC,EAAE,WAAW,SAAS,CAAC;EACnC,WAAW,CAAC,EAAE,GAAG,GAAG,KAAK,SAAS,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EACjD,aAAa,CAAC,EAAE,GAAG,GAAG,KAAK,eAAe,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EACzD,aAAa,CAAC,EAAE,UAAU,UAAU,GAAG,EAAE,GAAG,GAAG,OAAO;;",
  "names": ["CodeMirror"]
}
