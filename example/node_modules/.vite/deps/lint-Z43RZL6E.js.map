{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/lint.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { FragmentDefinitionNode, GraphQLSchema, ValidationRule } from 'graphql';\nimport { getDiagnostics } from 'graphql-language-service';\n\nconst SEVERITY = ['error', 'warning', 'information', 'hint'];\nconst TYPE: Record<string, string> = {\n  'GraphQL: Validation': 'validation',\n  'GraphQL: Deprecation': 'deprecation',\n  'GraphQL: Syntax': 'syntax',\n};\n\ninterface GraphQLLintOptions {\n  schema?: GraphQLSchema;\n  validationRules: ValidationRule[];\n  externalFragments?: string | FragmentDefinitionNode[];\n}\n\n/**\n * Registers a \"lint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"lint\" addon: https://codemirror.net/demo/lint.html\n * Given the text within an editor, this helper will take that text and return\n * a list of linter issues, derived from GraphQL's parse and validate steps.\n * Also, this uses `graphql-language-service-parser` to power the diagnostics\n * service.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides the linter with positionally relevant info\n *\n */\nCodeMirror.registerHelper(\n  'lint',\n  'graphql',\n  (text: string, options: GraphQLLintOptions): CodeMirror.Annotation[] => {\n    const { schema, validationRules, externalFragments } = options;\n    const rawResults = getDiagnostics(\n      text,\n      schema,\n      validationRules,\n      undefined,\n      externalFragments,\n    );\n\n    const results = rawResults.map(error => ({\n      message: error.message,\n      severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n      type: error.source ? TYPE[error.source] : undefined,\n      from: CodeMirror.Pos(error.range.start.line, error.range.start.character),\n      to: CodeMirror.Pos(error.range.end.line, error.range.end.character),\n    }));\n\n    return results;\n  },\n);\n"],
  "mappings": ";;;;;;;;;;;;AASA,wBAAuB;AAIvB,IAAM,WAAW,CAAC,SAAS,WAAW,eAAe,MAAM;AAC3D,IAAM,OAA+B;EACnC,uBAAuB;EACvB,wBAAwB;EACxB,mBAAmB;;AAuBrB,kBAAAA,QAAW,eACT,QACA,WACA,CAAC,MAAc,YAAwD;AACrE,QAAM,EAAE,QAAQ,iBAAiB,kBAAiB,IAAK;AACvD,QAAM,aAAa,eACjB,MACA,QACA,iBACA,QACA,iBAAiB;AAGnB,QAAM,UAAU,WAAW,IAAI,YAAU;IACvC,SAAS,MAAM;IACf,UAAU,MAAM,WAAW,SAAS,MAAM,WAAW,CAAC,IAAI,SAAS,CAAC;IACpE,MAAM,MAAM,SAAS,KAAK,MAAM,MAAM,IAAI;IAC1C,MAAM,kBAAAA,QAAW,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,SAAS;IACxE,IAAI,kBAAAA,QAAW,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM,MAAM,IAAI,SAAS;IAClE;AAEF,SAAO;AACT,CAAC;",
  "names": ["CodeMirror"]
}
