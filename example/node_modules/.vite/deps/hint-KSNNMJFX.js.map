{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/hint.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport CodeMirror, { Hints, Hint } from 'codemirror';\nimport 'codemirror/addon/hint/show-hint.js';\n\nimport { FragmentDefinitionNode, GraphQLSchema, GraphQLType } from 'graphql';\nimport type {\n  AutocompleteSuggestionOptions,\n  Maybe,\n} from 'graphql-language-service';\nimport { getAutocompleteSuggestions, Position } from 'graphql-language-service';\n\nexport interface GraphQLHintOptions {\n  schema?: GraphQLSchema;\n  externalFragments?: string | FragmentDefinitionNode[];\n  autocompleteOptions?: AutocompleteSuggestionOptions;\n}\n\ninterface IHint extends Hint {\n  isDeprecated?: boolean;\n  type?: Maybe<GraphQLType>;\n  description?: Maybe<string>;\n  deprecationReason?: Maybe<string>;\n}\n\ninterface IHints extends Hints {\n  list: IHint[];\n}\n\ndeclare module 'codemirror' {\n  interface ShowHintOptions {\n    schema?: GraphQLSchema;\n    externalFragments?: string | FragmentDefinitionNode[];\n  }\n\n  interface CodeMirrorHintMap {\n    graphql: (\n      editor: CodeMirror.Editor,\n      options: GraphQLHintOptions,\n    ) => IHints | undefined;\n  }\n}\n\n/**\n * Registers a \"hint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"hint\" addon: https://codemirror.net/demo/complete.html\n * Given an editor, this helper will take the token at the cursor and return a\n * list of suggested tokens.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides the hinter with positionally relevant info\n *\n * Additional Events:\n *\n *   - hasCompletion (codemirror, data, token) - signaled when the hinter has a\n *     new list of completion suggestions.\n *\n */\nCodeMirror.registerHelper(\n  'hint',\n  'graphql',\n  (\n    editor: CodeMirror.Editor,\n    options: GraphQLHintOptions,\n  ): IHints | undefined => {\n    const { schema, externalFragments, autocompleteOptions } = options;\n    if (!schema) {\n      return;\n    }\n\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n\n    const tokenStart =\n      token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n\n    const position = new Position(cur.line, tokenStart);\n\n    const rawResults = getAutocompleteSuggestions(\n      schema,\n      editor.getValue(),\n      position,\n      token,\n      externalFragments,\n      autocompleteOptions,\n    );\n\n    const results = {\n      list: rawResults.map(item => ({\n        // important! for when the label is different from the insert text\n        text: item?.rawInsert ?? item.label,\n        type: item.type,\n        description: item.documentation,\n        isDeprecated: item.isDeprecated,\n        deprecationReason: item.deprecationReason,\n      })),\n      from: { line: cur.line, ch: tokenStart },\n      to: { line: cur.line, ch: token.end },\n    };\n\n    if (results?.list && results.list.length > 0) {\n      results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n      results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n      CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n\n    return results;\n  },\n);\n// exporting here so we don't need to import the codemirror show-hint addon module (and its implementation)\nexport type { IHint, IHints };\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAWA,wBAAwC;AACxC,uBAAO;AAyDP,kBAAAA,QAAW,eACT,QACA,WACA,CACE,QACA,YACsB;AACtB,QAAM,EAAE,QAAQ,mBAAmB,oBAAmB,IAAK;AAC3D,MAAI,CAAC,QAAQ;AACX;;AAGF,QAAM,MAAM,OAAO,UAAS;AAC5B,QAAM,QAAQ,OAAO,WAAW,GAAG;AAEnC,QAAM,aACJ,MAAM,SAAS,QAAQ,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC,IAC9C,MAAM,QACN,MAAM;AAEZ,QAAM,WAAW,IAAI,SAAS,IAAI,MAAM,UAAU;AAElD,QAAM,aAAa,2BACjB,QACA,OAAO,SAAQ,GACf,UACA,OACA,mBACA,mBAAmB;AAGrB,QAAM,UAAU;IACd,MAAM,WAAW,IAAI,UAAO;;AAAC,aAAC;QAE5B,OAAM,KAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,eAAS,QAAA,OAAA,SAAA,KAAI,KAAK;QAC9B,MAAM,KAAK;QACX,aAAa,KAAK;QAClB,cAAc,KAAK;QACnB,mBAAmB,KAAK;;KACxB;IACF,MAAM,EAAE,MAAM,IAAI,MAAM,IAAI,WAAU;IACtC,IAAI,EAAE,MAAM,IAAI,MAAM,IAAI,MAAM,IAAG;;AAGrC,OAAI,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,SAAQ,QAAQ,KAAK,SAAS,GAAG;AAC5C,YAAQ,OAAO,kBAAAA,QAAW,IAAI,QAAQ,KAAK,MAAM,QAAQ,KAAK,EAAE;AAChE,YAAQ,KAAK,kBAAAA,QAAW,IAAI,QAAQ,GAAG,MAAM,QAAQ,GAAG,EAAE;AAC1D,sBAAAA,QAAW,OAAO,QAAQ,iBAAiB,QAAQ,SAAS,KAAK;;AAGnE,SAAO;AACT,CAAC;",
  "names": ["CodeMirror"]
}
