{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/jump.ts", "../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/utils/jump-addon.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\n\nimport getTypeInfo from './utils/getTypeInfo';\nimport {\n  getArgumentReference,\n  getDirectiveReference,\n  getEnumValueReference,\n  getFieldReference,\n  getTypeReference,\n} from './utils/SchemaReference';\nimport './utils/jump-addon';\nimport { GraphQLSchema } from 'graphql';\nimport type { State } from 'graphql-language-service';\n\nexport interface GraphQLJumpOptions {\n  schema?: GraphQLSchema;\n  onClick?: () => void;\n  state?: State;\n}\n\n/**\n * Registers GraphQL \"jump\" links for CodeMirror.\n *\n * When command-hovering over a token, this converts it to a link, which when\n * pressed will call the provided onClick handler.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\nCodeMirror.registerHelper(\n  'jump',\n  'graphql',\n  (token: CodeMirror.Token, options: GraphQLJumpOptions) => {\n    if (!options.schema || !options.onClick || !token.state) {\n      return;\n    }\n\n    // Given a Schema and a Token, produce a \"SchemaReference\" which refers to\n    // the particular artifact from the schema (such as a type, field, argument,\n    // or directive) that token references.\n    const { state } = token;\n    const { kind, step } = state;\n    const typeInfo = getTypeInfo(options.schema, state);\n\n    if (\n      (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n      (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)\n    ) {\n      return getFieldReference(typeInfo);\n    }\n    if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n      return getDirectiveReference(typeInfo);\n    }\n    if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n      return getArgumentReference(typeInfo);\n    }\n    if (kind === 'EnumValue' && typeInfo.enumValue) {\n      return getEnumValueReference(typeInfo);\n    }\n    if (kind === 'NamedType' && typeInfo.type) {\n      return getTypeReference(typeInfo);\n    }\n  },\n);\n", "/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { GraphQLJumpOptions } from '../jump';\n\nCodeMirror.defineOption(\n  'jump',\n  false,\n  (\n    cm: CodeMirror.Editor,\n    options: GraphQLJumpOptions,\n    old?: GraphQLJumpOptions,\n  ) => {\n    if (old && old !== CodeMirror.Init) {\n      const oldOnMouseOver = cm.state.jump.onMouseOver;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n      const oldOnMouseOut = cm.state.jump.onMouseOut;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseout', oldOnMouseOut);\n      CodeMirror.off(document, 'keydown', cm.state.jump.onKeyDown);\n      delete cm.state.jump;\n    }\n\n    if (options) {\n      const state = (cm.state.jump = {\n        options,\n        onMouseOver: onMouseOver.bind(null, cm),\n        onMouseOut: onMouseOut.bind(null, cm),\n        onKeyDown: onKeyDown.bind(null, cm),\n      });\n\n      CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n      CodeMirror.on(cm.getWrapperElement(), 'mouseout', state.onMouseOut);\n      CodeMirror.on(document, 'keydown', state.onKeyDown);\n    }\n  },\n);\n\nfunction onMouseOver(cm: CodeMirror.Editor, event: MouseEvent) {\n  const target = event.target || event.srcElement;\n  if (!(target instanceof HTMLElement)) {\n    return;\n  }\n  if (target?.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const box = target.getBoundingClientRect();\n  const cursor = {\n    left: (box.left + box.right) / 2,\n    top: (box.top + box.bottom) / 2,\n  };\n\n  cm.state.jump.cursor = cursor;\n\n  if (cm.state.jump.isHoldingModifier) {\n    enableJumpMode(cm);\n  }\n}\n\nfunction onMouseOut(cm: CodeMirror.Editor) {\n  if (!cm.state.jump.isHoldingModifier && cm.state.jump.cursor) {\n    cm.state.jump.cursor = null;\n    return;\n  }\n\n  if (cm.state.jump.isHoldingModifier && cm.state.jump.marker) {\n    disableJumpMode(cm);\n  }\n}\n\nfunction onKeyDown(cm: CodeMirror.Editor, event: KeyboardEvent) {\n  if (cm.state.jump.isHoldingModifier || !isJumpModifier(event.key)) {\n    return;\n  }\n\n  cm.state.jump.isHoldingModifier = true;\n\n  if (cm.state.jump.cursor) {\n    enableJumpMode(cm);\n  }\n\n  const onKeyUp = (upEvent: KeyboardEvent) => {\n    if (upEvent.code !== event.code) {\n      return;\n    }\n\n    cm.state.jump.isHoldingModifier = false;\n\n    if (cm.state.jump.marker) {\n      disableJumpMode(cm);\n    }\n\n    CodeMirror.off(document, 'keyup', onKeyUp);\n    CodeMirror.off(document, 'click', onClick);\n    cm.off('mousedown', onMouseDown);\n  };\n\n  const onClick = (clickEvent: MouseEvent) => {\n    const { destination, options } = cm.state.jump;\n    if (destination) {\n      options.onClick(destination, clickEvent);\n    }\n  };\n\n  const onMouseDown = (_: any, downEvent: MouseEvent) => {\n    if (cm.state.jump.destination) {\n      (downEvent as any).codemirrorIgnore = true;\n    }\n  };\n\n  CodeMirror.on(document, 'keyup', onKeyUp);\n  CodeMirror.on(document, 'click', onClick);\n  cm.on('mousedown', onMouseDown);\n}\n\nconst isMac =\n  typeof navigator !== 'undefined' && navigator.userAgent.includes('Mac');\n\nfunction isJumpModifier(key: string) {\n  return key === (isMac ? 'Meta' : 'Control');\n}\n\nfunction enableJumpMode(cm: CodeMirror.Editor) {\n  if (cm.state.jump.marker) {\n    return;\n  }\n\n  const { cursor, options } = cm.state.jump;\n  const pos = cm.coordsChar(cursor);\n  const token = cm.getTokenAt(pos, true);\n  const getDestination = options.getDestination || cm.getHelper(pos, 'jump');\n  if (getDestination) {\n    const destination = getDestination(token, options, cm);\n    if (destination) {\n      const marker = cm.markText(\n        { line: pos.line, ch: token.start },\n        { line: pos.line, ch: token.end },\n        { className: 'CodeMirror-jump-token' },\n      );\n\n      cm.state.jump.marker = marker;\n      cm.state.jump.destination = destination;\n    }\n  }\n}\n\nfunction disableJumpMode(cm: CodeMirror.Editor) {\n  const { marker } = cm.state.jump;\n  cm.state.jump.marker = null;\n  cm.state.jump.destination = null;\n\n  marker.clear();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AASA,IAAAA,qBAAuB;;;ACAvB,wBAAuB;AAGvB,kBAAAC,QAAW,aACT,QACA,OACA,CACE,IACA,SACA,QACE;AACF,MAAI,OAAO,QAAQ,kBAAAA,QAAW,MAAM;AAClC,UAAM,iBAAiB,GAAG,MAAM,KAAK;AACrC,sBAAAA,QAAW,IAAI,GAAG,kBAAiB,GAAI,aAAa,cAAc;AAClE,UAAM,gBAAgB,GAAG,MAAM,KAAK;AACpC,sBAAAA,QAAW,IAAI,GAAG,kBAAiB,GAAI,YAAY,aAAa;AAChE,sBAAAA,QAAW,IAAI,UAAU,WAAW,GAAG,MAAM,KAAK,SAAS;AAC3D,WAAO,GAAG,MAAM;;AAGlB,MAAI,SAAS;AACX,UAAM,QAAS,GAAG,MAAM,OAAO;MAC7B;MACA,aAAa,YAAY,KAAK,MAAM,EAAE;MACtC,YAAY,WAAW,KAAK,MAAM,EAAE;MACpC,WAAW,UAAU,KAAK,MAAM,EAAE;;AAGpC,sBAAAA,QAAW,GAAG,GAAG,kBAAiB,GAAI,aAAa,MAAM,WAAW;AACpE,sBAAAA,QAAW,GAAG,GAAG,kBAAiB,GAAI,YAAY,MAAM,UAAU;AAClE,sBAAAA,QAAW,GAAG,UAAU,WAAW,MAAM,SAAS;;AAEtD,CAAC;AAGH,SAAS,YAAY,IAAuB,OAAiB;AAC3D,QAAM,SAAS,MAAM,UAAU,MAAM;AACrC,MAAI,EAAE,kBAAkB,cAAc;AACpC;;AAEF,OAAI,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,cAAa,QAAQ;AAC/B;;AAGF,QAAM,MAAM,OAAO,sBAAqB;AACxC,QAAM,SAAS;IACb,OAAO,IAAI,OAAO,IAAI,SAAS;IAC/B,MAAM,IAAI,MAAM,IAAI,UAAU;;AAGhC,KAAG,MAAM,KAAK,SAAS;AAEvB,MAAI,GAAG,MAAM,KAAK,mBAAmB;AACnC,mBAAe,EAAE;;AAErB;AAEA,SAAS,WAAW,IAAqB;AACvC,MAAI,CAAC,GAAG,MAAM,KAAK,qBAAqB,GAAG,MAAM,KAAK,QAAQ;AAC5D,OAAG,MAAM,KAAK,SAAS;AACvB;;AAGF,MAAI,GAAG,MAAM,KAAK,qBAAqB,GAAG,MAAM,KAAK,QAAQ;AAC3D,oBAAgB,EAAE;;AAEtB;AAEA,SAAS,UAAU,IAAuB,OAAoB;AAC5D,MAAI,GAAG,MAAM,KAAK,qBAAqB,CAAC,eAAe,MAAM,GAAG,GAAG;AACjE;;AAGF,KAAG,MAAM,KAAK,oBAAoB;AAElC,MAAI,GAAG,MAAM,KAAK,QAAQ;AACxB,mBAAe,EAAE;;AAGnB,QAAM,UAAU,CAAC,YAA0B;AACzC,QAAI,QAAQ,SAAS,MAAM,MAAM;AAC/B;;AAGF,OAAG,MAAM,KAAK,oBAAoB;AAElC,QAAI,GAAG,MAAM,KAAK,QAAQ;AACxB,sBAAgB,EAAE;;AAGpB,sBAAAA,QAAW,IAAI,UAAU,SAAS,OAAO;AACzC,sBAAAA,QAAW,IAAI,UAAU,SAAS,OAAO;AACzC,OAAG,IAAI,aAAa,WAAW;EACjC;AAEA,QAAM,UAAU,CAAC,eAA0B;AACzC,UAAM,EAAE,aAAa,QAAO,IAAK,GAAG,MAAM;AAC1C,QAAI,aAAa;AACf,cAAQ,QAAQ,aAAa,UAAU;;EAE3C;AAEA,QAAM,cAAc,CAAC,GAAQ,cAAyB;AACpD,QAAI,GAAG,MAAM,KAAK,aAAa;AAC5B,gBAAkB,mBAAmB;;EAE1C;AAEA,oBAAAA,QAAW,GAAG,UAAU,SAAS,OAAO;AACxC,oBAAAA,QAAW,GAAG,UAAU,SAAS,OAAO;AACxC,KAAG,GAAG,aAAa,WAAW;AAChC;AAEA,IAAM,QACJ,OAAO,cAAc,eAAe,UAAU,UAAU,SAAS,KAAK;AAExE,SAAS,eAAe,KAAW;AACjC,SAAO,SAAS,QAAQ,SAAS;AACnC;AAEA,SAAS,eAAe,IAAqB;AAC3C,MAAI,GAAG,MAAM,KAAK,QAAQ;AACxB;;AAGF,QAAM,EAAE,QAAQ,QAAO,IAAK,GAAG,MAAM;AACrC,QAAM,MAAM,GAAG,WAAW,MAAM;AAChC,QAAM,QAAQ,GAAG,WAAW,KAAK,IAAI;AACrC,QAAM,iBAAiB,QAAQ,kBAAkB,GAAG,UAAU,KAAK,MAAM;AACzE,MAAI,gBAAgB;AAClB,UAAM,cAAc,eAAe,OAAO,SAAS,EAAE;AACrD,QAAI,aAAa;AACf,YAAM,SAAS,GAAG,SAChB,EAAE,MAAM,IAAI,MAAM,IAAI,MAAM,MAAK,GACjC,EAAE,MAAM,IAAI,MAAM,IAAI,MAAM,IAAG,GAC/B,EAAE,WAAW,wBAAuB,CAAE;AAGxC,SAAG,MAAM,KAAK,SAAS;AACvB,SAAG,MAAM,KAAK,cAAc;;;AAGlC;AAEA,SAAS,gBAAgB,IAAqB;AAC5C,QAAM,EAAE,OAAM,IAAK,GAAG,MAAM;AAC5B,KAAG,MAAM,KAAK,SAAS;AACvB,KAAG,MAAM,KAAK,cAAc;AAE5B,SAAO,MAAK;AACd;;;ADtHA,mBAAAC,QAAW,eACT,QACA,WACA,CAAC,OAAyB,YAA+B;AACvD,MAAI,CAAC,QAAQ,UAAU,CAAC,QAAQ,WAAW,CAAC,MAAM,OAAO;AACvD;;AAMF,QAAM,EAAE,MAAK,IAAK;AAClB,QAAM,EAAE,MAAM,KAAI,IAAK;AACvB,QAAM,WAAW,YAAY,QAAQ,QAAQ,KAAK;AAElD,MACG,SAAS,WAAW,SAAS,KAAK,SAAS,YAC3C,SAAS,kBAAkB,SAAS,KAAK,SAAS,UACnD;AACA,WAAO,kBAAkB,QAAQ;;AAEnC,MAAI,SAAS,eAAe,SAAS,KAAK,SAAS,cAAc;AAC/D,WAAO,sBAAsB,QAAQ;;AAEvC,MAAI,SAAS,cAAc,SAAS,KAAK,SAAS,QAAQ;AACxD,WAAO,qBAAqB,QAAQ;;AAEtC,MAAI,SAAS,eAAe,SAAS,WAAW;AAC9C,WAAO,sBAAsB,QAAQ;;AAEvC,MAAI,SAAS,eAAe,SAAS,MAAM;AACzC,WAAO,iBAAiB,QAAQ;;AAEpC,CAAC;",
  "names": ["import_codemirror", "CodeMirror", "CodeMirror"]
}
