import {
  require_client
} from "./chunk-OHDK73AI.js";
import {
  Close,
  Content,
  Content2,
  Content22,
  Description,
  Item2,
  Overlay,
  Portal,
  Portal2,
  Portal3,
  Provider,
  Root,
  Root2,
  Root23 as Root22,
  Root3,
  Title,
  Trigger,
  Trigger2,
  Trigger3,
  autoUpdate,
  clsx,
  detectOverflow,
  evaluate,
  flip,
  floor,
  getComputedStyle as getComputedStyle2,
  init_is_prop_valid_browser_esm,
  isElement,
  is_prop_valid_browser_esm_exports,
  lib_default,
  max,
  min,
  offset,
  require_copy_to_clipboard,
  require_dist,
  require_get_value,
  require_set_value,
  round,
  shift,
  size,
  useFloating,
  useVirtualizer
} from "./chunk-BIPRIKRM.js";
import "./chunk-OASP4XPL.js";
import {
  require_jsx_runtime
} from "./chunk-5BYWATHG.js";
import "./chunk-XZLBJKVO.js";
import "./chunk-LKNORULI.js";
import {
  require_react_dom
} from "./chunk-VF3F2CFT.js";
import {
  require_react
} from "./chunk-RUMNNJCN.js";
import {
  __commonJS,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.development.js
var require_use_sync_external_store_with_selector_development = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/cjs/use-sync-external-store-with-selector.development.js"(exports) {
    "use strict";
    (function() {
      function is(x11, y8) {
        return x11 === y8 && (0 !== x11 || 1 / x11 === 1 / y8) || x11 !== x11 && y8 !== y8;
      }
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
      var React37 = require_react(), objectIs = "function" === typeof Object.is ? Object.is : is, useSyncExternalStore = React37.useSyncExternalStore, useRef28 = React37.useRef, useEffect35 = React37.useEffect, useMemo12 = React37.useMemo, useDebugValue = React37.useDebugValue;
      exports.useSyncExternalStoreWithSelector = function(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
        var instRef = useRef28(null);
        if (null === instRef.current) {
          var inst = { hasValue: false, value: null };
          instRef.current = inst;
        } else inst = instRef.current;
        instRef = useMemo12(
          function() {
            function memoizedSelector(nextSnapshot) {
              if (!hasMemo) {
                hasMemo = true;
                memoizedSnapshot = nextSnapshot;
                nextSnapshot = selector(nextSnapshot);
                if (void 0 !== isEqual && inst.hasValue) {
                  var currentSelection = inst.value;
                  if (isEqual(currentSelection, nextSnapshot))
                    return memoizedSelection = currentSelection;
                }
                return memoizedSelection = nextSnapshot;
              }
              currentSelection = memoizedSelection;
              if (objectIs(memoizedSnapshot, nextSnapshot))
                return currentSelection;
              var nextSelection = selector(nextSnapshot);
              if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))
                return memoizedSnapshot = nextSnapshot, currentSelection;
              memoizedSnapshot = nextSnapshot;
              return memoizedSelection = nextSelection;
            }
            var hasMemo = false, memoizedSnapshot, memoizedSelection, maybeGetServerSnapshot = void 0 === getServerSnapshot ? null : getServerSnapshot;
            return [
              function() {
                return memoizedSelector(getSnapshot());
              },
              null === maybeGetServerSnapshot ? void 0 : function() {
                return memoizedSelector(maybeGetServerSnapshot());
              }
            ];
          },
          [getSnapshot, getServerSnapshot, selector, isEqual]
        );
        var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);
        useEffect35(
          function() {
            inst.hasValue = true;
            inst.value = value;
          },
          [value]
        );
        useDebugValue(value);
        return value;
      };
      "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
    })();
  }
});

// node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/with-selector.js
var require_with_selector = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.5.0_react@18.3.1/node_modules/use-sync-external-store/with-selector.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_with_selector_development();
    }
  }
});

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/index.js
var import_jsx_runtime52 = __toESM(require_jsx_runtime());

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/context.js
var import_jsx_runtime50 = __toESM(require_jsx_runtime(), 1);
var import_react_compiler_runtime44 = __toESM(require_dist(), 1);
var import_react192 = __toESM(require_react(), 1);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/execution.js
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime26 = __toESM(require_dist());
var import_react132 = __toESM(require_react());
var import_set_value = __toESM(require_set_value());
var import_get_value = __toESM(require_get_value());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/utility/context.js
var import_react = __toESM(require_react());
function createNullableContext(name) {
  const context = (0, import_react.createContext)(null);
  context.displayName = name;
  return context;
}
function createContextHook(context) {
  function useGivenContext(options) {
    var _a;
    const value = (0, import_react.useContext)(context);
    if (value === null && (options == null ? void 0 : options.nonNull)) {
      throw new Error(`Tried to use \`${((_a = options.caller) == null ? void 0 : _a.name) || "a component"}\` without the necessary context. Make sure to render the \`${context.displayName}Provider\` component higher up the tree.`);
    }
    return value;
  }
  Object.defineProperty(useGivenContext, "name", {
    value: `use${context.displayName}`
  });
  return useGivenContext;
}

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/context.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime25 = __toESM(require_dist());
var import_react131 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/storage.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react_compiler_runtime = __toESM(require_dist());
var import_react2 = __toESM(require_react());
var StorageContext = createNullableContext("StorageContext");
var useStorageContext = createContextHook(StorageContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/header-editor.js
var import_react_compiler_runtime22 = __toESM(require_dist());
var import_react127 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/utility/is-macos.js
var isMacOs = typeof navigator !== "undefined" && navigator.userAgent.includes("Mac");

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/common.js
var commonKeys = {
  // Persistent search box in Query Editor
  [isMacOs ? "Cmd-F" : "Ctrl-F"]: "findPersistent",
  "Cmd-G": "findPersistent",
  "Ctrl-G": "findPersistent",
  // Editor improvements
  "Ctrl-Left": "goSubwordLeft",
  "Ctrl-Right": "goSubwordRight",
  "Alt-Left": "goGroupLeft",
  "Alt-Right": "goGroupRight"
};

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/hooks.js
var import_react_compiler_runtime21 = __toESM(require_dist());
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard());
var import_react126 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/plugin.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime20 = __toESM(require_dist());
var import_react125 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/index.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime2 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/argument.js
var React = __toESM(require_react());
var SvgArgument = ({
  title,
  titleId,
  ...props
}) => React.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React.createElement("title", { id: titleId }, title) : null, React.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), React.createElement("rect", { x: 6, y: 6, width: 2, height: 2, rx: 1, fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/chevron-down.js
var React2 = __toESM(require_react());
var SvgChevronDown = ({
  title,
  titleId,
  ...props
}) => React2.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React2.createElement("title", { id: titleId }, title) : null, React2.createElement("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/chevron-left.js
var React3 = __toESM(require_react());
var SvgChevronLeft = ({
  title,
  titleId,
  ...props
}) => React3.createElement("svg", { height: "1em", viewBox: "0 0 7 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React3.createElement("title", { id: titleId }, title) : null, React3.createElement("path", { d: "M6 1.04819L2 5.04819L6 9.04819", stroke: "currentColor", strokeWidth: 1.75 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/chevron-up.js
var React4 = __toESM(require_react());
var SvgChevronUp = ({
  title,
  titleId,
  ...props
}) => React4.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React4.createElement("title", { id: titleId }, title) : null, React4.createElement("path", { d: "M13 8L7 2L1 8", stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/close.js
var React5 = __toESM(require_react());
var SvgClose = ({
  title,
  titleId,
  ...props
}) => React5.createElement("svg", { height: "1em", viewBox: "0 0 14 14", stroke: "currentColor", strokeWidth: 3, xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React5.createElement("title", { id: titleId }, title) : null, React5.createElement("path", { d: "M1 1L12.9998 12.9997" }), React5.createElement("path", { d: "M13 1L1.00079 13.0003" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/copy.js
var React6 = __toESM(require_react());
var SvgCopy = ({
  title,
  titleId,
  ...props
}) => React6.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React6.createElement("title", { id: titleId }, title) : null, React6.createElement("path", { d: "M11.25 14.2105V15.235C11.25 16.3479 10.3479 17.25 9.23501 17.25H2.76499C1.65214 17.25 0.75 16.3479 0.75 15.235L0.75 8.76499C0.75 7.65214 1.65214 6.75 2.76499 6.75L3.78947 6.75", stroke: "currentColor", strokeWidth: 1.5 }), React6.createElement("rect", { x: 6.75, y: 0.75, width: 10.5, height: 10.5, rx: 2.2069, stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/deprecated-argument.js
var React7 = __toESM(require_react());
var SvgDeprecatedArgument = ({
  title,
  titleId,
  ...props
}) => React7.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React7.createElement("title", { id: titleId }, title) : null, React7.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), React7.createElement("path", { d: "M5 9L9 5", stroke: "currentColor", strokeWidth: 1.2 }), React7.createElement("path", { d: "M5 5L9 9", stroke: "currentColor", strokeWidth: 1.2 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/deprecated-enum-value.js
var React8 = __toESM(require_react());
var SvgDeprecatedEnumValue = ({
  title,
  titleId,
  ...props
}) => React8.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React8.createElement("title", { id: titleId }, title) : null, React8.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), React8.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }), React8.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/deprecated-field.js
var React9 = __toESM(require_react());
var SvgDeprecatedField = ({
  title,
  titleId,
  ...props
}) => React9.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React9.createElement("title", { id: titleId }, title) : null, React9.createElement("rect", { x: 0.6, y: 0.6, width: 10.8, height: 10.8, rx: 3.4, stroke: "currentColor", strokeWidth: 1.2 }), React9.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), React9.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/directive.js
var React10 = __toESM(require_react());
var SvgDirective = ({
  title,
  titleId,
  ...props
}) => React10.createElement("svg", { height: "1em", viewBox: "0 0.5 12 12", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React10.createElement("title", { id: titleId }, title) : null, React10.createElement("rect", { x: 7, y: 5.5, width: 2, height: 2, rx: 1, transform: "rotate(90 7 5.5)", fill: "currentColor" }), React10.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M10.8 9L10.8 9.5C10.8 10.4941 9.99411 11.3 9 11.3L3 11.3C2.00589 11.3 1.2 10.4941 1.2 9.5L1.2 9L-3.71547e-07 9L-3.93402e-07 9.5C-4.65826e-07 11.1569 1.34314 12.5 3 12.5L9 12.5C10.6569 12.5 12 11.1569 12 9.5L12 9L10.8 9ZM10.8 4L12 4L12 3.5C12 1.84315 10.6569 0.5 9 0.5L3 0.5C1.34315 0.5 -5.87117e-08 1.84315 -1.31135e-07 3.5L-1.5299e-07 4L1.2 4L1.2 3.5C1.2 2.50589 2.00589 1.7 3 1.7L9 1.7C9.99411 1.7 10.8 2.50589 10.8 3.5L10.8 4Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/docs-filled.js
var React11 = __toESM(require_react());
var SvgDocsFilled = ({
  title,
  titleId,
  ...props
}) => React11.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React11.createElement("title", { id: titleId }, title) : null, React11.createElement("path", { d: "M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H17.25C17.8023 0.75 18.25 1.19772 18.25 1.75V5.25", stroke: "currentColor", strokeWidth: 1.5 }), React11.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H18.25C18.8023 5.25 19.25 5.69771 19.25 6.25V22.25C19.25 22.8023 18.8023 23.25 18.25 23.25H3C1.75736 23.25 0.75 22.2426 0.75 21V3Z", stroke: "currentColor", strokeWidth: 1.5 }), React11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M3 5.25C1.75736 5.25 0.75 4.24264 0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H3ZM13 11L6 11V12.5L13 12.5V11Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/docs.js
var React12 = __toESM(require_react());
var SvgDocs = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H17.25M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H16.25C16.8023 0.75 17.25 1.19772 17.25 1.75V5.25M0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H17.25", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("line", { x1: 13, y1: 11.75, x2: 6, y2: 11.75, stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/enum-value.js
var React13 = __toESM(require_react());
var SvgEnumValue = ({
  title,
  titleId,
  ...props
}) => React13.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React13.createElement("title", { id: titleId }, title) : null, React13.createElement("rect", { x: 5, y: 5, width: 2, height: 2, rx: 1, fill: "currentColor" }), React13.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/field.js
var React14 = __toESM(require_react());
var SvgField = ({
  title,
  titleId,
  ...props
}) => React14.createElement("svg", { height: "1em", viewBox: "0 0 12 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React14.createElement("title", { id: titleId }, title) : null, React14.createElement("rect", { x: 0.6, y: 1.1, width: 10.8, height: 10.8, rx: 2.4, stroke: "currentColor", strokeWidth: 1.2 }), React14.createElement("rect", { x: 5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/history.js
var React15 = __toESM(require_react());
var SvgHistory = ({
  title,
  titleId,
  ...props
}) => React15.createElement("svg", { height: "1em", viewBox: "0 0 24 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React15.createElement("title", { id: titleId }, title) : null, React15.createElement("path", { d: "M1.59375 9.52344L4.87259 12.9944L8.07872 9.41249", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), React15.createElement("path", { d: "M13.75 5.25V10.75H18.75", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), React15.createElement("path", { d: "M4.95427 11.9332C4.55457 10.0629 4.74441 8.11477 5.49765 6.35686C6.25089 4.59894 7.5305 3.11772 9.16034 2.11709C10.7902 1.11647 12.6901 0.645626 14.5986 0.769388C16.5071 0.893151 18.3303 1.60543 19.8172 2.80818C21.3042 4.01093 22.3818 5.64501 22.9017 7.48548C23.4216 9.32595 23.3582 11.2823 22.7203 13.0853C22.0824 14.8883 20.9013 16.4492 19.3396 17.5532C17.778 18.6572 15.9125 19.25 14 19.25", stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/implements.js
var React16 = __toESM(require_react());
var SvgImplements = ({
  title,
  titleId,
  ...props
}) => React16.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React16.createElement("title", { id: titleId }, title) : null, React16.createElement("circle", { cx: 6, cy: 6, r: 5.4, stroke: "currentColor", strokeWidth: 1.2, strokeDasharray: "4.241025 4.241025", transform: "rotate(22.5 6 6)" }), React16.createElement("circle", { cx: 6, cy: 6, r: 1, fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/keyboard-shortcut.js
var React17 = __toESM(require_react());
var SvgKeyboardShortcut = ({
  title,
  titleId,
  ...props
}) => React17.createElement("svg", { height: "1em", viewBox: "0 0 19 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React17.createElement("title", { id: titleId }, title) : null, React17.createElement("path", { d: "M1.5 14.5653C1.5 15.211 1.75652 15.8303 2.21314 16.2869C2.66975 16.7435 3.28905 17 3.9348 17C4.58054 17 5.19984 16.7435 5.65646 16.2869C6.11307 15.8303 6.36959 15.211 6.36959 14.5653V12.1305H3.9348C3.28905 12.1305 2.66975 12.387 2.21314 12.8437C1.75652 13.3003 1.5 13.9195 1.5 14.5653Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React17.createElement("path", { d: "M3.9348 1.00063C3.28905 1.00063 2.66975 1.25715 2.21314 1.71375C1.75652 2.17035 1.5 2.78964 1.5 3.43537C1.5 4.0811 1.75652 4.70038 2.21314 5.15698C2.66975 5.61358 3.28905 5.8701 3.9348 5.8701H6.36959V3.43537C6.36959 2.78964 6.11307 2.17035 5.65646 1.71375C5.19984 1.25715 4.58054 1.00063 3.9348 1.00063Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React17.createElement("path", { d: "M15.0652 12.1305H12.6304V14.5653C12.6304 15.0468 12.7732 15.5175 13.0407 15.9179C13.3083 16.3183 13.6885 16.6304 14.1334 16.8147C14.5783 16.9989 15.0679 17.0472 15.5402 16.9532C16.0125 16.8593 16.4464 16.6274 16.7869 16.2869C17.1274 15.9464 17.3593 15.5126 17.4532 15.0403C17.5472 14.568 17.4989 14.0784 17.3147 13.6335C17.1304 13.1886 16.8183 12.8084 16.4179 12.5409C16.0175 12.2733 15.5468 12.1305 15.0652 12.1305Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React17.createElement("path", { d: "M12.6318 5.86775H6.36955V12.1285H12.6318V5.86775Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React17.createElement("path", { d: "M17.5 3.43473C17.5 2.789 17.2435 2.16972 16.7869 1.71312C16.3303 1.25652 15.711 1 15.0652 1C14.4195 1 13.8002 1.25652 13.3435 1.71312C12.8869 2.16972 12.6304 2.789 12.6304 3.43473V5.86946H15.0652C15.711 5.86946 16.3303 5.61295 16.7869 5.15635C17.2435 4.69975 17.5 4.08046 17.5 3.43473Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/magnifying-glass.js
var React18 = __toESM(require_react());
var SvgMagnifyingGlass = ({
  title,
  titleId,
  ...props
}) => React18.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React18.createElement("title", { id: titleId }, title) : null, React18.createElement("circle", { cx: 5, cy: 5, r: 4.35, stroke: "currentColor", strokeWidth: 1.3 }), React18.createElement("line", { x1: 8.45962, y1: 8.54038, x2: 11.7525, y2: 11.8333, stroke: "currentColor", strokeWidth: 1.3 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/merge.js
var React19 = __toESM(require_react());
var SvgMerge = ({
  title,
  titleId,
  ...props
}) => React19.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React19.createElement("title", { id: titleId }, title) : null, React19.createElement("path", { d: "M17.2492 6V2.9569C17.2492 1.73806 16.2611 0.75 15.0423 0.75L2.9569 0.75C1.73806 0.75 0.75 1.73806 0.75 2.9569L0.75 6", stroke: "currentColor", strokeWidth: 1.5 }), React19.createElement("path", { d: "M0.749873 12V15.0431C0.749873 16.2619 1.73794 17.25 2.95677 17.25H15.0421C16.261 17.25 17.249 16.2619 17.249 15.0431V12", stroke: "currentColor", strokeWidth: 1.5 }), React19.createElement("path", { d: "M6 4.5L9 7.5L12 4.5", stroke: "currentColor", strokeWidth: 1.5 }), React19.createElement("path", { d: "M12 13.5L9 10.5L6 13.5", stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/pen.js
var React20 = __toESM(require_react());
var SvgPen = ({
  title,
  titleId,
  ...props
}) => React20.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React20.createElement("title", { id: titleId }, title) : null, React20.createElement("path", { d: "M0.75 13.25L0.0554307 12.967C-0.0593528 13.2488 0.00743073 13.5719 0.224488 13.7851C0.441545 13.9983 0.765869 14.0592 1.04549 13.9393L0.75 13.25ZM12.8214 1.83253L12.2911 2.36286L12.2911 2.36286L12.8214 1.83253ZM12.8214 3.90194L13.3517 4.43227L12.8214 3.90194ZM10.0981 1.17859L9.56773 0.648259L10.0981 1.17859ZM12.1675 1.17859L12.6978 0.648258L12.6978 0.648257L12.1675 1.17859ZM2.58049 8.75697L3.27506 9.03994L2.58049 8.75697ZM2.70066 8.57599L3.23099 9.10632L2.70066 8.57599ZM5.2479 11.4195L4.95355 10.7297L5.2479 11.4195ZM5.42036 11.303L4.89003 10.7727L5.42036 11.303ZM4.95355 10.7297C4.08882 11.0987 3.41842 11.362 2.73535 11.6308C2.05146 11.9 1.35588 12.1743 0.454511 12.5607L1.04549 13.9393C1.92476 13.5624 2.60256 13.2951 3.28469 13.0266C3.96762 12.7578 4.65585 12.4876 5.54225 12.1093L4.95355 10.7297ZM1.44457 13.533L3.27506 9.03994L1.88592 8.474L0.0554307 12.967L1.44457 13.533ZM3.23099 9.10632L10.6284 1.70892L9.56773 0.648259L2.17033 8.04566L3.23099 9.10632ZM11.6371 1.70892L12.2911 2.36286L13.3517 1.3022L12.6978 0.648258L11.6371 1.70892ZM12.2911 3.37161L4.89003 10.7727L5.95069 11.8333L13.3517 4.43227L12.2911 3.37161ZM12.2911 2.36286C12.5696 2.64142 12.5696 3.09305 12.2911 3.37161L13.3517 4.43227C14.2161 3.56792 14.2161 2.16654 13.3517 1.3022L12.2911 2.36286ZM10.6284 1.70892C10.9069 1.43036 11.3586 1.43036 11.6371 1.70892L12.6978 0.648257C11.8335 -0.216088 10.4321 -0.216084 9.56773 0.648259L10.6284 1.70892ZM3.27506 9.03994C3.26494 9.06479 3.24996 9.08735 3.23099 9.10632L2.17033 8.04566C2.04793 8.16806 1.95123 8.31369 1.88592 8.474L3.27506 9.03994ZM5.54225 12.1093C5.69431 12.0444 5.83339 11.9506 5.95069 11.8333L4.89003 10.7727C4.90863 10.7541 4.92988 10.7398 4.95355 10.7297L5.54225 12.1093Z", fill: "currentColor" }), React20.createElement("path", { d: "M11.5 4.5L9.5 2.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }), React20.createElement("path", { d: "M5.5 10.5L3.5 8.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/play.js
var React21 = __toESM(require_react());
var SvgPlay = ({
  title,
  titleId,
  ...props
}) => React21.createElement("svg", { height: "1em", viewBox: "0 0 16 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React21.createElement("title", { id: titleId }, title) : null, React21.createElement("path", { d: "M1.32226e-07 1.6609C7.22332e-08 0.907329 0.801887 0.424528 1.46789 0.777117L15.3306 8.11621C16.0401 8.49182 16.0401 9.50818 15.3306 9.88379L1.46789 17.2229C0.801886 17.5755 1.36076e-06 17.0927 1.30077e-06 16.3391L1.32226e-07 1.6609Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/plus.js
var React22 = __toESM(require_react());
var SvgPlus = ({
  title,
  titleId,
  ...props
}) => React22.createElement("svg", { height: "1em", viewBox: "0 0 10 16", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React22.createElement("title", { id: titleId }, title) : null, React22.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.25 9.25V13.5H5.75V9.25L10 9.25V7.75L5.75 7.75V3.5H4.25V7.75L0 7.75V9.25L4.25 9.25Z" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/prettify.js
var React23 = __toESM(require_react());
var SvgPrettify = ({
  title,
  titleId,
  ...props
}) => React23.createElement("svg", { width: 25, height: 25, viewBox: "0 0 25 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React23.createElement("title", { id: titleId }, title) : null, React23.createElement("path", { d: "M10.2852 24.0745L13.7139 18.0742", stroke: "currentColor", strokeWidth: 1.5625 }), React23.createElement("path", { d: "M14.5742 24.0749L17.1457 19.7891", stroke: "currentColor", strokeWidth: 1.5625 }), React23.createElement("path", { d: "M19.4868 24.0735L20.7229 21.7523C21.3259 20.6143 21.5457 19.3122 21.3496 18.0394C21.1535 16.7666 20.5519 15.591 19.6342 14.6874L23.7984 6.87853C24.0123 6.47728 24.0581 6.00748 23.9256 5.57249C23.7932 5.1375 23.4933 4.77294 23.0921 4.55901C22.6908 4.34509 22.221 4.29932 21.7861 4.43178C21.3511 4.56424 20.9865 4.86408 20.7726 5.26533L16.6084 13.0742C15.3474 12.8142 14.0362 12.9683 12.8699 13.5135C11.7035 14.0586 10.7443 14.9658 10.135 16.1L6 24.0735", stroke: "currentColor", strokeWidth: 1.5625 }), React23.createElement("path", { d: "M4 15L5 13L7 12L5 11L4 9L3 11L1 12L3 13L4 15Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }), React23.createElement("path", { d: "M11.5 8L12.6662 5.6662L15 4.5L12.6662 3.3338L11.5 1L10.3338 3.3338L8 4.5L10.3338 5.6662L11.5 8Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/reload.js
var React24 = __toESM(require_react());
var SvgReload = ({
  title,
  titleId,
  ...props
}) => React24.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React24.createElement("title", { id: titleId }, title) : null, React24.createElement("path", { d: "M4.75 9.25H1.25V12.75", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), React24.createElement("path", { d: "M11.25 6.75H14.75V3.25", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), React24.createElement("path", { d: "M14.1036 6.65539C13.8 5.27698 13.0387 4.04193 11.9437 3.15131C10.8487 2.26069 9.48447 1.76694 8.0731 1.75043C6.66173 1.73392 5.28633 2.19563 4.17079 3.0604C3.05526 3.92516 2.26529 5.14206 1.92947 6.513", stroke: "currentColor", strokeWidth: 1 }), React24.createElement("path", { d: "M1.89635 9.34461C2.20001 10.723 2.96131 11.9581 4.05631 12.8487C5.15131 13.7393 6.51553 14.2331 7.9269 14.2496C9.33827 14.2661 10.7137 13.8044 11.8292 12.9396C12.9447 12.0748 13.7347 10.8579 14.0705 9.487", stroke: "currentColor", strokeWidth: 1 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/root-type.js
var React25 = __toESM(require_react());
var SvgRootType = ({
  title,
  titleId,
  ...props
}) => React25.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React25.createElement("title", { id: titleId }, title) : null, React25.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), React25.createElement("path", { d: "M4.25 7.5C4.25 6 5.75 5 6.5 6.5C7.25 8 8.75 7 8.75 5.5", stroke: "currentColor", strokeWidth: 1.2 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/settings.js
var React26 = __toESM(require_react());
var SvgSettings = ({
  title,
  titleId,
  ...props
}) => React26.createElement("svg", { height: "1em", viewBox: "0 0 21 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React26.createElement("title", { id: titleId }, title) : null, React26.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.29186 1.92702C9.06924 1.82745 8.87014 1.68202 8.70757 1.50024L7.86631 0.574931C7.62496 0.309957 7.30773 0.12592 6.95791 0.0479385C6.60809 -0.0300431 6.24274 0.00182978 5.91171 0.139208C5.58068 0.276585 5.3001 0.512774 5.10828 0.815537C4.91645 1.1183 4.82272 1.47288 4.83989 1.83089L4.90388 3.08019C4.91612 3.32348 4.87721 3.56662 4.78968 3.79394C4.70215 4.02126 4.56794 4.2277 4.39571 4.39994C4.22347 4.57219 4.01704 4.7064 3.78974 4.79394C3.56243 4.88147 3.3193 4.92038 3.07603 4.90814L1.8308 4.84414C1.47162 4.82563 1.11553 4.91881 0.811445 5.11086C0.507359 5.30292 0.270203 5.58443 0.132561 5.91671C-0.00508149 6.249 -0.0364554 6.61576 0.0427496 6.9666C0.121955 7.31744 0.307852 7.63514 0.5749 7.87606L1.50016 8.71204C1.68193 8.87461 1.82735 9.07373 1.92692 9.29636C2.02648 9.51898 2.07794 9.76012 2.07794 10.004C2.07794 10.2479 2.02648 10.489 1.92692 10.7116C1.82735 10.9343 1.68193 11.1334 1.50016 11.296L0.5749 12.1319C0.309856 12.3729 0.125575 12.6898 0.0471809 13.0393C-0.0312128 13.3888 9.64098e-05 13.754 0.13684 14.0851C0.273583 14.4162 0.509106 14.6971 0.811296 14.8894C1.11349 15.0817 1.46764 15.1762 1.82546 15.1599L3.0707 15.0959C3.31397 15.0836 3.5571 15.1225 3.7844 15.2101C4.01171 15.2976 4.21814 15.4318 4.39037 15.6041C4.56261 15.7763 4.69682 15.9827 4.78435 16.2101C4.87188 16.4374 4.91078 16.6805 4.89855 16.9238L4.83455 18.1691C4.81605 18.5283 4.90921 18.8844 5.10126 19.1885C5.2933 19.4926 5.5748 19.7298 5.90707 19.8674C6.23934 20.0051 6.60608 20.0365 6.9569 19.9572C7.30772 19.878 7.6254 19.6921 7.86631 19.4251L8.7129 18.4998C8.87547 18.318 9.07458 18.1725 9.29719 18.073C9.51981 17.9734 9.76093 17.9219 10.0048 17.9219C10.2487 17.9219 10.4898 17.9734 10.7124 18.073C10.935 18.1725 11.1341 18.318 11.2967 18.4998L12.1326 19.4251C12.3735 19.6921 12.6912 19.878 13.042 19.9572C13.3929 20.0365 13.7596 20.0051 14.0919 19.8674C14.4241 19.7298 14.7056 19.4926 14.8977 19.1885C15.0897 18.8844 15.1829 18.5283 15.1644 18.1691L15.1004 16.9238C15.0882 16.6805 15.1271 16.4374 15.2146 16.2101C15.3021 15.9827 15.4363 15.7763 15.6086 15.6041C15.7808 15.4318 15.9872 15.2976 16.2145 15.2101C16.4418 15.1225 16.685 15.0836 16.9282 15.0959L18.1735 15.1599C18.5326 15.1784 18.8887 15.0852 19.1928 14.8931C19.4969 14.7011 19.7341 14.4196 19.8717 14.0873C20.0093 13.755 20.0407 13.3882 19.9615 13.0374C19.8823 12.6866 19.6964 12.3689 19.4294 12.1279L18.5041 11.292C18.3223 11.1294 18.1769 10.9303 18.0774 10.7076C17.9778 10.485 17.9263 10.2439 17.9263 10C17.9263 9.75612 17.9778 9.51499 18.0774 9.29236C18.1769 9.06973 18.3223 8.87062 18.5041 8.70804L19.4294 7.87206C19.6964 7.63114 19.8823 7.31344 19.9615 6.9626C20.0407 6.61176 20.0093 6.245 19.8717 5.91271C19.7341 5.58043 19.4969 5.29892 19.1928 5.10686C18.8887 4.91481 18.5326 4.82163 18.1735 4.84014L16.9282 4.90414C16.685 4.91638 16.4418 4.87747 16.2145 4.78994C15.9872 4.7024 15.7808 4.56818 15.6086 4.39594C15.4363 4.2237 15.3021 4.01726 15.2146 3.78994C15.1271 3.56262 15.0882 3.31948 15.1004 3.07619L15.1644 1.83089C15.1829 1.4717 15.0897 1.11559 14.8977 0.811487C14.7056 0.507385 14.4241 0.270217 14.0919 0.132568C13.7596 -0.00508182 13.3929 -0.0364573 13.042 0.0427519C12.6912 0.121961 12.3735 0.307869 12.1326 0.574931L11.2914 1.50024C11.1288 1.68202 10.9297 1.82745 10.7071 1.92702C10.4845 2.02659 10.2433 2.07805 9.99947 2.07805C9.7556 2.07805 9.51448 2.02659 9.29186 1.92702ZM14.3745 10C14.3745 12.4162 12.4159 14.375 9.99977 14.375C7.58365 14.375 5.625 12.4162 5.625 10C5.625 7.58375 7.58365 5.625 9.99977 5.625C12.4159 5.625 14.3745 7.58375 14.3745 10Z", fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/star-filled.js
var React27 = __toESM(require_react());
var SvgStarFilled = ({
  title,
  titleId,
  ...props
}) => React27.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React27.createElement("title", { id: titleId }, title) : null, React27.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", fill: "currentColor", stroke: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/star.js
var React28 = __toESM(require_react());
var SvgStar = ({
  title,
  titleId,
  ...props
}) => React28.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React28.createElement("title", { id: titleId }, title) : null, React28.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", stroke: "currentColor", strokeWidth: 1.5 }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/stop.js
var React29 = __toESM(require_react());
var SvgStop = ({
  title,
  titleId,
  ...props
}) => React29.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React29.createElement("title", { id: titleId }, title) : null, React29.createElement("rect", { width: 16, height: 16, rx: 2, fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/trash.js
var React30 = __toESM(require_react());
var SvgTrash = ({
  title,
  titleId,
  ...props
}) => React30.createElement("svg", { width: "1em", height: "5em", xmlns: "http://www.w3.org/2000/svg", fillRule: "evenodd", "aria-hidden": "true", viewBox: "0 0 23 23", style: {
  height: "1.5em"
}, clipRule: "evenodd", "aria-labelledby": titleId, ...props }, title ? React30.createElement("title", { id: titleId }, title) : null, React30.createElement("path", { d: "M19 24h-14c-1.104 0-2-.896-2-2v-17h-1v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2h-1v17c0 1.104-.896 2-2 2zm0-19h-14v16.5c0 .276.224.5.5.5h13c.276 0 .5-.224.5-.5v-16.5zm-7 7.586l3.293-3.293 1.414 1.414-3.293 3.293 3.293 3.293-1.414 1.414-3.293-3.293-3.293 3.293-1.414-1.414 3.293-3.293-3.293-3.293 1.414-1.414 3.293 3.293zm2-10.586h-4v1h4v-1z", fill: "currentColor", strokeWidth: 0.25, stroke: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/type.js
var React31 = __toESM(require_react());
var SvgType = ({
  title,
  titleId,
  ...props
}) => React31.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React31.createElement("title", { id: titleId }, title) : null, React31.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), React31.createElement("rect", { x: 5.5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" }));

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/icons/index.js
var ArgumentIcon = generateIcon(SvgArgument);
var ChevronDownIcon = generateIcon(SvgChevronDown);
var ChevronLeftIcon = generateIcon(SvgChevronLeft);
var ChevronUpIcon = generateIcon(SvgChevronUp);
var CloseIcon = generateIcon(SvgClose);
var CopyIcon = generateIcon(SvgCopy);
var DeprecatedArgumentIcon = generateIcon(SvgDeprecatedArgument);
var DeprecatedEnumValueIcon = generateIcon(SvgDeprecatedEnumValue);
var DeprecatedFieldIcon = generateIcon(SvgDeprecatedField);
var DirectiveIcon = generateIcon(SvgDirective);
var DocsFilledIcon = generateIcon(SvgDocsFilled);
var DocsIcon = generateIcon(SvgDocs);
var EnumValueIcon = generateIcon(SvgEnumValue);
var FieldIcon = generateIcon(SvgField);
var HistoryIcon = generateIcon(SvgHistory);
var ImplementsIcon = generateIcon(SvgImplements);
var KeyboardShortcutIcon = generateIcon(SvgKeyboardShortcut);
var MagnifyingGlassIcon = generateIcon(SvgMagnifyingGlass);
var MergeIcon = generateIcon(SvgMerge);
var PenIcon = generateIcon(SvgPen);
var PlayIcon = generateIcon(SvgPlay);
var PlusIcon = generateIcon(SvgPlus);
var PrettifyIcon = generateIcon(SvgPrettify);
var ReloadIcon = generateIcon(SvgReload);
var RootTypeIcon = generateIcon(SvgRootType);
var SettingsIcon = generateIcon(SvgSettings);
var StarFilledIcon = generateIcon(SvgStarFilled);
var StarIcon = generateIcon(SvgStar);
var StopIcon = generateIcon(SvgStop);
var TrashIcon = generateIcon(SvgTrash);
var TypeIcon = generateIcon(SvgType);
function generateIcon(RawComponent) {
  const title = RawComponent.name.replace("Svg", "").replaceAll(/([A-Z])/g, " $1").trimStart().toLowerCase() + " icon";
  function IconComponent(props) {
    const $4 = (0, import_react_compiler_runtime2.c)(2);
    let t0;
    if ($4[0] !== props) {
      t0 = (0, import_jsx_runtime2.jsx)(RawComponent, { title, ...props });
      $4[0] = props;
      $4[1] = t0;
    } else {
      t0 = $4[1];
    }
    return t0;
  }
  IconComponent.displayName = RawComponent.name;
  return IconComponent;
}

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/doc-explorer.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime19 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/schema.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime3 = __toESM(require_dist());
var import_react3 = __toESM(require_react());
var SchemaContext = createNullableContext("SchemaContext");
var useSchemaContext = createContextHook(SchemaContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/context.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime4 = __toESM(require_dist());
var import_react4 = __toESM(require_react());
var ExplorerContext = createNullableContext("ExplorerContext");
var useExplorerContext = createContextHook(ExplorerContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/field-documentation.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime13 = __toESM(require_dist());
var import_react7 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/argument.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime8 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/default-value.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime5 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/type-link.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime6 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/utils.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/markdown.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime7 = __toESM(require_dist());
var import_react5 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/markdown.js
var markdown = new lib_default({
  // we don't want to convert \n to <br> because in markdown a single newline is not a line break
  // https://github.com/graphql/graphiql/issues/3155
  breaks: false,
  linkify: true
});

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/markdown.js
var MarkdownContent = (0, import_react5.forwardRef)((t0, ref) => {
  const $4 = (0, import_react_compiler_runtime7.c)(18);
  let children;
  let onlyShowFirstChild;
  let props;
  let type;
  if ($4[0] !== t0) {
    ({
      children,
      onlyShowFirstChild,
      type,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = onlyShowFirstChild;
    $4[3] = props;
    $4[4] = type;
  } else {
    children = $4[1];
    onlyShowFirstChild = $4[2];
    props = $4[3];
    type = $4[4];
  }
  const t1 = `graphiql-markdown-${type}`;
  const t22 = onlyShowFirstChild && "graphiql-markdown-preview";
  let t32;
  if ($4[5] !== props.className || $4[6] !== t1 || $4[7] !== t22) {
    t32 = clsx(t1, t22, props.className);
    $4[5] = props.className;
    $4[6] = t1;
    $4[7] = t22;
    $4[8] = t32;
  } else {
    t32 = $4[8];
  }
  let t42;
  if ($4[9] !== children) {
    t42 = markdown.render(children);
    $4[9] = children;
    $4[10] = t42;
  } else {
    t42 = $4[10];
  }
  let t52;
  if ($4[11] !== t42) {
    t52 = {
      __html: t42
    };
    $4[11] = t42;
    $4[12] = t52;
  } else {
    t52 = $4[12];
  }
  let t62;
  if ($4[13] !== props || $4[14] !== ref || $4[15] !== t32 || $4[16] !== t52) {
    t62 = (0, import_jsx_runtime8.jsx)("div", { ...props, ref, className: t32, dangerouslySetInnerHTML: t52 });
    $4[13] = props;
    $4[14] = ref;
    $4[15] = t32;
    $4[16] = t52;
    $4[17] = t62;
  } else {
    t62 = $4[17];
  }
  return t62;
});
MarkdownContent.displayName = "MarkdownContent";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/deprecation-reason.js
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime9 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/directive.js
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime10 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/section.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime11 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/button.js
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime12 = __toESM(require_dist());
var import_react6 = __toESM(require_react());
var UnStyledButton = (0, import_react6.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime12.c)(6);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-un-styled", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  if ($4[2] !== props || $4[3] !== ref || $4[4] !== t0) {
    t1 = (0, import_jsx_runtime13.jsx)("button", { ...props, ref, className: t0 });
    $4[2] = props;
    $4[3] = ref;
    $4[4] = t0;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  return t1;
});
UnStyledButton.displayName = "UnStyledButton";
var Button = (0, import_react6.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime12.c)(7);
  let t0;
  if ($4[0] !== props.className || $4[1] !== props.state) {
    t0 = clsx("graphiql-button", {
      success: "graphiql-button-success",
      error: "graphiql-button-error"
    }[props.state], props.className);
    $4[0] = props.className;
    $4[1] = props.state;
    $4[2] = t0;
  } else {
    t0 = $4[2];
  }
  let t1;
  if ($4[3] !== props || $4[4] !== ref || $4[5] !== t0) {
    t1 = (0, import_jsx_runtime13.jsx)("button", { ...props, ref, className: t0 });
    $4[3] = props;
    $4[4] = ref;
    $4[5] = t0;
    $4[6] = t1;
  } else {
    t1 = $4[6];
  }
  return t1;
});
Button.displayName = "Button";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/schema-documentation.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime14 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/search.js
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime15 = __toESM(require_dist());
var import_react121 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useLayoutEffect.mjs
var import_react8 = __toESM(require_react(), 1);
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof document !== "undefined" ? (0, import_react8.default).useLayoutEffect : () => {
};

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useEffectEvent.mjs
var import_react9 = __toESM(require_react(), 1);
function $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {
  const ref = (0, import_react9.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    ref.current = fn;
  }, [
    fn
  ]);
  return (0, import_react9.useCallback)((...args) => {
    const f22 = ref.current;
    return f22 === null || f22 === void 0 ? void 0 : f22(...args);
  }, []);
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useValueEffect.mjs
var import_react10 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useId.mjs
var import_react12 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+ssr@3.9.8_react@18.3.1/node_modules/@react-aria/ssr/dist/SSRProvider.mjs
var import_react11 = __toESM(require_react(), 1);
var $b5e257d569688ac6$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
var $b5e257d569688ac6$var$SSRContext = (0, import_react11.default).createContext($b5e257d569688ac6$var$defaultContext);
var $b5e257d569688ac6$var$IsSSRContext = (0, import_react11.default).createContext(false);
var $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $b5e257d569688ac6$var$componentIds = /* @__PURE__ */ new WeakMap();
function $b5e257d569688ac6$var$useCounter(isDisabled2 = false) {
  let ctx = (0, import_react11.useContext)($b5e257d569688ac6$var$SSRContext);
  let ref = (0, import_react11.useRef)(null);
  if (ref.current === null && !isDisabled2) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, import_react11.default).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $b5e257d569688ac6$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $b5e257d569688ac6$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {
  let ctx = (0, import_react11.useContext)($b5e257d569688ac6$var$SSRContext);
  if (ctx === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM && true) console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);
  let prefix = ctx === $b5e257d569688ac6$var$defaultContext && false ? "react-aria" : `react-aria${ctx.prefix}`;
  return defaultId || `${prefix}-${counter}`;
}
function $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {
  let id3 = (0, import_react11.default).useId();
  let [didSSR] = (0, import_react11.useState)($b5e257d569688ac6$export$535bd6ca7f90a273());
  let prefix = didSSR || false ? "react-aria" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;
  return defaultId || `${prefix}-${id3}`;
}
var $b5e257d569688ac6$export$619500959fc48b26 = typeof (0, import_react11.default)["useId"] === "function" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;
function $b5e257d569688ac6$var$getSnapshot() {
  return false;
}
function $b5e257d569688ac6$var$getServerSnapshot() {
  return true;
}
function $b5e257d569688ac6$var$subscribe(onStoreChange) {
  return () => {
  };
}
function $b5e257d569688ac6$export$535bd6ca7f90a273() {
  if (typeof (0, import_react11.default)["useSyncExternalStore"] === "function") return (0, import_react11.default)["useSyncExternalStore"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);
  return (0, import_react11.useContext)($b5e257d569688ac6$var$IsSSRContext);
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useId.mjs
var $bdb11010cef70236$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $bdb11010cef70236$export$d41a04c74483c6ef = /* @__PURE__ */ new Map();
var $bdb11010cef70236$var$registry;
if (typeof FinalizationRegistry !== "undefined") $bdb11010cef70236$var$registry = new FinalizationRegistry((heldValue) => {
  $bdb11010cef70236$export$d41a04c74483c6ef.delete(heldValue);
});
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB) return idA;
  let setIdsA = $bdb11010cef70236$export$d41a04c74483c6ef.get(idA);
  if (setIdsA) {
    setIdsA.forEach((ref) => ref.current = idB);
    return idB;
  }
  let setIdsB = $bdb11010cef70236$export$d41a04c74483c6ef.get(idB);
  if (setIdsB) {
    setIdsB.forEach((ref) => ref.current = idA);
    return idA;
  }
  return idB;
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/chain.mjs
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks) if (typeof callback === "function") callback(...args);
  };
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/domHelpers.mjs
var $431fbd86ca7dc216$export$b204af158042fbac = (el) => {
  var _el_ownerDocument;
  return (_el_ownerDocument = el === null || el === void 0 ? void 0 : el.ownerDocument) !== null && _el_ownerDocument !== void 0 ? _el_ownerDocument : document;
};
var $431fbd86ca7dc216$export$f21a1ffae260145a = (el) => {
  if (el && "window" in el && el.window === el) return el;
  const doc = $431fbd86ca7dc216$export$b204af158042fbac(el);
  return doc.defaultView || window;
};
function $431fbd86ca7dc216$var$isNode(value) {
  return value !== null && typeof value === "object" && "nodeType" in value && typeof value.nodeType === "number";
}
function $431fbd86ca7dc216$export$af51f0f06c0f328a(node) {
  return $431fbd86ca7dc216$var$isNode(node) && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && "host" in node;
}

// node_modules/.pnpm/@react-stately+flags@3.1.1/node_modules/@react-stately/flags/dist/import.mjs
var $f4e2df6bd15f8569$var$_shadowDOM = false;
function $f4e2df6bd15f8569$export$98658e8c59125e6a() {
  return $f4e2df6bd15f8569$var$_shadowDOM;
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/DOMFunctions.mjs
function $d4ee10de306f2510$export$4282f70798064fe0(node, otherNode) {
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return otherNode && node ? node.contains(otherNode) : false;
  if (!node || !otherNode) return false;
  let currentNode = otherNode;
  while (currentNode !== null) {
    if (currentNode === node) return true;
    if (currentNode.tagName === "SLOT" && currentNode.assignedSlot)
      currentNode = currentNode.assignedSlot.parentNode;
    else if ((0, $431fbd86ca7dc216$export$af51f0f06c0f328a)(currentNode))
      currentNode = currentNode.host;
    else currentNode = currentNode.parentNode;
  }
  return false;
}
var $d4ee10de306f2510$export$cd4e5573fbe2b576 = (doc = document) => {
  var _activeElement_shadowRoot;
  if (!(0, $f4e2df6bd15f8569$export$98658e8c59125e6a)()) return doc.activeElement;
  let activeElement2 = doc.activeElement;
  while (activeElement2 && "shadowRoot" in activeElement2 && ((_activeElement_shadowRoot = activeElement2.shadowRoot) === null || _activeElement_shadowRoot === void 0 ? void 0 : _activeElement_shadowRoot.activeElement)) activeElement2 = activeElement2.shadowRoot.activeElement;
  return activeElement2;
};
function $d4ee10de306f2510$export$e58f029f0fbfdb29(event) {
  if ((0, $f4e2df6bd15f8569$export$98658e8c59125e6a)() && event.target.shadowRoot) {
    if (event.composedPath) return event.composedPath()[0];
  }
  return event.target;
}

// node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs
function r(e8) {
  var t12, f22, n13 = "";
  if ("string" == typeof e8 || "number" == typeof e8) n13 += e8;
  else if ("object" == typeof e8) if (Array.isArray(e8)) {
    var o21 = e8.length;
    for (t12 = 0; t12 < o21; t12++) e8[t12] && (f22 = r(e8[t12])) && (n13 && (n13 += " "), n13 += f22);
  } else for (f22 in e8) e8[f22] && (n13 && (n13 += " "), n13 += f22);
  return n13;
}
function clsx2() {
  for (var e8, t12, f22 = 0, n13 = "", o21 = arguments.length; f22 < o21; f22++) (e8 = arguments[f22]) && (t12 = r(e8)) && (n13 && (n13 += " "), n13 += t12);
  return n13;
}
var clsx_default = clsx2;

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/mergeProps.mjs
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i19 = 1; i19 < args.length; i19++) {
    let props = args[i19];
    for (let key in props) {
      let a25 = result[key];
      let b11 = props[key];
      if (typeof a25 === "function" && typeof b11 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90) result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a25, b11);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a25 === "string" && typeof b11 === "string") result[key] = (0, clsx_default)(a25, b11);
      else if (key === "id" && a25 && b11) result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a25, b11);
      else result[key] = b11 !== void 0 ? b11 : a25;
    }
  }
  return result;
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/mergeRefs.mjs
function $5dc95899b306f630$export$c9058316764c140e(...refs) {
  if (refs.length === 1 && refs[0]) return refs[0];
  return (value) => {
    for (let ref of refs) {
      if (typeof ref === "function") ref(value);
      else if (ref != null) ref.current = value;
    }
  };
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/focusWithoutScrolling.mjs
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({
    preventScroll: true
  });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      let focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  let parent = element.parentNode;
  let scrollableElements = [];
  let rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({
      element: parent,
      scrollTop: parent.scrollTop,
      scrollLeft: parent.scrollLeft
    });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({
    element: rootScrollingElement,
    scrollTop: rootScrollingElement.scrollTop,
    scrollLeft: rootScrollingElement.scrollLeft
  });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/platform.mjs
function $c87311424ea30a05$var$testUserAgent(re6) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null) return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re6.test(brand.brand))) || re6.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re6) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re6.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$var$cached(fn) {
  if (false) return fn;
  let res = null;
  return () => {
    if (res == null) res = fn();
    return res;
  };
}
var $c87311424ea30a05$export$9ac100e40613ea10 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
});
var $c87311424ea30a05$export$186c6964ca17d99 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
});
var $c87311424ea30a05$export$7bef049ce92e4224 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
});
var $c87311424ea30a05$export$fedb369cb70207f1 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
});
var $c87311424ea30a05$export$e1865c3bedcd822b = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
});
var $c87311424ea30a05$export$78551043582a6a98 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
});
var $c87311424ea30a05$export$6446a186d09e379e = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
});
var $c87311424ea30a05$export$a11b0059900ceec8 = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
});
var $c87311424ea30a05$export$b7d78993b74f766d = $c87311424ea30a05$var$cached(function() {
  return $c87311424ea30a05$var$testUserAgent(/Firefox/i);
});

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/openLink.mjs
var import_react13 = __toESM(require_react(), 1);
var $ea8dcbcb9ea1b556$var$RouterContext = (0, import_react13.createContext)({
  isNative: true,
  open: $ea8dcbcb9ea1b556$var$openSyntheticLink,
  useHref: (href) => href
});
function $ea8dcbcb9ea1b556$export$95185d699e05d4d7(target, modifiers, setOpening = true) {
  var _window_event_type, _window_event;
  let { metaKey, ctrlKey, altKey, shiftKey } = modifiers;
  if ((0, $c87311424ea30a05$export$b7d78993b74f766d)() && ((_window_event = window.event) === null || _window_event === void 0 ? void 0 : (_window_event_type = _window_event.type) === null || _window_event_type === void 0 ? void 0 : _window_event_type.startsWith("key")) && target.target === "_blank") {
    if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) metaKey = true;
    else ctrlKey = true;
  }
  let event = (0, $c87311424ea30a05$export$78551043582a6a98)() && (0, $c87311424ea30a05$export$9ac100e40613ea10)() && !(0, $c87311424ea30a05$export$7bef049ce92e4224)() && true ? new KeyboardEvent("keydown", {
    keyIdentifier: "Enter",
    metaKey,
    ctrlKey,
    altKey,
    shiftKey
  }) : new MouseEvent("click", {
    metaKey,
    ctrlKey,
    altKey,
    shiftKey,
    bubbles: true,
    cancelable: true
  });
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = setOpening;
  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(target);
  target.dispatchEvent(event);
  $ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
}
$ea8dcbcb9ea1b556$export$95185d699e05d4d7.isOpening = false;
function $ea8dcbcb9ea1b556$var$getSyntheticLink(target, open) {
  if (target instanceof HTMLAnchorElement) open(target);
  else if (target.hasAttribute("data-href")) {
    let link = document.createElement("a");
    link.href = target.getAttribute("data-href");
    if (target.hasAttribute("data-target")) link.target = target.getAttribute("data-target");
    if (target.hasAttribute("data-rel")) link.rel = target.getAttribute("data-rel");
    if (target.hasAttribute("data-download")) link.download = target.getAttribute("data-download");
    if (target.hasAttribute("data-ping")) link.ping = target.getAttribute("data-ping");
    if (target.hasAttribute("data-referrer-policy")) link.referrerPolicy = target.getAttribute("data-referrer-policy");
    target.appendChild(link);
    open(link);
    target.removeChild(link);
  }
}
function $ea8dcbcb9ea1b556$var$openSyntheticLink(target, modifiers) {
  $ea8dcbcb9ea1b556$var$getSyntheticLink(target, (link) => $ea8dcbcb9ea1b556$export$95185d699e05d4d7(link, modifiers));
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/runAfterTransition.mjs
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined") return;
  function isTransitionEvent(event) {
    return "propertyName" in event;
  }
  let onTransitionStart = (e8) => {
    if (!isTransitionEvent(e8) || !e8.target) return;
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e8.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e8.target, transitions);
      e8.target.addEventListener("transitioncancel", onTransitionEnd, {
        once: true
      });
    }
    transitions.add(e8.propertyName);
  };
  let onTransitionEnd = (e8) => {
    if (!isTransitionEvent(e8) || !e8.target) return;
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e8.target);
    if (!properties) return;
    properties.delete(e8.propertyName);
    if (properties.size === 0) {
      e8.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e8.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks) cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading") $bbed8b41f857bcc0$var$setupGlobalEvents();
  else document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) fn();
    else $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useDrag1D.mjs
var import_react14 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useGlobalListeners.mjs
var import_react15 = __toESM(require_react(), 1);
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = (0, import_react15.useRef)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, import_react15.useCallback)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, fn, options);
  }, []);
  let removeGlobalListener = (0, import_react15.useCallback)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, import_react15.useCallback)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, import_react15.useEffect)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useObjectRef.mjs
var import_react16 = __toESM(require_react(), 1);
function $df56164dff5785e2$export$4338b53315abf666(forwardedRef) {
  const objRef = (0, import_react16.useRef)(null);
  return (0, import_react16.useMemo)(() => ({
    get current() {
      return objRef.current;
    },
    set current(value) {
      objRef.current = value;
      if (typeof forwardedRef === "function") forwardedRef(value);
      else if (forwardedRef) forwardedRef.current = value;
    }
  }), [
    forwardedRef
  ]);
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useUpdateEffect.mjs
var import_react17 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useUpdateLayoutEffect.mjs
var import_react18 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useResizeObserver.mjs
var import_react19 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useSyncRef.mjs
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        if (context.ref) context.ref.current = null;
      };
    }
  });
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useViewportSize.mjs
var import_react20 = __toESM(require_react(), 1);
var $5df64b3807dc15ee$var$visualViewport = typeof document !== "undefined" && window.visualViewport;

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useDescription.mjs
var import_react21 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useEvent.mjs
var import_react22 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/isVirtualEvent.mjs
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted) return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.pointerType) return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return !(0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useDeepMemo.mjs
var import_react23 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useFormReset.mjs
var import_react24 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/useLoadMore.mjs
var import_react25 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/inertValue.mjs
var import_react26 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/animation.mjs
var import_react_dom = __toESM(require_react_dom(), 1);
var import_react27 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+utils@3.28.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/utils/dist/isFocusable.mjs
var $b4b717babfbb907b$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  '[contenteditable]:not([contenteditable^="false"])'
];
var $b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$b4b717babfbb907b$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $b4b717babfbb907b$var$TABBABLE_ELEMENT_SELECTOR = $b4b717babfbb907b$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $b4b717babfbb907b$export$4c063cf1350e6fed(element) {
  return element.matches($b4b717babfbb907b$var$FOCUSABLE_ELEMENT_SELECTOR);
}

// node_modules/.pnpm/@react-stately+utils@3.10.6_react@18.3.1/node_modules/@react-stately/utils/dist/useControlledState.mjs
var import_react28 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/utils.mjs
var import_react29 = __toESM(require_react(), 1);
function $8a9cb279dc87e130$export$525bc4921d56d4a(nativeEvent) {
  let event = nativeEvent;
  event.nativeEvent = nativeEvent;
  event.isDefaultPrevented = () => event.defaultPrevented;
  event.isPropagationStopped = () => event.cancelBubble;
  event.persist = () => {
  };
  return event;
}
function $8a9cb279dc87e130$export$c2b7abe5d61ec696(event, target) {
  Object.defineProperty(event, "target", {
    value: target
  });
  Object.defineProperty(event, "currentTarget", {
    value: target
  });
}
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = (0, import_react29.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e8) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e8);
  });
  return (0, import_react29.useCallback)((e8) => {
    if (e8.target instanceof HTMLButtonElement || e8.target instanceof HTMLInputElement || e8.target instanceof HTMLTextAreaElement || e8.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e8.target;
      let onBlurHandler = (e9) => {
        stateRef.current.isFocused = false;
        if (target.disabled) {
          let event = $8a9cb279dc87e130$export$525bc4921d56d4a(e9);
          dispatchBlur(event);
        }
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          var _stateRef_current_observer;
          (_stateRef_current_observer = stateRef.current.observer) === null || _stateRef_current_observer === void 0 ? void 0 : _stateRef_current_observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
var $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
function $8a9cb279dc87e130$export$cabe61c495ee3649(target) {
  while (target && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(target)) target = target.parentElement;
  let window2 = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(target);
  let activeElement2 = window2.document.activeElement;
  if (!activeElement2 || activeElement2 === target) return;
  $8a9cb279dc87e130$export$fda7da73ab5d4c48 = true;
  let isRefocusing = false;
  let onBlur = (e8) => {
    if (e8.target === activeElement2 || isRefocusing) e8.stopImmediatePropagation();
  };
  let onFocusOut = (e8) => {
    if (e8.target === activeElement2 || isRefocusing) {
      e8.stopImmediatePropagation();
      if (!target && !isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement2);
        cleanup2();
      }
    }
  };
  let onFocus = (e8) => {
    if (e8.target === target || isRefocusing) e8.stopImmediatePropagation();
  };
  let onFocusIn = (e8) => {
    if (e8.target === target || isRefocusing) {
      e8.stopImmediatePropagation();
      if (!isRefocusing) {
        isRefocusing = true;
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(activeElement2);
        cleanup2();
      }
    }
  };
  window2.addEventListener("blur", onBlur, true);
  window2.addEventListener("focusout", onFocusOut, true);
  window2.addEventListener("focusin", onFocusIn, true);
  window2.addEventListener("focus", onFocus, true);
  let cleanup2 = () => {
    cancelAnimationFrame(raf);
    window2.removeEventListener("blur", onBlur, true);
    window2.removeEventListener("focusout", onFocusOut, true);
    window2.removeEventListener("focusin", onFocusIn, true);
    window2.removeEventListener("focus", onFocus, true);
    $8a9cb279dc87e130$export$fda7da73ab5d4c48 = false;
    isRefocusing = false;
  };
  let raf = requestAnimationFrame(cleanup2);
  return cleanup2;
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/textSelection.mjs
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state === "default") {
      const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
      $14c0b72509d70225$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;
      documentObject.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style[property]);
    target.style[property] = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state !== "disabled") return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(target);
          if (documentObject.documentElement.style.webkitUserSelect === "none") documentObject.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      let property = "userSelect" in target.style ? "userSelect" : "webkitUserSelect";
      if (target.style[property] === "none") target.style[property] = targetOldUserSelect;
      if (target.getAttribute("style") === "") target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/context.mjs
var import_react30 = __toESM(require_react(), 1);
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, import_react30.default).createContext({
  register: () => {
  }
});
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js
function _class_apply_descriptor_get(receiver, descriptor) {
  if (descriptor.get) return descriptor.get.call(receiver);
  return descriptor.value;
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js
function _class_extract_field_descriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_private_field_get.js
function _class_private_field_get(receiver, privateMap) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
  return _class_apply_descriptor_get(receiver, descriptor);
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_check_private_redeclaration.js
function _check_private_redeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_private_field_init.js
function _class_private_field_init(obj, privateMap, value) {
  _check_private_redeclaration(obj, privateMap);
  privateMap.set(obj, value);
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js
function _class_apply_descriptor_set(receiver, descriptor, value) {
  if (descriptor.set) descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}

// node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/esm/_class_private_field_set.js
function _class_private_field_set(receiver, privateMap, value) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
  _class_apply_descriptor_set(receiver, descriptor, value);
  return value;
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/usePress.mjs
var import_react_dom2 = __toESM(require_react_dom(), 1);
var import_react31 = __toESM(require_react(), 1);
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = (0, import_react31.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);
  }
  constructor(type, pointerType, originalEvent, state) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);
    var _state_target;
    let currentTarget = (_state_target = state === null || state === void 0 ? void 0 : state.target) !== null && _state_target !== void 0 ? _state_target : originalEvent.currentTarget;
    const rect = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.getBoundingClientRect();
    let x11, y8 = 0;
    let clientX, clientY = null;
    if (originalEvent.clientX != null && originalEvent.clientY != null) {
      clientX = originalEvent.clientX;
      clientY = originalEvent.clientY;
    }
    if (rect) {
      if (clientX != null && clientY != null) {
        x11 = clientX - rect.left;
        y8 = clientY - rect.top;
      } else {
        x11 = rect.width / 2;
        y8 = rect.height / 2;
      }
    }
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
    this.x = x11;
    this.y = y8;
  }
};
var $f6c31cce2adf654f$var$LINK_CLICKED = Symbol("linkClicked");
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let { onPress, onPressChange, onPressStart, onPressEnd, onPressUp, onClick, isDisabled: isDisabled2, isPressed: isPressedProp, preventFocusOnPress, shouldCancelOnPointerExit, allowTextSelectionOnPress, ref: domRef, ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let [isPressed, setPressed] = (0, import_react31.useState)(false);
  let ref = (0, import_react31.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    didFirePressStart: false,
    isTriggeringEvent: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null,
    disposables: []
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled2 || state.didFirePressStart) return false;
    let shouldStopPropagation = true;
    state.isTriggeringEvent = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(true);
    state.isTriggeringEvent = false;
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart) return false;
    state.didFirePressStart = false;
    state.isTriggeringEvent = true;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange) onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled2) {
      let event = new $f6c31cce2adf654f$var$PressEvent("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    state.isTriggeringEvent = false;
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled2) return false;
    if (onPressUp) {
      state.isTriggeringEvent = true;
      let event = new $f6c31cce2adf654f$var$PressEvent("pressup", pointerType, originalEvent);
      onPressUp(event);
      state.isTriggeringEvent = false;
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e8) => {
    let state = ref.current;
    if (state.isPressed && state.target) {
      if (state.didFirePressStart && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e8), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e8) => {
    if (shouldCancelOnPointerExit) cancel(e8);
  });
  let triggerClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e8) => {
    onClick === null || onClick === void 0 ? void 0 : onClick(e8);
  });
  let triggerSyntheticClick = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e8, target) => {
    if (onClick) {
      let event = new MouseEvent("click", e8);
      (0, $8a9cb279dc87e130$export$c2b7abe5d61ec696)(event, target);
      onClick((0, $8a9cb279dc87e130$export$525bc4921d56d4a)(event));
    }
  });
  let pressProps = (0, import_react31.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e8) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e8.nativeEvent, e8.currentTarget) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) {
          var _state_metaKeyEvents;
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent), e8.key)) e8.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e8.repeat) {
            state.target = e8.currentTarget;
            state.isPressed = true;
            state.pointerType = "keyboard";
            shouldStopPropagation = triggerPressStart(e8, "keyboard");
            let originalTarget = e8.currentTarget;
            let pressUp = (e9) => {
              if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e9, originalTarget) && !e9.repeat && (0, $d4ee10de306f2510$export$4282f70798064fe0)(originalTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e9)) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e9), "keyboard");
            };
            addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.currentTarget), "keyup", (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(pressUp, onKeyUp), true);
          }
          if (shouldStopPropagation) e8.stopPropagation();
          if (e8.metaKey && (0, $c87311424ea30a05$export$9ac100e40613ea10)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e8.key, e8.nativeEvent);
        } else if (e8.key === "Meta") state.metaKeyEvents = /* @__PURE__ */ new Map();
      },
      onClick(e8) {
        if (e8 && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (e8 && e8.button === 0 && !state.isTriggeringEvent && !(0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7).isOpening) {
          let shouldStopPropagation = true;
          if (isDisabled2) e8.preventDefault();
          if (!state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e8.nativeEvent))) {
            let stopPressStart = triggerPressStart(e8, "virtual");
            let stopPressUp = triggerPressUp(e8, "virtual");
            let stopPressEnd = triggerPressEnd(e8, "virtual");
            triggerClick(e8);
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          } else if (state.isPressed && state.pointerType !== "keyboard") {
            let pointerType = state.pointerType || e8.nativeEvent.pointerType || "virtual";
            shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createEvent(e8.currentTarget, e8), pointerType, true);
            state.isOverTarget = false;
            triggerClick(e8);
            cancel(e8);
          }
          state.ignoreEmulatedMouseEvents = false;
          if (shouldStopPropagation) e8.stopPropagation();
        }
      }
    };
    let onKeyUp = (e8) => {
      var _state_metaKeyEvents;
      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e8, state.target)) {
        var _state_metaKeyEvents1;
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8), e8.key)) e8.preventDefault();
        let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8);
        let wasPressed = (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8));
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e8), "keyboard", wasPressed);
        if (wasPressed) triggerSyntheticClick(e8, state.target);
        removeAllGlobalListeners();
        if (e8.key !== "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && (0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, target) && !e8[$f6c31cce2adf654f$var$LINK_CLICKED]) {
          e8[$f6c31cce2adf654f$var$LINK_CLICKED] = true;
          (0, $ea8dcbcb9ea1b556$export$95185d699e05d4d7)(state.target, e8, false);
        }
        state.isPressed = false;
        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e8.key);
      } else if (e8.key === "Meta" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {
        var _state_target;
        let events = state.metaKeyEvents;
        state.metaKeyEvents = void 0;
        for (let event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent("keyup", event));
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e8) => {
        if (e8.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e8.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        state.pointerType = e8.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e8.pointerId;
          state.target = e8.currentTarget;
          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
          shouldStopPropagation = triggerPressStart(e8, state.pointerType);
          let target = (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent);
          if ("releasePointerCapture" in target) target.releasePointerCapture(e8.pointerId);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.currentTarget), "pointerup", onPointerUp, false);
          addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.currentTarget), "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation) e8.stopPropagation();
      };
      pressProps2.onMouseDown = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (e8.button === 0) {
          if (preventFocusOnPress) {
            let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e8.target);
            if (dispose) state.disposables.push(dispose);
          }
          e8.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent)) || state.pointerType === "virtual") return;
        if (e8.button === 0) triggerPressUp(e8, state.pointerType || e8.pointerType);
      };
      pressProps2.onPointerEnter = (e8) => {
        if (e8.pointerId === state.activePointerId && state.target && !state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = true;
          triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e8), state.pointerType);
        }
      };
      pressProps2.onPointerLeave = (e8) => {
        if (e8.pointerId === state.activePointerId && state.target && state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e8), state.pointerType, false);
          cancelOnPointerExit(e8);
        }
      };
      let onPointerUp = (e8) => {
        if (e8.pointerId === state.activePointerId && state.isPressed && e8.button === 0 && state.target) {
          if ((0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8)) && state.pointerType != null) {
            let clicked = false;
            let timeout = setTimeout(() => {
              if (state.isPressed && state.target instanceof HTMLElement) {
                if (clicked) cancel(e8);
                else {
                  (0, $7215afc6de606d6b$export$de79e2c695e052f3)(state.target);
                  state.target.click();
                }
              }
            }, 80);
            addGlobalListener(e8.currentTarget, "click", () => clicked = true, true);
            state.disposables.push(() => clearTimeout(timeout));
          } else cancel(e8);
          state.isOverTarget = false;
        }
      };
      let onPointerCancel = (e8) => {
        cancel(e8);
      };
      pressProps2.onDragStart = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        cancel(e8);
      };
    } else if (false) {
      pressProps2.onMouseDown = (e8) => {
        if (e8.button !== 0 || !(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (state.ignoreEmulatedMouseEvents) {
          e8.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e8.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e8.nativeEvent) ? "virtual" : "mouse";
        let shouldStopPropagation = (0, import_react_dom2.flushSync)(() => triggerPressStart(e8, state.pointerType));
        if (shouldStopPropagation) e8.stopPropagation();
        if (preventFocusOnPress) {
          let dispose = (0, $8a9cb279dc87e130$export$cabe61c495ee3649)(e8.target);
          if (dispose) state.disposables.push(dispose);
        }
        addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.currentTarget), "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e8, state.pointerType);
        }
        if (shouldStopPropagation) e8.stopPropagation();
      };
      pressProps2.onMouseLeave = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e8, state.pointerType, false);
          cancelOnPointerExit(e8);
        }
        if (shouldStopPropagation) e8.stopPropagation();
      };
      pressProps2.onMouseUp = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (!state.ignoreEmulatedMouseEvents && e8.button === 0) triggerPressUp(e8, state.pointerType || "mouse");
      };
      let onMouseUp = (e8) => {
        if (e8.button !== 0) return;
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if (state.target && state.target.contains(e8.target) && state.pointerType != null) ;
        else cancel(e8);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e8.nativeEvent);
        if (!touch) return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e8.currentTarget;
        state.pointerType = "touch";
        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
        let shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType);
        if (shouldStopPropagation) e8.stopPropagation();
        addGlobalListener((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e8.currentTarget), "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (!state.isPressed) {
          e8.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e8.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e8.currentTarget)) {
          if (!state.isOverTarget && state.pointerType != null) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType);
          }
        } else if (state.isOverTarget && state.pointerType != null) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType, false);
          cancelOnPointerExit($f6c31cce2adf654f$var$createTouchEvent(state.target, e8));
        }
        if (shouldStopPropagation) e8.stopPropagation();
      };
      pressProps2.onTouchEnd = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        if (!state.isPressed) {
          e8.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e8.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e8.currentTarget) && state.pointerType != null) {
          triggerPressUp($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType);
          shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType);
          triggerSyntheticClick(e8.nativeEvent, state.target);
        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createTouchEvent(state.target, e8), state.pointerType, false);
        if (shouldStopPropagation) e8.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        e8.stopPropagation();
        if (state.isPressed) cancel($f6c31cce2adf654f$var$createTouchEvent(state.target, e8));
      };
      let onScroll = (e8) => {
        if (state.isPressed && (0, $d4ee10de306f2510$export$4282f70798064fe0)((0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8), state.target)) cancel({
          currentTarget: state.target,
          shiftKey: false,
          ctrlKey: false,
          metaKey: false,
          altKey: false
        });
      };
      pressProps2.onDragStart = (e8) => {
        if (!(0, $d4ee10de306f2510$export$4282f70798064fe0)(e8.currentTarget, (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent))) return;
        cancel(e8);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled2,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp,
    triggerClick,
    triggerSyntheticClick
  ]);
  (0, import_react31.useEffect)(() => {
    let element = domRef === null || domRef === void 0 ? void 0 : domRef.current;
    if (element && element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).Element) {
      let style = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).getComputedStyle(element);
      if (style.touchAction === "auto")
        element.style.touchAction = "pan-x pan-y pinch-zoom";
    }
  }, [
    domRef
  ]);
  (0, import_react31.useEffect)(() => {
    let state = ref.current;
    return () => {
      var _state_target;
      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_state_target = state.target) !== null && _state_target !== void 0 ? _state_target : void 0);
      for (let dispose of state.disposables) dispose();
      state.disposables = [];
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key
  !((role === "link" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== "Enter");
}
function $f6c31cce2adf654f$var$createEvent(target, e8) {
  let clientX = e8.clientX;
  let clientY = e8.clientY;
  return {
    currentTarget: target,
    shiftKey: e8.shiftKey,
    ctrlKey: e8.ctrlKey,
    metaKey: e8.metaKey,
    altKey: e8.altKey,
    clientX,
    clientY
  };
}
function $f6c31cce2adf654f$var$shouldPreventDefaultUp(target) {
  if (target instanceof HTMLInputElement) return false;
  if (target instanceof HTMLButtonElement) return target.type !== "submit" && target.type !== "reset";
  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;
  return true;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  return $f6c31cce2adf654f$var$shouldPreventDefaultUp(target);
}
var $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useFocusVisible.mjs
var import_react32 = __toESM(require_react(), 1);
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$export$d90243b58daecda7 = /* @__PURE__ */ new Map();
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e8) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e8);
}
function $507fabe10e71c6fb$var$isValidKey(e8) {
  return !(e8.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e8.altKey || e8.ctrlKey || e8.key === "Control" || e8.key === "Shift" || e8.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e8) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e8)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e8);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e8) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e8.type === "mousedown" || e8.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e8);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e8) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e8)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e8) {
  if (e8.target === window || e8.target === document || (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) || !e8.isTrusted) return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e8);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  if (0, $8a9cb279dc87e130$export$fda7da73ab5d4c48) return;
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents(element) {
  if (typeof window === "undefined" || $507fabe10e71c6fb$export$d90243b58daecda7.get((0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element))) return;
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let focus = windowObject.HTMLElement.prototype.focus;
  windowObject.HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  documentObject.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  windowObject.addEventListener("beforeunload", () => {
    $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element);
  }, {
    once: true
  });
  $507fabe10e71c6fb$export$d90243b58daecda7.set(windowObject, {
    focus
  });
}
var $507fabe10e71c6fb$var$tearDownWindowFocusTracking = (element, loadListener) => {
  const windowObject = (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(element);
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  if (loadListener) documentObject.removeEventListener("DOMContentLoaded", loadListener);
  if (!$507fabe10e71c6fb$export$d90243b58daecda7.has(windowObject)) return;
  windowObject.HTMLElement.prototype.focus = $507fabe10e71c6fb$export$d90243b58daecda7.get(windowObject).focus;
  documentObject.removeEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  documentObject.removeEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  windowObject.removeEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  windowObject.removeEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    documentObject.removeEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else if (false) {
    documentObject.removeEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    documentObject.removeEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$export$d90243b58daecda7.delete(windowObject);
};
function $507fabe10e71c6fb$export$2f1888112f558a7d(element) {
  const documentObject = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  let loadListener;
  if (documentObject.readyState !== "loading") $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
  else {
    loadListener = () => {
      $507fabe10e71c6fb$var$setupGlobalFocusEvents(element);
    };
    documentObject.addEventListener("DOMContentLoaded", loadListener);
  }
  return () => $507fabe10e71c6fb$var$tearDownWindowFocusTracking(element, loadListener);
}
if (typeof document !== "undefined") $507fabe10e71c6fb$export$2f1888112f558a7d();
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
var $507fabe10e71c6fb$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e8) {
  let document1 = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e8 === null || e8 === void 0 ? void 0 : e8.target);
  const IHTMLInputElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e8 === null || e8 === void 0 ? void 0 : e8.target).HTMLInputElement : HTMLInputElement;
  const IHTMLTextAreaElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e8 === null || e8 === void 0 ? void 0 : e8.target).HTMLTextAreaElement : HTMLTextAreaElement;
  const IHTMLElement = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e8 === null || e8 === void 0 ? void 0 : e8.target).HTMLElement : HTMLElement;
  const IKeyboardEvent = typeof window !== "undefined" ? (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(e8 === null || e8 === void 0 ? void 0 : e8.target).KeyboardEvent : KeyboardEvent;
  isTextInput = isTextInput || document1.activeElement instanceof IHTMLInputElement && !$507fabe10e71c6fb$var$nonTextInputTypes.has(document1.activeElement.type) || document1.activeElement instanceof IHTMLTextAreaElement || document1.activeElement instanceof IHTMLElement && document1.activeElement.isContentEditable;
  return !(isTextInput && modality === "keyboard" && e8 instanceof IKeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e8.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  (0, import_react32.useEffect)(() => {
    let handler = (modality, e8) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(!!(opts === null || opts === void 0 ? void 0 : opts.isTextInput), modality, e8)) return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, deps);
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/focusSafely.mjs
function $3ad3f6e1647bc98d$export$80f3e147d781571c(element) {
  const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(element);
  const activeElement2 = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "virtual") {
    let lastFocusedElement = activeElement2;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if ((0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) === lastFocusedElement && element.isConnected) (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useFocus.mjs
var import_react33 = __toESM(require_react(), 1);
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled: isDisabled2, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react33.useCallback)((e8) => {
    if (e8.target === e8.currentTarget) {
      if (onBlurProp) onBlurProp(e8);
      if (onFocusChange) onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  const onFocus = (0, import_react33.useCallback)((e8) => {
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.target);
    const activeElement2 = ownerDocument ? (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument) : (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)();
    if (e8.target === e8.currentTarget && activeElement2 === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent)) {
      if (onFocusProp) onFocusProp(e8);
      if (onFocusChange) onFocusChange(true);
      onSyntheticFocus(e8);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled2 && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled2 && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/createEventHandler.mjs
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler) return void 0;
  let shouldStopPropagation = true;
  return (e8) => {
    let event = {
      ...e8,
      preventDefault() {
        e8.preventDefault();
      },
      isDefaultPrevented() {
        return e8.isDefaultPrevented();
      },
      stopPropagation() {
        if (shouldStopPropagation && true) console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
        else shouldStopPropagation = true;
      },
      continuePropagation() {
        shouldStopPropagation = false;
      },
      isPropagationStopped() {
        return shouldStopPropagation;
      }
    };
    handler(event);
    if (shouldStopPropagation) e8.stopPropagation();
  };
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useKeyboard.mjs
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)
    }
  };
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useFocusable.mjs
var import_react34 = __toESM(require_react(), 1);
var $f645667febf57a63$export$f9762fab77588ecb = (0, import_react34.default).createContext(null);
function $f645667febf57a63$var$useFocusableContext(ref) {
  let context = (0, import_react34.useContext)($f645667febf57a63$export$f9762fab77588ecb) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, ref);
  let { ref: _8, ...otherProps } = context;
  return otherProps;
}
var $f645667febf57a63$export$13f3202a3e5ddd5 = (0, import_react34.default).forwardRef(function FocusableProvider(props, ref) {
  let { children, ...otherProps } = props;
  let objRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let context = {
    ...otherProps,
    ref: objRef
  };
  return (0, import_react34.default).createElement($f645667febf57a63$export$f9762fab77588ecb.Provider, {
    value: context
  }, children);
});
function $f645667febf57a63$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusProps, keyboardProps);
  let domProps = $f645667febf57a63$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, import_react34.useRef)(props.autoFocus);
  (0, import_react34.useEffect)(() => {
    if (autoFocusRef.current && domRef.current) (0, $3ad3f6e1647bc98d$export$80f3e147d781571c)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  let tabIndex = props.excludeFromTabOrder ? -1 : 0;
  if (props.isDisabled) tabIndex = void 0;
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      ...interactions,
      tabIndex
    }, interactionProps)
  };
}
var $f645667febf57a63$export$35a3bebf7ef2d934 = (0, import_react34.forwardRef)(({ children, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { focusableProps } = $f645667febf57a63$export$4c014de7c8940b4c(props, ref);
  let child = (0, import_react34.default).Children.only(children);
  (0, import_react34.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Focusable> child must forward its ref to a DOM element.");
      return;
    }
    if (!props.isDisabled && !(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Focusable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary" && el.localName !== "img" && el.localName !== "svg") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Focusable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "tabpanel" && role !== "textbox" && role !== "treeitem" && // aria-describedby is also announced on these roles
        role !== "img" && role !== "meter" && role !== "progressbar"
      ) console.warn(`<Focusable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref,
    props.isDisabled
  ]);
  let childRef = parseInt((0, import_react34.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react34.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/Pressable.mjs
var import_react35 = __toESM(require_react(), 1);
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, import_react35.default).forwardRef(({ children, ...props }, ref) => {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    ...props,
    ref
  });
  let { focusableProps } = (0, $f645667febf57a63$export$4c014de7c8940b4c)(props, ref);
  let child = (0, import_react35.default).Children.only(children);
  (0, import_react35.useEffect)(() => {
    if (false) return;
    let el = ref.current;
    if (!el || !(el instanceof (0, $431fbd86ca7dc216$export$f21a1ffae260145a)(el).Element)) {
      console.error("<Pressable> child must forward its ref to a DOM element.");
      return;
    }
    if (!(0, $b4b717babfbb907b$export$4c063cf1350e6fed)(el)) {
      console.warn("<Pressable> child must be focusable. Please ensure the tabIndex prop is passed through.");
      return;
    }
    if (el.localName !== "button" && el.localName !== "input" && el.localName !== "select" && el.localName !== "textarea" && el.localName !== "a" && el.localName !== "area" && el.localName !== "summary") {
      let role = el.getAttribute("role");
      if (!role) console.warn("<Pressable> child must have an interactive ARIA role.");
      else if (
        // https://w3c.github.io/aria/#widget_roles
        role !== "application" && role !== "button" && role !== "checkbox" && role !== "combobox" && role !== "gridcell" && role !== "link" && role !== "menuitem" && role !== "menuitemcheckbox" && role !== "menuitemradio" && role !== "option" && role !== "radio" && role !== "searchbox" && role !== "separator" && role !== "slider" && role !== "spinbutton" && role !== "switch" && role !== "tab" && role !== "textbox" && role !== "treeitem"
      ) console.warn(`<Pressable> child must have an interactive ARIA role. Got "${role}".`);
    }
  }, [
    ref
  ]);
  let childRef = parseInt((0, import_react35.default).version, 10) < 19 ? child.ref : child.props.ref;
  return (0, import_react35.default).cloneElement(child, {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps, child.props),
    // @ts-ignore
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(childRef, ref)
  });
});

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/PressResponder.mjs
var import_react36 = __toESM(require_react(), 1);
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, import_react36.default).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, import_react36.useRef)(false);
  let prevContext = (0, import_react36.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref,
    register() {
      isRegistered.current = true;
      if (prevContext) prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react36.useEffect)(() => {
    if (!isRegistered.current) {
      if (true) console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react36.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children);
});

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useFocusWithin.mjs
var import_react37 = __toESM(require_react(), 1);
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled: isDisabled2, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, import_react37.useRef)({
    isFocusWithin: false
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let onBlur = (0, import_react37.useCallback)((e8) => {
    if (!e8.currentTarget.contains(e8.target)) return;
    if (state.current.isFocusWithin && !e8.currentTarget.contains(e8.relatedTarget)) {
      state.current.isFocusWithin = false;
      removeAllGlobalListeners();
      if (onBlurWithin) onBlurWithin(e8);
      if (onFocusWithinChange) onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state,
    removeAllGlobalListeners
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  let onFocus = (0, import_react37.useCallback)((e8) => {
    if (!e8.currentTarget.contains(e8.target)) return;
    const ownerDocument = (0, $431fbd86ca7dc216$export$b204af158042fbac)(e8.target);
    const activeElement2 = (0, $d4ee10de306f2510$export$cd4e5573fbe2b576)(ownerDocument);
    if (!state.current.isFocusWithin && activeElement2 === (0, $d4ee10de306f2510$export$e58f029f0fbfdb29)(e8.nativeEvent)) {
      if (onFocusWithin) onFocusWithin(e8);
      if (onFocusWithinChange) onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e8);
      let currentTarget = e8.currentTarget;
      addGlobalListener(ownerDocument, "focus", (e9) => {
        if (state.current.isFocusWithin && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(currentTarget, e9.target)) {
          let nativeEvent = new ownerDocument.defaultView.FocusEvent("blur", {
            relatedTarget: e9.target
          });
          (0, $8a9cb279dc87e130$export$c2b7abe5d61ec696)(nativeEvent, currentTarget);
          let event = (0, $8a9cb279dc87e130$export$525bc4921d56d4a)(nativeEvent);
          onBlur(event);
        }
      }, {
        capture: true
      });
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus,
    addGlobalListener,
    onBlur
  ]);
  if (isDisabled2) return {
    focusWithinProps: {
      // These cannot be null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useHover.mjs
var import_react38 = __toESM(require_react(), 1);
var $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
var $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e8) {
  if (e8.pointerType === "touch") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined") return;
  if (typeof PointerEvent !== "undefined") document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else if (false) document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0) return;
    if (typeof PointerEvent !== "undefined") document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else if (false) document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled: isDisabled2 } = props;
  let [isHovered, setHovered] = (0, import_react38.useState)(false);
  let state = (0, import_react38.useRef)({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  (0, import_react38.useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let { hoverProps, triggerHoverEnd } = (0, import_react38.useMemo)(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled2 || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target)) return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      addGlobalListener((0, $431fbd86ca7dc216$export$b204af158042fbac)(event.target), "pointerover", (e8) => {
        if (state.isHovered && state.target && !(0, $d4ee10de306f2510$export$4282f70798064fe0)(state.target, e8.target)) triggerHoverEnd2(e8, e8.pointerType);
      }, {
        capture: true
      });
      if (onHoverStart) onHoverStart({
        type: "hoverstart",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd2 = (event, pointerType) => {
      let target = state.target;
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered || !target) return;
      state.isHovered = false;
      removeAllGlobalListeners();
      if (onHoverEnd) onHoverEnd({
        type: "hoverend",
        target,
        pointerType
      });
      if (onHoverChange) onHoverChange(false);
      setHovered(false);
    };
    let hoverProps2 = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps2.onPointerEnter = (e8) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e8.pointerType === "mouse") return;
        triggerHoverStart(e8, e8.pointerType);
      };
      hoverProps2.onPointerLeave = (e8) => {
        if (!isDisabled2 && e8.currentTarget.contains(e8.target)) triggerHoverEnd2(e8, e8.pointerType);
      };
    } else if (false) {
      hoverProps2.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps2.onMouseEnter = (e8) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e8, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps2.onMouseLeave = (e8) => {
        if (!isDisabled2 && e8.currentTarget.contains(e8.target)) triggerHoverEnd2(e8, "mouse");
      };
    }
    return {
      hoverProps: hoverProps2,
      triggerHoverEnd: triggerHoverEnd2
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled2,
    state,
    addGlobalListener,
    removeAllGlobalListeners
  ]);
  (0, import_react38.useEffect)(() => {
    if (isDisabled2) triggerHoverEnd({
      currentTarget: state.target
    }, state.pointerType);
  }, [
    isDisabled2
  ]);
  return {
    hoverProps,
    isHovered
  };
}

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useInteractOutside.mjs
var import_react39 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useMove.mjs
var import_react40 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useScrollWheel.mjs
var import_react41 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+interactions@3.25.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/interactions/dist/useLongPress.mjs
var import_react42 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+focus@3.20.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/focus/dist/FocusScope.mjs
var import_react43 = __toESM(require_react(), 1);
var $9bf71ea28793e738$var$FocusContext = (0, import_react43.default).createContext(null);
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  if (!element) return false;
  if (!scope) return false;
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree = class _$9bf71ea28793e738$var$Tree {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    if (!parentNode) return;
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore) node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null) return;
    let node = this.fastMap.get(scopeRef);
    if (!node) return;
    let parentNode = node.parent;
    for (let current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    if (parentNode) {
      parentNode.removeChild(node);
      if (children.size > 0) children.forEach((child) => parentNode && parentNode.addChild(child));
    }
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null) yield node;
    if (node.children.size > 0) for (let child of node.children) yield* this.traverse(child);
  }
  clone() {
    var _node_parent;
    let newTree = new _$9bf71ea28793e738$var$Tree();
    var _node_parent_scopeRef;
    for (let node of this.traverse()) newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map();
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    this.children = /* @__PURE__ */ new Set();
    this.contain = false;
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();

// node_modules/.pnpm/@react-aria+focus@3.20.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/focus/dist/useFocusRing.mjs
var import_react44 = __toESM(require_react(), 1);
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = (0, import_react44.useRef)({
    isFocused: false,
    isFocusVisible: autoFocus || (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()
  });
  let [isFocused, setFocused] = (0, import_react44.useState)(false);
  let [isFocusVisibleState, setFocusVisible] = (0, import_react44.useState)(() => state.current.isFocused && state.current.isFocusVisible);
  let updateState = (0, import_react44.useCallback)(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);
  let onFocusChange = (0, import_react44.useCallback)((isFocused2) => {
    state.current.isFocused = isFocused2;
    setFocused(isFocused2);
    updateState();
  }, [
    updateState
  ]);
  (0, $507fabe10e71c6fb$export$ec71b4b83ac08ec3)((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}

// node_modules/.pnpm/@react-aria+focus@3.20.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/focus/dist/FocusRing.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/.pnpm/@react-aria+focus@3.20.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/focus/dist/useHasTabbableChild.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/button/button.js
var import_react54 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-active-press.js
var import_react51 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/env.js
var i = Object.defineProperty;
var d = (t12, e8, n13) => e8 in t12 ? i(t12, e8, { enumerable: true, configurable: true, writable: true, value: n13 }) : t12[e8] = n13;
var r2 = (t12, e8, n13) => (d(t12, typeof e8 != "symbol" ? e8 + "" : e8, n13), n13);
var o = class {
  constructor() {
    r2(this, "current", this.detect());
    r2(this, "handoffState", "pending");
    r2(this, "currentId", 0);
  }
  set(e8) {
    this.current !== e8 && (this.handoffState = "pending", this.currentId = 0, this.current = e8);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window == "undefined" || typeof document == "undefined" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
};
var s = new o();

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/owner.js
function o2(n13) {
  var e8, r21;
  return s.isServer ? null : n13 ? "ownerDocument" in n13 ? n13.ownerDocument : "current" in n13 ? (r21 = (e8 = n13.current) == null ? void 0 : e8.ownerDocument) != null ? r21 : document : null : document;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-disposables.js
var import_react47 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/micro-task.js
function t(e8) {
  typeof queueMicrotask == "function" ? queueMicrotask(e8) : Promise.resolve().then(e8).catch((o21) => setTimeout(() => {
    throw o21;
  }));
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/disposables.js
function o3() {
  let n13 = [], r21 = { addEventListener(e8, t12, s15, a25) {
    return e8.addEventListener(t12, s15, a25), r21.add(() => e8.removeEventListener(t12, s15, a25));
  }, requestAnimationFrame(...e8) {
    let t12 = requestAnimationFrame(...e8);
    return r21.add(() => cancelAnimationFrame(t12));
  }, nextFrame(...e8) {
    return r21.requestAnimationFrame(() => r21.requestAnimationFrame(...e8));
  }, setTimeout(...e8) {
    let t12 = setTimeout(...e8);
    return r21.add(() => clearTimeout(t12));
  }, microTask(...e8) {
    let t12 = { current: true };
    return t(() => {
      t12.current && e8[0]();
    }), r21.add(() => {
      t12.current = false;
    });
  }, style(e8, t12, s15) {
    let a25 = e8.style.getPropertyValue(t12);
    return Object.assign(e8.style, { [t12]: s15 }), this.add(() => {
      Object.assign(e8.style, { [t12]: a25 });
    });
  }, group(e8) {
    let t12 = o3();
    return e8(t12), this.add(() => t12.dispose());
  }, add(e8) {
    return n13.includes(e8) || n13.push(e8), () => {
      let t12 = n13.indexOf(e8);
      if (t12 >= 0) for (let s15 of n13.splice(t12, 1)) s15();
    };
  }, dispose() {
    for (let e8 of n13.splice(0)) e8();
  } };
  return r21;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p() {
  let [e8] = (0, import_react47.useState)(o3);
  return (0, import_react47.useEffect)(() => () => e8.dispose(), [e8]), e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-event.js
var import_react50 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-latest-value.js
var import_react49 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var import_react48 = __toESM(require_react(), 1);
var n = (e8, t12) => {
  s.isServer ? (0, import_react48.useEffect)(e8, t12) : (0, import_react48.useLayoutEffect)(e8, t12);
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-latest-value.js
function s3(e8) {
  let r21 = (0, import_react49.useRef)(e8);
  return n(() => {
    r21.current = e8;
  }, [e8]), r21;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-event.js
var o5 = function(t12) {
  let e8 = s3(t12);
  return import_react50.default.useCallback((...r21) => e8.current(...r21), [e8]);
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-active-press.js
function E(e8) {
  let t12 = e8.width / 2, n13 = e8.height / 2;
  return { top: e8.clientY - n13, right: e8.clientX + t12, bottom: e8.clientY + n13, left: e8.clientX - t12 };
}
function P(e8, t12) {
  return !(!e8 || !t12 || e8.right < t12.left || e8.left > t12.right || e8.bottom < t12.top || e8.top > t12.bottom);
}
function w({ disabled: e8 = false } = {}) {
  let t12 = (0, import_react51.useRef)(null), [n13, l17] = (0, import_react51.useState)(false), r21 = p(), o21 = o5(() => {
    t12.current = null, l17(false), r21.dispose();
  }), f22 = o5((s15) => {
    if (r21.dispose(), t12.current === null) {
      t12.current = s15.currentTarget, l17(true);
      {
        let i19 = o2(s15.currentTarget);
        r21.addEventListener(i19, "pointerup", o21, false), r21.addEventListener(i19, "pointermove", (c64) => {
          if (t12.current) {
            let p6 = E(c64);
            l17(P(p6, t12.current.getBoundingClientRect()));
          }
        }, false), r21.addEventListener(i19, "pointercancel", o21, false);
      }
    }
  });
  return { pressed: n13, pressProps: e8 ? {} : { onPointerDown: f22, onPointerUp: o21, onClick: o21 } };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/disabled.js
var import_react52 = __toESM(require_react(), 1);
var e = (0, import_react52.createContext)(void 0);
function a3() {
  return (0, import_react52.useContext)(e);
}
function l({ value: t12, children: o21 }) {
  return import_react52.default.createElement(e.Provider, { value: t12 }, o21);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/render.js
var import_react53 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/class-names.js
function t3(...r21) {
  return Array.from(new Set(r21.flatMap((n13) => typeof n13 == "string" ? n13.split(" ") : []))).filter(Boolean).join(" ");
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/match.js
function u(r21, n13, ...a25) {
  if (r21 in n13) {
    let e8 = n13[r21];
    return typeof e8 == "function" ? e8(...a25) : e8;
  }
  let t12 = new Error(`Tried to handle "${r21}" but there is no handler defined. Only defined handlers are: ${Object.keys(n13).map((e8) => `"${e8}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t12, u), t12;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/render.js
var O = ((a25) => (a25[a25.None = 0] = "None", a25[a25.RenderStrategy = 1] = "RenderStrategy", a25[a25.Static = 2] = "Static", a25))(O || {});
var A = ((e8) => (e8[e8.Unmount = 0] = "Unmount", e8[e8.Hidden = 1] = "Hidden", e8))(A || {});
function L() {
  let n13 = U();
  return (0, import_react53.useCallback)((r21) => C({ mergeRefs: n13, ...r21 }), [n13]);
}
function C({ ourProps: n13, theirProps: r21, slot: e8, defaultTag: a25, features: s15, visible: t12 = true, name: l17, mergeRefs: i19 }) {
  i19 = i19 != null ? i19 : $;
  let o21 = P2(r21, n13);
  if (t12) return F(o21, e8, a25, l17, i19);
  let y8 = s15 != null ? s15 : 0;
  if (y8 & 2) {
    let { static: f22 = false, ...u19 } = o21;
    if (f22) return F(u19, e8, a25, l17, i19);
  }
  if (y8 & 1) {
    let { unmount: f22 = true, ...u19 } = o21;
    return u(f22 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return F({ ...u19, hidden: true, style: { display: "none" } }, e8, a25, l17, i19);
    } });
  }
  return F(o21, e8, a25, l17, i19);
}
function F(n13, r21 = {}, e8, a25, s15) {
  let { as: t12 = e8, children: l17, refName: i19 = "ref", ...o21 } = h(n13, ["unmount", "static"]), y8 = n13.ref !== void 0 ? { [i19]: n13.ref } : {}, f22 = typeof l17 == "function" ? l17(r21) : l17;
  "className" in o21 && o21.className && typeof o21.className == "function" && (o21.className = o21.className(r21)), o21["aria-labelledby"] && o21["aria-labelledby"] === o21.id && (o21["aria-labelledby"] = void 0);
  let u19 = {};
  if (r21) {
    let d14 = false, p6 = [];
    for (let [c64, T12] of Object.entries(r21)) typeof T12 == "boolean" && (d14 = true), T12 === true && p6.push(c64.replace(/([A-Z])/g, (g8) => `-${g8.toLowerCase()}`));
    if (d14) {
      u19["data-headlessui-state"] = p6.join(" ");
      for (let c64 of p6) u19[`data-${c64}`] = "";
    }
  }
  if (t12 === import_react53.Fragment && (Object.keys(m2(o21)).length > 0 || Object.keys(m2(u19)).length > 0)) if (!(0, import_react53.isValidElement)(f22) || Array.isArray(f22) && f22.length > 1) {
    if (Object.keys(m2(o21)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${a25} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(m2(o21)).concat(Object.keys(m2(u19))).map((d14) => `  - ${d14}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((d14) => `  - ${d14}`).join(`
`)].join(`
`));
  } else {
    let d14 = f22.props, p6 = d14 == null ? void 0 : d14.className, c64 = typeof p6 == "function" ? (...R9) => t3(p6(...R9), o21.className) : t3(p6, o21.className), T12 = c64 ? { className: c64 } : {}, g8 = P2(f22.props, m2(h(o21, ["ref"])));
    for (let R9 in u19) R9 in g8 && delete u19[R9];
    return (0, import_react53.cloneElement)(f22, Object.assign({}, g8, u19, y8, { ref: s15(H(f22), y8.ref) }, T12));
  }
  return (0, import_react53.createElement)(t12, Object.assign({}, h(o21, ["ref"]), t12 !== import_react53.Fragment && y8, t12 !== import_react53.Fragment && u19), f22);
}
function U() {
  let n13 = (0, import_react53.useRef)([]), r21 = (0, import_react53.useCallback)((e8) => {
    for (let a25 of n13.current) a25 != null && (typeof a25 == "function" ? a25(e8) : a25.current = e8);
  }, []);
  return (...e8) => {
    if (!e8.every((a25) => a25 == null)) return n13.current = e8, r21;
  };
}
function $(...n13) {
  return n13.every((r21) => r21 == null) ? void 0 : (r21) => {
    for (let e8 of n13) e8 != null && (typeof e8 == "function" ? e8(r21) : e8.current = r21);
  };
}
function P2(...n13) {
  var a25;
  if (n13.length === 0) return {};
  if (n13.length === 1) return n13[0];
  let r21 = {}, e8 = {};
  for (let s15 of n13) for (let t12 in s15) t12.startsWith("on") && typeof s15[t12] == "function" ? ((a25 = e8[t12]) != null || (e8[t12] = []), e8[t12].push(s15[t12])) : r21[t12] = s15[t12];
  if (r21.disabled || r21["aria-disabled"]) for (let s15 in e8) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(s15) && (e8[s15] = [(t12) => {
    var l17;
    return (l17 = t12 == null ? void 0 : t12.preventDefault) == null ? void 0 : l17.call(t12);
  }]);
  for (let s15 in e8) Object.assign(r21, { [s15](t12, ...l17) {
    let i19 = e8[s15];
    for (let o21 of i19) {
      if ((t12 instanceof Event || (t12 == null ? void 0 : t12.nativeEvent) instanceof Event) && t12.defaultPrevented) return;
      o21(t12, ...l17);
    }
  } });
  return r21;
}
function _(...n13) {
  var a25;
  if (n13.length === 0) return {};
  if (n13.length === 1) return n13[0];
  let r21 = {}, e8 = {};
  for (let s15 of n13) for (let t12 in s15) t12.startsWith("on") && typeof s15[t12] == "function" ? ((a25 = e8[t12]) != null || (e8[t12] = []), e8[t12].push(s15[t12])) : r21[t12] = s15[t12];
  for (let s15 in e8) Object.assign(r21, { [s15](...t12) {
    let l17 = e8[s15];
    for (let i19 of l17) i19 == null || i19(...t12);
  } });
  return r21;
}
function K(n13) {
  var r21;
  return Object.assign((0, import_react53.forwardRef)(n13), { displayName: (r21 = n13.displayName) != null ? r21 : n13.name });
}
function m2(n13) {
  let r21 = Object.assign({}, n13);
  for (let e8 in r21) r21[e8] === void 0 && delete r21[e8];
  return r21;
}
function h(n13, r21 = []) {
  let e8 = Object.assign({}, n13);
  for (let a25 of r21) a25 in e8 && delete e8[a25];
  return e8;
}
function H(n13) {
  return import_react53.default.version.split(".")[0] >= "19" ? n13.props.ref : n13.ref;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/button/button.js
var R = "button";
function v2(a25, u19) {
  var p6;
  let l17 = a3(), { disabled: e8 = l17 || false, autoFocus: t12 = false, ...o21 } = a25, { isFocusVisible: r21, focusProps: i19 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: t12 }), { isHovered: s15, hoverProps: T12 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), { pressed: n13, pressProps: d14 } = w({ disabled: e8 }), f22 = _({ ref: u19, type: (p6 = o21.type) != null ? p6 : "button", disabled: e8 || void 0, autoFocus: t12 }, i19, T12, d14), m12 = (0, import_react54.useMemo)(() => ({ disabled: e8, hover: s15, focus: r21, active: n13, autofocus: t12 }), [e8, s15, r21, n13, t12]);
  return L()({ ourProps: f22, theirProps: o21, slot: m12, defaultTag: R, name: "Button" });
}
var H2 = K(v2);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/checkbox/checkbox.js
var import_react63 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-controllable.js
var import_react55 = __toESM(require_react(), 1);
function T(l17, r21, c64) {
  let [i19, s15] = (0, import_react55.useState)(c64), e8 = l17 !== void 0, t12 = (0, import_react55.useRef)(e8), u19 = (0, import_react55.useRef)(false), d14 = (0, import_react55.useRef)(false);
  return e8 && !t12.current && !u19.current ? (u19.current = true, t12.current = e8, console.error("A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen.")) : !e8 && t12.current && !d14.current && (d14.current = true, t12.current = e8, console.error("A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen.")), [e8 ? l17 : i19, o5((n13) => (e8 || s15(n13), r21 == null ? void 0 : r21(n13)))];
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-default-value.js
var import_react56 = __toESM(require_react(), 1);
function l2(e8) {
  let [t12] = (0, import_react56.useState)(e8);
  return t12;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-id.js
var import_react57 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/form-fields.js
var import_react58 = __toESM(require_react(), 1);
var import_react_dom3 = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/form.js
function e2(i19 = {}, s15 = null, t12 = []) {
  for (let [r21, n13] of Object.entries(i19)) o7(t12, f3(s15, r21), n13);
  return t12;
}
function f3(i19, s15) {
  return i19 ? i19 + "[" + s15 + "]" : s15;
}
function o7(i19, s15, t12) {
  if (Array.isArray(t12)) for (let [r21, n13] of t12.entries()) o7(i19, f3(s15, r21.toString()), n13);
  else t12 instanceof Date ? i19.push([s15, t12.toISOString()]) : typeof t12 == "boolean" ? i19.push([s15, t12 ? "1" : "0"]) : typeof t12 == "string" ? i19.push([s15, t12]) : typeof t12 == "number" ? i19.push([s15, `${t12}`]) : t12 == null ? i19.push([s15, ""]) : e2(t12, s15, i19);
}
function p2(i19) {
  var t12, r21;
  let s15 = (t12 = i19 == null ? void 0 : i19.form) != null ? t12 : i19.closest("form");
  if (s15) {
    for (let n13 of s15.elements) if (n13 !== i19 && (n13.tagName === "INPUT" && n13.type === "submit" || n13.tagName === "BUTTON" && n13.type === "submit" || n13.nodeName === "INPUT" && n13.type === "image")) {
      n13.click();
      return;
    }
    (r21 = s15.requestSubmit) == null || r21.call(s15);
  }
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/hidden.js
var a4 = "span";
var s4 = ((e8) => (e8[e8.None = 1] = "None", e8[e8.Focusable = 2] = "Focusable", e8[e8.Hidden = 4] = "Hidden", e8))(s4 || {});
function l3(t12, r21) {
  var n13;
  let { features: d14 = 1, ...e8 } = t12, o21 = { ref: r21, "aria-hidden": (d14 & 2) === 2 ? true : (n13 = e8["aria-hidden"]) != null ? n13 : void 0, hidden: (d14 & 4) === 4 ? true : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(d14 & 4) === 4 && (d14 & 2) !== 2 && { display: "none" } } };
  return L()({ ourProps: o21, theirProps: e8, slot: {}, defaultTag: a4, name: "Hidden" });
}
var f4 = K(l3);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/form-fields.js
var f5 = (0, import_react58.createContext)(null);
function W(t12) {
  let [e8, r21] = (0, import_react58.useState)(null);
  return import_react58.default.createElement(f5.Provider, { value: { target: e8 } }, t12.children, import_react58.default.createElement(f4, { features: s4.Hidden, ref: r21 }));
}
function c16({ children: t12 }) {
  let e8 = (0, import_react58.useContext)(f5);
  if (!e8) return import_react58.default.createElement(import_react58.default.Fragment, null, t12);
  let { target: r21 } = e8;
  return r21 ? (0, import_react_dom3.createPortal)(import_react58.default.createElement(import_react58.default.Fragment, null, t12), r21) : null;
}
function j2({ data: t12, form: e8, disabled: r21, onReset: n13, overrides: F9 }) {
  let [i19, a25] = (0, import_react58.useState)(null), p6 = p();
  return (0, import_react58.useEffect)(() => {
    if (n13 && i19) return p6.addEventListener(i19, "reset", n13);
  }, [i19, e8, n13]), import_react58.default.createElement(c16, null, import_react58.default.createElement(C2, { setForm: a25, formId: e8 }), e2(t12).map(([s15, v5]) => import_react58.default.createElement(f4, { features: s4.Hidden, ...m2({ key: s15, as: "input", type: "hidden", hidden: true, readOnly: true, form: e8, disabled: r21, name: s15, value: v5, ...F9 }) })));
}
function C2({ setForm: t12, formId: e8 }) {
  return (0, import_react58.useEffect)(() => {
    if (e8) {
      let r21 = document.getElementById(e8);
      r21 && t12(r21);
    }
  }, [t12, e8]), e8 ? null : import_react58.default.createElement(f4, { features: s4.Hidden, as: "input", type: "hidden", hidden: true, readOnly: true, ref: (r21) => {
    if (!r21) return;
    let n13 = r21.closest("form");
    n13 && t12(n13);
  } });
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/id.js
var import_react59 = __toESM(require_react(), 1);
var e3 = (0, import_react59.createContext)(void 0);
function u4() {
  return (0, import_react59.useContext)(e3);
}
function f6({ id: t12, children: r21 }) {
  return import_react59.default.createElement(e3.Provider, { value: t12 }, r21);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/bugs.js
function r5(n13) {
  let e8 = n13.parentElement, l17 = null;
  for (; e8 && !(e8 instanceof HTMLFieldSetElement); ) e8 instanceof HTMLLegendElement && (l17 = e8), e8 = e8.parentElement;
  let t12 = (e8 == null ? void 0 : e8.getAttribute("disabled")) === "";
  return t12 && i4(l17) ? false : t12;
}
function i4(n13) {
  if (!n13) return false;
  let e8 = n13.previousElementSibling;
  for (; e8 !== null; ) {
    if (e8 instanceof HTMLLegendElement) return false;
    e8 = e8.previousElementSibling;
  }
  return true;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/description/description.js
var import_react61 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
var import_react60 = __toESM(require_react(), 1);
var u5 = Symbol();
function T2(t12, n13 = true) {
  return Object.assign(t12, { [u5]: n13 });
}
function y(...t12) {
  let n13 = (0, import_react60.useRef)(t12);
  (0, import_react60.useEffect)(() => {
    n13.current = t12;
  }, [t12]);
  let c64 = o5((e8) => {
    for (let o21 of n13.current) o21 != null && (typeof o21 == "function" ? o21(e8) : o21.current = e8);
  });
  return t12.every((e8) => e8 == null || (e8 == null ? void 0 : e8[u5])) ? void 0 : c64;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/description/description.js
var a5 = (0, import_react61.createContext)(null);
a5.displayName = "DescriptionContext";
function f7() {
  let r21 = (0, import_react61.useContext)(a5);
  if (r21 === null) {
    let e8 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(e8, f7), e8;
  }
  return r21;
}
function U2() {
  var r21, e8;
  return (e8 = (r21 = (0, import_react61.useContext)(a5)) == null ? void 0 : r21.value) != null ? e8 : void 0;
}
function w3() {
  let [r21, e8] = (0, import_react61.useState)([]);
  return [r21.length > 0 ? r21.join(" ") : void 0, (0, import_react61.useMemo)(() => function(t12) {
    let i19 = o5((n13) => (e8((s15) => [...s15, n13]), () => e8((s15) => {
      let o21 = s15.slice(), p6 = o21.indexOf(n13);
      return p6 !== -1 && o21.splice(p6, 1), o21;
    }))), l17 = (0, import_react61.useMemo)(() => ({ register: i19, slot: t12.slot, name: t12.name, props: t12.props, value: t12.value }), [i19, t12.slot, t12.name, t12.props, t12.value]);
    return import_react61.default.createElement(a5.Provider, { value: l17 }, t12.children);
  }, [e8])];
}
var S2 = "p";
function C3(r21, e8) {
  let d14 = (0, import_react57.useId)(), t12 = a3(), { id: i19 = `headlessui-description-${d14}`, ...l17 } = r21, n13 = f7(), s15 = y(e8);
  n(() => n13.register(i19), [i19, n13.register]);
  let o21 = t12 || false, p6 = (0, import_react61.useMemo)(() => ({ ...n13.slot, disabled: o21 }), [n13.slot, o21]), D8 = { ref: s15, ...n13.props, id: i19 };
  return L()({ ourProps: D8, theirProps: l17, slot: p6, defaultTag: S2, name: n13.name || "Description" });
}
var _2 = K(C3);
var H4 = Object.assign(_2, {});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/keyboard.js
var o9 = ((r21) => (r21.Space = " ", r21.Enter = "Enter", r21.Escape = "Escape", r21.Backspace = "Backspace", r21.Delete = "Delete", r21.ArrowLeft = "ArrowLeft", r21.ArrowUp = "ArrowUp", r21.ArrowRight = "ArrowRight", r21.ArrowDown = "ArrowDown", r21.Home = "Home", r21.End = "End", r21.PageUp = "PageUp", r21.PageDown = "PageDown", r21.Tab = "Tab", r21))(o9 || {});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/label/label.js
var import_react62 = __toESM(require_react(), 1);
var c18 = (0, import_react62.createContext)(null);
c18.displayName = "LabelContext";
function P5() {
  let r21 = (0, import_react62.useContext)(c18);
  if (r21 === null) {
    let l17 = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(l17, P5), l17;
  }
  return r21;
}
function I(r21) {
  var a25, e8, o21;
  let l17 = (e8 = (a25 = (0, import_react62.useContext)(c18)) == null ? void 0 : a25.value) != null ? e8 : void 0;
  return ((o21 = r21 == null ? void 0 : r21.length) != null ? o21 : 0) > 0 ? [l17, ...r21].filter(Boolean).join(" ") : l17;
}
function K2({ inherit: r21 = false } = {}) {
  let l17 = I(), [a25, e8] = (0, import_react62.useState)([]), o21 = r21 ? [l17, ...a25].filter(Boolean) : a25;
  return [o21.length > 0 ? o21.join(" ") : void 0, (0, import_react62.useMemo)(() => function(t12) {
    let s15 = o5((i19) => (e8((p6) => [...p6, i19]), () => e8((p6) => {
      let u19 = p6.slice(), d14 = u19.indexOf(i19);
      return d14 !== -1 && u19.splice(d14, 1), u19;
    }))), m12 = (0, import_react62.useMemo)(() => ({ register: s15, slot: t12.slot, name: t12.name, props: t12.props, value: t12.value }), [s15, t12.slot, t12.name, t12.props, t12.value]);
    return import_react62.default.createElement(c18.Provider, { value: m12 }, t12.children);
  }, [e8])];
}
var N = "label";
function G(r21, l17) {
  var y8;
  let a25 = (0, import_react57.useId)(), e8 = P5(), o21 = u4(), g8 = a3(), { id: t12 = `headlessui-label-${a25}`, htmlFor: s15 = o21 != null ? o21 : (y8 = e8.props) == null ? void 0 : y8.htmlFor, passive: m12 = false, ...i19 } = r21, p6 = y(l17);
  n(() => e8.register(t12), [t12, e8.register]);
  let u19 = o5((L7) => {
    let b11 = L7.currentTarget;
    if (b11 instanceof HTMLLabelElement && L7.preventDefault(), e8.props && "onClick" in e8.props && typeof e8.props.onClick == "function" && e8.props.onClick(L7), b11 instanceof HTMLLabelElement) {
      let n13 = document.getElementById(b11.htmlFor);
      if (n13) {
        let E15 = n13.getAttribute("disabled");
        if (E15 === "true" || E15 === "") return;
        let x11 = n13.getAttribute("aria-disabled");
        if (x11 === "true" || x11 === "") return;
        (n13 instanceof HTMLInputElement && (n13.type === "radio" || n13.type === "checkbox") || n13.role === "radio" || n13.role === "checkbox" || n13.role === "switch") && n13.click(), n13.focus({ preventScroll: true });
      }
    }
  }), d14 = g8 || false, C10 = (0, import_react62.useMemo)(() => ({ ...e8.slot, disabled: d14 }), [e8.slot, d14]), f22 = { ref: p6, ...e8.props, id: t12, htmlFor: s15, onClick: u19 };
  return m12 && ("onClick" in f22 && (delete f22.htmlFor, delete f22.onClick), "onClick" in i19 && delete i19.onClick), L()({ ourProps: f22, theirProps: i19, slot: C10, defaultTag: s15 ? N : "div", name: e8.name || "Label" });
}
var U3 = K(G);
var Q = Object.assign(U3, {});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/checkbox/checkbox.js
var de = "span";
function pe(T12, h11) {
  let C10 = (0, import_react57.useId)(), k5 = u4(), x11 = a3(), { id: g8 = k5 || `headlessui-checkbox-${C10}`, disabled: e8 = x11 || false, autoFocus: s15 = false, checked: E15, defaultChecked: v5, onChange: P7, name: d14, value: D8, form: R9, indeterminate: n13 = false, tabIndex: A8 = 0, ...F9 } = T12, r21 = l2(v5), [a25, t12] = T(E15, P7, r21 != null ? r21 : false), K4 = I(), _8 = U2(), H14 = p(), [p6, c64] = (0, import_react63.useState)(false), u19 = o5(() => {
    c64(true), t12 == null || t12(!a25), H14.nextFrame(() => {
      c64(false);
    });
  }), B5 = o5((o21) => {
    if (r5(o21.currentTarget)) return o21.preventDefault();
    o21.preventDefault(), u19();
  }), I7 = o5((o21) => {
    o21.key === o9.Space ? (o21.preventDefault(), u19()) : o21.key === o9.Enter && p2(o21.currentTarget);
  }), L7 = o5((o21) => o21.preventDefault()), { isFocusVisible: m12, focusProps: M11 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: s15 }), { isHovered: b11, hoverProps: U7 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), { pressed: f22, pressProps: O9 } = w({ disabled: e8 }), X6 = _({ ref: h11, id: g8, role: "checkbox", "aria-checked": n13 ? "mixed" : a25 ? "true" : "false", "aria-labelledby": K4, "aria-describedby": _8, "aria-disabled": e8 ? true : void 0, indeterminate: n13 ? "true" : void 0, tabIndex: e8 ? void 0 : A8, onKeyUp: e8 ? void 0 : I7, onKeyPress: e8 ? void 0 : L7, onClick: e8 ? void 0 : B5 }, M11, U7, O9), G8 = (0, import_react63.useMemo)(() => ({ checked: a25, disabled: e8, hover: b11, focus: m12, active: f22, indeterminate: n13, changing: p6, autofocus: s15 }), [a25, n13, e8, b11, m12, f22, p6, s15]), S10 = (0, import_react63.useCallback)(() => {
    if (r21 !== void 0) return t12 == null ? void 0 : t12(r21);
  }, [t12, r21]), W3 = L();
  return import_react63.default.createElement(import_react63.default.Fragment, null, d14 != null && import_react63.default.createElement(j2, { disabled: e8, data: { [d14]: D8 || "on" }, overrides: { type: "checkbox", checked: a25 }, form: R9, onReset: S10 }), W3({ ourProps: X6, theirProps: F9, slot: G8, defaultTag: de, name: "Checkbox" }));
}
var Fe = K(pe);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/close-button/close-button.js
var import_react65 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/close-provider.js
var import_react64 = __toESM(require_react(), 1);
var e4 = (0, import_react64.createContext)(() => {
});
function u7() {
  return (0, import_react64.useContext)(e4);
}
function C4({ value: t12, children: o21 }) {
  return import_react64.default.createElement(e4.Provider, { value: t12 }, o21);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/close-button/close-button.js
function l5(t12, e8) {
  let o21 = u7();
  return import_react65.default.createElement(H2, { ref: e8, ..._({ onClick: o21 }, t12) });
}
var y2 = K(l5);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var import_react92 = __toESM(require_react(), 1);
var import_react_dom7 = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-by-comparator.js
var import_react66 = __toESM(require_react(), 1);
function l6(e8, r21) {
  return e8 !== null && r21 !== null && typeof e8 == "object" && typeof r21 == "object" && "id" in e8 && "id" in r21 ? e8.id === r21.id : e8 === r21;
}
function u8(e8 = l6) {
  return (0, import_react66.useCallback)((r21, t12) => {
    if (typeof e8 == "string") {
      let o21 = e8;
      return (r21 == null ? void 0 : r21[o21]) === (t12 == null ? void 0 : t12[o21]);
    }
    return e8(r21, t12);
  }, [e8]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-element-size.js
var import_react67 = __toESM(require_react(), 1);
function f8(e8) {
  if (e8 === null) return { width: 0, height: 0 };
  let { width: t12, height: r21 } = e8.getBoundingClientRect();
  return { width: t12, height: r21 };
}
function d3(e8, t12 = false) {
  let [r21, u19] = (0, import_react67.useReducer)(() => ({}), {}), i19 = (0, import_react67.useMemo)(() => f8(e8), [e8, r21]);
  return n(() => {
    if (!e8) return;
    let n13 = new ResizeObserver(u19);
    return n13.observe(e8), () => {
      n13.disconnect();
    };
  }, [e8]), t12 ? { width: `${i19.width}px`, height: `${i19.height}px` } : i19;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-is-top-layer.js
var import_react69 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/default-map.js
var a6 = class extends Map {
  constructor(t12) {
    super();
    this.factory = t12;
  }
  get(t12) {
    let e8 = super.get(t12);
    return e8 === void 0 && (e8 = this.factory(t12), this.set(t12, e8)), e8;
  }
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/store.js
function a7(o21, r21) {
  let t12 = o21(), n13 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t12;
  }, subscribe(e8) {
    return n13.add(e8), () => n13.delete(e8);
  }, dispatch(e8, ...s15) {
    let i19 = r21[e8].call(t12, ...s15);
    i19 && (t12 = i19, n13.forEach((c64) => c64()));
  } };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-store.js
var import_react68 = __toESM(require_react(), 1);
function o11(t12) {
  return (0, import_react68.useSyncExternalStore)(t12.subscribe, t12.getSnapshot, t12.getSnapshot);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-is-top-layer.js
var p3 = new a6(() => a7(() => [], { ADD(r21) {
  return this.includes(r21) ? this : [...this, r21];
}, REMOVE(r21) {
  let e8 = this.indexOf(r21);
  if (e8 === -1) return this;
  let t12 = this.slice();
  return t12.splice(e8, 1), t12;
} }));
function x2(r21, e8) {
  let t12 = p3.get(e8), i19 = (0, import_react69.useId)(), h11 = o11(t12);
  if (n(() => {
    if (r21) return t12.dispatch("ADD", i19), () => t12.dispatch("REMOVE", i19);
  }, [t12, r21]), !r21) return false;
  let s15 = h11.indexOf(i19), o21 = h11.length;
  return s15 === -1 && (s15 = o21, o21 += 1), s15 === o21 - 1;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-inert-others.js
var f9 = /* @__PURE__ */ new Map();
var u9 = /* @__PURE__ */ new Map();
function h4(t12) {
  var e8;
  let r21 = (e8 = u9.get(t12)) != null ? e8 : 0;
  return u9.set(t12, r21 + 1), r21 !== 0 ? () => m5(t12) : (f9.set(t12, { "aria-hidden": t12.getAttribute("aria-hidden"), inert: t12.inert }), t12.setAttribute("aria-hidden", "true"), t12.inert = true, () => m5(t12));
}
function m5(t12) {
  var i19;
  let r21 = (i19 = u9.get(t12)) != null ? i19 : 1;
  if (r21 === 1 ? u9.delete(t12) : u9.set(t12, r21 - 1), r21 !== 1) return;
  let e8 = f9.get(t12);
  e8 && (e8["aria-hidden"] === null ? t12.removeAttribute("aria-hidden") : t12.setAttribute("aria-hidden", e8["aria-hidden"]), t12.inert = e8.inert, f9.delete(t12));
}
function y3(t12, { allowed: r21, disallowed: e8 } = {}) {
  let i19 = x2(t12, "inert-others");
  n(() => {
    var d14, c64;
    if (!i19) return;
    let a25 = o3();
    for (let n13 of (d14 = e8 == null ? void 0 : e8()) != null ? d14 : []) n13 && a25.add(h4(n13));
    let s15 = (c64 = r21 == null ? void 0 : r21()) != null ? c64 : [];
    for (let n13 of s15) {
      if (!n13) continue;
      let l17 = o2(n13);
      if (!l17) continue;
      let o21 = n13.parentElement;
      for (; o21 && o21 !== l17.body; ) {
        for (let p6 of o21.children) s15.some((E15) => p6.contains(E15)) || a25.add(h4(p6));
        o21 = o21.parentElement;
      }
    }
    return a25.dispose;
  }, [i19, r21, e8]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-on-disappear.js
var import_react70 = __toESM(require_react(), 1);
function m6(s15, n13, l17) {
  let i19 = s3((t12) => {
    let e8 = t12.getBoundingClientRect();
    e8.x === 0 && e8.y === 0 && e8.width === 0 && e8.height === 0 && l17();
  });
  (0, import_react70.useEffect)(() => {
    if (!s15) return;
    let t12 = n13 === null ? null : n13 instanceof HTMLElement ? n13 : n13.current;
    if (!t12) return;
    let e8 = o3();
    if (typeof ResizeObserver != "undefined") {
      let r21 = new ResizeObserver(() => i19.current(t12));
      r21.observe(t12), e8.add(() => r21.disconnect());
    }
    if (typeof IntersectionObserver != "undefined") {
      let r21 = new IntersectionObserver(() => i19.current(t12));
      r21.observe(t12), e8.add(() => r21.disconnect());
    }
    return () => e8.dispose();
  }, [n13, i19, s15]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var import_react73 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/focus-management.js
var f10 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e8) => `${e8}:not([tabindex='-1'])`).join(",");
var p4 = ["[data-autofocus]"].map((e8) => `${e8}:not([tabindex='-1'])`).join(",");
var F2 = ((n13) => (n13[n13.First = 1] = "First", n13[n13.Previous = 2] = "Previous", n13[n13.Next = 4] = "Next", n13[n13.Last = 8] = "Last", n13[n13.WrapAround = 16] = "WrapAround", n13[n13.NoScroll = 32] = "NoScroll", n13[n13.AutoFocus = 64] = "AutoFocus", n13))(F2 || {});
var T5 = ((o21) => (o21[o21.Error = 0] = "Error", o21[o21.Overflow = 1] = "Overflow", o21[o21.Success = 2] = "Success", o21[o21.Underflow = 3] = "Underflow", o21))(T5 || {});
var y4 = ((t12) => (t12[t12.Previous = -1] = "Previous", t12[t12.Next = 1] = "Next", t12))(y4 || {});
function b2(e8 = document.body) {
  return e8 == null ? [] : Array.from(e8.querySelectorAll(f10)).sort((r21, t12) => Math.sign((r21.tabIndex || Number.MAX_SAFE_INTEGER) - (t12.tabIndex || Number.MAX_SAFE_INTEGER)));
}
function S3(e8 = document.body) {
  return e8 == null ? [] : Array.from(e8.querySelectorAll(p4)).sort((r21, t12) => Math.sign((r21.tabIndex || Number.MAX_SAFE_INTEGER) - (t12.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var h5 = ((t12) => (t12[t12.Strict = 0] = "Strict", t12[t12.Loose = 1] = "Loose", t12))(h5 || {});
function A2(e8, r21 = 0) {
  var t12;
  return e8 === ((t12 = o2(e8)) == null ? void 0 : t12.body) ? false : u(r21, { [0]() {
    return e8.matches(f10);
  }, [1]() {
    let u19 = e8;
    for (; u19 !== null; ) {
      if (u19.matches(f10)) return true;
      u19 = u19.parentElement;
    }
    return false;
  } });
}
function G2(e8) {
  let r21 = o2(e8);
  o3().nextFrame(() => {
    r21 && !A2(r21.activeElement, 0) && I2(e8);
  });
}
var H5 = ((t12) => (t12[t12.Keyboard = 0] = "Keyboard", t12[t12.Mouse = 1] = "Mouse", t12))(H5 || {});
typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("keydown", (e8) => {
  e8.metaKey || e8.altKey || e8.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true), document.addEventListener("click", (e8) => {
  e8.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e8.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true));
function I2(e8) {
  e8 == null || e8.focus({ preventScroll: true });
}
var w5 = ["textarea", "input"].join(",");
function O2(e8) {
  var r21, t12;
  return (t12 = (r21 = e8 == null ? void 0 : e8.matches) == null ? void 0 : r21.call(e8, w5)) != null ? t12 : false;
}
function _3(e8, r21 = (t12) => t12) {
  return e8.slice().sort((t12, u19) => {
    let o21 = r21(t12), c64 = r21(u19);
    if (o21 === null || c64 === null) return 0;
    let l17 = o21.compareDocumentPosition(c64);
    return l17 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : l17 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function j3(e8, r21) {
  return P6(b2(), r21, { relativeTo: e8 });
}
function P6(e8, r21, { sorted: t12 = true, relativeTo: u19 = null, skipElements: o21 = [] } = {}) {
  let c64 = Array.isArray(e8) ? e8.length > 0 ? e8[0].ownerDocument : document : e8.ownerDocument, l17 = Array.isArray(e8) ? t12 ? _3(e8) : e8 : r21 & 64 ? S3(e8) : b2(e8);
  o21.length > 0 && l17.length > 1 && (l17 = l17.filter((s15) => !o21.some((a25) => a25 != null && "current" in a25 ? (a25 == null ? void 0 : a25.current) === s15 : a25 === s15))), u19 = u19 != null ? u19 : c64.activeElement;
  let n13 = (() => {
    if (r21 & 5) return 1;
    if (r21 & 10) return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x11 = (() => {
    if (r21 & 1) return 0;
    if (r21 & 2) return Math.max(0, l17.indexOf(u19)) - 1;
    if (r21 & 4) return Math.max(0, l17.indexOf(u19)) + 1;
    if (r21 & 8) return l17.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), M11 = r21 & 32 ? { preventScroll: true } : {}, m12 = 0, d14 = l17.length, i19;
  do {
    if (m12 >= d14 || m12 + d14 <= 0) return 0;
    let s15 = x11 + m12;
    if (r21 & 16) s15 = (s15 + d14) % d14;
    else {
      if (s15 < 0) return 3;
      if (s15 >= d14) return 1;
    }
    i19 = l17[s15], i19 == null || i19.focus(M11), m12 += n13;
  } while (i19 !== c64.activeElement);
  return r21 & 6 && O2(i19) && i19.select(), 2;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/platform.js
function t4() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i8() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n8() {
  return t4() || i8();
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-document-event.js
var import_react71 = __toESM(require_react(), 1);
function i9(t12, e8, o21, n13) {
  let u19 = s3(o21);
  (0, import_react71.useEffect)(() => {
    if (!t12) return;
    function r21(m12) {
      u19.current(m12);
    }
    return document.addEventListener(e8, r21, n13), () => document.removeEventListener(e8, r21, n13);
  }, [t12, e8, n13]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-window-event.js
var import_react72 = __toESM(require_react(), 1);
function s5(t12, e8, o21, n13) {
  let i19 = s3(o21);
  (0, import_react72.useEffect)(() => {
    if (!t12) return;
    function r21(d14) {
      i19.current(d14);
    }
    return window.addEventListener(e8, r21, n13), () => window.removeEventListener(e8, r21, n13);
  }, [t12, e8, n13]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var E4 = 30;
function R3(p6, f22, C10) {
  let u19 = x2(p6, "outside-click"), m12 = s3(C10), s15 = (0, import_react73.useCallback)(function(e8, n13) {
    if (e8.defaultPrevented) return;
    let r21 = n13(e8);
    if (r21 === null || !r21.getRootNode().contains(r21) || !r21.isConnected) return;
    let h11 = function l17(o21) {
      return typeof o21 == "function" ? l17(o21()) : Array.isArray(o21) || o21 instanceof Set ? o21 : [o21];
    }(f22);
    for (let l17 of h11) if (l17 !== null && (l17.contains(r21) || e8.composed && e8.composedPath().includes(l17))) return;
    return !A2(r21, h5.Loose) && r21.tabIndex !== -1 && e8.preventDefault(), m12.current(e8, r21);
  }, [m12, f22]), i19 = (0, import_react73.useRef)(null);
  i9(u19, "pointerdown", (t12) => {
    var e8, n13;
    i19.current = ((n13 = (e8 = t12.composedPath) == null ? void 0 : e8.call(t12)) == null ? void 0 : n13[0]) || t12.target;
  }, true), i9(u19, "mousedown", (t12) => {
    var e8, n13;
    i19.current = ((n13 = (e8 = t12.composedPath) == null ? void 0 : e8.call(t12)) == null ? void 0 : n13[0]) || t12.target;
  }, true), i9(u19, "click", (t12) => {
    n8() || i19.current && (s15(t12, () => i19.current), i19.current = null);
  }, true);
  let a25 = (0, import_react73.useRef)({ x: 0, y: 0 });
  i9(u19, "touchstart", (t12) => {
    a25.current.x = t12.touches[0].clientX, a25.current.y = t12.touches[0].clientY;
  }, true), i9(u19, "touchend", (t12) => {
    let e8 = { x: t12.changedTouches[0].clientX, y: t12.changedTouches[0].clientY };
    if (!(Math.abs(e8.x - a25.current.x) >= E4 || Math.abs(e8.y - a25.current.y) >= E4)) return s15(t12, () => t12.target instanceof HTMLElement ? t12.target : null);
  }, true), s5(u19, "blur", (t12) => s15(t12, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), true);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-owner.js
var import_react74 = __toESM(require_react(), 1);
function n9(...e8) {
  return (0, import_react74.useMemo)(() => o2(...e8), [...e8]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-refocusable-input.js
var import_react76 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-event-listener.js
var import_react75 = __toESM(require_react(), 1);
function E5(n13, e8, a25, t12) {
  let i19 = s3(a25);
  (0, import_react75.useEffect)(() => {
    n13 = n13 != null ? n13 : window;
    function r21(o21) {
      i19.current(o21);
    }
    return n13.addEventListener(e8, r21, t12), () => n13.removeEventListener(e8, r21, t12);
  }, [n13, e8, t12]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-refocusable-input.js
function i10(e8) {
  let n13 = (0, import_react76.useRef)({ value: "", selectionStart: null, selectionEnd: null });
  return E5(e8, "blur", (l17) => {
    let t12 = l17.target;
    t12 instanceof HTMLInputElement && (n13.current = { value: t12.value, selectionStart: t12.selectionStart, selectionEnd: t12.selectionEnd });
  }), o5(() => {
    if (document.activeElement !== e8 && e8 instanceof HTMLInputElement && e8.isConnected) {
      if (e8.focus({ preventScroll: true }), e8.value !== n13.current.value) e8.setSelectionRange(e8.value.length, e8.value.length);
      else {
        let { selectionStart: l17, selectionEnd: t12 } = n13.current;
        l17 !== null && t12 !== null && e8.setSelectionRange(l17, t12);
      }
      n13.current = { value: "", selectionStart: null, selectionEnd: null };
    }
  });
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
var import_react77 = __toESM(require_react(), 1);
function e6(t12, u19) {
  return (0, import_react77.useMemo)(() => {
    var n13;
    if (t12.type) return t12.type;
    let r21 = (n13 = t12.as) != null ? n13 : "button";
    if (typeof r21 == "string" && r21.toLowerCase() === "button" || (u19 == null ? void 0 : u19.tagName) === "BUTTON" && !u19.hasAttribute("type")) return "button";
  }, [t12.type, t12.as, u19]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function d6() {
  let r21;
  return { before({ doc: e8 }) {
    var l17;
    let o21 = e8.documentElement, t12 = (l17 = e8.defaultView) != null ? l17 : window;
    r21 = Math.max(0, t12.innerWidth - o21.clientWidth);
  }, after({ doc: e8, d: o21 }) {
    let t12 = e8.documentElement, l17 = Math.max(0, t12.clientWidth - t12.offsetWidth), n13 = Math.max(0, r21 - l17);
    o21.style(t12, "paddingRight", `${n13}px`);
  } };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function d7() {
  return t4() ? { before({ doc: r21, d: n13, meta: c64 }) {
    function o21(a25) {
      return c64.containers.flatMap((l17) => l17()).some((l17) => l17.contains(a25));
    }
    n13.microTask(() => {
      var s15;
      if (window.getComputedStyle(r21.documentElement).scrollBehavior !== "auto") {
        let t12 = o3();
        t12.style(r21.documentElement, "scrollBehavior", "auto"), n13.add(() => n13.microTask(() => t12.dispose()));
      }
      let a25 = (s15 = window.scrollY) != null ? s15 : window.pageYOffset, l17 = null;
      n13.addEventListener(r21, "click", (t12) => {
        if (t12.target instanceof HTMLElement) try {
          let e8 = t12.target.closest("a");
          if (!e8) return;
          let { hash: f22 } = new URL(e8.href), i19 = r21.querySelector(f22);
          i19 && !o21(i19) && (l17 = i19);
        } catch {
        }
      }, true), n13.addEventListener(r21, "touchstart", (t12) => {
        if (t12.target instanceof HTMLElement) if (o21(t12.target)) {
          let e8 = t12.target;
          for (; e8.parentElement && o21(e8.parentElement); ) e8 = e8.parentElement;
          n13.style(e8, "overscrollBehavior", "contain");
        } else n13.style(t12.target, "touchAction", "none");
      }), n13.addEventListener(r21, "touchmove", (t12) => {
        if (t12.target instanceof HTMLElement) {
          if (t12.target.tagName === "INPUT") return;
          if (o21(t12.target)) {
            let e8 = t12.target;
            for (; e8.parentElement && e8.dataset.headlessuiPortal !== "" && !(e8.scrollHeight > e8.clientHeight || e8.scrollWidth > e8.clientWidth); ) e8 = e8.parentElement;
            e8.dataset.headlessuiPortal === "" && t12.preventDefault();
          } else t12.preventDefault();
        }
      }, { passive: false }), n13.add(() => {
        var e8;
        let t12 = (e8 = window.scrollY) != null ? e8 : window.pageYOffset;
        a25 !== t12 && window.scrollTo(0, a25), l17 && l17.isConnected && (l17.scrollIntoView({ block: "nearest" }), l17 = null);
      });
    });
  } } : {};
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function r8() {
  return { before({ doc: e8, d: o21 }) {
    o21.style(e8.documentElement, "overflow", "hidden");
  } };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m7(e8) {
  let n13 = {};
  for (let t12 of e8) Object.assign(n13, t12(n13));
  return n13;
}
var a10 = a7(() => /* @__PURE__ */ new Map(), { PUSH(e8, n13) {
  var o21;
  let t12 = (o21 = this.get(e8)) != null ? o21 : { doc: e8, count: 0, d: o3(), meta: /* @__PURE__ */ new Set() };
  return t12.count++, t12.meta.add(n13), this.set(e8, t12), this;
}, POP(e8, n13) {
  let t12 = this.get(e8);
  return t12 && (t12.count--, t12.meta.delete(n13)), this;
}, SCROLL_PREVENT({ doc: e8, d: n13, meta: t12 }) {
  let o21 = { doc: e8, d: n13, meta: m7(t12) }, c64 = [d7(), d6(), r8()];
  c64.forEach(({ before: r21 }) => r21 == null ? void 0 : r21(o21)), c64.forEach(({ after: r21 }) => r21 == null ? void 0 : r21(o21));
}, SCROLL_ALLOW({ d: e8 }) {
  e8.dispose();
}, TEARDOWN({ doc: e8 }) {
  this.delete(e8);
} });
a10.subscribe(() => {
  let e8 = a10.getSnapshot(), n13 = /* @__PURE__ */ new Map();
  for (let [t12] of e8) n13.set(t12, t12.documentElement.style.overflow);
  for (let t12 of e8.values()) {
    let o21 = n13.get(t12.doc) === "hidden", c64 = t12.count !== 0;
    (c64 && !o21 || !c64 && o21) && a10.dispatch(t12.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t12), t12.count === 0 && a10.dispatch("TEARDOWN", t12);
  }
});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function a11(r21, e8, n13 = () => ({ containers: [] })) {
  let f22 = o11(a10), o21 = e8 ? f22.get(e8) : void 0, i19 = o21 ? o21.count > 0 : false;
  return n(() => {
    if (!(!e8 || !r21)) return a10.dispatch("PUSH", e8, n13), () => a10.dispatch("POP", e8, n13);
  }, [r21, e8]), i19;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-scroll-lock.js
function f11(e8, c64, n13 = () => [document.body]) {
  let r21 = x2(e8, "scroll-lock");
  a11(r21, c64, (t12) => {
    var o21;
    return { containers: [...(o21 = t12.containers) != null ? o21 : [], n13] };
  });
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
var import_react78 = __toESM(require_react(), 1);
function t6(e8) {
  return [e8.screenX, e8.screenY];
}
function u10() {
  let e8 = (0, import_react78.useRef)([-1, -1]);
  return { wasMoved(r21) {
    let n13 = t6(r21);
    return e8.current[0] === n13[0] && e8.current[1] === n13[1] ? false : (e8.current = n13, true);
  }, update(r21) {
    e8.current = t6(r21);
  } };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-transition.js
var import_react80 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-flags.js
var import_react79 = __toESM(require_react(), 1);
function c20(u19 = 0) {
  let [t12, l17] = (0, import_react79.useState)(u19), g8 = (0, import_react79.useCallback)((e8) => l17(e8), [t12]), s15 = (0, import_react79.useCallback)((e8) => l17((a25) => a25 | e8), [t12]), m12 = (0, import_react79.useCallback)((e8) => (t12 & e8) === e8, [t12]), n13 = (0, import_react79.useCallback)((e8) => l17((a25) => a25 & ~e8), [l17]), F9 = (0, import_react79.useCallback)((e8) => l17((a25) => a25 ^ e8), [l17]);
  return { flags: t12, setFlag: g8, addFlag: s15, hasFlag: m12, removeFlag: n13, toggleFlag: F9 };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-transition.js
var T7;
var b4;
typeof process != "undefined" && typeof globalThis != "undefined" && typeof Element != "undefined" && ((T7 = process == null ? void 0 : process.env) == null ? void 0 : T7["NODE_ENV"]) === "test" && typeof ((b4 = Element == null ? void 0 : Element.prototype) == null ? void 0 : b4.getAnimations) == "undefined" && (Element.prototype.getAnimations = function() {
  return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), [];
});
var L2 = ((r21) => (r21[r21.None = 0] = "None", r21[r21.Closed = 1] = "Closed", r21[r21.Enter = 2] = "Enter", r21[r21.Leave = 4] = "Leave", r21))(L2 || {});
function R4(t12) {
  let n13 = {};
  for (let e8 in t12) t12[e8] === true && (n13[`data-${e8}`] = "");
  return n13;
}
function x3(t12, n13, e8, i19) {
  let [r21, o21] = (0, import_react80.useState)(e8), { hasFlag: s15, addFlag: a25, removeFlag: l17 } = c20(t12 && r21 ? 3 : 0), u19 = (0, import_react80.useRef)(false), f22 = (0, import_react80.useRef)(false), E15 = p();
  return n(() => {
    var d14;
    if (t12) {
      if (e8 && o21(true), !n13) {
        e8 && a25(3);
        return;
      }
      return (d14 = i19 == null ? void 0 : i19.start) == null || d14.call(i19, e8), C5(n13, { inFlight: u19, prepare() {
        f22.current ? f22.current = false : f22.current = u19.current, u19.current = true, !f22.current && (e8 ? (a25(3), l17(4)) : (a25(4), l17(2)));
      }, run() {
        f22.current ? e8 ? (l17(3), a25(4)) : (l17(4), a25(3)) : e8 ? l17(1) : a25(1);
      }, done() {
        var p6;
        f22.current && typeof n13.getAnimations == "function" && n13.getAnimations().length > 0 || (u19.current = false, l17(7), e8 || o21(false), (p6 = i19 == null ? void 0 : i19.end) == null || p6.call(i19, e8));
      } });
    }
  }, [t12, e8, n13, E15]), t12 ? [r21, { closed: s15(1), enter: s15(2), leave: s15(4), transition: s15(2) || s15(4) }] : [e8, { closed: void 0, enter: void 0, leave: void 0, transition: void 0 }];
}
function C5(t12, { prepare: n13, run: e8, done: i19, inFlight: r21 }) {
  let o21 = o3();
  return j4(t12, { prepare: n13, inFlight: r21 }), o21.nextFrame(() => {
    e8(), o21.requestAnimationFrame(() => {
      o21.add(M(t12, i19));
    });
  }), o21.dispose;
}
function M(t12, n13) {
  var o21, s15;
  let e8 = o3();
  if (!t12) return e8.dispose;
  let i19 = false;
  e8.add(() => {
    i19 = true;
  });
  let r21 = (s15 = (o21 = t12.getAnimations) == null ? void 0 : o21.call(t12).filter((a25) => a25 instanceof CSSTransition)) != null ? s15 : [];
  return r21.length === 0 ? (n13(), e8.dispose) : (Promise.allSettled(r21.map((a25) => a25.finished)).then(() => {
    i19 || n13();
  }), e8.dispose);
}
function j4(t12, { inFlight: n13, prepare: e8 }) {
  if (n13 != null && n13.current) {
    e8();
    return;
  }
  let i19 = t12.style.transition;
  t12.style.transition = "none", e8(), t12.offsetHeight, t12.style.transition = i19;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
var import_react81 = __toESM(require_react(), 1);
function F3(c64, { container: e8, accept: t12, walk: r21 }) {
  let o21 = (0, import_react81.useRef)(t12), l17 = (0, import_react81.useRef)(r21);
  (0, import_react81.useEffect)(() => {
    o21.current = t12, l17.current = r21;
  }, [t12, r21]), n(() => {
    if (!e8 || !c64) return;
    let n13 = o2(e8);
    if (!n13) return;
    let f22 = o21.current, p6 = l17.current, i19 = Object.assign((m12) => f22(m12), { acceptNode: f22 }), u19 = n13.createTreeWalker(e8, NodeFilter.SHOW_ELEMENT, i19, false);
    for (; u19.nextNode(); ) p6(u19.currentNode);
  }, [e8, c64, o21, l17]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-watch.js
var import_react82 = __toESM(require_react(), 1);
function m8(u19, t12) {
  let e8 = (0, import_react82.useRef)([]), r21 = o5(u19);
  (0, import_react82.useEffect)(() => {
    let o21 = [...e8.current];
    for (let [a25, l17] of t12.entries()) if (e8.current[a25] !== l17) {
      let n13 = r21(t12, o21);
      return e8.current = t12, n13;
    }
  }, [r21, ...t12]);
}

// node_modules/.pnpm/@floating-ui+react@0.26.28_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.mjs
var React32 = __toESM(require_react(), 1);
var import_react83 = __toESM(require_react(), 1);

// node_modules/.pnpm/@floating-ui+react@0.26.28_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs
function getPlatform() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.platform) {
    return uaData.platform;
  }
  return navigator.platform;
}
function getUserAgent() {
  const uaData = navigator.userAgentData;
  if (uaData && Array.isArray(uaData.brands)) {
    return uaData.brands.map((_ref) => {
      let {
        brand,
        version
      } = _ref;
      return brand + "/" + version;
    }).join(" ");
  }
  return navigator.userAgent;
}
function isSafari() {
  return /apple/i.test(navigator.vendor);
}
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}

// node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js
var candidateSelectors = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"];
var candidateSelector = candidateSelectors.join(",");
var NoElement = typeof Element === "undefined";
var matches = NoElement ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function(element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function(element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};
var focusableCandidateSelector = candidateSelectors.concat("iframe").join(",");

// node_modules/.pnpm/@floating-ui+react@0.26.28_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@floating-ui/react/dist/floating-ui.react.mjs
var ReactDOM = __toESM(require_react_dom(), 1);
function useMergeRefs(refs) {
  return React32.useMemo(() => {
    if (refs.every((ref) => ref == null)) {
      return null;
    }
    return (value) => {
      refs.forEach((ref) => {
        if (typeof ref === "function") {
          ref(value);
        } else if (ref != null) {
          ref.current = value;
        }
      });
    };
  }, refs);
}
var SafeReact = {
  ...React32
};
var useInsertionEffect = SafeReact.useInsertionEffect;
var useSafeInsertionEffect = useInsertionEffect || ((fn) => fn());
function useEffectEvent(callback) {
  const ref = React32.useRef(() => {
    if (true) {
      throw new Error("Cannot call an event handler while rendering.");
    }
  });
  useSafeInsertionEffect(() => {
    ref.current = callback;
  });
  return React32.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return ref.current == null ? void 0 : ref.current(...args);
  }, []);
}
var ARROW_UP = "ArrowUp";
var ARROW_DOWN = "ArrowDown";
var ARROW_LEFT = "ArrowLeft";
var ARROW_RIGHT = "ArrowRight";
function isDifferentRow(index2, cols, prevRow) {
  return Math.floor(index2 / cols) !== prevRow;
}
function isIndexOutOfBounds(listRef, index2) {
  return index2 < 0 || index2 >= listRef.current.length;
}
function getMinIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    disabledIndices
  });
}
function getMaxIndex(listRef, disabledIndices) {
  return findNonDisabledIndex(listRef, {
    decrement: true,
    startingIndex: listRef.current.length,
    disabledIndices
  });
}
function findNonDisabledIndex(listRef, _temp4) {
  let {
    startingIndex = -1,
    decrement = false,
    disabledIndices,
    amount = 1
  } = _temp4 === void 0 ? {} : _temp4;
  const list = listRef.current;
  let index2 = startingIndex;
  do {
    index2 += decrement ? -amount : amount;
  } while (index2 >= 0 && index2 <= list.length - 1 && isDisabled(list, index2, disabledIndices));
  return index2;
}
function getGridNavigatedIndex(elementsRef, _ref) {
  let {
    event,
    orientation,
    loop,
    rtl,
    cols,
    disabledIndices,
    minIndex,
    maxIndex,
    prevIndex,
    stopEvent: stop = false
  } = _ref;
  let nextIndex = prevIndex;
  if (event.key === ARROW_UP) {
    stop && stopEvent(event);
    if (prevIndex === -1) {
      nextIndex = maxIndex;
    } else {
      nextIndex = findNonDisabledIndex(elementsRef, {
        startingIndex: nextIndex,
        amount: cols,
        decrement: true,
        disabledIndices
      });
      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {
        const col = prevIndex % cols;
        const maxCol = maxIndex % cols;
        const offset2 = maxIndex - (maxCol - col);
        if (maxCol === col) {
          nextIndex = maxIndex;
        } else {
          nextIndex = maxCol > col ? offset2 : offset2 - cols;
        }
      }
    }
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      nextIndex = prevIndex;
    }
  }
  if (event.key === ARROW_DOWN) {
    stop && stopEvent(event);
    if (prevIndex === -1) {
      nextIndex = minIndex;
    } else {
      nextIndex = findNonDisabledIndex(elementsRef, {
        startingIndex: prevIndex,
        amount: cols,
        disabledIndices
      });
      if (loop && prevIndex + cols > maxIndex) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex % cols - cols,
          amount: cols,
          disabledIndices
        });
      }
    }
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      nextIndex = prevIndex;
    }
  }
  if (orientation === "both") {
    const prevRow = floor(prevIndex / cols);
    if (event.key === (rtl ? ARROW_LEFT : ARROW_RIGHT)) {
      stop && stopEvent(event);
      if (prevIndex % cols !== cols - 1) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex,
          disabledIndices
        });
        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {
          nextIndex = findNonDisabledIndex(elementsRef, {
            startingIndex: prevIndex - prevIndex % cols - 1,
            disabledIndices
          });
        }
      } else if (loop) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex - prevIndex % cols - 1,
          disabledIndices
        });
      }
      if (isDifferentRow(nextIndex, cols, prevRow)) {
        nextIndex = prevIndex;
      }
    }
    if (event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT)) {
      stop && stopEvent(event);
      if (prevIndex % cols !== 0) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex,
          decrement: true,
          disabledIndices
        });
        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {
          nextIndex = findNonDisabledIndex(elementsRef, {
            startingIndex: prevIndex + (cols - prevIndex % cols),
            decrement: true,
            disabledIndices
          });
        }
      } else if (loop) {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex + (cols - prevIndex % cols),
          decrement: true,
          disabledIndices
        });
      }
      if (isDifferentRow(nextIndex, cols, prevRow)) {
        nextIndex = prevIndex;
      }
    }
    const lastRow = floor(maxIndex / cols) === prevRow;
    if (isIndexOutOfBounds(elementsRef, nextIndex)) {
      if (loop && lastRow) {
        nextIndex = event.key === (rtl ? ARROW_RIGHT : ARROW_LEFT) ? maxIndex : findNonDisabledIndex(elementsRef, {
          startingIndex: prevIndex - prevIndex % cols - 1,
          disabledIndices
        });
      } else {
        nextIndex = prevIndex;
      }
    }
  }
  return nextIndex;
}
function buildCellMap(sizes, cols, dense) {
  const cellMap = [];
  let startIndex = 0;
  sizes.forEach((_ref2, index2) => {
    let {
      width,
      height
    } = _ref2;
    if (width > cols) {
      if (true) {
        throw new Error("[Floating UI]: Invalid grid - item width at index " + index2 + " is greater than grid columns");
      }
    }
    let itemPlaced = false;
    if (dense) {
      startIndex = 0;
    }
    while (!itemPlaced) {
      const targetCells = [];
      for (let i19 = 0; i19 < width; i19++) {
        for (let j8 = 0; j8 < height; j8++) {
          targetCells.push(startIndex + i19 + j8 * cols);
        }
      }
      if (startIndex % cols + width <= cols && targetCells.every((cell) => cellMap[cell] == null)) {
        targetCells.forEach((cell) => {
          cellMap[cell] = index2;
        });
        itemPlaced = true;
      } else {
        startIndex++;
      }
    }
  });
  return [...cellMap];
}
function getCellIndexOfCorner(index2, sizes, cellMap, cols, corner) {
  if (index2 === -1) return -1;
  const firstCellIndex = cellMap.indexOf(index2);
  const sizeItem = sizes[index2];
  switch (corner) {
    case "tl":
      return firstCellIndex;
    case "tr":
      if (!sizeItem) {
        return firstCellIndex;
      }
      return firstCellIndex + sizeItem.width - 1;
    case "bl":
      if (!sizeItem) {
        return firstCellIndex;
      }
      return firstCellIndex + (sizeItem.height - 1) * cols;
    case "br":
      return cellMap.lastIndexOf(index2);
  }
}
function getCellIndices(indices, cellMap) {
  return cellMap.flatMap((index2, cellIndex) => indices.includes(index2) ? [cellIndex] : []);
}
function isDisabled(list, index2, disabledIndices) {
  if (disabledIndices) {
    return disabledIndices.includes(index2);
  }
  const element = list[index2];
  return element == null || element.hasAttribute("disabled") || element.getAttribute("aria-disabled") === "true";
}
var index = typeof document !== "undefined" ? import_react83.useLayoutEffect : import_react83.useEffect;
function sortByDocumentPosition(a25, b11) {
  const position = a25.compareDocumentPosition(b11);
  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {
    return -1;
  }
  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {
    return 1;
  }
  return 0;
}
function areMapsEqual(map1, map2) {
  if (map1.size !== map2.size) {
    return false;
  }
  for (const [key, value] of map1.entries()) {
    if (value !== map2.get(key)) {
      return false;
    }
  }
  return true;
}
var FloatingListContext = React32.createContext({
  register: () => {
  },
  unregister: () => {
  },
  map: /* @__PURE__ */ new Map(),
  elementsRef: {
    current: []
  }
});
function FloatingList(props) {
  const {
    children,
    elementsRef,
    labelsRef
  } = props;
  const [map, setMap] = React32.useState(() => /* @__PURE__ */ new Map());
  const register = React32.useCallback((node) => {
    setMap((prevMap) => new Map(prevMap).set(node, null));
  }, []);
  const unregister = React32.useCallback((node) => {
    setMap((prevMap) => {
      const map2 = new Map(prevMap);
      map2.delete(node);
      return map2;
    });
  }, []);
  index(() => {
    const newMap = new Map(map);
    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);
    nodes.forEach((node, index2) => {
      newMap.set(node, index2);
    });
    if (!areMapsEqual(map, newMap)) {
      setMap(newMap);
    }
  }, [map]);
  return React32.createElement(FloatingListContext.Provider, {
    value: React32.useMemo(() => ({
      register,
      unregister,
      map,
      elementsRef,
      labelsRef
    }), [register, unregister, map, elementsRef, labelsRef])
  }, children);
}
function useListItem(props) {
  if (props === void 0) {
    props = {};
  }
  const {
    label
  } = props;
  const {
    register,
    unregister,
    map,
    elementsRef,
    labelsRef
  } = React32.useContext(FloatingListContext);
  const [index$1, setIndex] = React32.useState(null);
  const componentRef = React32.useRef(null);
  const ref = React32.useCallback((node) => {
    componentRef.current = node;
    if (index$1 !== null) {
      elementsRef.current[index$1] = node;
      if (labelsRef) {
        var _node$textContent;
        const isLabelDefined = label !== void 0;
        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;
      }
    }
  }, [index$1, elementsRef, labelsRef, label]);
  index(() => {
    const node = componentRef.current;
    if (node) {
      register(node);
      return () => {
        unregister(node);
      };
    }
  }, [register, unregister]);
  index(() => {
    const index2 = componentRef.current ? map.get(componentRef.current) : null;
    if (index2 != null) {
      setIndex(index2);
    }
  }, [map]);
  return React32.useMemo(() => ({
    ref,
    index: index$1 == null ? -1 : index$1
  }), [index$1, ref]);
}
function renderJsx(render, computedProps) {
  if (typeof render === "function") {
    return render(computedProps);
  }
  if (render) {
    return React32.cloneElement(render, computedProps);
  }
  return React32.createElement("div", computedProps);
}
var CompositeContext = React32.createContext({
  activeIndex: 0,
  onNavigate: () => {
  }
});
var horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];
var verticalKeys = [ARROW_UP, ARROW_DOWN];
var allKeys = [...horizontalKeys, ...verticalKeys];
var Composite = React32.forwardRef(function Composite2(props, forwardedRef) {
  const {
    render,
    orientation = "both",
    loop = true,
    rtl = false,
    cols = 1,
    disabledIndices,
    activeIndex: externalActiveIndex,
    onNavigate: externalSetActiveIndex,
    itemSizes,
    dense = false,
    ...domProps
  } = props;
  const [internalActiveIndex, internalSetActiveIndex] = React32.useState(0);
  const activeIndex = externalActiveIndex != null ? externalActiveIndex : internalActiveIndex;
  const onNavigate = useEffectEvent(externalSetActiveIndex != null ? externalSetActiveIndex : internalSetActiveIndex);
  const elementsRef = React32.useRef([]);
  const renderElementProps = render && typeof render !== "function" ? render.props : {};
  const contextValue = React32.useMemo(() => ({
    activeIndex,
    onNavigate
  }), [activeIndex, onNavigate]);
  const isGrid = cols > 1;
  function handleKeyDown(event) {
    if (!allKeys.includes(event.key)) return;
    let nextIndex = activeIndex;
    const minIndex = getMinIndex(elementsRef, disabledIndices);
    const maxIndex = getMaxIndex(elementsRef, disabledIndices);
    const horizontalEndKey = rtl ? ARROW_LEFT : ARROW_RIGHT;
    const horizontalStartKey = rtl ? ARROW_RIGHT : ARROW_LEFT;
    if (isGrid) {
      const sizes = itemSizes || Array.from({
        length: elementsRef.current.length
      }, () => ({
        width: 1,
        height: 1
      }));
      const cellMap = buildCellMap(sizes, cols, dense);
      const minGridIndex = cellMap.findIndex((index2) => index2 != null && !isDisabled(elementsRef.current, index2, disabledIndices));
      const maxGridIndex = cellMap.reduce((foundIndex, index2, cellIndex) => index2 != null && !isDisabled(elementsRef.current, index2, disabledIndices) ? cellIndex : foundIndex, -1);
      const maybeNextIndex = cellMap[getGridNavigatedIndex({
        current: cellMap.map((itemIndex) => itemIndex ? elementsRef.current[itemIndex] : null)
      }, {
        event,
        orientation,
        loop,
        rtl,
        cols,
        // treat undefined (empty grid spaces) as disabled indices so we
        // don't end up in them
        disabledIndices: getCellIndices([...disabledIndices || elementsRef.current.map((_8, index2) => isDisabled(elementsRef.current, index2) ? index2 : void 0), void 0], cellMap),
        minIndex: minGridIndex,
        maxIndex: maxGridIndex,
        prevIndex: getCellIndexOfCorner(
          activeIndex > maxIndex ? minIndex : activeIndex,
          sizes,
          cellMap,
          cols,
          // use a corner matching the edge closest to the direction we're
          // moving in so we don't end up in the same item. Prefer
          // top/left over bottom/right.
          event.key === ARROW_DOWN ? "bl" : event.key === horizontalEndKey ? "tr" : "tl"
        )
      })];
      if (maybeNextIndex != null) {
        nextIndex = maybeNextIndex;
      }
    }
    const toEndKeys = {
      horizontal: [horizontalEndKey],
      vertical: [ARROW_DOWN],
      both: [horizontalEndKey, ARROW_DOWN]
    }[orientation];
    const toStartKeys = {
      horizontal: [horizontalStartKey],
      vertical: [ARROW_UP],
      both: [horizontalStartKey, ARROW_UP]
    }[orientation];
    const preventedKeys = isGrid ? allKeys : {
      horizontal: horizontalKeys,
      vertical: verticalKeys,
      both: allKeys
    }[orientation];
    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {
      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {
        nextIndex = minIndex;
      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {
        nextIndex = maxIndex;
      } else {
        nextIndex = findNonDisabledIndex(elementsRef, {
          startingIndex: nextIndex,
          decrement: toStartKeys.includes(event.key),
          disabledIndices
        });
      }
    }
    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {
      var _elementsRef$current$;
      event.stopPropagation();
      if (preventedKeys.includes(event.key)) {
        event.preventDefault();
      }
      onNavigate(nextIndex);
      (_elementsRef$current$ = elementsRef.current[nextIndex]) == null || _elementsRef$current$.focus();
    }
  }
  const computedProps = {
    ...domProps,
    ...renderElementProps,
    ref: forwardedRef,
    "aria-orientation": orientation === "both" ? void 0 : orientation,
    onKeyDown(e8) {
      domProps.onKeyDown == null || domProps.onKeyDown(e8);
      renderElementProps.onKeyDown == null || renderElementProps.onKeyDown(e8);
      handleKeyDown(e8);
    }
  };
  return React32.createElement(CompositeContext.Provider, {
    value: contextValue
  }, React32.createElement(FloatingList, {
    elementsRef
  }, renderJsx(render, computedProps)));
});
var CompositeItem = React32.forwardRef(function CompositeItem2(props, forwardedRef) {
  const {
    render,
    ...domProps
  } = props;
  const renderElementProps = render && typeof render !== "function" ? render.props : {};
  const {
    activeIndex,
    onNavigate
  } = React32.useContext(CompositeContext);
  const {
    ref,
    index: index2
  } = useListItem();
  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);
  const isActive = activeIndex === index2;
  const computedProps = {
    ...domProps,
    ...renderElementProps,
    ref: mergedRef,
    tabIndex: isActive ? 0 : -1,
    "data-active": isActive ? "" : void 0,
    onFocus(e8) {
      domProps.onFocus == null || domProps.onFocus(e8);
      renderElementProps.onFocus == null || renderElementProps.onFocus(e8);
      onNavigate(index2);
    }
  };
  return renderJsx(render, computedProps);
});
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i19 = 1; i19 < arguments.length; i19++) {
      var source = arguments[i19];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var serverHandoffComplete = false;
var count = 0;
var genId = () => (
  // Ensure the id is unique with multiple independent versions of Floating UI
  // on <React 18
  "floating-ui-" + Math.random().toString(36).slice(2, 6) + count++
);
function useFloatingId() {
  const [id3, setId] = React32.useState(() => serverHandoffComplete ? genId() : void 0);
  index(() => {
    if (id3 == null) {
      setId(genId());
    }
  }, []);
  React32.useEffect(() => {
    serverHandoffComplete = true;
  }, []);
  return id3;
}
var useReactId = SafeReact.useId;
var useId = useReactId || useFloatingId;
var devMessageSet;
if (true) {
  devMessageSet = /* @__PURE__ */ new Set();
}
function warn() {
  var _devMessageSet;
  for (var _len = arguments.length, messages = new Array(_len), _key = 0; _key < _len; _key++) {
    messages[_key] = arguments[_key];
  }
  const message = "Floating UI: " + messages.join(" ");
  if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(message))) {
    var _devMessageSet2;
    (_devMessageSet2 = devMessageSet) == null || _devMessageSet2.add(message);
    console.warn(message);
  }
}
function error() {
  var _devMessageSet3;
  for (var _len2 = arguments.length, messages = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    messages[_key2] = arguments[_key2];
  }
  const message = "Floating UI: " + messages.join(" ");
  if (!((_devMessageSet3 = devMessageSet) != null && _devMessageSet3.has(message))) {
    var _devMessageSet4;
    (_devMessageSet4 = devMessageSet) == null || _devMessageSet4.add(message);
    console.error(message);
  }
}
var FloatingArrow = React32.forwardRef(function FloatingArrow2(props, ref) {
  const {
    context: {
      placement,
      elements: {
        floating
      },
      middlewareData: {
        arrow: arrow2,
        shift: shift2
      }
    },
    width = 14,
    height = 7,
    tipRadius = 0,
    strokeWidth = 0,
    staticOffset,
    stroke,
    d: d14,
    style: {
      transform: transform2,
      ...restStyle
    } = {},
    ...rest
  } = props;
  if (true) {
    if (!ref) {
      warn("The `ref` prop is required for `FloatingArrow`.");
    }
  }
  const clipPathId = useId();
  const [isRTL, setIsRTL] = React32.useState(false);
  index(() => {
    if (!floating) return;
    const isRTL2 = getComputedStyle2(floating).direction === "rtl";
    if (isRTL2) {
      setIsRTL(true);
    }
  }, [floating]);
  if (!floating) {
    return null;
  }
  const [side, alignment] = placement.split("-");
  const isVerticalSide = side === "top" || side === "bottom";
  let computedStaticOffset = staticOffset;
  if (isVerticalSide && shift2 != null && shift2.x || !isVerticalSide && shift2 != null && shift2.y) {
    computedStaticOffset = null;
  }
  const computedStrokeWidth = strokeWidth * 2;
  const halfStrokeWidth = computedStrokeWidth / 2;
  const svgX = width / 2 * (tipRadius / -8 + 1);
  const svgY = height / 2 * tipRadius / 4;
  const isCustomShape = !!d14;
  const yOffsetProp = computedStaticOffset && alignment === "end" ? "bottom" : "top";
  let xOffsetProp = computedStaticOffset && alignment === "end" ? "right" : "left";
  if (computedStaticOffset && isRTL) {
    xOffsetProp = alignment === "end" ? "left" : "right";
  }
  const arrowX = (arrow2 == null ? void 0 : arrow2.x) != null ? computedStaticOffset || arrow2.x : "";
  const arrowY = (arrow2 == null ? void 0 : arrow2.y) != null ? computedStaticOffset || arrow2.y : "";
  const dValue = d14 || "M0,0" + (" H" + width) + (" L" + (width - svgX) + "," + (height - svgY)) + (" Q" + width / 2 + "," + height + " " + svgX + "," + (height - svgY)) + " Z";
  const rotation = {
    top: isCustomShape ? "rotate(180deg)" : "",
    left: isCustomShape ? "rotate(90deg)" : "rotate(-90deg)",
    bottom: isCustomShape ? "" : "rotate(180deg)",
    right: isCustomShape ? "rotate(-90deg)" : "rotate(90deg)"
  }[side];
  return React32.createElement("svg", _extends({}, rest, {
    "aria-hidden": true,
    ref,
    width: isCustomShape ? width : width + computedStrokeWidth,
    height: width,
    viewBox: "0 0 " + width + " " + (height > width ? height : width),
    style: {
      position: "absolute",
      pointerEvents: "none",
      [xOffsetProp]: arrowX,
      [yOffsetProp]: arrowY,
      [side]: isVerticalSide || isCustomShape ? "100%" : "calc(100% - " + computedStrokeWidth / 2 + "px)",
      transform: [rotation, transform2].filter((t12) => !!t12).join(" "),
      ...restStyle
    }
  }), computedStrokeWidth > 0 && React32.createElement("path", {
    clipPath: "url(#" + clipPathId + ")",
    fill: "none",
    stroke,
    strokeWidth: computedStrokeWidth + (d14 ? 0 : 1),
    d: dValue
  }), React32.createElement("path", {
    stroke: computedStrokeWidth && !d14 ? rest.fill : "none",
    d: dValue
  }), React32.createElement("clipPath", {
    id: clipPathId
  }, React32.createElement("rect", {
    x: -halfStrokeWidth,
    y: halfStrokeWidth * (isCustomShape ? -1 : 1),
    width: width + computedStrokeWidth,
    height: width
  })));
});
function createPubSub() {
  const map = /* @__PURE__ */ new Map();
  return {
    emit(event, data) {
      var _map$get;
      (_map$get = map.get(event)) == null || _map$get.forEach((handler) => handler(data));
    },
    on(event, listener) {
      map.set(event, [...map.get(event) || [], listener]);
    },
    off(event, listener) {
      var _map$get2;
      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter((l17) => l17 !== listener)) || []);
    }
  };
}
var FloatingNodeContext = React32.createContext(null);
var FloatingTreeContext = React32.createContext(null);
var useFloatingParentNodeId = () => {
  var _React$useContext;
  return ((_React$useContext = React32.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;
};
var useFloatingTree = () => React32.useContext(FloatingTreeContext);
function createAttribute(name) {
  return "data-floating-ui-" + name;
}
var safePolygonIdentifier = createAttribute("safe-polygon");
var NOOP = () => {
};
var FloatingDelayGroupContext = React32.createContext({
  delay: 0,
  initialDelay: 0,
  timeoutMs: 0,
  currentId: null,
  setCurrentId: NOOP,
  setState: NOOP,
  isInstantPhase: false
});
var HIDDEN_STYLES = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "fixed",
  whiteSpace: "nowrap",
  width: "1px",
  top: 0,
  left: 0
};
var timeoutId;
function setActiveElementOnTab(event) {
  if (event.key === "Tab") {
    event.target;
    clearTimeout(timeoutId);
  }
}
var FocusGuard = React32.forwardRef(function FocusGuard2(props, ref) {
  const [role, setRole] = React32.useState();
  index(() => {
    if (isSafari()) {
      setRole("button");
    }
    document.addEventListener("keydown", setActiveElementOnTab);
    return () => {
      document.removeEventListener("keydown", setActiveElementOnTab);
    };
  }, []);
  const restProps = {
    ref,
    tabIndex: 0,
    // Role is only for VoiceOver
    role,
    "aria-hidden": role ? void 0 : true,
    [createAttribute("focus-guard")]: "",
    style: HIDDEN_STYLES
  };
  return React32.createElement("span", _extends({}, props, restProps));
});
var PortalContext = React32.createContext(null);
var attr = createAttribute("portal");
var FOCUSABLE_ATTRIBUTE = "data-floating-ui-focusable";
var VisuallyHiddenDismiss = React32.forwardRef(function VisuallyHiddenDismiss2(props, ref) {
  return React32.createElement("button", _extends({}, props, {
    type: "button",
    ref,
    tabIndex: -1,
    style: HIDDEN_STYLES
  }));
});
var lockCount = 0;
function enableScrollLock() {
  const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());
  const bodyStyle = document.body.style;
  const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;
  const paddingProp = scrollbarX ? "paddingLeft" : "paddingRight";
  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
  const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.scrollX;
  const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.scrollY;
  bodyStyle.overflow = "hidden";
  if (scrollbarWidth) {
    bodyStyle[paddingProp] = scrollbarWidth + "px";
  }
  if (isIOS) {
    var _window$visualViewpor, _window$visualViewpor2;
    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;
    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;
    Object.assign(bodyStyle, {
      position: "fixed",
      top: -(scrollY - Math.floor(offsetTop)) + "px",
      left: -(scrollX - Math.floor(offsetLeft)) + "px",
      right: "0"
    });
  }
  return () => {
    Object.assign(bodyStyle, {
      overflow: "",
      [paddingProp]: ""
    });
    if (isIOS) {
      Object.assign(bodyStyle, {
        position: "",
        top: "",
        left: "",
        right: ""
      });
      window.scrollTo(scrollX, scrollY);
    }
  };
}
var cleanup = () => {
};
var FloatingOverlay = React32.forwardRef(function FloatingOverlay2(props, ref) {
  const {
    lockScroll = false,
    ...rest
  } = props;
  index(() => {
    if (!lockScroll) return;
    lockCount++;
    if (lockCount === 1) {
      cleanup = enableScrollLock();
    }
    return () => {
      lockCount--;
      if (lockCount === 0) {
        cleanup();
      }
    };
  }, [lockScroll]);
  return React32.createElement("div", _extends({
    ref
  }, rest, {
    style: {
      position: "fixed",
      overflow: "auto",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      ...rest.style
    }
  }));
});
function useFloatingRootContext(options) {
  const {
    open = false,
    onOpenChange: onOpenChangeProp,
    elements: elementsProp
  } = options;
  const floatingId = useId();
  const dataRef = React32.useRef({});
  const [events] = React32.useState(() => createPubSub());
  const nested = useFloatingParentNodeId() != null;
  if (true) {
    const optionDomReference = elementsProp.reference;
    if (optionDomReference && !isElement(optionDomReference)) {
      error("Cannot pass a virtual element to the `elements.reference` option,", "as it must be a real DOM element. Use `refs.setPositionReference()`", "instead.");
    }
  }
  const [positionReference, setPositionReference] = React32.useState(elementsProp.reference);
  const onOpenChange = useEffectEvent((open2, event, reason) => {
    dataRef.current.openEvent = open2 ? event : void 0;
    events.emit("openchange", {
      open: open2,
      event,
      reason,
      nested
    });
    onOpenChangeProp == null || onOpenChangeProp(open2, event, reason);
  });
  const refs = React32.useMemo(() => ({
    setPositionReference
  }), []);
  const elements = React32.useMemo(() => ({
    reference: positionReference || elementsProp.reference || null,
    floating: elementsProp.floating || null,
    domReference: elementsProp.reference
  }), [positionReference, elementsProp.reference, elementsProp.floating]);
  return React32.useMemo(() => ({
    dataRef,
    open,
    onOpenChange,
    elements,
    events,
    floatingId,
    refs
  }), [open, onOpenChange, elements, events, floatingId, refs]);
}
function useFloating2(options) {
  if (options === void 0) {
    options = {};
  }
  const {
    nodeId
  } = options;
  const internalRootContext = useFloatingRootContext({
    ...options,
    elements: {
      reference: null,
      floating: null,
      ...options.elements
    }
  });
  const rootContext = options.rootContext || internalRootContext;
  const computedElements = rootContext.elements;
  const [_domReference, setDomReference] = React32.useState(null);
  const [positionReference, _setPositionReference] = React32.useState(null);
  const optionDomReference = computedElements == null ? void 0 : computedElements.domReference;
  const domReference = optionDomReference || _domReference;
  const domReferenceRef = React32.useRef(null);
  const tree = useFloatingTree();
  index(() => {
    if (domReference) {
      domReferenceRef.current = domReference;
    }
  }, [domReference]);
  const position = useFloating({
    ...options,
    elements: {
      ...computedElements,
      ...positionReference && {
        reference: positionReference
      }
    }
  });
  const setPositionReference = React32.useCallback((node) => {
    const computedPositionReference = isElement(node) ? {
      getBoundingClientRect: () => node.getBoundingClientRect(),
      contextElement: node
    } : node;
    _setPositionReference(computedPositionReference);
    position.refs.setReference(computedPositionReference);
  }, [position.refs]);
  const setReference = React32.useCallback((node) => {
    if (isElement(node) || node === null) {
      domReferenceRef.current = node;
      setDomReference(node);
    }
    if (isElement(position.refs.reference.current) || position.refs.reference.current === null || // Don't allow setting virtual elements using the old technique back to
    // `null` to support `positionReference` + an unstable `reference`
    // callback ref.
    node !== null && !isElement(node)) {
      position.refs.setReference(node);
    }
  }, [position.refs]);
  const refs = React32.useMemo(() => ({
    ...position.refs,
    setReference,
    setPositionReference,
    domReference: domReferenceRef
  }), [position.refs, setReference, setPositionReference]);
  const elements = React32.useMemo(() => ({
    ...position.elements,
    domReference
  }), [position.elements, domReference]);
  const context = React32.useMemo(() => ({
    ...position,
    ...rootContext,
    refs,
    elements,
    nodeId
  }), [position, refs, elements, nodeId, rootContext]);
  index(() => {
    rootContext.dataRef.current.floatingContext = context;
    const node = tree == null ? void 0 : tree.nodesRef.current.find((node2) => node2.id === nodeId);
    if (node) {
      node.context = context;
    }
  });
  return React32.useMemo(() => ({
    ...position,
    context,
    refs,
    elements
  }), [position, refs, elements, context]);
}
var ACTIVE_KEY = "active";
var SELECTED_KEY = "selected";
function mergeProps(userProps, propsList, elementKey) {
  const map = /* @__PURE__ */ new Map();
  const isItem = elementKey === "item";
  let domUserProps = userProps;
  if (isItem && userProps) {
    const {
      [ACTIVE_KEY]: _8,
      [SELECTED_KEY]: __,
      ...validProps
    } = userProps;
    domUserProps = validProps;
  }
  return {
    ...elementKey === "floating" && {
      tabIndex: -1,
      [FOCUSABLE_ATTRIBUTE]: ""
    },
    ...domUserProps,
    ...propsList.map((value) => {
      const propsOrGetProps = value ? value[elementKey] : null;
      if (typeof propsOrGetProps === "function") {
        return userProps ? propsOrGetProps(userProps) : null;
      }
      return propsOrGetProps;
    }).concat(userProps).reduce((acc, props) => {
      if (!props) {
        return acc;
      }
      Object.entries(props).forEach((_ref) => {
        let [key, value] = _ref;
        if (isItem && [ACTIVE_KEY, SELECTED_KEY].includes(key)) {
          return;
        }
        if (key.indexOf("on") === 0) {
          if (!map.has(key)) {
            map.set(key, []);
          }
          if (typeof value === "function") {
            var _map$get;
            (_map$get = map.get(key)) == null || _map$get.push(value);
            acc[key] = function() {
              var _map$get2;
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map((fn) => fn(...args)).find((val) => val !== void 0);
            };
          }
        } else {
          acc[key] = value;
        }
      });
      return acc;
    }, {})
  };
}
function useInteractions(propsList) {
  if (propsList === void 0) {
    propsList = [];
  }
  const referenceDeps = propsList.map((key) => key == null ? void 0 : key.reference);
  const floatingDeps = propsList.map((key) => key == null ? void 0 : key.floating);
  const itemDeps = propsList.map((key) => key == null ? void 0 : key.item);
  const getReferenceProps = React32.useCallback(
    (userProps) => mergeProps(userProps, propsList, "reference"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    referenceDeps
  );
  const getFloatingProps = React32.useCallback(
    (userProps) => mergeProps(userProps, propsList, "floating"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    floatingDeps
  );
  const getItemProps = React32.useCallback(
    (userProps) => mergeProps(userProps, propsList, "item"),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    itemDeps
  );
  return React32.useMemo(() => ({
    getReferenceProps,
    getFloatingProps,
    getItemProps
  }), [getReferenceProps, getFloatingProps, getItemProps]);
}
function getArgsWithCustomFloatingHeight(state, height) {
  return {
    ...state,
    rects: {
      ...state.rects,
      floating: {
        ...state.rects.floating,
        height
      }
    }
  };
}
var inner = (props) => ({
  name: "inner",
  options: props,
  async fn(state) {
    const {
      listRef,
      overflowRef,
      onFallbackChange,
      offset: innerOffset = 0,
      index: index2 = 0,
      minItemsVisible = 4,
      referenceOverflowThreshold = 0,
      scrollRef,
      ...detectOverflowOptions
    } = evaluate(props, state);
    const {
      rects,
      elements: {
        floating
      }
    } = state;
    const item = listRef.current[index2];
    const scrollEl = (scrollRef == null ? void 0 : scrollRef.current) || floating;
    const clientTop = floating.clientTop || scrollEl.clientTop;
    const floatingIsBordered = floating.clientTop !== 0;
    const scrollElIsBordered = scrollEl.clientTop !== 0;
    const floatingIsScrollEl = floating === scrollEl;
    if (true) {
      if (!state.placement.startsWith("bottom")) {
        warn('`placement` side must be "bottom" when using the `inner`', "middleware.");
      }
    }
    if (!item) {
      return {};
    }
    const nextArgs = {
      ...state,
      ...await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state)
    };
    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, scrollEl.scrollHeight + clientTop + floating.clientTop), detectOverflowOptions);
    const refOverflow = await detectOverflow(nextArgs, {
      ...detectOverflowOptions,
      elementContext: "reference"
    });
    const diffY = max(0, overflow.top);
    const nextY = nextArgs.y + diffY;
    const isScrollable = scrollEl.scrollHeight > scrollEl.clientHeight;
    const rounder = isScrollable ? (v5) => v5 : round;
    const maxHeight = rounder(max(0, scrollEl.scrollHeight + (floatingIsBordered && floatingIsScrollEl || scrollElIsBordered ? clientTop * 2 : 0) - diffY - max(0, overflow.bottom)));
    scrollEl.style.maxHeight = maxHeight + "px";
    scrollEl.scrollTop = diffY;
    if (onFallbackChange) {
      const shouldFallback = scrollEl.offsetHeight < item.offsetHeight * min(minItemsVisible, listRef.current.length) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold;
      ReactDOM.flushSync(() => onFallbackChange(shouldFallback));
    }
    if (overflowRef) {
      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({
        ...nextArgs,
        y: nextY
      }, scrollEl.offsetHeight + clientTop + floating.clientTop), detectOverflowOptions);
    }
    return {
      y: nextY
    };
  }
});
function useInnerOffset(context, props) {
  const {
    open,
    elements
  } = context;
  const {
    enabled = true,
    overflowRef,
    scrollRef,
    onChange: unstable_onChange
  } = props;
  const onChange = useEffectEvent(unstable_onChange);
  const controlledScrollingRef = React32.useRef(false);
  const prevScrollTopRef = React32.useRef(null);
  const initialOverflowRef = React32.useRef(null);
  React32.useEffect(() => {
    if (!enabled) return;
    function onWheel(e8) {
      if (e8.ctrlKey || !el || overflowRef.current == null) {
        return;
      }
      const dY = e8.deltaY;
      const isAtTop = overflowRef.current.top >= -0.5;
      const isAtBottom = overflowRef.current.bottom >= -0.5;
      const remainingScroll = el.scrollHeight - el.clientHeight;
      const sign = dY < 0 ? -1 : 1;
      const method = dY < 0 ? "max" : "min";
      if (el.scrollHeight <= el.clientHeight) {
        return;
      }
      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {
        e8.preventDefault();
        ReactDOM.flushSync(() => {
          onChange((d14) => d14 + Math[method](dY, remainingScroll * sign));
        });
      } else if (/firefox/i.test(getUserAgent())) {
        el.scrollTop += dY;
      }
    }
    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
    if (open && el) {
      el.addEventListener("wheel", onWheel);
      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
        if (overflowRef.current != null) {
          initialOverflowRef.current = {
            ...overflowRef.current
          };
        }
      });
      return () => {
        prevScrollTopRef.current = null;
        initialOverflowRef.current = null;
        el.removeEventListener("wheel", onWheel);
      };
    }
  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);
  const floating = React32.useMemo(() => ({
    onKeyDown() {
      controlledScrollingRef.current = true;
    },
    onWheel() {
      controlledScrollingRef.current = false;
    },
    onPointerMove() {
      controlledScrollingRef.current = false;
    },
    onScroll() {
      const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
      if (!overflowRef.current || !el || !controlledScrollingRef.current) {
        return;
      }
      if (prevScrollTopRef.current !== null) {
        const scrollDiff = el.scrollTop - prevScrollTopRef.current;
        if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {
          ReactDOM.flushSync(() => onChange((d14) => d14 + scrollDiff));
        }
      }
      requestAnimationFrame(() => {
        prevScrollTopRef.current = el.scrollTop;
      });
    }
  }), [elements.floating, onChange, overflowRef, scrollRef]);
  return React32.useMemo(() => enabled ? {
    floating
  } : {}, [enabled, floating]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/floating.js
var j5 = __toESM(require_react(), 1);
var import_react85 = __toESM(require_react(), 1);
var y5 = (0, import_react85.createContext)({ styles: void 0, setReference: () => {
}, setFloating: () => {
}, getReferenceProps: () => ({}), getFloatingProps: () => ({}), slot: {} });
y5.displayName = "FloatingContext";
var H6 = (0, import_react85.createContext)(null);
H6.displayName = "PlacementContext";
function xe(e8) {
  return (0, import_react85.useMemo)(() => e8 ? typeof e8 == "string" ? { to: e8 } : e8 : null, [e8]);
}
function ye() {
  return (0, import_react85.useContext)(y5).setReference;
}
function Fe2() {
  return (0, import_react85.useContext)(y5).getReferenceProps;
}
function be() {
  let { getFloatingProps: e8, slot: t12 } = (0, import_react85.useContext)(y5);
  return (0, import_react85.useCallback)((...n13) => Object.assign({}, e8(...n13), { "data-anchor": t12.anchor }), [e8, t12]);
}
function Re(e8 = null) {
  e8 === false && (e8 = null), typeof e8 == "string" && (e8 = { to: e8 });
  let t12 = (0, import_react85.useContext)(H6), n13 = (0, import_react85.useMemo)(() => e8, [JSON.stringify(e8, (r21, o21) => {
    var u19;
    return (u19 = o21 == null ? void 0 : o21.outerHTML) != null ? u19 : o21;
  })]);
  n(() => {
    t12 == null || t12(n13 != null ? n13 : null);
  }, [t12, n13]);
  let l17 = (0, import_react85.useContext)(y5);
  return (0, import_react85.useMemo)(() => [l17.setFloating, e8 ? l17.styles : {}], [l17.setFloating, e8, l17.styles]);
}
var q = 4;
function Me({ children: e8, enabled: t12 = true }) {
  let [n13, l17] = (0, import_react85.useState)(null), [r21, o21] = (0, import_react85.useState)(0), u19 = (0, import_react85.useRef)(null), [f22, s15] = (0, import_react85.useState)(null);
  pe2(f22);
  let i19 = t12 && n13 !== null && f22 !== null, { to: F9 = "bottom", gap: E15 = 0, offset: v5 = 0, padding: c64 = 0, inner: P7 } = ce(n13, f22), [a25, p6 = "center"] = F9.split(" ");
  n(() => {
    i19 && o21(0);
  }, [i19]);
  let { refs: b11, floatingStyles: w10, context: g8 } = useFloating2({ open: i19, placement: a25 === "selection" ? p6 === "center" ? "bottom" : `bottom-${p6}` : p6 === "center" ? `${a25}` : `${a25}-${p6}`, strategy: "absolute", transform: false, middleware: [offset({ mainAxis: a25 === "selection" ? 0 : E15, crossAxis: v5 }), shift({ padding: c64 }), a25 !== "selection" && flip({ padding: c64 }), a25 === "selection" && P7 ? inner({ ...P7, padding: c64, overflowRef: u19, offset: r21, minItemsVisible: q, referenceOverflowThreshold: c64, onFallbackChange(h11) {
    var O9, W3;
    if (!h11) return;
    let d14 = g8.elements.floating;
    if (!d14) return;
    let T12 = parseFloat(getComputedStyle(d14).scrollPaddingBottom) || 0, $4 = Math.min(q, d14.childElementCount), L7 = 0, N3 = 0;
    for (let m12 of (W3 = (O9 = g8.elements.floating) == null ? void 0 : O9.childNodes) != null ? W3 : []) if (m12 instanceof HTMLElement) {
      let x11 = m12.offsetTop, k5 = x11 + m12.clientHeight + T12, S10 = d14.scrollTop, U7 = S10 + d14.clientHeight;
      if (x11 >= S10 && k5 <= U7) $4--;
      else {
        N3 = Math.max(0, Math.min(k5, U7) - Math.max(x11, S10)), L7 = m12.clientHeight;
        break;
      }
    }
    $4 >= 1 && o21((m12) => {
      let x11 = L7 * $4 - N3 + T12;
      return m12 >= x11 ? m12 : x11;
    });
  } }) : null, size({ padding: c64, apply({ availableWidth: h11, availableHeight: d14, elements: T12 }) {
    Object.assign(T12.floating.style, { overflow: "auto", maxWidth: `${h11}px`, maxHeight: `min(var(--anchor-max-height, 100vh), ${d14}px)` });
  } })].filter(Boolean), whileElementsMounted: autoUpdate }), [I7 = a25, B5 = p6] = g8.placement.split("-");
  a25 === "selection" && (I7 = "selection");
  let G8 = (0, import_react85.useMemo)(() => ({ anchor: [I7, B5].filter(Boolean).join(" ") }), [I7, B5]), K4 = useInnerOffset(g8, { overflowRef: u19, onChange: o21 }), { getReferenceProps: Q4, getFloatingProps: X6 } = useInteractions([K4]), Y4 = o5((h11) => {
    s15(h11), b11.setFloating(h11);
  });
  return j5.createElement(H6.Provider, { value: l17 }, j5.createElement(y5.Provider, { value: { setFloating: Y4, setReference: b11.setReference, styles: w10, getReferenceProps: Q4, getFloatingProps: X6, slot: G8 } }, e8));
}
function pe2(e8) {
  n(() => {
    if (!e8) return;
    let t12 = new MutationObserver(() => {
      let n13 = window.getComputedStyle(e8).maxHeight, l17 = parseFloat(n13);
      if (isNaN(l17)) return;
      let r21 = parseInt(n13);
      isNaN(r21) || l17 !== r21 && (e8.style.maxHeight = `${Math.ceil(l17)}px`);
    });
    return t12.observe(e8, { attributes: true, attributeFilter: ["style"] }), () => {
      t12.disconnect();
    };
  }, [e8]);
}
function ce(e8, t12) {
  var o21, u19, f22;
  let n13 = V((o21 = e8 == null ? void 0 : e8.gap) != null ? o21 : "var(--anchor-gap, 0)", t12), l17 = V((u19 = e8 == null ? void 0 : e8.offset) != null ? u19 : "var(--anchor-offset, 0)", t12), r21 = V((f22 = e8 == null ? void 0 : e8.padding) != null ? f22 : "var(--anchor-padding, 0)", t12);
  return { ...e8, gap: n13, offset: l17, padding: r21 };
}
function V(e8, t12, n13 = void 0) {
  let l17 = p(), r21 = o5((s15, i19) => {
    if (s15 == null) return [n13, null];
    if (typeof s15 == "number") return [s15, null];
    if (typeof s15 == "string") {
      if (!i19) return [n13, null];
      let F9 = J2(s15, i19);
      return [F9, (E15) => {
        let v5 = D2(s15);
        {
          let c64 = v5.map((P7) => window.getComputedStyle(i19).getPropertyValue(P7));
          l17.requestAnimationFrame(function P7() {
            l17.nextFrame(P7);
            let a25 = false;
            for (let [b11, w10] of v5.entries()) {
              let g8 = window.getComputedStyle(i19).getPropertyValue(w10);
              if (c64[b11] !== g8) {
                c64[b11] = g8, a25 = true;
                break;
              }
            }
            if (!a25) return;
            let p6 = J2(s15, i19);
            F9 !== p6 && (E15(p6), F9 = p6);
          });
        }
        return l17.dispose;
      }];
    }
    return [n13, null];
  }), o21 = (0, import_react85.useMemo)(() => r21(e8, t12)[0], [e8, t12]), [u19 = o21, f22] = (0, import_react85.useState)();
  return n(() => {
    let [s15, i19] = r21(e8, t12);
    if (f22(s15), !!i19) return i19(f22);
  }, [e8, t12]), u19;
}
function D2(e8) {
  let t12 = /var\((.*)\)/.exec(e8);
  if (t12) {
    let n13 = t12[1].indexOf(",");
    if (n13 === -1) return [t12[1]];
    let l17 = t12[1].slice(0, n13).trim(), r21 = t12[1].slice(n13 + 1).trim();
    return r21 ? [l17, ...D2(r21)] : [l17];
  }
  return [];
}
function J2(e8, t12) {
  let n13 = document.createElement("div");
  t12.appendChild(n13), n13.style.setProperty("margin-top", "0px", "important"), n13.style.setProperty("margin-top", e8, "important");
  let l17 = parseFloat(window.getComputedStyle(n13).marginTop) || 0;
  return t12.removeChild(n13), l17;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/frozen.js
var import_react86 = __toESM(require_react(), 1);
function f13({ children: o21, freeze: e8 }) {
  let n13 = l7(e8, o21);
  return import_react86.default.createElement(import_react86.default.Fragment, null, n13);
}
function l7(o21, e8) {
  let [n13, t12] = (0, import_react86.useState)(e8);
  return !o21 && n13 !== e8 && t12(e8), o21 ? n13 : e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/open-closed.js
var import_react87 = __toESM(require_react(), 1);
var n10 = (0, import_react87.createContext)(null);
n10.displayName = "OpenClosedContext";
var i11 = ((e8) => (e8[e8.Open = 1] = "Open", e8[e8.Closed = 2] = "Closed", e8[e8.Closing = 4] = "Closing", e8[e8.Opening = 8] = "Opening", e8))(i11 || {});
function u12() {
  return (0, import_react87.useContext)(n10);
}
function c22({ value: o21, children: t12 }) {
  return import_react87.default.createElement(n10.Provider, { value: o21 }, t12);
}
function s7({ children: o21 }) {
  return import_react87.default.createElement(n10.Provider, { value: null }, o21);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/react-glue.js
var import_with_selector = __toESM(require_with_selector(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/machine.js
var f14 = (t12, e8, r21) => {
  if (!e8.has(t12)) throw TypeError("Cannot " + r21);
};
var a12 = (t12, e8, r21) => (f14(t12, e8, "read from private field"), r21 ? r21.call(t12) : e8.get(t12));
var l9 = (t12, e8, r21) => {
  if (e8.has(t12)) throw TypeError("Cannot add the same private member more than once");
  e8 instanceof WeakSet ? e8.add(t12) : e8.set(t12, r21);
};
var c23 = (t12, e8, r21, n13) => (f14(t12, e8, "write to private field"), n13 ? n13.call(t12, r21) : e8.set(t12, r21), r21);
var i12;
var s8;
var o14;
var m9 = class {
  constructor(e8) {
    l9(this, i12, {});
    l9(this, s8, new a6(() => /* @__PURE__ */ new Set()));
    l9(this, o14, /* @__PURE__ */ new Set());
    c23(this, i12, e8);
  }
  get state() {
    return a12(this, i12);
  }
  subscribe(e8, r21) {
    let n13 = { selector: e8, callback: r21, current: e8(a12(this, i12)) };
    return a12(this, o14).add(n13), () => {
      a12(this, o14).delete(n13);
    };
  }
  on(e8, r21) {
    return a12(this, s8).get(e8).add(r21), () => {
      a12(this, s8).get(e8).delete(r21);
    };
  }
  send(e8) {
    c23(this, i12, this.reduce(a12(this, i12), e8));
    for (let r21 of a12(this, o14)) {
      let n13 = r21.selector(a12(this, i12));
      h6(r21.current, n13) || (r21.current = n13, r21.callback(n13));
    }
    for (let r21 of a12(this, s8).get(e8.type)) r21(a12(this, i12), e8);
  }
};
i12 = /* @__PURE__ */ new WeakMap(), s8 = /* @__PURE__ */ new WeakMap(), o14 = /* @__PURE__ */ new WeakMap();
function h6(t12, e8) {
  return Object.is(t12, e8) ? true : typeof t12 != "object" || t12 === null || typeof e8 != "object" || e8 === null ? false : Array.isArray(t12) && Array.isArray(e8) ? t12.length !== e8.length ? false : u13(t12[Symbol.iterator](), e8[Symbol.iterator]()) : t12 instanceof Map && e8 instanceof Map || t12 instanceof Set && e8 instanceof Set ? t12.size !== e8.size ? false : u13(t12.entries(), e8.entries()) : S5(t12) && S5(e8) ? u13(Object.entries(t12)[Symbol.iterator](), Object.entries(e8)[Symbol.iterator]()) : false;
}
function u13(t12, e8) {
  do {
    let r21 = t12.next(), n13 = e8.next();
    if (r21.done && n13.done) return true;
    if (r21.done || n13.done || !Object.is(r21.value, n13.value)) return false;
  } while (true);
}
function S5(t12) {
  if (Object.prototype.toString.call(t12) !== "[object Object]") return false;
  let e8 = Object.getPrototypeOf(t12);
  return e8 === null || Object.getPrototypeOf(e8) === null;
}
function g2(t12) {
  let [e8, r21] = t12(), n13 = o3();
  return (...b11) => {
    e8(...b11), n13.dispose(), n13.microTask(r21);
  };
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/react-glue.js
function S6(e8, n13, r21 = h6) {
  return (0, import_with_selector.useSyncExternalStoreWithSelector)(o5((i19) => e8.subscribe(s9, i19)), o5(() => e8.state), o5(() => e8.state), o5(n13), r21);
}
function s9(e8) {
  return e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/document-ready.js
function t7(n13) {
  function e8() {
    document.readyState !== "loading" && (n13(), document.removeEventListener("DOMContentLoaded", e8));
  }
  typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("DOMContentLoaded", e8), e8());
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/active-element-history.js
var r12 = [];
t7(() => {
  function e8(t12) {
    if (!(t12.target instanceof HTMLElement) || t12.target === document.body || r12[0] === t12.target) return;
    let n13 = t12.target;
    n13 = n13.closest(f10), r12.unshift(n13 != null ? n13 : t12.target), r12 = r12.filter((o21) => o21 != null && o21.isConnected), r12.splice(10);
  }
  window.addEventListener("click", e8, { capture: true }), window.addEventListener("mousedown", e8, { capture: true }), window.addEventListener("focus", e8, { capture: true }), document.body.addEventListener("click", e8, { capture: true }), document.body.addEventListener("mousedown", e8, { capture: true }), document.body.addEventListener("focus", e8, { capture: true });
});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function u14(l17) {
  throw new Error("Unexpected object: " + l17);
}
var c24 = ((i19) => (i19[i19.First = 0] = "First", i19[i19.Previous = 1] = "Previous", i19[i19.Next = 2] = "Next", i19[i19.Last = 3] = "Last", i19[i19.Specific = 4] = "Specific", i19[i19.Nothing = 5] = "Nothing", i19))(c24 || {});
function f15(l17, n13) {
  let t12 = n13.resolveItems();
  if (t12.length <= 0) return null;
  let r21 = n13.resolveActiveIndex(), s15 = r21 != null ? r21 : -1;
  switch (l17.focus) {
    case 0: {
      for (let e8 = 0; e8 < t12.length; ++e8) if (!n13.resolveDisabled(t12[e8], e8, t12)) return e8;
      return r21;
    }
    case 1: {
      s15 === -1 && (s15 = t12.length);
      for (let e8 = s15 - 1; e8 >= 0; --e8) if (!n13.resolveDisabled(t12[e8], e8, t12)) return e8;
      return r21;
    }
    case 2: {
      for (let e8 = s15 + 1; e8 < t12.length; ++e8) if (!n13.resolveDisabled(t12[e8], e8, t12)) return e8;
      return r21;
    }
    case 3: {
      for (let e8 = t12.length - 1; e8 >= 0; --e8) if (!n13.resolveDisabled(t12[e8], e8, t12)) return e8;
      return r21;
    }
    case 4: {
      for (let e8 = 0; e8 < t12.length; ++e8) if (n13.resolveId(t12[e8], e8, t12) === l17.id) return e8;
      return r21;
    }
    case 5:
      return null;
    default:
      u14(l17);
  }
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/mouse.js
var g3 = ((f22) => (f22[f22.Left = 0] = "Left", f22[f22.Right = 2] = "Right", f22))(g3 || {});

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/portal/portal.js
var import_react90 = __toESM(require_react(), 1);
var import_react_dom6 = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-on-unmount.js
var import_react88 = __toESM(require_react(), 1);
function c25(t12) {
  let r21 = o5(t12), e8 = (0, import_react88.useRef)(false);
  (0, import_react88.useEffect)(() => (e8.current = false, () => {
    e8.current = true, t(() => {
      e8.current && r21();
    });
  }), [r21]);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
var t8 = __toESM(require_react(), 1);
function s10() {
  let r21 = typeof document == "undefined";
  return "useSyncExternalStore" in t8 ? ((o21) => o21.useSyncExternalStore)(t8)(() => () => {
  }, () => false, () => !r21) : false;
}
function l10() {
  let r21 = s10(), [e8, n13] = t8.useState(s.isHandoffComplete);
  return e8 && s.isHandoffComplete === false && n13(false), t8.useEffect(() => {
    e8 !== true && n13(true);
  }, [e8]), t8.useEffect(() => s.handoff(), []), r21 ? false : e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/portal-force-root.js
var import_react89 = __toESM(require_react(), 1);
var e7 = (0, import_react89.createContext)(false);
function a14() {
  return (0, import_react89.useContext)(e7);
}
function l11(o21) {
  return import_react89.default.createElement(e7.Provider, { value: o21.force }, o21.children);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/portal/portal.js
function j6(e8) {
  let l17 = a14(), o21 = (0, import_react90.useContext)(H7), [r21, u19] = (0, import_react90.useState)(() => {
    var i19;
    if (!l17 && o21 !== null) return (i19 = o21.current) != null ? i19 : null;
    if (s.isServer) return null;
    let t12 = e8 == null ? void 0 : e8.getElementById("headlessui-portal-root");
    if (t12) return t12;
    if (e8 === null) return null;
    let a25 = e8.createElement("div");
    return a25.setAttribute("id", "headlessui-portal-root"), e8.body.appendChild(a25);
  });
  return (0, import_react90.useEffect)(() => {
    r21 !== null && (e8 != null && e8.body.contains(r21) || e8 == null || e8.body.appendChild(r21));
  }, [r21, e8]), (0, import_react90.useEffect)(() => {
    l17 || o21 !== null && u19(o21.current);
  }, [o21, u19, l17]), r21;
}
var M3 = import_react90.Fragment;
var I3 = K(function(l17, o21) {
  let { ownerDocument: r21 = null, ...u19 } = l17, t12 = (0, import_react90.useRef)(null), a25 = y(T2((s15) => {
    t12.current = s15;
  }), o21), i19 = n9(t12), f22 = r21 != null ? r21 : i19, p6 = j6(f22), [n13] = (0, import_react90.useState)(() => {
    var s15;
    return s.isServer ? null : (s15 = f22 == null ? void 0 : f22.createElement("div")) != null ? s15 : null;
  }), P7 = (0, import_react90.useContext)(g4), b11 = l10();
  n(() => {
    !p6 || !n13 || p6.contains(n13) || (n13.setAttribute("data-headlessui-portal", ""), p6.appendChild(n13));
  }, [p6, n13]), n(() => {
    if (n13 && P7) return P7.register(n13);
  }, [P7, n13]), c25(() => {
    var s15;
    !p6 || !n13 || (n13 instanceof Node && p6.contains(n13) && p6.removeChild(n13), p6.childNodes.length <= 0 && ((s15 = p6.parentElement) == null || s15.removeChild(p6)));
  });
  let h11 = L();
  return b11 ? !p6 || !n13 ? null : (0, import_react_dom6.createPortal)(h11({ ourProps: { ref: a25 }, theirProps: u19, slot: {}, defaultTag: M3, name: "Portal" }), n13) : null;
});
function J3(e8, l17) {
  let o21 = y(l17), { enabled: r21 = true, ownerDocument: u19, ...t12 } = e8, a25 = L();
  return r21 ? import_react90.default.createElement(I3, { ...t12, ownerDocument: u19, ref: o21 }) : a25({ ourProps: { ref: o21 }, theirProps: t12, slot: {}, defaultTag: M3, name: "Portal" });
}
var X = import_react90.Fragment;
var H7 = (0, import_react90.createContext)(null);
function k3(e8, l17) {
  let { target: o21, ...r21 } = e8, t12 = { ref: y(l17) }, a25 = L();
  return import_react90.default.createElement(H7.Provider, { value: o21 }, a25({ ourProps: t12, theirProps: r21, defaultTag: X, name: "Popover.Group" }));
}
var g4 = (0, import_react90.createContext)(null);
function le() {
  let e8 = (0, import_react90.useContext)(g4), l17 = (0, import_react90.useRef)([]), o21 = o5((t12) => (l17.current.push(t12), e8 && e8.register(t12), () => r21(t12))), r21 = o5((t12) => {
    let a25 = l17.current.indexOf(t12);
    a25 !== -1 && l17.current.splice(a25, 1), e8 && e8.unregister(t12);
  }), u19 = (0, import_react90.useMemo)(() => ({ register: o21, unregister: r21, portals: l17 }), [o21, r21, l17]);
  return [l17, (0, import_react90.useMemo)(() => function({ children: a25 }) {
    return import_react90.default.createElement(g4.Provider, { value: u19 }, a25);
  }, [u19])];
}
var B = K(J3);
var D3 = K(k3);
var oe = Object.assign(B, { Group: D3 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox-machine.js
var I4 = Object.defineProperty;
var S7 = (t12, i19, e8) => i19 in t12 ? I4(t12, i19, { enumerable: true, configurable: true, writable: true, value: e8 }) : t12[i19] = e8;
var c28 = (t12, i19, e8) => (S7(t12, typeof i19 != "symbol" ? i19 + "" : i19, e8), e8);
var A5 = ((e8) => (e8[e8.Open = 0] = "Open", e8[e8.Closed = 1] = "Closed", e8))(A5 || {});
var E8 = ((e8) => (e8[e8.Single = 0] = "Single", e8[e8.Multi = 1] = "Multi", e8))(E8 || {});
var C6 = ((n13) => (n13[n13.Pointer = 0] = "Pointer", n13[n13.Focus = 1] = "Focus", n13[n13.Other = 2] = "Other", n13))(C6 || {});
var M4 = ((l17) => (l17[l17.OpenCombobox = 0] = "OpenCombobox", l17[l17.CloseCombobox = 1] = "CloseCombobox", l17[l17.GoToOption = 2] = "GoToOption", l17[l17.SetTyping = 3] = "SetTyping", l17[l17.RegisterOption = 4] = "RegisterOption", l17[l17.UnregisterOption = 5] = "UnregisterOption", l17[l17.DefaultToFirstOption = 6] = "DefaultToFirstOption", l17[l17.SetActivationTrigger = 7] = "SetActivationTrigger", l17[l17.UpdateVirtualConfiguration = 8] = "UpdateVirtualConfiguration", l17[l17.SetInputElement = 9] = "SetInputElement", l17[l17.SetButtonElement = 10] = "SetButtonElement", l17[l17.SetOptionsElement = 11] = "SetOptionsElement", l17))(M4 || {});
function v3(t12, i19 = (e8) => e8) {
  let e8 = t12.activeOptionIndex !== null ? t12.options[t12.activeOptionIndex] : null, n13 = i19(t12.options.slice()), o21 = n13.length > 0 && n13[0].dataRef.current.order !== null ? n13.sort((u19, a25) => u19.dataRef.current.order - a25.dataRef.current.order) : _3(n13, (u19) => u19.dataRef.current.domRef.current), r21 = e8 ? o21.indexOf(e8) : null;
  return r21 === -1 && (r21 = null), { options: o21, activeOptionIndex: r21 };
}
var F4 = { [1](t12) {
  var i19;
  return (i19 = t12.dataRef.current) != null && i19.disabled || t12.comboboxState === 1 ? t12 : { ...t12, activeOptionIndex: null, comboboxState: 1, isTyping: false, activationTrigger: 2, __demoMode: false };
}, [0](t12) {
  var i19, e8;
  if ((i19 = t12.dataRef.current) != null && i19.disabled || t12.comboboxState === 0) return t12;
  if ((e8 = t12.dataRef.current) != null && e8.value) {
    let n13 = t12.dataRef.current.calculateIndex(t12.dataRef.current.value);
    if (n13 !== -1) return { ...t12, activeOptionIndex: n13, comboboxState: 0, __demoMode: false };
  }
  return { ...t12, comboboxState: 0, __demoMode: false };
}, [3](t12, i19) {
  return t12.isTyping === i19.isTyping ? t12 : { ...t12, isTyping: i19.isTyping };
}, [2](t12, i19) {
  var r21, u19, a25, p6;
  if ((r21 = t12.dataRef.current) != null && r21.disabled || t12.optionsElement && !((u19 = t12.dataRef.current) != null && u19.optionsPropsRef.current.static) && t12.comboboxState === 1) return t12;
  if (t12.virtual) {
    let { options: d14, disabled: s15 } = t12.virtual, T12 = i19.focus === c24.Specific ? i19.idx : f15(i19, { resolveItems: () => d14, resolveActiveIndex: () => {
      var b11, m12;
      return (m12 = (b11 = t12.activeOptionIndex) != null ? b11 : d14.findIndex((y8) => !s15(y8))) != null ? m12 : null;
    }, resolveDisabled: s15, resolveId() {
      throw new Error("Function not implemented.");
    } }), l17 = (a25 = i19.trigger) != null ? a25 : 2;
    return t12.activeOptionIndex === T12 && t12.activationTrigger === l17 ? t12 : { ...t12, activeOptionIndex: T12, activationTrigger: l17, isTyping: false, __demoMode: false };
  }
  let e8 = v3(t12);
  if (e8.activeOptionIndex === null) {
    let d14 = e8.options.findIndex((s15) => !s15.dataRef.current.disabled);
    d14 !== -1 && (e8.activeOptionIndex = d14);
  }
  let n13 = i19.focus === c24.Specific ? i19.idx : f15(i19, { resolveItems: () => e8.options, resolveActiveIndex: () => e8.activeOptionIndex, resolveId: (d14) => d14.id, resolveDisabled: (d14) => d14.dataRef.current.disabled }), o21 = (p6 = i19.trigger) != null ? p6 : 2;
  return t12.activeOptionIndex === n13 && t12.activationTrigger === o21 ? t12 : { ...t12, ...e8, isTyping: false, activeOptionIndex: n13, activationTrigger: o21, __demoMode: false };
}, [4]: (t12, i19) => {
  var r21, u19, a25, p6;
  if ((r21 = t12.dataRef.current) != null && r21.virtual) return { ...t12, options: [...t12.options, i19.payload] };
  let e8 = i19.payload, n13 = v3(t12, (d14) => (d14.push(e8), d14));
  t12.activeOptionIndex === null && (a25 = (u19 = t12.dataRef.current).isSelected) != null && a25.call(u19, i19.payload.dataRef.current.value) && (n13.activeOptionIndex = n13.options.indexOf(e8));
  let o21 = { ...t12, ...n13, activationTrigger: 2 };
  return (p6 = t12.dataRef.current) != null && p6.__demoMode && t12.dataRef.current.value === void 0 && (o21.activeOptionIndex = 0), o21;
}, [5]: (t12, i19) => {
  var n13;
  if ((n13 = t12.dataRef.current) != null && n13.virtual) return { ...t12, options: t12.options.filter((o21) => o21.id !== i19.id) };
  let e8 = v3(t12, (o21) => {
    let r21 = o21.findIndex((u19) => u19.id === i19.id);
    return r21 !== -1 && o21.splice(r21, 1), o21;
  });
  return { ...t12, ...e8, activationTrigger: 2 };
}, [6]: (t12, i19) => t12.defaultToFirstOption === i19.value ? t12 : { ...t12, defaultToFirstOption: i19.value }, [7]: (t12, i19) => t12.activationTrigger === i19.trigger ? t12 : { ...t12, activationTrigger: i19.trigger }, [8]: (t12, i19) => {
  var n13, o21;
  if (t12.virtual === null) return { ...t12, virtual: { options: i19.options, disabled: (n13 = i19.disabled) != null ? n13 : () => false } };
  if (t12.virtual.options === i19.options && t12.virtual.disabled === i19.disabled) return t12;
  let e8 = t12.activeOptionIndex;
  if (t12.activeOptionIndex !== null) {
    let r21 = i19.options.indexOf(t12.virtual.options[t12.activeOptionIndex]);
    r21 !== -1 ? e8 = r21 : e8 = null;
  }
  return { ...t12, activeOptionIndex: e8, virtual: { options: i19.options, disabled: (o21 = i19.disabled) != null ? o21 : () => false } };
}, [9]: (t12, i19) => t12.inputElement === i19.element ? t12 : { ...t12, inputElement: i19.element }, [10]: (t12, i19) => t12.buttonElement === i19.element ? t12 : { ...t12, buttonElement: i19.element }, [11]: (t12, i19) => t12.optionsElement === i19.element ? t12 : { ...t12, optionsElement: i19.element } };
var O4 = class _O extends m9 {
  constructor() {
    super(...arguments);
    c28(this, "actions", { onChange: (e8) => {
      let { onChange: n13, compare: o21, mode: r21, value: u19 } = this.state.dataRef.current;
      return u(r21, { [0]: () => n13 == null ? void 0 : n13(e8), [1]: () => {
        let a25 = u19.slice(), p6 = a25.findIndex((d14) => o21(d14, e8));
        return p6 === -1 ? a25.push(e8) : a25.splice(p6, 1), n13 == null ? void 0 : n13(a25);
      } });
    }, registerOption: (e8, n13) => (this.send({ type: 4, payload: { id: e8, dataRef: n13 } }), () => {
      this.state.activeOptionIndex === this.state.dataRef.current.calculateIndex(n13.current.value) && this.send({ type: 6, value: true }), this.send({ type: 5, id: e8 });
    }), goToOption: (e8, n13) => (this.send({ type: 6, value: false }), this.send({ type: 2, ...e8, trigger: n13 })), setIsTyping: (e8) => {
      this.send({ type: 3, isTyping: e8 });
    }, closeCombobox: () => {
      var e8, n13;
      this.send({ type: 1 }), this.send({ type: 6, value: false }), (n13 = (e8 = this.state.dataRef.current).onClose) == null || n13.call(e8);
    }, openCombobox: () => {
      this.send({ type: 0 }), this.send({ type: 6, value: true });
    }, setActivationTrigger: (e8) => {
      this.send({ type: 7, trigger: e8 });
    }, selectActiveOption: () => {
      let e8 = this.selectors.activeOptionIndex(this.state);
      if (e8 !== null) {
        if (this.actions.setIsTyping(false), this.state.virtual) this.actions.onChange(this.state.virtual.options[e8]);
        else {
          let { dataRef: n13 } = this.state.options[e8];
          this.actions.onChange(n13.current.value);
        }
        this.actions.goToOption({ focus: c24.Specific, idx: e8 });
      }
    }, setInputElement: (e8) => {
      this.send({ type: 9, element: e8 });
    }, setButtonElement: (e8) => {
      this.send({ type: 10, element: e8 });
    }, setOptionsElement: (e8) => {
      this.send({ type: 11, element: e8 });
    } });
    c28(this, "selectors", { activeDescendantId: (e8) => {
      var o21, r21;
      let n13 = this.selectors.activeOptionIndex(e8);
      if (n13 !== null) return e8.virtual ? (r21 = e8.options.find((u19) => !u19.dataRef.current.disabled && e8.dataRef.current.compare(u19.dataRef.current.value, e8.virtual.options[n13]))) == null ? void 0 : r21.id : (o21 = e8.options[n13]) == null ? void 0 : o21.id;
    }, activeOptionIndex: (e8) => {
      if (e8.defaultToFirstOption && e8.activeOptionIndex === null && (e8.virtual ? e8.virtual.options.length > 0 : e8.options.length > 0)) {
        if (e8.virtual) {
          let { options: o21, disabled: r21 } = e8.virtual, u19 = o21.findIndex((a25) => {
            var p6;
            return !((p6 = r21 == null ? void 0 : r21(a25)) != null && p6);
          });
          if (u19 !== -1) return u19;
        }
        let n13 = e8.options.findIndex((o21) => !o21.dataRef.current.disabled);
        if (n13 !== -1) return n13;
      }
      return e8.activeOptionIndex;
    }, activeOption: (e8) => {
      var o21, r21;
      let n13 = this.selectors.activeOptionIndex(e8);
      return n13 === null ? null : e8.virtual ? e8.virtual.options[n13 != null ? n13 : 0] : (r21 = (o21 = e8.options[n13]) == null ? void 0 : o21.dataRef.current.value) != null ? r21 : null;
    }, isActive: (e8, n13, o21) => {
      var u19;
      let r21 = this.selectors.activeOptionIndex(e8);
      return r21 === null ? false : e8.virtual ? r21 === e8.dataRef.current.calculateIndex(n13) : ((u19 = e8.options[r21]) == null ? void 0 : u19.id) === o21;
    }, shouldScrollIntoView: (e8, n13, o21) => !(e8.virtual || e8.__demoMode || e8.comboboxState !== 0 || e8.activationTrigger === 0 || !this.selectors.isActive(e8, n13, o21)) });
  }
  static new({ virtual: e8 = null, __demoMode: n13 = false } = {}) {
    var o21;
    return new _O({ dataRef: { current: {} }, comboboxState: n13 ? 0 : 1, isTyping: false, options: [], virtual: e8 ? { options: e8.options, disabled: (o21 = e8.disabled) != null ? o21 : () => false } : null, activeOptionIndex: null, activationTrigger: 2, inputElement: null, buttonElement: null, optionsElement: null, __demoMode: n13 });
  }
  reduce(e8, n13) {
    return u(n13.type, F4, e8, n13);
  }
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox-machine-glue.js
var import_react91 = __toESM(require_react(), 1);
var b5 = (0, import_react91.createContext)(null);
function u16(e8) {
  let o21 = (0, import_react91.useContext)(b5);
  if (o21 === null) {
    let n13 = new Error(`<${e8} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n13, i13), n13;
  }
  return o21;
}
function i13({ virtual: e8 = null, __demoMode: o21 = false } = {}) {
  return (0, import_react91.useMemo)(() => O4.new({ virtual: e8, __demoMode: o21 }), []);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var ue2 = (0, import_react92.createContext)(null);
ue2.displayName = "ComboboxDataContext";
function ne(y8) {
  let O9 = (0, import_react92.useContext)(ue2);
  if (O9 === null) {
    let e8 = new Error(`<${y8} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e8, ne), e8;
  }
  return O9;
}
var Se = (0, import_react92.createContext)(null);
function xo(y8) {
  let O9 = u16("VirtualProvider"), e8 = ne("VirtualProvider"), { options: o21 } = e8.virtual, V6 = S6(O9, (a25) => a25.optionsElement), [A8, C10] = (0, import_react92.useMemo)(() => {
    let a25 = V6;
    if (!a25) return [0, 0];
    let g8 = window.getComputedStyle(a25);
    return [parseFloat(g8.paddingBlockStart || g8.paddingTop), parseFloat(g8.paddingBlockEnd || g8.paddingBottom)];
  }, [V6]), b11 = useVirtualizer({ enabled: o21.length !== 0, scrollPaddingStart: A8, scrollPaddingEnd: C10, count: o21.length, estimateSize() {
    return 40;
  }, getScrollElement() {
    return O9.state.optionsElement;
  }, overscan: 12 }), [h11, l17] = (0, import_react92.useState)(0);
  n(() => {
    l17((a25) => a25 + 1);
  }, [o21]);
  let c64 = b11.getVirtualItems(), n13 = S6(O9, (a25) => a25.activationTrigger === C6.Pointer), x11 = S6(O9, O9.selectors.activeOptionIndex);
  return c64.length === 0 ? null : import_react92.default.createElement(Se.Provider, { value: b11 }, import_react92.default.createElement("div", { style: { position: "relative", width: "100%", height: `${b11.getTotalSize()}px` }, ref: (a25) => {
    a25 && (n13 || x11 !== null && o21.length > x11 && b11.scrollToIndex(x11));
  } }, c64.map((a25) => {
    var g8;
    return import_react92.default.createElement(import_react92.Fragment, { key: a25.key }, import_react92.default.cloneElement((g8 = y8.children) == null ? void 0 : g8.call(y8, { ...y8.slot, option: o21[a25.index] }), { key: `${h11}-${a25.key}`, "data-index": a25.index, "aria-setsize": o21.length, "aria-posinset": a25.index + 1, style: { position: "absolute", top: 0, left: 0, transform: `translateY(${a25.start}px)`, overflowAnchor: "none" } }));
  })));
}
var go = import_react92.Fragment;
function yo(y8, O9) {
  let e8 = a3(), { value: o21, defaultValue: V6, onChange: A8, form: C10, name: b11, by: h11, invalid: l17 = false, disabled: c64 = e8 || false, onClose: n13, __demoMode: x11 = false, multiple: a25 = false, immediate: g8 = false, virtual: f22 = null, nullable: B5, ...w10 } = y8, F9 = l2(V6), [m12 = a25 ? [] : void 0, P7] = T(o21, A8, F9), d14 = i13({ virtual: f22, __demoMode: x11 }), _8 = (0, import_react92.useRef)({ static: false, hold: false }), I7 = u8(h11), N3 = o5((p6) => f22 ? h11 === null ? f22.options.indexOf(p6) : f22.options.findIndex((T12) => I7(T12, p6)) : d14.state.options.findIndex((T12) => I7(T12.dataRef.current.value, p6))), z3 = (0, import_react92.useCallback)((p6) => u(i19.mode, { [E8.Multi]: () => m12.some((T12) => I7(T12, p6)), [E8.Single]: () => I7(m12, p6) }), [m12]), K4 = S6(d14, (p6) => p6.virtual), k5 = o5(() => n13 == null ? void 0 : n13()), i19 = (0, import_react92.useMemo)(() => ({ __demoMode: x11, immediate: g8, optionsPropsRef: _8, value: m12, defaultValue: F9, disabled: c64, invalid: l17, mode: a25 ? E8.Multi : E8.Single, virtual: f22 ? K4 : null, onChange: P7, isSelected: z3, calculateIndex: N3, compare: I7, onClose: k5 }), [m12, F9, c64, l17, a25, P7, z3, x11, d14, f22, K4, k5]);
  n(() => {
    var p6;
    f22 && d14.send({ type: M4.UpdateVirtualConfiguration, options: f22.options, disabled: (p6 = f22.disabled) != null ? p6 : null });
  }, [f22, f22 == null ? void 0 : f22.options, f22 == null ? void 0 : f22.disabled]), n(() => {
    d14.state.dataRef.current = i19;
  }, [i19]);
  let [S10, $4, U7, s15] = S6(d14, (p6) => [p6.comboboxState, p6.buttonElement, p6.inputElement, p6.optionsElement]), W3 = S10 === A5.Open;
  R3(W3, [$4, U7, s15], () => d14.actions.closeCombobox());
  let ae5 = S6(d14, d14.selectors.activeOptionIndex), J7 = S6(d14, d14.selectors.activeOption), q5 = (0, import_react92.useMemo)(() => ({ open: S10 === A5.Open, disabled: c64, invalid: l17, activeIndex: ae5, activeOption: J7, value: m12 }), [i19, c64, m12, l17, J7, S10]), [j8, pe5] = K2(), Y4 = O9 === null ? {} : { ref: O9 }, ee4 = (0, import_react92.useCallback)(() => {
    if (F9 !== void 0) return P7 == null ? void 0 : P7(F9);
  }, [P7, F9]), t12 = L();
  return import_react92.default.createElement(pe5, { value: j8, props: { htmlFor: U7 == null ? void 0 : U7.id }, slot: { open: S10 === A5.Open, disabled: c64 } }, import_react92.default.createElement(Me, null, import_react92.default.createElement(ue2.Provider, { value: i19 }, import_react92.default.createElement(b5.Provider, { value: d14 }, import_react92.default.createElement(c22, { value: u(S10, { [A5.Open]: i11.Open, [A5.Closed]: i11.Closed }) }, b11 != null && import_react92.default.createElement(j2, { disabled: c64, data: m12 != null ? { [b11]: m12 } : {}, form: C10, onReset: ee4 }), t12({ ourProps: Y4, theirProps: w10, slot: q5, defaultTag: go, name: "Combobox" }))))));
}
var Co = "input";
function vo(y8, O9) {
  var Y4, ee4;
  let e8 = u16("Combobox.Input"), o21 = ne("Combobox.Input"), V6 = (0, import_react57.useId)(), A8 = u4(), { id: C10 = A8 || `headlessui-combobox-input-${V6}`, onChange: b11, displayValue: h11, disabled: l17 = o21.disabled || false, autoFocus: c64 = false, type: n13 = "text", ...x11 } = y8, [a25] = S6(e8, (t12) => [t12.inputElement]), g8 = (0, import_react92.useRef)(null), f22 = y(g8, O9, ye(), e8.actions.setInputElement), B5 = n9(a25), [w10, F9] = S6(e8, (t12) => [t12.comboboxState, t12.isTyping]), m12 = p(), P7 = o5(() => {
    e8.actions.onChange(null), e8.state.optionsElement && (e8.state.optionsElement.scrollTop = 0), e8.actions.goToOption({ focus: c24.Nothing });
  }), d14 = (0, import_react92.useMemo)(() => {
    var t12;
    return typeof h11 == "function" && o21.value !== void 0 ? (t12 = h11(o21.value)) != null ? t12 : "" : typeof o21.value == "string" ? o21.value : "";
  }, [o21.value, h11]);
  m8(([t12, p6], [T12, H14]) => {
    if (e8.state.isTyping) return;
    let v5 = g8.current;
    v5 && ((H14 === A5.Open && p6 === A5.Closed || t12 !== T12) && (v5.value = t12), requestAnimationFrame(() => {
      if (e8.state.isTyping || !v5 || (B5 == null ? void 0 : B5.activeElement) !== v5) return;
      let { selectionStart: u19, selectionEnd: oe3 } = v5;
      Math.abs((oe3 != null ? oe3 : 0) - (u19 != null ? u19 : 0)) === 0 && u19 === 0 && v5.setSelectionRange(v5.value.length, v5.value.length);
    }));
  }, [d14, w10, B5, F9]), m8(([t12], [p6]) => {
    if (t12 === A5.Open && p6 === A5.Closed) {
      if (e8.state.isTyping) return;
      let T12 = g8.current;
      if (!T12) return;
      let H14 = T12.value, { selectionStart: v5, selectionEnd: u19, selectionDirection: oe3 } = T12;
      T12.value = "", T12.value = H14, oe3 !== null ? T12.setSelectionRange(v5, u19, oe3) : T12.setSelectionRange(v5, u19);
    }
  }, [w10]);
  let _8 = (0, import_react92.useRef)(false), I7 = o5(() => {
    _8.current = true;
  }), N3 = o5(() => {
    m12.nextFrame(() => {
      _8.current = false;
    });
  }), z3 = o5((t12) => {
    switch (e8.actions.setIsTyping(true), t12.key) {
      case o9.Enter:
        if (e8.state.comboboxState !== A5.Open || _8.current) return;
        if (t12.preventDefault(), t12.stopPropagation(), e8.selectors.activeOptionIndex(e8.state) === null) {
          e8.actions.closeCombobox();
          return;
        }
        e8.actions.selectActiveOption(), o21.mode === E8.Single && e8.actions.closeCombobox();
        break;
      case o9.ArrowDown:
        return t12.preventDefault(), t12.stopPropagation(), u(e8.state.comboboxState, { [A5.Open]: () => e8.actions.goToOption({ focus: c24.Next }), [A5.Closed]: () => e8.actions.openCombobox() });
      case o9.ArrowUp:
        return t12.preventDefault(), t12.stopPropagation(), u(e8.state.comboboxState, { [A5.Open]: () => e8.actions.goToOption({ focus: c24.Previous }), [A5.Closed]: () => {
          (0, import_react_dom7.flushSync)(() => e8.actions.openCombobox()), o21.value || e8.actions.goToOption({ focus: c24.Last });
        } });
      case o9.Home:
        if (t12.shiftKey) break;
        return t12.preventDefault(), t12.stopPropagation(), e8.actions.goToOption({ focus: c24.First });
      case o9.PageUp:
        return t12.preventDefault(), t12.stopPropagation(), e8.actions.goToOption({ focus: c24.First });
      case o9.End:
        if (t12.shiftKey) break;
        return t12.preventDefault(), t12.stopPropagation(), e8.actions.goToOption({ focus: c24.Last });
      case o9.PageDown:
        return t12.preventDefault(), t12.stopPropagation(), e8.actions.goToOption({ focus: c24.Last });
      case o9.Escape:
        return e8.state.comboboxState !== A5.Open ? void 0 : (t12.preventDefault(), e8.state.optionsElement && !o21.optionsPropsRef.current.static && t12.stopPropagation(), o21.mode === E8.Single && o21.value === null && P7(), e8.actions.closeCombobox());
      case o9.Tab:
        if (e8.state.comboboxState !== A5.Open) return;
        o21.mode === E8.Single && e8.state.activationTrigger !== C6.Focus && e8.actions.selectActiveOption(), e8.actions.closeCombobox();
        break;
    }
  }), K4 = o5((t12) => {
    b11 == null || b11(t12), o21.mode === E8.Single && t12.target.value === "" && P7(), e8.actions.openCombobox();
  }), k5 = o5((t12) => {
    var T12, H14, v5;
    let p6 = (T12 = t12.relatedTarget) != null ? T12 : r12.find((u19) => u19 !== t12.currentTarget);
    if (!((H14 = e8.state.optionsElement) != null && H14.contains(p6)) && !((v5 = e8.state.buttonElement) != null && v5.contains(p6)) && e8.state.comboboxState === A5.Open) return t12.preventDefault(), o21.mode === E8.Single && o21.value === null && P7(), e8.actions.closeCombobox();
  }), i19 = o5((t12) => {
    var T12, H14, v5;
    let p6 = (T12 = t12.relatedTarget) != null ? T12 : r12.find((u19) => u19 !== t12.currentTarget);
    (H14 = e8.state.buttonElement) != null && H14.contains(p6) || (v5 = e8.state.optionsElement) != null && v5.contains(p6) || o21.disabled || o21.immediate && e8.state.comboboxState !== A5.Open && m12.microTask(() => {
      (0, import_react_dom7.flushSync)(() => e8.actions.openCombobox()), e8.actions.setActivationTrigger(C6.Focus);
    });
  }), S10 = I(), $4 = U2(), { isFocused: U7, focusProps: s15 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: c64 }), { isHovered: W3, hoverProps: ae5 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: l17 }), J7 = S6(e8, (t12) => t12.optionsElement), q5 = (0, import_react92.useMemo)(() => ({ open: w10 === A5.Open, disabled: l17, invalid: o21.invalid, hover: W3, focus: U7, autofocus: c64 }), [o21, W3, U7, c64, l17, o21.invalid]), j8 = _({ ref: f22, id: C10, role: "combobox", type: n13, "aria-controls": J7 == null ? void 0 : J7.id, "aria-expanded": w10 === A5.Open, "aria-activedescendant": S6(e8, e8.selectors.activeDescendantId), "aria-labelledby": S10, "aria-describedby": $4, "aria-autocomplete": "list", defaultValue: (ee4 = (Y4 = y8.defaultValue) != null ? Y4 : o21.defaultValue !== void 0 ? h11 == null ? void 0 : h11(o21.defaultValue) : null) != null ? ee4 : o21.defaultValue, disabled: l17 || void 0, autoFocus: c64, onCompositionStart: I7, onCompositionEnd: N3, onKeyDown: z3, onChange: K4, onFocus: i19, onBlur: k5 }, s15, ae5);
  return L()({ ourProps: j8, theirProps: x11, slot: q5, defaultTag: Co, name: "Combobox.Input" });
}
var Po = "button";
function Eo(y8, O9) {
  let e8 = u16("Combobox.Button"), o21 = ne("Combobox.Button"), [V6, A8] = (0, import_react92.useState)(null), C10 = y(O9, A8, e8.actions.setButtonElement), b11 = (0, import_react57.useId)(), { id: h11 = `headlessui-combobox-button-${b11}`, disabled: l17 = o21.disabled || false, autoFocus: c64 = false, ...n13 } = y8, x11 = S6(e8, (i19) => i19.inputElement), a25 = i10(x11), g8 = o5((i19) => {
    switch (i19.key) {
      case o9.Space:
      case o9.Enter:
        i19.preventDefault(), i19.stopPropagation(), e8.state.comboboxState === A5.Closed && (0, import_react_dom7.flushSync)(() => e8.actions.openCombobox()), a25();
        return;
      case o9.ArrowDown:
        i19.preventDefault(), i19.stopPropagation(), e8.state.comboboxState === A5.Closed && ((0, import_react_dom7.flushSync)(() => e8.actions.openCombobox()), e8.state.dataRef.current.value || e8.actions.goToOption({ focus: c24.First })), a25();
        return;
      case o9.ArrowUp:
        i19.preventDefault(), i19.stopPropagation(), e8.state.comboboxState === A5.Closed && ((0, import_react_dom7.flushSync)(() => e8.actions.openCombobox()), e8.state.dataRef.current.value || e8.actions.goToOption({ focus: c24.Last })), a25();
        return;
      case o9.Escape:
        if (e8.state.comboboxState !== A5.Open) return;
        i19.preventDefault(), e8.state.optionsElement && !o21.optionsPropsRef.current.static && i19.stopPropagation(), (0, import_react_dom7.flushSync)(() => e8.actions.closeCombobox()), a25();
        return;
      default:
        return;
    }
  }), f22 = o5((i19) => {
    i19.preventDefault(), !r5(i19.currentTarget) && (i19.button === g3.Left && (e8.state.comboboxState === A5.Open ? e8.actions.closeCombobox() : e8.actions.openCombobox()), a25());
  }), B5 = I([h11]), { isFocusVisible: w10, focusProps: F9 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: c64 }), { isHovered: m12, hoverProps: P7 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: l17 }), { pressed: d14, pressProps: _8 } = w({ disabled: l17 }), [I7, N3] = S6(e8, (i19) => [i19.comboboxState, i19.optionsElement]), z3 = (0, import_react92.useMemo)(() => ({ open: I7 === A5.Open, active: d14 || I7 === A5.Open, disabled: l17, invalid: o21.invalid, value: o21.value, hover: m12, focus: w10 }), [o21, m12, w10, d14, l17, I7]), K4 = _({ ref: C10, id: h11, type: e6(y8, V6), tabIndex: -1, "aria-haspopup": "listbox", "aria-controls": N3 == null ? void 0 : N3.id, "aria-expanded": I7 === A5.Open, "aria-labelledby": B5, disabled: l17 || void 0, autoFocus: c64, onMouseDown: f22, onKeyDown: g8 }, F9, P7, _8);
  return L()({ ourProps: K4, theirProps: n13, slot: z3, defaultTag: Po, name: "Combobox.Button" });
}
var Oo = "div";
var ho = O.RenderStrategy | O.Static;
function Ao(y8, O9) {
  var T12, H14, v5;
  let e8 = (0, import_react57.useId)(), { id: o21 = `headlessui-combobox-options-${e8}`, hold: V6 = false, anchor: A8, portal: C10 = false, modal: b11 = true, transition: h11 = false, ...l17 } = y8, c64 = u16("Combobox.Options"), n13 = ne("Combobox.Options"), x11 = xe(A8);
  x11 && (C10 = true);
  let [a25, g8] = Re(x11), [f22, B5] = (0, import_react92.useState)(null), w10 = be(), F9 = y(O9, x11 ? a25 : null, c64.actions.setOptionsElement, B5), [m12, P7, d14, _8, I7] = S6(c64, (u19) => [u19.comboboxState, u19.inputElement, u19.buttonElement, u19.optionsElement, u19.activationTrigger]), N3 = n9(P7 || d14), z3 = n9(_8), K4 = u12(), [k5, i19] = x3(h11, f22, K4 !== null ? (K4 & i11.Open) === i11.Open : m12 === A5.Open);
  m6(k5, P7, c64.actions.closeCombobox);
  let S10 = n13.__demoMode ? false : b11 && m12 === A5.Open;
  f11(S10, z3);
  let $4 = n13.__demoMode ? false : b11 && m12 === A5.Open;
  y3($4, { allowed: (0, import_react92.useCallback)(() => [P7, d14, _8], [P7, d14, _8]) }), n(() => {
    var u19;
    n13.optionsPropsRef.current.static = (u19 = y8.static) != null ? u19 : false;
  }, [n13.optionsPropsRef, y8.static]), n(() => {
    n13.optionsPropsRef.current.hold = V6;
  }, [n13.optionsPropsRef, V6]), F3(m12 === A5.Open, { container: _8, accept(u19) {
    return u19.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : u19.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(u19) {
    u19.setAttribute("role", "none");
  } });
  let U7 = I([d14 == null ? void 0 : d14.id]), s15 = (0, import_react92.useMemo)(() => ({ open: m12 === A5.Open, option: void 0 }), [m12]), W3 = o5(() => {
    c64.actions.setActivationTrigger(C6.Pointer);
  }), ae5 = o5((u19) => {
    u19.preventDefault(), c64.actions.setActivationTrigger(C6.Pointer);
  }), J7 = _(x11 ? w10() : {}, { "aria-labelledby": U7, role: "listbox", "aria-multiselectable": n13.mode === E8.Multi ? true : void 0, id: o21, ref: F9, style: { ...l17.style, ...g8, "--input-width": d3(P7, true).width, "--button-width": d3(d14, true).width }, onWheel: I7 === C6.Pointer ? void 0 : W3, onMouseDown: ae5, ...R4(i19) }), q5 = k5 && m12 === A5.Closed, j8 = l7(q5, (T12 = n13.virtual) == null ? void 0 : T12.options), pe5 = l7(q5, n13.value), Y4 = o5((u19) => n13.compare(pe5, u19)), ee4 = (0, import_react92.useMemo)(() => {
    if (!n13.virtual) return n13;
    if (j8 === void 0) throw new Error("Missing `options` in virtual mode");
    return j8 !== n13.virtual.options ? { ...n13, virtual: { ...n13.virtual, options: j8 } } : n13;
  }, [n13, j8, (H14 = n13.virtual) == null ? void 0 : H14.options]);
  n13.virtual && Object.assign(l17, { children: import_react92.default.createElement(ue2.Provider, { value: ee4 }, import_react92.default.createElement(xo, { slot: s15 }, l17.children)) });
  let t12 = L(), p6 = (0, import_react92.useMemo)(() => n13.mode === E8.Multi ? n13 : { ...n13, isSelected: Y4 }, [n13, Y4]);
  return import_react92.default.createElement(oe, { enabled: C10 ? y8.static || k5 : false, ownerDocument: N3 }, import_react92.default.createElement(ue2.Provider, { value: p6 }, t12({ ourProps: J7, theirProps: { ...l17, children: import_react92.default.createElement(f13, { freeze: q5 }, typeof l17.children == "function" ? (v5 = l17.children) == null ? void 0 : v5.call(l17, s15) : l17.children) }, slot: s15, defaultTag: Oo, features: ho, visible: k5, name: "Combobox.Options" })));
}
var Io = "div";
function Ro(y8, O9) {
  var S10, $4, U7;
  let e8 = ne("Combobox.Option"), o21 = u16("Combobox.Option"), V6 = (0, import_react57.useId)(), { id: A8 = `headlessui-combobox-option-${V6}`, value: C10, disabled: b11 = (U7 = ($4 = (S10 = e8.virtual) == null ? void 0 : S10.disabled) == null ? void 0 : $4.call(S10, C10)) != null ? U7 : false, order: h11 = null, ...l17 } = y8, [c64] = S6(o21, (s15) => [s15.inputElement]), n13 = i10(c64), x11 = S6(o21, (0, import_react92.useCallback)((s15) => o21.selectors.isActive(s15, C10, A8), [C10, A8])), a25 = e8.isSelected(C10), g8 = (0, import_react92.useRef)(null), f22 = s3({ disabled: b11, value: C10, domRef: g8, order: h11 }), B5 = (0, import_react92.useContext)(Se), w10 = y(O9, g8, B5 ? B5.measureElement : null), F9 = o5(() => {
    o21.actions.setIsTyping(false), o21.actions.onChange(C10);
  });
  n(() => o21.actions.registerOption(A8, f22), [f22, A8]);
  let m12 = S6(o21, (0, import_react92.useCallback)((s15) => o21.selectors.shouldScrollIntoView(s15, C10, A8), [C10, A8]));
  n(() => {
    if (m12) return o3().requestAnimationFrame(() => {
      var s15, W3;
      (W3 = (s15 = g8.current) == null ? void 0 : s15.scrollIntoView) == null || W3.call(s15, { block: "nearest" });
    });
  }, [m12, g8]);
  let P7 = o5((s15) => {
    s15.preventDefault(), s15.button === g3.Left && (b11 || (F9(), n8() || requestAnimationFrame(() => n13()), e8.mode === E8.Single && o21.actions.closeCombobox()));
  }), d14 = o5(() => {
    if (b11) return o21.actions.goToOption({ focus: c24.Nothing });
    let s15 = e8.calculateIndex(C10);
    o21.actions.goToOption({ focus: c24.Specific, idx: s15 });
  }), _8 = u10(), I7 = o5((s15) => _8.update(s15)), N3 = o5((s15) => {
    if (!_8.wasMoved(s15) || b11 || x11) return;
    let W3 = e8.calculateIndex(C10);
    o21.actions.goToOption({ focus: c24.Specific, idx: W3 }, C6.Pointer);
  }), z3 = o5((s15) => {
    _8.wasMoved(s15) && (b11 || x11 && (e8.optionsPropsRef.current.hold || o21.actions.goToOption({ focus: c24.Nothing })));
  }), K4 = (0, import_react92.useMemo)(() => ({ active: x11, focus: x11, selected: a25, disabled: b11 }), [x11, a25, b11]), k5 = { id: A8, ref: w10, role: "option", tabIndex: b11 === true ? void 0 : -1, "aria-disabled": b11 === true ? true : void 0, "aria-selected": a25, disabled: void 0, onMouseDown: P7, onFocus: d14, onPointerEnter: I7, onMouseEnter: I7, onPointerMove: N3, onMouseMove: N3, onPointerLeave: z3, onMouseLeave: z3 };
  return L()({ ourProps: k5, theirProps: l17, slot: K4, defaultTag: Io, name: "Combobox.Option" });
}
var _o = K(yo);
var Do = K(Eo);
var Fo = K(vo);
var So = Q;
var Mo = K(Ao);
var Lo = K(Ro);
var Dt = Object.assign(_o, { Input: Fo, Button: Do, Label: So, Options: Mo, Option: Lo });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/data-interactive/data-interactive.js
var import_react93 = __toESM(require_react(), 1);
var E9 = import_react93.Fragment;
function d10(o21, n13) {
  let { ...s15 } = o21, e8 = false, { isFocusVisible: t12, focusProps: p6 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), { isHovered: r21, hoverProps: i19 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), { pressed: a25, pressProps: T12 } = w({ disabled: e8 }), l17 = _({ ref: n13 }, p6, i19, T12), c64 = (0, import_react93.useMemo)(() => ({ hover: r21, focus: t12, active: a25 }), [r21, t12, a25]);
  return L()({ ourProps: l17, theirProps: s15, slot: c64, defaultTag: E9, name: "DataInteractive" });
}
var x5 = K(d10);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var import_react100 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-escape.js
function a16(o21, r21 = typeof document != "undefined" ? document.defaultView : null, t12) {
  let n13 = x2(o21, "escape");
  E5(r21, "keydown", (e8) => {
    n13 && (e8.defaultPrevented || e8.key === o9.Escape && t12(e8));
  });
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-is-touch-device.js
var import_react94 = __toESM(require_react(), 1);
function f17() {
  var t12;
  let [e8] = (0, import_react94.useState)(() => typeof window != "undefined" && typeof window.matchMedia == "function" ? window.matchMedia("(pointer: coarse)") : null), [o21, c64] = (0, import_react94.useState)((t12 = e8 == null ? void 0 : e8.matches) != null ? t12 : false);
  return n(() => {
    if (!e8) return;
    function n13(r21) {
      c64(r21.matches);
    }
    return e8.addEventListener("change", n13), () => e8.removeEventListener("change", n13);
  }, [e8]), o21;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-root-containers.js
var import_react95 = __toESM(require_react(), 1);
function R6({ defaultContainers: l17 = [], portals: n13, mainTreeNode: o21 } = {}) {
  let r21 = n9(o21), u19 = o5(() => {
    var i19, c64;
    let t12 = [];
    for (let e8 of l17) e8 !== null && (e8 instanceof HTMLElement ? t12.push(e8) : "current" in e8 && e8.current instanceof HTMLElement && t12.push(e8.current));
    if (n13 != null && n13.current) for (let e8 of n13.current) t12.push(e8);
    for (let e8 of (i19 = r21 == null ? void 0 : r21.querySelectorAll("html > *, body > *")) != null ? i19 : []) e8 !== document.body && e8 !== document.head && e8 instanceof HTMLElement && e8.id !== "headlessui-portal-root" && (o21 && (e8.contains(o21) || e8.contains((c64 = o21 == null ? void 0 : o21.getRootNode()) == null ? void 0 : c64.host)) || t12.some((m12) => e8.contains(m12)) || t12.push(e8));
    return t12;
  });
  return { resolveContainers: u19, contains: o5((t12) => u19().some((i19) => i19.contains(t12))) };
}
var a17 = (0, import_react95.createContext)(null);
function O5({ children: l17, node: n13 }) {
  let [o21, r21] = (0, import_react95.useState)(null), u19 = b6(n13 != null ? n13 : o21);
  return import_react95.default.createElement(a17.Provider, { value: u19 }, l17, u19 === null && import_react95.default.createElement(f4, { features: s4.Hidden, ref: (t12) => {
    var i19, c64;
    if (t12) {
      for (let e8 of (c64 = (i19 = o2(t12)) == null ? void 0 : i19.querySelectorAll("html > *, body > *")) != null ? c64 : []) if (e8 !== document.body && e8 !== document.head && e8 instanceof HTMLElement && e8 != null && e8.contains(t12)) {
        r21(e8);
        break;
      }
    }
  } }));
}
function b6(l17 = null) {
  var n13;
  return (n13 = (0, import_react95.useContext)(a17)) != null ? n13 : l17;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
var import_react98 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
var import_react96 = __toESM(require_react(), 1);
function f19() {
  let e8 = (0, import_react96.useRef)(false);
  return n(() => (e8.current = true, () => {
    e8.current = false;
  }), []), e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var import_react97 = __toESM(require_react(), 1);
var a18 = ((r21) => (r21[r21.Forwards = 0] = "Forwards", r21[r21.Backwards = 1] = "Backwards", r21))(a18 || {});
function u17() {
  let e8 = (0, import_react97.useRef)(0);
  return s5(true, "keydown", (r21) => {
    r21.key === "Tab" && (e8.current = r21.shiftKey ? 1 : 0);
  }, true), e8;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function U4(o21) {
  if (!o21) return /* @__PURE__ */ new Set();
  if (typeof o21 == "function") return new Set(o21());
  let e8 = /* @__PURE__ */ new Set();
  for (let t12 of o21.current) t12.current instanceof HTMLElement && e8.add(t12.current);
  return e8;
}
var Z = "div";
var x6 = ((n13) => (n13[n13.None = 0] = "None", n13[n13.InitialFocus = 1] = "InitialFocus", n13[n13.TabLock = 2] = "TabLock", n13[n13.FocusLock = 4] = "FocusLock", n13[n13.RestoreFocus = 8] = "RestoreFocus", n13[n13.AutoFocus = 16] = "AutoFocus", n13))(x6 || {});
function $3(o21, e8) {
  let t12 = (0, import_react98.useRef)(null), r21 = y(t12, e8), { initialFocus: s15, initialFocusFallback: a25, containers: n13, features: u19 = 15, ...f22 } = o21;
  l10() || (u19 = 0);
  let l17 = n9(t12);
  ee(u19, { ownerDocument: l17 });
  let i19 = te2(u19, { ownerDocument: l17, container: t12, initialFocus: s15, initialFocusFallback: a25 });
  re2(u19, { ownerDocument: l17, container: t12, containers: n13, previousActiveElement: i19 });
  let R9 = u17(), g8 = o5((c64) => {
    let m12 = t12.current;
    if (!m12) return;
    ((G8) => G8())(() => {
      u(R9.current, { [a18.Forwards]: () => {
        P6(m12, F2.First, { skipElements: [c64.relatedTarget, a25] });
      }, [a18.Backwards]: () => {
        P6(m12, F2.Last, { skipElements: [c64.relatedTarget, a25] });
      } });
    });
  }), v5 = x2(!!(u19 & 2), "focus-trap#tab-lock"), N3 = p(), F9 = (0, import_react98.useRef)(false), k5 = { ref: r21, onKeyDown(c64) {
    c64.key == "Tab" && (F9.current = true, N3.requestAnimationFrame(() => {
      F9.current = false;
    }));
  }, onBlur(c64) {
    if (!(u19 & 4)) return;
    let m12 = U4(n13);
    t12.current instanceof HTMLElement && m12.add(t12.current);
    let d14 = c64.relatedTarget;
    d14 instanceof HTMLElement && d14.dataset.headlessuiFocusGuard !== "true" && (I5(m12, d14) || (F9.current ? P6(t12.current, u(R9.current, { [a18.Forwards]: () => F2.Next, [a18.Backwards]: () => F2.Previous }) | F2.WrapAround, { relativeTo: c64.target }) : c64.target instanceof HTMLElement && I2(c64.target)));
  } }, B5 = L();
  return import_react98.default.createElement(import_react98.default.Fragment, null, v5 && import_react98.default.createElement(f4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: g8, features: s4.Focusable }), B5({ ourProps: k5, theirProps: f22, defaultTag: Z, name: "FocusTrap" }), v5 && import_react98.default.createElement(f4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: g8, features: s4.Focusable }));
}
var D6 = K($3);
var ye2 = Object.assign(D6, { features: x6 });
function w6(o21 = true) {
  let e8 = (0, import_react98.useRef)(r12.slice());
  return m8(([t12], [r21]) => {
    r21 === true && t12 === false && t(() => {
      e8.current.splice(0);
    }), r21 === false && t12 === true && (e8.current = r12.slice());
  }, [o21, r12, e8]), o5(() => {
    var t12;
    return (t12 = e8.current.find((r21) => r21 != null && r21.isConnected)) != null ? t12 : null;
  });
}
function ee(o21, { ownerDocument: e8 }) {
  let t12 = !!(o21 & 8), r21 = w6(t12);
  m8(() => {
    t12 || (e8 == null ? void 0 : e8.activeElement) === (e8 == null ? void 0 : e8.body) && I2(r21());
  }, [t12]), c25(() => {
    t12 && I2(r21());
  });
}
function te2(o21, { ownerDocument: e8, container: t12, initialFocus: r21, initialFocusFallback: s15 }) {
  let a25 = (0, import_react98.useRef)(null), n13 = x2(!!(o21 & 1), "focus-trap#initial-focus"), u19 = f19();
  return m8(() => {
    if (o21 === 0) return;
    if (!n13) {
      s15 != null && s15.current && I2(s15.current);
      return;
    }
    let f22 = t12.current;
    f22 && t(() => {
      if (!u19.current) return;
      let l17 = e8 == null ? void 0 : e8.activeElement;
      if (r21 != null && r21.current) {
        if ((r21 == null ? void 0 : r21.current) === l17) {
          a25.current = l17;
          return;
        }
      } else if (f22.contains(l17)) {
        a25.current = l17;
        return;
      }
      if (r21 != null && r21.current) I2(r21.current);
      else {
        if (o21 & 16) {
          if (P6(f22, F2.First | F2.AutoFocus) !== T5.Error) return;
        } else if (P6(f22, F2.First) !== T5.Error) return;
        if (s15 != null && s15.current && (I2(s15.current), (e8 == null ? void 0 : e8.activeElement) === s15.current)) return;
        console.warn("There are no focusable elements inside the <FocusTrap />");
      }
      a25.current = e8 == null ? void 0 : e8.activeElement;
    });
  }, [s15, n13, o21]), a25;
}
function re2(o21, { ownerDocument: e8, container: t12, containers: r21, previousActiveElement: s15 }) {
  let a25 = f19(), n13 = !!(o21 & 4);
  E5(e8 == null ? void 0 : e8.defaultView, "focus", (u19) => {
    if (!n13 || !a25.current) return;
    let f22 = U4(r21);
    t12.current instanceof HTMLElement && f22.add(t12.current);
    let l17 = s15.current;
    if (!l17) return;
    let i19 = u19.target;
    i19 && i19 instanceof HTMLElement ? I5(f22, i19) ? (s15.current = i19, I2(i19)) : (u19.preventDefault(), u19.stopPropagation(), I2(l17)) : I2(s15.current);
  }, true);
}
function I5(o21, e8) {
  for (let t12 of o21) if (t12.contains(e8)) return true;
  return false;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/transition/transition.js
var import_react99 = __toESM(require_react(), 1);
function ue3(e8) {
  var t12;
  return !!(e8.enter || e8.enterFrom || e8.enterTo || e8.leave || e8.leaveFrom || e8.leaveTo) || ((t12 = e8.as) != null ? t12 : de3) !== import_react99.Fragment || import_react99.default.Children.count(e8.children) === 1;
}
var w7 = (0, import_react99.createContext)(null);
w7.displayName = "TransitionContext";
var _e = ((n13) => (n13.Visible = "visible", n13.Hidden = "hidden", n13))(_e || {});
function De() {
  let e8 = (0, import_react99.useContext)(w7);
  if (e8 === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e8;
}
function He() {
  let e8 = (0, import_react99.useContext)(M7);
  if (e8 === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return e8;
}
var M7 = (0, import_react99.createContext)(null);
M7.displayName = "NestingContext";
function U5(e8) {
  return "children" in e8 ? U5(e8.children) : e8.current.filter(({ el: t12 }) => t12.current !== null).filter(({ state: t12 }) => t12 === "visible").length > 0;
}
function Te2(e8, t12) {
  let n13 = s3(e8), l17 = (0, import_react99.useRef)([]), S10 = f19(), R9 = p(), d14 = o5((o21, i19 = A.Hidden) => {
    let a25 = l17.current.findIndex(({ el: s15 }) => s15 === o21);
    a25 !== -1 && (u(i19, { [A.Unmount]() {
      l17.current.splice(a25, 1);
    }, [A.Hidden]() {
      l17.current[a25].state = "hidden";
    } }), R9.microTask(() => {
      var s15;
      !U5(l17) && S10.current && ((s15 = n13.current) == null || s15.call(n13));
    }));
  }), y8 = o5((o21) => {
    let i19 = l17.current.find(({ el: a25 }) => a25 === o21);
    return i19 ? i19.state !== "visible" && (i19.state = "visible") : l17.current.push({ el: o21, state: "visible" }), () => d14(o21, A.Unmount);
  }), C10 = (0, import_react99.useRef)([]), p6 = (0, import_react99.useRef)(Promise.resolve()), h11 = (0, import_react99.useRef)({ enter: [], leave: [] }), g8 = o5((o21, i19, a25) => {
    C10.current.splice(0), t12 && (t12.chains.current[i19] = t12.chains.current[i19].filter(([s15]) => s15 !== o21)), t12 == null || t12.chains.current[i19].push([o21, new Promise((s15) => {
      C10.current.push(s15);
    })]), t12 == null || t12.chains.current[i19].push([o21, new Promise((s15) => {
      Promise.all(h11.current[i19].map(([r21, f22]) => f22)).then(() => s15());
    })]), i19 === "enter" ? p6.current = p6.current.then(() => t12 == null ? void 0 : t12.wait.current).then(() => a25(i19)) : a25(i19);
  }), v5 = o5((o21, i19, a25) => {
    Promise.all(h11.current[i19].splice(0).map(([s15, r21]) => r21)).then(() => {
      var s15;
      (s15 = C10.current.shift()) == null || s15();
    }).then(() => a25(i19));
  });
  return (0, import_react99.useMemo)(() => ({ children: l17, register: y8, unregister: d14, onStart: g8, onStop: v5, wait: p6, chains: h11 }), [y8, d14, l17, g8, v5, h11, p6]);
}
var de3 = import_react99.Fragment;
var fe = O.RenderStrategy;
function Ae(e8, t12) {
  var ee4, te6;
  let { transition: n13 = true, beforeEnter: l17, afterEnter: S10, beforeLeave: R9, afterLeave: d14, enter: y8, enterFrom: C10, enterTo: p6, entered: h11, leave: g8, leaveFrom: v5, leaveTo: o21, ...i19 } = e8, [a25, s15] = (0, import_react99.useState)(null), r21 = (0, import_react99.useRef)(null), f22 = ue3(e8), j8 = y(...f22 ? [r21, t12, s15] : t12 === null ? [] : [t12]), H14 = (ee4 = i19.unmount) == null || ee4 ? A.Unmount : A.Hidden, { show: u19, appear: z3, initial: K4 } = De(), [m12, G8] = (0, import_react99.useState)(u19 ? "visible" : "hidden"), Q4 = He(), { register: A8, unregister: I7 } = Q4;
  n(() => A8(r21), [A8, r21]), n(() => {
    if (H14 === A.Hidden && r21.current) {
      if (u19 && m12 !== "visible") {
        G8("visible");
        return;
      }
      return u(m12, { ["hidden"]: () => I7(r21), ["visible"]: () => A8(r21) });
    }
  }, [m12, r21, A8, I7, u19, H14]);
  let B5 = l10();
  n(() => {
    if (f22 && B5 && m12 === "visible" && r21.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [r21, m12, B5, f22]);
  let ce5 = K4 && !z3, Y4 = z3 && u19 && K4, W3 = (0, import_react99.useRef)(false), L7 = Te2(() => {
    W3.current || (G8("hidden"), I7(r21));
  }, Q4), Z4 = o5((k5) => {
    W3.current = true;
    let F9 = k5 ? "enter" : "leave";
    L7.onStart(r21, F9, (_8) => {
      _8 === "enter" ? l17 == null || l17() : _8 === "leave" && (R9 == null || R9());
    });
  }), $4 = o5((k5) => {
    let F9 = k5 ? "enter" : "leave";
    W3.current = false, L7.onStop(r21, F9, (_8) => {
      _8 === "enter" ? S10 == null || S10() : _8 === "leave" && (d14 == null || d14());
    }), F9 === "leave" && !U5(L7) && (G8("hidden"), I7(r21));
  });
  (0, import_react99.useEffect)(() => {
    f22 && n13 || (Z4(u19), $4(u19));
  }, [u19, f22, n13]);
  let pe5 = /* @__PURE__ */ (() => !(!n13 || !f22 || !B5 || ce5))(), [, T12] = x3(pe5, a25, u19, { start: Z4, end: $4 }), Ce4 = m2({ ref: j8, className: ((te6 = t3(i19.className, Y4 && y8, Y4 && C10, T12.enter && y8, T12.enter && T12.closed && C10, T12.enter && !T12.closed && p6, T12.leave && g8, T12.leave && !T12.closed && v5, T12.leave && T12.closed && o21, !T12.transition && u19 && h11)) == null ? void 0 : te6.trim()) || void 0, ...R4(T12) }), N3 = 0;
  m12 === "visible" && (N3 |= i11.Open), m12 === "hidden" && (N3 |= i11.Closed), u19 && m12 === "hidden" && (N3 |= i11.Opening), !u19 && m12 === "visible" && (N3 |= i11.Closing);
  let he4 = L();
  return import_react99.default.createElement(M7.Provider, { value: L7 }, import_react99.default.createElement(c22, { value: N3 }, he4({ ourProps: Ce4, theirProps: i19, defaultTag: de3, features: fe, visible: m12 === "visible", name: "Transition.Child" })));
}
function Ie(e8, t12) {
  let { show: n13, appear: l17 = false, unmount: S10 = true, ...R9 } = e8, d14 = (0, import_react99.useRef)(null), y8 = ue3(e8), C10 = y(...y8 ? [d14, t12] : t12 === null ? [] : [t12]);
  l10();
  let p6 = u12();
  if (n13 === void 0 && p6 !== null && (n13 = (p6 & i11.Open) === i11.Open), n13 === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [h11, g8] = (0, import_react99.useState)(n13 ? "visible" : "hidden"), v5 = Te2(() => {
    n13 || g8("hidden");
  }), [o21, i19] = (0, import_react99.useState)(true), a25 = (0, import_react99.useRef)([n13]);
  n(() => {
    o21 !== false && a25.current[a25.current.length - 1] !== n13 && (a25.current.push(n13), i19(false));
  }, [a25, n13]);
  let s15 = (0, import_react99.useMemo)(() => ({ show: n13, appear: l17, initial: o21 }), [n13, l17, o21]);
  n(() => {
    n13 ? g8("visible") : !U5(v5) && d14.current !== null && g8("hidden");
  }, [n13, v5]);
  let r21 = { unmount: S10 }, f22 = o5(() => {
    var u19;
    o21 && i19(false), (u19 = e8.beforeEnter) == null || u19.call(e8);
  }), j8 = o5(() => {
    var u19;
    o21 && i19(false), (u19 = e8.beforeLeave) == null || u19.call(e8);
  }), H14 = L();
  return import_react99.default.createElement(M7.Provider, { value: v5 }, import_react99.default.createElement(w7.Provider, { value: s15 }, H14({ ourProps: { ...r21, as: import_react99.Fragment, children: import_react99.default.createElement(me, { ref: C10, ...r21, ...R9, beforeEnter: f22, beforeLeave: j8 }) }, theirProps: {}, defaultTag: import_react99.Fragment, features: fe, visible: h11 === "visible", name: "Transition" })));
}
function Le(e8, t12) {
  let n13 = (0, import_react99.useContext)(w7) !== null, l17 = u12() !== null;
  return import_react99.default.createElement(import_react99.default.Fragment, null, !n13 && l17 ? import_react99.default.createElement(X3, { ref: t12, ...e8 }) : import_react99.default.createElement(me, { ref: t12, ...e8 }));
}
var X3 = K(Ie);
var me = K(Ae);
var Fe3 = K(Le);
var ze = Object.assign(X3, { Child: Fe3, Root: X3 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var Oe2 = ((o21) => (o21[o21.Open = 0] = "Open", o21[o21.Closed = 1] = "Closed", o21))(Oe2 || {});
var he = ((t12) => (t12[t12.SetTitleId = 0] = "SetTitleId", t12))(he || {});
var Se2 = { [0](e8, t12) {
  return e8.titleId === t12.id ? e8 : { ...e8, titleId: t12.id };
} };
var k4 = (0, import_react100.createContext)(null);
k4.displayName = "DialogContext";
function O7(e8) {
  let t12 = (0, import_react100.useContext)(k4);
  if (t12 === null) {
    let o21 = new Error(`<${e8} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o21, O7), o21;
  }
  return t12;
}
function Ie2(e8, t12) {
  return u(t12.type, Se2, e8, t12);
}
var V3 = K(function(t12, o21) {
  let a25 = (0, import_react57.useId)(), { id: l17 = `headlessui-dialog-${a25}`, open: i19, onClose: p6, initialFocus: d14, role: s15 = "dialog", autoFocus: f22 = true, __demoMode: u19 = false, unmount: P7 = false, ...h11 } = t12, R9 = (0, import_react100.useRef)(false);
  s15 = function() {
    return s15 === "dialog" || s15 === "alertdialog" ? s15 : (R9.current || (R9.current = true, console.warn(`Invalid role [${s15}] passed to <Dialog />. Only \`dialog\` and and \`alertdialog\` are supported. Using \`dialog\` instead.`)), "dialog");
  }();
  let c64 = u12();
  i19 === void 0 && c64 !== null && (i19 = (c64 & i11.Open) === i11.Open);
  let T12 = (0, import_react100.useRef)(null), S10 = y(T12, o21), F9 = n9(T12), g8 = i19 ? 0 : 1, [b11, q5] = (0, import_react100.useReducer)(Ie2, { titleId: null, descriptionId: null, panelRef: (0, import_react100.createRef)() }), m12 = o5(() => p6(false)), w10 = o5((r21) => q5({ type: 0, id: r21 })), D8 = l10() ? g8 === 0 : false, [z3, Q4] = le(), Z4 = { get current() {
    var r21;
    return (r21 = b11.panelRef.current) != null ? r21 : T12.current;
  } }, v5 = b6(), { resolveContainers: I7 } = R6({ mainTreeNode: v5, portals: z3, defaultContainers: [Z4] }), B5 = c64 !== null ? (c64 & i11.Closing) === i11.Closing : false;
  y3(u19 || B5 ? false : D8, { allowed: o5(() => {
    var r21, H14;
    return [(H14 = (r21 = T12.current) == null ? void 0 : r21.closest("[data-headlessui-portal]")) != null ? H14 : null];
  }), disallowed: o5(() => {
    var r21;
    return [(r21 = v5 == null ? void 0 : v5.closest("body > *:not(#headlessui-portal-root)")) != null ? r21 : null];
  }) }), R3(D8, I7, (r21) => {
    r21.preventDefault(), m12();
  }), a16(D8, F9 == null ? void 0 : F9.defaultView, (r21) => {
    r21.preventDefault(), r21.stopPropagation(), document.activeElement && "blur" in document.activeElement && typeof document.activeElement.blur == "function" && document.activeElement.blur(), m12();
  }), f11(u19 || B5 ? false : D8, F9, I7), m6(D8, T12, m12);
  let [ee4, te6] = w3(), oe3 = (0, import_react100.useMemo)(() => [{ dialogState: g8, close: m12, setTitleId: w10, unmount: P7 }, b11], [g8, b11, m12, w10, P7]), U7 = (0, import_react100.useMemo)(() => ({ open: g8 === 0 }), [g8]), ne4 = { ref: S10, id: l17, role: s15, tabIndex: -1, "aria-modal": u19 ? void 0 : g8 === 0 ? true : void 0, "aria-labelledby": b11.titleId, "aria-describedby": ee4, unmount: P7 }, re6 = !f17(), y8 = x6.None;
  D8 && !u19 && (y8 |= x6.RestoreFocus, y8 |= x6.TabLock, f22 && (y8 |= x6.AutoFocus), re6 && (y8 |= x6.InitialFocus));
  let le5 = L();
  return import_react100.default.createElement(s7, null, import_react100.default.createElement(l11, { force: true }, import_react100.default.createElement(oe, null, import_react100.default.createElement(k4.Provider, { value: oe3 }, import_react100.default.createElement(D3, { target: T12 }, import_react100.default.createElement(l11, { force: false }, import_react100.default.createElement(te6, { slot: U7 }, import_react100.default.createElement(Q4, null, import_react100.default.createElement(ye2, { initialFocus: d14, initialFocusFallback: T12, containers: I7, features: y8 }, import_react100.default.createElement(C4, { value: m12 }, le5({ ourProps: ne4, theirProps: h11, slot: U7, defaultTag: Me2, features: Ge, visible: g8 === 0, name: "Dialog" })))))))))));
});
var Me2 = "div";
var Ge = O.RenderStrategy | O.Static;
function ke(e8, t12) {
  let { transition: o21 = false, open: a25, ...l17 } = e8, i19 = u12(), p6 = e8.hasOwnProperty("open") || i19 !== null, d14 = e8.hasOwnProperty("onClose");
  if (!p6 && !d14) throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!p6) throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!d14) throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (!i19 && typeof e8.open != "boolean") throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${e8.open}`);
  if (typeof e8.onClose != "function") throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${e8.onClose}`);
  return (a25 !== void 0 || o21) && !l17.static ? import_react100.default.createElement(O5, null, import_react100.default.createElement(ze, { show: a25, transition: o21, unmount: l17.unmount }, import_react100.default.createElement(V3, { ref: t12, ...l17 }))) : import_react100.default.createElement(O5, null, import_react100.default.createElement(V3, { ref: t12, open: a25, ...l17 }));
}
var we = "div";
function Be(e8, t12) {
  let o21 = (0, import_react57.useId)(), { id: a25 = `headlessui-dialog-panel-${o21}`, transition: l17 = false, ...i19 } = e8, [{ dialogState: p6, unmount: d14 }, s15] = O7("Dialog.Panel"), f22 = y(t12, s15.panelRef), u19 = (0, import_react100.useMemo)(() => ({ open: p6 === 0 }), [p6]), P7 = o5((S10) => {
    S10.stopPropagation();
  }), h11 = { ref: f22, id: a25, onClick: P7 }, R9 = l17 ? Fe3 : import_react100.Fragment, c64 = l17 ? { unmount: d14 } : {}, T12 = L();
  return import_react100.default.createElement(R9, { ...c64 }, T12({ ourProps: h11, theirProps: i19, slot: u19, defaultTag: we, name: "Dialog.Panel" }));
}
var Ue = "div";
function He2(e8, t12) {
  let { transition: o21 = false, ...a25 } = e8, [{ dialogState: l17, unmount: i19 }] = O7("Dialog.Backdrop"), p6 = (0, import_react100.useMemo)(() => ({ open: l17 === 0 }), [l17]), d14 = { ref: t12, "aria-hidden": true }, s15 = o21 ? Fe3 : import_react100.Fragment, f22 = o21 ? { unmount: i19 } : {}, u19 = L();
  return import_react100.default.createElement(s15, { ...f22 }, u19({ ourProps: d14, theirProps: a25, slot: p6, defaultTag: Ue, name: "Dialog.Backdrop" }));
}
var Ne = "h2";
function We(e8, t12) {
  let o21 = (0, import_react57.useId)(), { id: a25 = `headlessui-dialog-title-${o21}`, ...l17 } = e8, [{ dialogState: i19, setTitleId: p6 }] = O7("Dialog.Title"), d14 = y(t12);
  (0, import_react100.useEffect)(() => (p6(a25), () => p6(null)), [a25, p6]);
  let s15 = (0, import_react100.useMemo)(() => ({ open: i19 === 0 }), [i19]), f22 = { ref: d14, id: a25 };
  return L()({ ourProps: f22, theirProps: l17, slot: s15, defaultTag: Ne, name: "Dialog.Title" });
}
var $e = K(ke);
var je = K(Be);
var Dt2 = K(He2);
var Ye = K(We);
var yt = Object.assign($e, { Panel: je, Title: Ye, Description: H4 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var import_react102 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/start-transition.js
var import_react101 = __toESM(require_react(), 1);
var t11;
var a19 = (t11 = import_react101.default.startTransition) != null ? t11 : function(i19) {
  i19();
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var ce2 = ((l17) => (l17[l17.Open = 0] = "Open", l17[l17.Closed = 1] = "Closed", l17))(ce2 || {});
var de5 = ((n13) => (n13[n13.ToggleDisclosure = 0] = "ToggleDisclosure", n13[n13.CloseDisclosure = 1] = "CloseDisclosure", n13[n13.SetButtonId = 2] = "SetButtonId", n13[n13.SetPanelId = 3] = "SetPanelId", n13[n13.SetButtonElement = 4] = "SetButtonElement", n13[n13.SetPanelElement = 5] = "SetPanelElement", n13))(de5 || {});
var Te3 = { [0]: (e8) => ({ ...e8, disclosureState: u(e8.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e8) => e8.disclosureState === 1 ? e8 : { ...e8, disclosureState: 1 }, [2](e8, t12) {
  return e8.buttonId === t12.buttonId ? e8 : { ...e8, buttonId: t12.buttonId };
}, [3](e8, t12) {
  return e8.panelId === t12.panelId ? e8 : { ...e8, panelId: t12.panelId };
}, [4](e8, t12) {
  return e8.buttonElement === t12.element ? e8 : { ...e8, buttonElement: t12.element };
}, [5](e8, t12) {
  return e8.panelElement === t12.element ? e8 : { ...e8, panelElement: t12.element };
} };
var _5 = (0, import_react102.createContext)(null);
_5.displayName = "DisclosureContext";
function M8(e8) {
  let t12 = (0, import_react102.useContext)(_5);
  if (t12 === null) {
    let l17 = new Error(`<${e8} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(l17, M8), l17;
  }
  return t12;
}
var F5 = (0, import_react102.createContext)(null);
F5.displayName = "DisclosureAPIContext";
function J4(e8) {
  let t12 = (0, import_react102.useContext)(F5);
  if (t12 === null) {
    let l17 = new Error(`<${e8} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(l17, J4), l17;
  }
  return t12;
}
var H9 = (0, import_react102.createContext)(null);
H9.displayName = "DisclosurePanelContext";
function fe2() {
  return (0, import_react102.useContext)(H9);
}
function me2(e8, t12) {
  return u(t12.type, Te3, e8, t12);
}
var De2 = import_react102.Fragment;
function ye3(e8, t12) {
  let { defaultOpen: l17 = false, ...p6 } = e8, i19 = (0, import_react102.useRef)(null), c64 = y(t12, T2((a25) => {
    i19.current = a25;
  }, e8.as === void 0 || e8.as === import_react102.Fragment)), n13 = (0, import_react102.useReducer)(me2, { disclosureState: l17 ? 0 : 1, buttonElement: null, panelElement: null, buttonId: null, panelId: null }), [{ disclosureState: o21, buttonId: r21 }, m12] = n13, s15 = o5((a25) => {
    m12({ type: 1 });
    let d14 = o2(i19);
    if (!d14 || !r21) return;
    let T12 = (() => a25 ? a25 instanceof HTMLElement ? a25 : a25.current instanceof HTMLElement ? a25.current : d14.getElementById(r21) : d14.getElementById(r21))();
    T12 == null || T12.focus();
  }), E15 = (0, import_react102.useMemo)(() => ({ close: s15 }), [s15]), f22 = (0, import_react102.useMemo)(() => ({ open: o21 === 0, close: s15 }), [o21, s15]), D8 = { ref: c64 }, S10 = L();
  return import_react102.default.createElement(_5.Provider, { value: n13 }, import_react102.default.createElement(F5.Provider, { value: E15 }, import_react102.default.createElement(C4, { value: s15 }, import_react102.default.createElement(c22, { value: u(o21, { [0]: i11.Open, [1]: i11.Closed }) }, S10({ ourProps: D8, theirProps: p6, slot: f22, defaultTag: De2, name: "Disclosure" })))));
}
var Pe2 = "button";
function Ee2(e8, t12) {
  let l17 = (0, import_react57.useId)(), { id: p6 = `headlessui-disclosure-button-${l17}`, disabled: i19 = false, autoFocus: c64 = false, ...n13 } = e8, [o21, r21] = M8("Disclosure.Button"), m12 = fe2(), s15 = m12 === null ? false : m12 === o21.panelId, E15 = (0, import_react102.useRef)(null), f22 = y(E15, t12, o5((u19) => {
    if (!s15) return r21({ type: 4, element: u19 });
  }));
  (0, import_react102.useEffect)(() => {
    if (!s15) return r21({ type: 2, buttonId: p6 }), () => {
      r21({ type: 2, buttonId: null });
    };
  }, [p6, r21, s15]);
  let D8 = o5((u19) => {
    var g8;
    if (s15) {
      if (o21.disclosureState === 1) return;
      switch (u19.key) {
        case o9.Space:
        case o9.Enter:
          u19.preventDefault(), u19.stopPropagation(), r21({ type: 0 }), (g8 = o21.buttonElement) == null || g8.focus();
          break;
      }
    } else switch (u19.key) {
      case o9.Space:
      case o9.Enter:
        u19.preventDefault(), u19.stopPropagation(), r21({ type: 0 });
        break;
    }
  }), S10 = o5((u19) => {
    switch (u19.key) {
      case o9.Space:
        u19.preventDefault();
        break;
    }
  }), a25 = o5((u19) => {
    var g8;
    r5(u19.currentTarget) || i19 || (s15 ? (r21({ type: 0 }), (g8 = o21.buttonElement) == null || g8.focus()) : r21({ type: 0 }));
  }), { isFocusVisible: d14, focusProps: T12 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: c64 }), { isHovered: b11, hoverProps: h11 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: i19 }), { pressed: U7, pressProps: N3 } = w({ disabled: i19 }), X6 = (0, import_react102.useMemo)(() => ({ open: o21.disclosureState === 0, hover: b11, active: U7, disabled: i19, focus: d14, autofocus: c64 }), [o21, b11, U7, d14, i19, c64]), k5 = e6(e8, o21.buttonElement), V6 = s15 ? _({ ref: f22, type: k5, disabled: i19 || void 0, autoFocus: c64, onKeyDown: D8, onClick: a25 }, T12, h11, N3) : _({ ref: f22, id: p6, type: k5, "aria-expanded": o21.disclosureState === 0, "aria-controls": o21.panelElement ? o21.panelId : void 0, disabled: i19 || void 0, autoFocus: c64, onKeyDown: D8, onKeyUp: S10, onClick: a25 }, T12, h11, N3);
  return L()({ ourProps: V6, theirProps: n13, slot: X6, defaultTag: Pe2, name: "Disclosure.Button" });
}
var Se3 = "div";
var ge2 = O.RenderStrategy | O.Static;
function Ae2(e8, t12) {
  let l17 = (0, import_react57.useId)(), { id: p6 = `headlessui-disclosure-panel-${l17}`, transition: i19 = false, ...c64 } = e8, [n13, o21] = M8("Disclosure.Panel"), { close: r21 } = J4("Disclosure.Panel"), [m12, s15] = (0, import_react102.useState)(null), E15 = y(t12, o5((b11) => {
    a19(() => o21({ type: 5, element: b11 }));
  }), s15);
  (0, import_react102.useEffect)(() => (o21({ type: 3, panelId: p6 }), () => {
    o21({ type: 3, panelId: null });
  }), [p6, o21]);
  let f22 = u12(), [D8, S10] = x3(i19, m12, f22 !== null ? (f22 & i11.Open) === i11.Open : n13.disclosureState === 0), a25 = (0, import_react102.useMemo)(() => ({ open: n13.disclosureState === 0, close: r21 }), [n13.disclosureState, r21]), d14 = { ref: E15, id: p6, ...R4(S10) }, T12 = L();
  return import_react102.default.createElement(s7, null, import_react102.default.createElement(H9.Provider, { value: n13.panelId }, T12({ ourProps: d14, theirProps: c64, slot: a25, defaultTag: Se3, features: ge2, visible: D8, name: "Disclosure.Panel" })));
}
var be2 = K(ye3);
var Ce = K(Ee2);
var Re2 = K(Ae2);
var je2 = Object.assign(be2, { Button: Ce, Panel: Re2 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/field/field.js
var import_react103 = __toESM(require_react(), 1);
var _6 = "div";
function c30(d14, l17) {
  let t12 = `headlessui-control-${(0, import_react57.useId)()}`, [s15, p6] = K2(), [n13, a25] = w3(), m12 = a3(), { disabled: e8 = m12 || false, ...i19 } = d14, o21 = (0, import_react103.useMemo)(() => ({ disabled: e8 }), [e8]), F9 = { ref: l17, disabled: e8 || void 0, "aria-disabled": e8 || void 0 }, T12 = L();
  return import_react103.default.createElement(l, { value: e8 }, import_react103.default.createElement(p6, { value: s15 }, import_react103.default.createElement(a25, { value: n13 }, import_react103.default.createElement(f6, { id: t12 }, T12({ ourProps: F9, theirProps: { ...i19, children: import_react103.default.createElement(W, null, typeof i19.children == "function" ? i19.children(o21) : i19.children) }, slot: o21, defaultTag: _6, name: "Field" })))));
}
var H10 = K(c30);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/fieldset/fieldset.js
var import_react105 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-resolved-tag.js
var import_react104 = __toESM(require_react(), 1);
function l12(t12) {
  let e8 = typeof t12 == "string" ? t12 : void 0, [s15, o21] = (0, import_react104.useState)(e8);
  return [e8 != null ? e8 : s15, (0, import_react104.useCallback)((n13) => {
    e8 || n13 instanceof HTMLElement && o21(n13.tagName.toLowerCase());
  }, [e8])];
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/fieldset/fieldset.js
var d12 = "fieldset";
function _7(t12, a25) {
  var s15;
  let i19 = a3(), { disabled: e8 = i19 || false, ...p6 } = t12, [n13, T12] = l12((s15 = t12.as) != null ? s15 : d12), l17 = y(a25, T12), [r21, f22] = K2(), m12 = (0, import_react105.useMemo)(() => ({ disabled: e8 }), [e8]), y8 = n13 === "fieldset" ? { ref: l17, "aria-labelledby": r21, disabled: e8 || void 0 } : { ref: l17, role: "group", "aria-labelledby": r21, "aria-disabled": e8 || void 0 }, F9 = L();
  return import_react105.default.createElement(l, { value: e8 }, import_react105.default.createElement(f22, null, F9({ ourProps: y8, theirProps: p6, slot: m12, defaultTag: d12, name: "Fieldset" })));
}
var G5 = K(_7);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/input/input.js
var import_react106 = __toESM(require_react(), 1);
var x8 = "input";
function h7(p6, s15) {
  let a25 = (0, import_react57.useId)(), l17 = u4(), i19 = a3(), { id: d14 = l17 || `headlessui-input-${a25}`, disabled: e8 = i19 || false, autoFocus: o21 = false, invalid: t12 = false, ...u19 } = p6, f22 = I(), m12 = U2(), { isFocused: r21, focusProps: T12 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: o21 }), { isHovered: n13, hoverProps: b11 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), y8 = _({ ref: s15, id: d14, "aria-labelledby": f22, "aria-describedby": m12, "aria-invalid": t12 ? "true" : void 0, disabled: e8 || void 0, autoFocus: o21 }, T12, b11), I7 = (0, import_react106.useMemo)(() => ({ disabled: e8, invalid: t12, hover: n13, focus: r21, autofocus: o21 }), [e8, t12, n13, r21, o21]);
  return L()({ ourProps: y8, theirProps: u19, slot: I7, defaultTag: x8, name: "Input" });
}
var S8 = K(h7);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/legend/legend.js
var import_react107 = __toESM(require_react(), 1);
function o17(t12, n13) {
  return import_react107.default.createElement(Q, { as: "div", ref: n13, ...t12 });
}
var d13 = K(o17);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var import_react111 = __toESM(require_react(), 1);
var import_react_dom8 = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-did-element-move.js
var import_react108 = __toESM(require_react(), 1);
function s11(n13, t12) {
  let e8 = (0, import_react108.useRef)({ left: 0, top: 0 });
  if (n(() => {
    if (!t12) return;
    let r21 = t12.getBoundingClientRect();
    r21 && (e8.current = r21);
  }, [n13, t12]), t12 == null || !n13 || t12 === document.activeElement) return false;
  let o21 = t12.getBoundingClientRect();
  return o21.top !== e8.current.top || o21.left !== e8.current.left;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-text-value.js
var import_react109 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/get-text-value.js
var a21 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o18(e8) {
  var r21, i19;
  let n13 = (r21 = e8.innerText) != null ? r21 : "", t12 = e8.cloneNode(true);
  if (!(t12 instanceof HTMLElement)) return n13;
  let u19 = false;
  for (let f22 of t12.querySelectorAll('[hidden],[aria-hidden],[role="img"]')) f22.remove(), u19 = true;
  let l17 = u19 ? (i19 = t12.innerText) != null ? i19 : "" : n13;
  return a21.test(l17) && (l17 = l17.replace(a21, "")), l17;
}
function g6(e8) {
  let n13 = e8.getAttribute("aria-label");
  if (typeof n13 == "string") return n13.trim();
  let t12 = e8.getAttribute("aria-labelledby");
  if (t12) {
    let u19 = t12.split(" ").map((l17) => {
      let r21 = document.getElementById(l17);
      if (r21) {
        let i19 = r21.getAttribute("aria-label");
        return typeof i19 == "string" ? i19.trim() : o18(r21).trim();
      }
      return null;
    }).filter(Boolean);
    if (u19.length > 0) return u19.join(", ");
  }
  return o18(e8).trim();
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-text-value.js
function s12(c64) {
  let t12 = (0, import_react109.useRef)(""), r21 = (0, import_react109.useRef)("");
  return o5(() => {
    let e8 = c64.current;
    if (!e8) return "";
    let u19 = e8.innerText;
    if (t12.current === u19) return r21.current;
    let n13 = g6(e8).trim().toLowerCase();
    return t12.current = u19, r21.current = n13, n13;
  });
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox-machine.js
var g7 = Object.defineProperty;
var h8 = (e8, i19, t12) => i19 in e8 ? g7(e8, i19, { enumerable: true, configurable: true, writable: true, value: t12 }) : e8[i19] = t12;
var O8 = (e8, i19, t12) => (h8(e8, typeof i19 != "symbol" ? i19 + "" : i19, t12), t12);
var R7 = ((t12) => (t12[t12.Open = 0] = "Open", t12[t12.Closed = 1] = "Closed", t12))(R7 || {});
var A6 = ((t12) => (t12[t12.Single = 0] = "Single", t12[t12.Multi = 1] = "Multi", t12))(A6 || {});
var E11 = ((t12) => (t12[t12.Pointer = 0] = "Pointer", t12[t12.Other = 1] = "Other", t12))(E11 || {});
var L5 = ((r21) => (r21[r21.OpenListbox = 0] = "OpenListbox", r21[r21.CloseListbox = 1] = "CloseListbox", r21[r21.GoToOption = 2] = "GoToOption", r21[r21.Search = 3] = "Search", r21[r21.ClearSearch = 4] = "ClearSearch", r21[r21.RegisterOptions = 5] = "RegisterOptions", r21[r21.UnregisterOptions = 6] = "UnregisterOptions", r21[r21.SetButtonElement = 7] = "SetButtonElement", r21[r21.SetOptionsElement = 8] = "SetOptionsElement", r21[r21.SortOptions = 9] = "SortOptions", r21))(L5 || {});
function m10(e8, i19 = (t12) => t12) {
  let t12 = e8.activeOptionIndex !== null ? e8.options[e8.activeOptionIndex] : null, n13 = _3(i19(e8.options.slice()), (l17) => l17.dataRef.current.domRef.current), o21 = t12 ? n13.indexOf(t12) : null;
  return o21 === -1 && (o21 = null), { options: n13, activeOptionIndex: o21 };
}
var M9 = { [1](e8) {
  return e8.dataRef.current.disabled || e8.listboxState === 1 ? e8 : { ...e8, activeOptionIndex: null, listboxState: 1, __demoMode: false };
}, [0](e8) {
  if (e8.dataRef.current.disabled || e8.listboxState === 0) return e8;
  let i19 = e8.activeOptionIndex, { isSelected: t12 } = e8.dataRef.current, n13 = e8.options.findIndex((o21) => t12(o21.dataRef.current.value));
  return n13 !== -1 && (i19 = n13), { ...e8, listboxState: 0, activeOptionIndex: i19, __demoMode: false };
}, [2](e8, i19) {
  var l17, s15, u19, d14, c64;
  if (e8.dataRef.current.disabled || e8.listboxState === 1) return e8;
  let t12 = { ...e8, searchQuery: "", activationTrigger: (l17 = i19.trigger) != null ? l17 : 1, __demoMode: false };
  if (i19.focus === c24.Nothing) return { ...t12, activeOptionIndex: null };
  if (i19.focus === c24.Specific) return { ...t12, activeOptionIndex: e8.options.findIndex((r21) => r21.id === i19.id) };
  if (i19.focus === c24.Previous) {
    let r21 = e8.activeOptionIndex;
    if (r21 !== null) {
      let x11 = e8.options[r21].dataRef.current.domRef, a25 = f15(i19, { resolveItems: () => e8.options, resolveActiveIndex: () => e8.activeOptionIndex, resolveId: (p6) => p6.id, resolveDisabled: (p6) => p6.dataRef.current.disabled });
      if (a25 !== null) {
        let p6 = e8.options[a25].dataRef.current.domRef;
        if (((s15 = x11.current) == null ? void 0 : s15.previousElementSibling) === p6.current || ((u19 = p6.current) == null ? void 0 : u19.previousElementSibling) === null) return { ...t12, activeOptionIndex: a25 };
      }
    }
  } else if (i19.focus === c24.Next) {
    let r21 = e8.activeOptionIndex;
    if (r21 !== null) {
      let x11 = e8.options[r21].dataRef.current.domRef, a25 = f15(i19, { resolveItems: () => e8.options, resolveActiveIndex: () => e8.activeOptionIndex, resolveId: (p6) => p6.id, resolveDisabled: (p6) => p6.dataRef.current.disabled });
      if (a25 !== null) {
        let p6 = e8.options[a25].dataRef.current.domRef;
        if (((d14 = x11.current) == null ? void 0 : d14.nextElementSibling) === p6.current || ((c64 = p6.current) == null ? void 0 : c64.nextElementSibling) === null) return { ...t12, activeOptionIndex: a25 };
      }
    }
  }
  let n13 = m10(e8), o21 = f15(i19, { resolveItems: () => n13.options, resolveActiveIndex: () => n13.activeOptionIndex, resolveId: (r21) => r21.id, resolveDisabled: (r21) => r21.dataRef.current.disabled });
  return { ...t12, ...n13, activeOptionIndex: o21 };
}, [3]: (e8, i19) => {
  if (e8.dataRef.current.disabled || e8.listboxState === 1) return e8;
  let n13 = e8.searchQuery !== "" ? 0 : 1, o21 = e8.searchQuery + i19.value.toLowerCase(), s15 = (e8.activeOptionIndex !== null ? e8.options.slice(e8.activeOptionIndex + n13).concat(e8.options.slice(0, e8.activeOptionIndex + n13)) : e8.options).find((d14) => {
    var c64;
    return !d14.dataRef.current.disabled && ((c64 = d14.dataRef.current.textValue) == null ? void 0 : c64.startsWith(o21));
  }), u19 = s15 ? e8.options.indexOf(s15) : -1;
  return u19 === -1 || u19 === e8.activeOptionIndex ? { ...e8, searchQuery: o21 } : { ...e8, searchQuery: o21, activeOptionIndex: u19, activationTrigger: 1 };
}, [4](e8) {
  return e8.dataRef.current.disabled || e8.listboxState === 1 || e8.searchQuery === "" ? e8 : { ...e8, searchQuery: "" };
}, [5]: (e8, i19) => {
  let t12 = e8.options.concat(i19.options), n13 = e8.activeOptionIndex;
  if (e8.activeOptionIndex === null) {
    let { isSelected: o21 } = e8.dataRef.current;
    if (o21) {
      let l17 = t12.findIndex((s15) => o21 == null ? void 0 : o21(s15.dataRef.current.value));
      l17 !== -1 && (n13 = l17);
    }
  }
  return { ...e8, options: t12, activeOptionIndex: n13, pendingShouldSort: true };
}, [6]: (e8, i19) => {
  let t12 = e8.options, n13 = [], o21 = new Set(i19.options);
  for (let [l17, s15] of t12.entries()) if (o21.has(s15.id) && (n13.push(l17), o21.delete(s15.id), o21.size === 0)) break;
  if (n13.length > 0) {
    t12 = t12.slice();
    for (let l17 of n13.reverse()) t12.splice(l17, 1);
  }
  return { ...e8, options: t12, activationTrigger: 1 };
}, [7]: (e8, i19) => e8.buttonElement === i19.element ? e8 : { ...e8, buttonElement: i19.element }, [8]: (e8, i19) => e8.optionsElement === i19.element ? e8 : { ...e8, optionsElement: i19.element }, [9]: (e8) => e8.pendingShouldSort ? { ...e8, ...m10(e8), pendingShouldSort: false } : e8 };
var T10 = class _T extends m9 {
  constructor(t12) {
    super(t12);
    O8(this, "actions", { onChange: (t13) => {
      let { onChange: n13, compare: o21, mode: l17, value: s15 } = this.state.dataRef.current;
      return u(l17, { [0]: () => n13 == null ? void 0 : n13(t13), [1]: () => {
        let u19 = s15.slice(), d14 = u19.findIndex((c64) => o21(c64, t13));
        return d14 === -1 ? u19.push(t13) : u19.splice(d14, 1), n13 == null ? void 0 : n13(u19);
      } });
    }, registerOption: g2(() => {
      let t13 = [], n13 = /* @__PURE__ */ new Set();
      return [(o21, l17) => {
        n13.has(l17) || (n13.add(l17), t13.push({ id: o21, dataRef: l17 }));
      }, () => (n13.clear(), this.send({ type: 5, options: t13.splice(0) }))];
    }), unregisterOption: g2(() => {
      let t13 = [];
      return [(n13) => t13.push(n13), () => {
        this.send({ type: 6, options: t13.splice(0) });
      }];
    }), goToOption: g2(() => {
      let t13 = null;
      return [(n13, o21) => {
        t13 = { type: 2, ...n13, trigger: o21 };
      }, () => t13 && this.send(t13)];
    }), closeListbox: () => {
      this.send({ type: 1 });
    }, openListbox: () => {
      this.send({ type: 0 });
    }, selectActiveOption: () => {
      if (this.state.activeOptionIndex !== null) {
        let { dataRef: t13, id: n13 } = this.state.options[this.state.activeOptionIndex];
        this.actions.onChange(t13.current.value), this.send({ type: 2, focus: c24.Specific, id: n13 });
      }
    }, selectOption: (t13) => {
      let n13 = this.state.options.find((o21) => o21.id === t13);
      n13 && this.actions.onChange(n13.dataRef.current.value);
    }, search: (t13) => {
      this.send({ type: 3, value: t13 });
    }, clearSearch: () => {
      this.send({ type: 4 });
    }, setButtonElement: (t13) => {
      this.send({ type: 7, element: t13 });
    }, setOptionsElement: (t13) => {
      this.send({ type: 8, element: t13 });
    } });
    O8(this, "selectors", { activeDescendantId(t13) {
      var l17;
      let n13 = t13.activeOptionIndex, o21 = t13.options;
      return n13 === null || (l17 = o21[n13]) == null ? void 0 : l17.id;
    }, isActive(t13, n13) {
      var s15;
      let o21 = t13.activeOptionIndex, l17 = t13.options;
      return o21 !== null ? ((s15 = l17[o21]) == null ? void 0 : s15.id) === n13 : false;
    }, shouldScrollIntoView(t13, n13) {
      return t13.__demoMode || t13.listboxState !== 0 || t13.activationTrigger === 0 ? false : this.isActive(t13, n13);
    } });
    this.on(5, () => {
      requestAnimationFrame(() => {
        this.send({ type: 9 });
      });
    });
  }
  static new({ __demoMode: t12 = false } = {}) {
    return new _T({ dataRef: { current: {} }, listboxState: t12 ? 0 : 1, options: [], searchQuery: "", activeOptionIndex: null, activationTrigger: 1, buttonElement: null, optionsElement: null, __demoMode: t12 });
  }
  reduce(t12, n13) {
    return u(n13.type, M9, t12, n13);
  }
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox-machine-glue.js
var import_react110 = __toESM(require_react(), 1);
var c31 = (0, import_react110.createContext)(null);
function l14(t12) {
  let e8 = (0, import_react110.useContext)(c31);
  if (e8 === null) {
    let n13 = new Error(`<${t12} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n13, a22), n13;
  }
  return e8;
}
function a22({ __demoMode: t12 = false } = {}) {
  return (0, import_react110.useMemo)(() => T10.new({ __demoMode: t12 }), []);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var Z2 = (0, import_react111.createContext)(null);
Z2.displayName = "ListboxDataContext";
function q3(x11) {
  let P7 = (0, import_react111.useContext)(Z2);
  if (P7 === null) {
    let g8 = new Error(`<${x11} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(g8, q3), g8;
  }
  return P7;
}
var xt = import_react111.Fragment;
function Ot(x11, P7) {
  let g8 = a3(), { value: p6, defaultValue: l17, form: i19, name: E15, onChange: s15, by: T12, invalid: t12 = false, disabled: u19 = g8 || false, horizontal: S10 = false, multiple: a25 = false, __demoMode: o21 = false, ...d14 } = x11;
  const O9 = S10 ? "horizontal" : "vertical";
  let v5 = y(P7), A8 = l2(l17), [b11 = a25 ? [] : void 0, m12] = T(p6, s15, A8), y8 = a22({ __demoMode: o21 }), h11 = (0, import_react111.useRef)({ static: false, hold: false }), B5 = (0, import_react111.useRef)(/* @__PURE__ */ new Map()), I7 = u8(T12), U7 = (0, import_react111.useCallback)((R9) => u(k5.mode, { [A6.Multi]: () => b11.some((z3) => I7(z3, R9)), [A6.Single]: () => I7(b11, R9) }), [b11]), k5 = (0, import_react111.useMemo)(() => ({ value: b11, disabled: u19, invalid: t12, mode: a25 ? A6.Multi : A6.Single, orientation: O9, onChange: m12, compare: I7, isSelected: U7, optionsPropsRef: h11, listRef: B5 }), [b11, u19, t12, a25, O9, m12, I7, U7, h11, B5]);
  n(() => {
    y8.state.dataRef.current = k5;
  }, [k5]);
  let n13 = S6(y8, (R9) => R9.listboxState), _8 = n13 === R7.Open, [L7, W3] = S6(y8, (R9) => [R9.buttonElement, R9.optionsElement]);
  R3(_8, [L7, W3], (R9, z3) => {
    y8.send({ type: L5.CloseListbox }), A2(z3, h5.Loose) || (R9.preventDefault(), L7 == null || L7.focus());
  });
  let V6 = (0, import_react111.useMemo)(() => ({ open: n13 === R7.Open, disabled: u19, invalid: t12, value: b11 }), [n13, u19, t12, b11]), [r21, K4] = K2({ inherit: true }), ee4 = { ref: v5 }, te6 = (0, import_react111.useCallback)(() => {
    if (A8 !== void 0) return m12 == null ? void 0 : m12(A8);
  }, [m12, A8]), oe3 = L();
  return import_react111.default.createElement(K4, { value: r21, props: { htmlFor: L7 == null ? void 0 : L7.id }, slot: { open: n13 === R7.Open, disabled: u19 } }, import_react111.default.createElement(Me, null, import_react111.default.createElement(c31.Provider, { value: y8 }, import_react111.default.createElement(Z2.Provider, { value: k5 }, import_react111.default.createElement(c22, { value: u(n13, { [R7.Open]: i11.Open, [R7.Closed]: i11.Closed }) }, E15 != null && b11 != null && import_react111.default.createElement(j2, { disabled: u19, data: { [E15]: b11 }, form: i19, onReset: te6 }), oe3({ ourProps: ee4, theirProps: d14, slot: V6, defaultTag: xt, name: "Listbox" }))))));
}
var Lt = "button";
function Pt(x11, P7) {
  let g8 = (0, import_react57.useId)(), p6 = u4(), l17 = q3("Listbox.Button"), i19 = l14("Listbox.Button"), { id: E15 = p6 || `headlessui-listbox-button-${g8}`, disabled: s15 = l17.disabled || false, autoFocus: T12 = false, ...t12 } = x11, u19 = y(P7, ye(), i19.actions.setButtonElement), S10 = Fe2(), a25 = o5((r21) => {
    switch (r21.key) {
      case o9.Enter:
        p2(r21.currentTarget);
        break;
      case o9.Space:
      case o9.ArrowDown:
        r21.preventDefault(), (0, import_react_dom8.flushSync)(() => i19.actions.openListbox()), l17.value || i19.actions.goToOption({ focus: c24.First });
        break;
      case o9.ArrowUp:
        r21.preventDefault(), (0, import_react_dom8.flushSync)(() => i19.actions.openListbox()), l17.value || i19.actions.goToOption({ focus: c24.Last });
        break;
    }
  }), o21 = o5((r21) => {
    switch (r21.key) {
      case o9.Space:
        r21.preventDefault();
        break;
    }
  }), d14 = o5((r21) => {
    var K4;
    if (r21.button === 0) {
      if (r5(r21.currentTarget)) return r21.preventDefault();
      i19.state.listboxState === R7.Open ? ((0, import_react_dom8.flushSync)(() => i19.actions.closeListbox()), (K4 = i19.state.buttonElement) == null || K4.focus({ preventScroll: true })) : (r21.preventDefault(), i19.actions.openListbox());
    }
  }), O9 = o5((r21) => r21.preventDefault()), v5 = I([E15]), A8 = U2(), { isFocusVisible: b11, focusProps: m12 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: T12 }), { isHovered: y8, hoverProps: h11 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: s15 }), { pressed: B5, pressProps: I7 } = w({ disabled: s15 }), U7 = S6(i19, (r21) => r21.listboxState), k5 = (0, import_react111.useMemo)(() => ({ open: U7 === R7.Open, active: B5 || U7 === R7.Open, disabled: s15, invalid: l17.invalid, value: l17.value, hover: y8, focus: b11, autofocus: T12 }), [U7, l17.value, s15, y8, b11, B5, l17.invalid, T12]), n13 = S6(i19, (r21) => r21.listboxState === R7.Open), [_8, L7] = S6(i19, (r21) => [r21.buttonElement, r21.optionsElement]), W3 = _(S10(), { ref: u19, id: E15, type: e6(x11, _8), "aria-haspopup": "listbox", "aria-controls": L7 == null ? void 0 : L7.id, "aria-expanded": n13, "aria-labelledby": v5, "aria-describedby": A8, disabled: s15 || void 0, autoFocus: T12, onKeyDown: a25, onKeyUp: o21, onKeyPress: O9, onMouseDown: d14 }, m12, h11, I7);
  return L()({ ourProps: W3, theirProps: t12, slot: k5, defaultTag: Lt, name: "Listbox.Button" });
}
var ye4 = (0, import_react111.createContext)(false);
var gt = "div";
var Et = O.RenderStrategy | O.Static;
function vt(x11, P7) {
  let g8 = (0, import_react57.useId)(), { id: p6 = `headlessui-listbox-options-${g8}`, anchor: l17, portal: i19 = false, modal: E15 = true, transition: s15 = false, ...T12 } = x11, t12 = xe(l17), [u19, S10] = (0, import_react111.useState)(null);
  t12 && (i19 = true);
  let a25 = q3("Listbox.Options"), o21 = l14("Listbox.Options"), [d14, O9, v5, A8] = S6(o21, (e8) => [e8.listboxState, e8.buttonElement, e8.optionsElement, e8.__demoMode]), b11 = n9(O9), m12 = n9(v5), y8 = u12(), [h11, B5] = x3(s15, u19, y8 !== null ? (y8 & i11.Open) === i11.Open : d14 === R7.Open);
  m6(h11, O9, o21.actions.closeListbox);
  let I7 = A8 ? false : E15 && d14 === R7.Open;
  f11(I7, m12);
  let U7 = A8 ? false : E15 && d14 === R7.Open;
  y3(U7, { allowed: (0, import_react111.useCallback)(() => [O9, v5], [O9, v5]) });
  let k5 = d14 !== R7.Open, _8 = s11(k5, O9) ? false : h11, L7 = h11 && d14 === R7.Closed, W3 = l7(L7, a25.value), V6 = o5((e8) => a25.compare(W3, e8)), r21 = S6(o21, (e8) => {
    var X6;
    if (t12 == null || !((X6 = t12 == null ? void 0 : t12.to) != null && X6.includes("selection"))) return null;
    let D8 = e8.options.findIndex((ne4) => V6(ne4.dataRef.current.value));
    return D8 === -1 && (D8 = 0), D8;
  }), K4 = (() => {
    if (t12 == null) return;
    if (r21 === null) return { ...t12, inner: void 0 };
    let e8 = Array.from(a25.listRef.current.values());
    return { ...t12, inner: { listRef: { current: e8 }, index: r21 } };
  })(), [ee4, te6] = Re(K4), oe3 = be(), R9 = y(P7, t12 ? ee4 : null, o21.actions.setOptionsElement, S10), z3 = p();
  (0, import_react111.useEffect)(() => {
    var D8;
    let e8 = v5;
    e8 && d14 === R7.Open && e8 !== ((D8 = o2(e8)) == null ? void 0 : D8.activeElement) && (e8 == null || e8.focus({ preventScroll: true }));
  }, [d14, v5]);
  let xe3 = o5((e8) => {
    var D8, X6;
    switch (z3.dispose(), e8.key) {
      case o9.Space:
        if (o21.state.searchQuery !== "") return e8.preventDefault(), e8.stopPropagation(), o21.actions.search(e8.key);
      case o9.Enter:
        if (e8.preventDefault(), e8.stopPropagation(), o21.state.activeOptionIndex !== null) {
          let { dataRef: ne4 } = o21.state.options[o21.state.activeOptionIndex];
          o21.actions.onChange(ne4.current.value);
        }
        a25.mode === A6.Single && ((0, import_react_dom8.flushSync)(() => o21.actions.closeListbox()), (D8 = o21.state.buttonElement) == null || D8.focus({ preventScroll: true }));
        break;
      case u(a25.orientation, { vertical: o9.ArrowDown, horizontal: o9.ArrowRight }):
        return e8.preventDefault(), e8.stopPropagation(), o21.actions.goToOption({ focus: c24.Next });
      case u(a25.orientation, { vertical: o9.ArrowUp, horizontal: o9.ArrowLeft }):
        return e8.preventDefault(), e8.stopPropagation(), o21.actions.goToOption({ focus: c24.Previous });
      case o9.Home:
      case o9.PageUp:
        return e8.preventDefault(), e8.stopPropagation(), o21.actions.goToOption({ focus: c24.First });
      case o9.End:
      case o9.PageDown:
        return e8.preventDefault(), e8.stopPropagation(), o21.actions.goToOption({ focus: c24.Last });
      case o9.Escape:
        e8.preventDefault(), e8.stopPropagation(), (0, import_react_dom8.flushSync)(() => o21.actions.closeListbox()), (X6 = o21.state.buttonElement) == null || X6.focus({ preventScroll: true });
        return;
      case o9.Tab:
        e8.preventDefault(), e8.stopPropagation(), (0, import_react_dom8.flushSync)(() => o21.actions.closeListbox()), j3(o21.state.buttonElement, e8.shiftKey ? F2.Previous : F2.Next);
        break;
      default:
        e8.key.length === 1 && (o21.actions.search(e8.key), z3.setTimeout(() => o21.actions.clearSearch(), 350));
        break;
    }
  }), Oe5 = S6(o21, (e8) => {
    var D8;
    return (D8 = e8.buttonElement) == null ? void 0 : D8.id;
  }), Le5 = (0, import_react111.useMemo)(() => ({ open: d14 === R7.Open }), [d14]), Pe4 = _(t12 ? oe3() : {}, { id: p6, ref: R9, "aria-activedescendant": S6(o21, o21.selectors.activeDescendantId), "aria-multiselectable": a25.mode === A6.Multi ? true : void 0, "aria-labelledby": Oe5, "aria-orientation": a25.orientation, onKeyDown: xe3, role: "listbox", tabIndex: d14 === R7.Open ? 0 : void 0, style: { ...T12.style, ...te6, "--button-width": d3(O9, true).width }, ...R4(B5) }), ge6 = L(), Ee3 = (0, import_react111.useMemo)(() => a25.mode === A6.Multi ? a25 : { ...a25, isSelected: V6 }, [a25, V6]);
  return import_react111.default.createElement(oe, { enabled: i19 ? x11.static || h11 : false, ownerDocument: b11 }, import_react111.default.createElement(Z2.Provider, { value: Ee3 }, ge6({ ourProps: Pe4, theirProps: T12, slot: Le5, defaultTag: gt, features: Et, visible: _8, name: "Listbox.Options" })));
}
var ht = "div";
function Dt3(x11, P7) {
  let g8 = (0, import_react57.useId)(), { id: p6 = `headlessui-listbox-option-${g8}`, disabled: l17 = false, value: i19, ...E15 } = x11, s15 = (0, import_react111.useContext)(ye4) === true, T12 = q3("Listbox.Option"), t12 = l14("Listbox.Option"), u19 = S6(t12, (n13) => t12.selectors.isActive(n13, p6)), S10 = T12.isSelected(i19), a25 = (0, import_react111.useRef)(null), o21 = s12(a25), d14 = s3({ disabled: l17, value: i19, domRef: a25, get textValue() {
    return o21();
  } }), O9 = y(P7, a25, (n13) => {
    n13 ? T12.listRef.current.set(p6, n13) : T12.listRef.current.delete(p6);
  }), v5 = S6(t12, (n13) => t12.selectors.shouldScrollIntoView(n13, p6));
  n(() => {
    if (v5) return o3().requestAnimationFrame(() => {
      var n13, _8;
      (_8 = (n13 = a25.current) == null ? void 0 : n13.scrollIntoView) == null || _8.call(n13, { block: "nearest" });
    });
  }, [v5, a25]), n(() => {
    if (!s15) return t12.actions.registerOption(p6, d14), () => t12.actions.unregisterOption(p6);
  }, [d14, p6, s15]);
  let A8 = o5((n13) => {
    var _8;
    if (l17) return n13.preventDefault();
    t12.actions.onChange(i19), T12.mode === A6.Single && ((0, import_react_dom8.flushSync)(() => t12.actions.closeListbox()), (_8 = t12.state.buttonElement) == null || _8.focus({ preventScroll: true }));
  }), b11 = o5(() => {
    if (l17) return t12.actions.goToOption({ focus: c24.Nothing });
    t12.actions.goToOption({ focus: c24.Specific, id: p6 });
  }), m12 = u10(), y8 = o5((n13) => {
    m12.update(n13), !l17 && (u19 || t12.actions.goToOption({ focus: c24.Specific, id: p6 }, E11.Pointer));
  }), h11 = o5((n13) => {
    m12.wasMoved(n13) && (l17 || u19 || t12.actions.goToOption({ focus: c24.Specific, id: p6 }, E11.Pointer));
  }), B5 = o5((n13) => {
    m12.wasMoved(n13) && (l17 || u19 && t12.actions.goToOption({ focus: c24.Nothing }));
  }), I7 = (0, import_react111.useMemo)(() => ({ active: u19, focus: u19, selected: S10, disabled: l17, selectedOption: S10 && s15 }), [u19, S10, l17, s15]), U7 = s15 ? {} : { id: p6, ref: O9, role: "option", tabIndex: l17 === true ? void 0 : -1, "aria-disabled": l17 === true ? true : void 0, "aria-selected": S10, disabled: void 0, onClick: A8, onFocus: b11, onPointerEnter: y8, onMouseEnter: y8, onPointerMove: h11, onMouseMove: h11, onPointerLeave: B5, onMouseLeave: B5 }, k5 = L();
  return !S10 && s15 ? null : k5({ ourProps: U7, theirProps: E15, slot: I7, defaultTag: ht, name: "Listbox.Option" });
}
var St = import_react111.Fragment;
function At(x11, P7) {
  let { options: g8, placeholder: p6, ...l17 } = x11, E15 = { ref: y(P7) }, s15 = q3("ListboxSelectedOption"), T12 = (0, import_react111.useMemo)(() => ({}), []), t12 = s15.value === void 0 || s15.value === null || s15.mode === A6.Multi && Array.isArray(s15.value) && s15.value.length === 0, u19 = L();
  return import_react111.default.createElement(ye4.Provider, { value: true }, u19({ ourProps: E15, theirProps: { ...l17, children: import_react111.default.createElement(import_react111.default.Fragment, null, p6 && t12 ? p6 : g8) }, slot: T12, defaultTag: St, name: "ListboxSelectedOption" }));
}
var _t = K(Ot);
var Rt = K(Pt);
var Ft = Q;
var Ct = K(vt);
var Mt = K(Dt3);
var wt = K(At);
var Ao2 = Object.assign(_t, { Button: Rt, Label: Ft, Options: Ct, Option: Mt, SelectedOption: wt });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/menu/menu.js
var import_react113 = __toESM(require_react(), 1);
var import_react_dom9 = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/menu/menu-machine.js
var h9 = Object.defineProperty;
var y7 = (e8, n13, t12) => n13 in e8 ? h9(e8, n13, { enumerable: true, configurable: true, writable: true, value: t12 }) : e8[n13] = t12;
var v4 = (e8, n13, t12) => (y7(e8, typeof n13 != "symbol" ? n13 + "" : n13, t12), t12);
var M10 = ((t12) => (t12[t12.Open = 0] = "Open", t12[t12.Closed = 1] = "Closed", t12))(M10 || {});
var T11 = ((t12) => (t12[t12.Pointer = 0] = "Pointer", t12[t12.Other = 1] = "Other", t12))(T11 || {});
var b9 = ((i19) => (i19[i19.OpenMenu = 0] = "OpenMenu", i19[i19.CloseMenu = 1] = "CloseMenu", i19[i19.GoToItem = 2] = "GoToItem", i19[i19.Search = 3] = "Search", i19[i19.ClearSearch = 4] = "ClearSearch", i19[i19.RegisterItems = 5] = "RegisterItems", i19[i19.UnregisterItems = 6] = "UnregisterItems", i19[i19.SetButtonElement = 7] = "SetButtonElement", i19[i19.SetItemsElement = 8] = "SetItemsElement", i19[i19.SortItems = 9] = "SortItems", i19))(b9 || {});
function S9(e8, n13 = (t12) => t12) {
  let t12 = e8.activeItemIndex !== null ? e8.items[e8.activeItemIndex] : null, r21 = _3(n13(e8.items.slice()), (u19) => u19.dataRef.current.domRef.current), l17 = t12 ? r21.indexOf(t12) : null;
  return l17 === -1 && (l17 = null), { items: r21, activeItemIndex: l17 };
}
var F7 = { [1](e8) {
  return e8.menuState === 1 ? e8 : { ...e8, activeItemIndex: null, pendingFocus: { focus: c24.Nothing }, menuState: 1 };
}, [0](e8, n13) {
  return e8.menuState === 0 ? e8 : { ...e8, __demoMode: false, pendingFocus: n13.focus, menuState: 0 };
}, [2]: (e8, n13) => {
  var u19, m12, d14, a25, I7;
  if (e8.menuState === 1) return e8;
  let t12 = { ...e8, searchQuery: "", activationTrigger: (u19 = n13.trigger) != null ? u19 : 1, __demoMode: false };
  if (n13.focus === c24.Nothing) return { ...t12, activeItemIndex: null };
  if (n13.focus === c24.Specific) return { ...t12, activeItemIndex: e8.items.findIndex((i19) => i19.id === n13.id) };
  if (n13.focus === c24.Previous) {
    let i19 = e8.activeItemIndex;
    if (i19 !== null) {
      let g8 = e8.items[i19].dataRef.current.domRef, o21 = f15(n13, { resolveItems: () => e8.items, resolveActiveIndex: () => e8.activeItemIndex, resolveId: (s15) => s15.id, resolveDisabled: (s15) => s15.dataRef.current.disabled });
      if (o21 !== null) {
        let s15 = e8.items[o21].dataRef.current.domRef;
        if (((m12 = g8.current) == null ? void 0 : m12.previousElementSibling) === s15.current || ((d14 = s15.current) == null ? void 0 : d14.previousElementSibling) === null) return { ...t12, activeItemIndex: o21 };
      }
    }
  } else if (n13.focus === c24.Next) {
    let i19 = e8.activeItemIndex;
    if (i19 !== null) {
      let g8 = e8.items[i19].dataRef.current.domRef, o21 = f15(n13, { resolveItems: () => e8.items, resolveActiveIndex: () => e8.activeItemIndex, resolveId: (s15) => s15.id, resolveDisabled: (s15) => s15.dataRef.current.disabled });
      if (o21 !== null) {
        let s15 = e8.items[o21].dataRef.current.domRef;
        if (((a25 = g8.current) == null ? void 0 : a25.nextElementSibling) === s15.current || ((I7 = s15.current) == null ? void 0 : I7.nextElementSibling) === null) return { ...t12, activeItemIndex: o21 };
      }
    }
  }
  let r21 = S9(e8), l17 = f15(n13, { resolveItems: () => r21.items, resolveActiveIndex: () => r21.activeItemIndex, resolveId: (i19) => i19.id, resolveDisabled: (i19) => i19.dataRef.current.disabled });
  return { ...t12, ...r21, activeItemIndex: l17 };
}, [3]: (e8, n13) => {
  let r21 = e8.searchQuery !== "" ? 0 : 1, l17 = e8.searchQuery + n13.value.toLowerCase(), m12 = (e8.activeItemIndex !== null ? e8.items.slice(e8.activeItemIndex + r21).concat(e8.items.slice(0, e8.activeItemIndex + r21)) : e8.items).find((a25) => {
    var I7;
    return ((I7 = a25.dataRef.current.textValue) == null ? void 0 : I7.startsWith(l17)) && !a25.dataRef.current.disabled;
  }), d14 = m12 ? e8.items.indexOf(m12) : -1;
  return d14 === -1 || d14 === e8.activeItemIndex ? { ...e8, searchQuery: l17 } : { ...e8, searchQuery: l17, activeItemIndex: d14, activationTrigger: 1 };
}, [4](e8) {
  return e8.searchQuery === "" ? e8 : { ...e8, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e8, n13) => {
  let t12 = e8.items.concat(n13.items.map((l17) => l17)), r21 = e8.activeItemIndex;
  return e8.pendingFocus.focus !== c24.Nothing && (r21 = f15(e8.pendingFocus, { resolveItems: () => t12, resolveActiveIndex: () => e8.activeItemIndex, resolveId: (l17) => l17.id, resolveDisabled: (l17) => l17.dataRef.current.disabled })), { ...e8, items: t12, activeItemIndex: r21, pendingFocus: { focus: c24.Nothing }, pendingShouldSort: true };
}, [6]: (e8, n13) => {
  let t12 = e8.items, r21 = [], l17 = new Set(n13.items);
  for (let [u19, m12] of t12.entries()) if (l17.has(m12.id) && (r21.push(u19), l17.delete(m12.id), l17.size === 0)) break;
  if (r21.length > 0) {
    t12 = t12.slice();
    for (let u19 of r21.reverse()) t12.splice(u19, 1);
  }
  return { ...e8, items: t12, activationTrigger: 1 };
}, [7]: (e8, n13) => e8.buttonElement === n13.element ? e8 : { ...e8, buttonElement: n13.element }, [8]: (e8, n13) => e8.itemsElement === n13.element ? e8 : { ...e8, itemsElement: n13.element }, [9]: (e8) => e8.pendingShouldSort ? { ...e8, ...S9(e8), pendingShouldSort: false } : e8 };
var x9 = class _x extends m9 {
  constructor(t12) {
    super(t12);
    v4(this, "actions", { registerItem: g2(() => {
      let t13 = [], r21 = /* @__PURE__ */ new Set();
      return [(l17, u19) => {
        r21.has(u19) || (r21.add(u19), t13.push({ id: l17, dataRef: u19 }));
      }, () => (r21.clear(), this.send({ type: 5, items: t13.splice(0) }))];
    }), unregisterItem: g2(() => {
      let t13 = [];
      return [(r21) => t13.push(r21), () => this.send({ type: 6, items: t13.splice(0) })];
    }) });
    v4(this, "selectors", { activeDescendantId(t13) {
      var u19;
      let r21 = t13.activeItemIndex, l17 = t13.items;
      return r21 === null || (u19 = l17[r21]) == null ? void 0 : u19.id;
    }, isActive(t13, r21) {
      var m12;
      let l17 = t13.activeItemIndex, u19 = t13.items;
      return l17 !== null ? ((m12 = u19[l17]) == null ? void 0 : m12.id) === r21 : false;
    }, shouldScrollIntoView(t13, r21) {
      return t13.__demoMode || t13.menuState !== 0 || t13.activationTrigger === 0 ? false : this.isActive(t13, r21);
    } });
    this.on(5, () => {
      requestAnimationFrame(() => {
        this.send({ type: 9 });
      });
    });
  }
  static new({ __demoMode: t12 = false } = {}) {
    return new _x({ __demoMode: t12, menuState: t12 ? 0 : 1, buttonElement: null, itemsElement: null, items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1, pendingShouldSort: false, pendingFocus: { focus: c24.Nothing } });
  }
  reduce(t12, r21) {
    return u(r21.type, F7, t12, r21);
  }
};

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/menu/menu-machine-glue.js
var import_react112 = __toESM(require_react(), 1);
var a23 = (0, import_react112.createContext)(null);
function l15(e8) {
  let n13 = (0, import_react112.useContext)(a23);
  if (n13 === null) {
    let t12 = new Error(`<${e8} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t12, i17), t12;
  }
  return n13;
}
function i17({ __demoMode: e8 = false } = {}) {
  return (0, import_react112.useMemo)(() => x9.new({ __demoMode: e8 }), []);
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/menu/menu.js
var ze2 = import_react113.Fragment;
function Qe(T12, E15) {
  let { __demoMode: i19 = false, ...a25 } = T12, n13 = i17({ __demoMode: i19 }), [s15, o21, P7] = S6(n13, (p6) => [p6.menuState, p6.itemsElement, p6.buttonElement]), c64 = y(E15), _8 = s15 === M10.Open;
  R3(_8, [P7, o21], (p6, F9) => {
    var A8;
    n13.send({ type: b9.CloseMenu }), A2(F9, h5.Loose) || (p6.preventDefault(), (A8 = n13.state.buttonElement) == null || A8.focus());
  });
  let t12 = o5(() => {
    n13.send({ type: b9.CloseMenu });
  }), R9 = (0, import_react113.useMemo)(() => ({ open: s15 === M10.Open, close: t12 }), [s15, t12]), I7 = { ref: c64 }, g8 = L();
  return import_react113.default.createElement(Me, null, import_react113.default.createElement(a23.Provider, { value: n13 }, import_react113.default.createElement(c22, { value: u(s15, { [M10.Open]: i11.Open, [M10.Closed]: i11.Closed }) }, g8({ ourProps: I7, theirProps: a25, slot: R9, defaultTag: ze2, name: "Menu" }))));
}
var Ye2 = "button";
function Ze(T12, E15) {
  let i19 = l15("Menu.Button"), a25 = (0, import_react57.useId)(), { id: n13 = `headlessui-menu-button-${a25}`, disabled: s15 = false, autoFocus: o21 = false, ...P7 } = T12, c64 = (0, import_react113.useRef)(null), _8 = Fe2(), t12 = y(E15, c64, ye(), o5((l17) => i19.send({ type: b9.SetButtonElement, element: l17 }))), R9 = o5((l17) => {
    switch (l17.key) {
      case o9.Space:
      case o9.Enter:
      case o9.ArrowDown:
        l17.preventDefault(), l17.stopPropagation(), i19.send({ type: b9.OpenMenu, focus: { focus: c24.First } });
        break;
      case o9.ArrowUp:
        l17.preventDefault(), l17.stopPropagation(), i19.send({ type: b9.OpenMenu, focus: { focus: c24.Last } });
        break;
    }
  }), I7 = o5((l17) => {
    switch (l17.key) {
      case o9.Space:
        l17.preventDefault();
        break;
    }
  }), [g8, p6] = S6(i19, (l17) => [l17.menuState, l17.itemsElement]), F9 = o5((l17) => {
    var H14;
    if (l17.button === 0) {
      if (r5(l17.currentTarget)) return l17.preventDefault();
      s15 || (g8 === M10.Open ? ((0, import_react_dom9.flushSync)(() => i19.send({ type: b9.CloseMenu })), (H14 = c64.current) == null || H14.focus({ preventScroll: true })) : (l17.preventDefault(), i19.send({ type: b9.OpenMenu, focus: { focus: c24.Nothing }, trigger: T11.Pointer })));
    }
  }), { isFocusVisible: A8, focusProps: f22 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: o21 }), { isHovered: M11, hoverProps: L7 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: s15 }), { pressed: S10, pressProps: O9 } = w({ disabled: s15 }), x11 = (0, import_react113.useMemo)(() => ({ open: g8 === M10.Open, active: S10 || g8 === M10.Open, disabled: s15, hover: M11, focus: A8, autofocus: o21 }), [g8, M11, A8, S10, s15, o21]), U7 = _(_8(), { ref: t12, id: n13, type: e6(T12, c64.current), "aria-haspopup": "menu", "aria-controls": p6 == null ? void 0 : p6.id, "aria-expanded": g8 === M10.Open, disabled: s15 || void 0, autoFocus: o21, onKeyDown: R9, onKeyUp: I7, onMouseDown: F9 }, f22, L7, O9);
  return L()({ ourProps: U7, theirProps: P7, slot: x11, defaultTag: Ye2, name: "Menu.Button" });
}
var et = "div";
var tt = O.RenderStrategy | O.Static;
function ot(T12, E15) {
  let i19 = (0, import_react57.useId)(), { id: a25 = `headlessui-menu-items-${i19}`, anchor: n13, portal: s15 = false, modal: o21 = true, transition: P7 = false, ...c64 } = T12, _8 = xe(n13), t12 = l15("Menu.Items"), [R9, I7] = Re(_8), g8 = be(), [p6, F9] = (0, import_react113.useState)(null), A8 = y(E15, _8 ? R9 : null, o5((e8) => t12.send({ type: b9.SetItemsElement, element: e8 })), F9), [f22, M11] = S6(t12, (e8) => [e8.menuState, e8.buttonElement]), L7 = n9(M11), S10 = n9(p6);
  _8 && (s15 = true);
  let O9 = u12(), [x11, U7] = x3(P7, p6, O9 !== null ? (O9 & i11.Open) === i11.Open : f22 === M10.Open);
  m6(x11, M11, () => {
    t12.send({ type: b9.CloseMenu });
  });
  let G8 = S6(t12, (e8) => e8.__demoMode), l17 = G8 ? false : o21 && f22 === M10.Open;
  f11(l17, S10);
  let H14 = G8 ? false : o21 && f22 === M10.Open;
  y3(H14, { allowed: (0, import_react113.useCallback)(() => [M11, p6], [M11, p6]) });
  let u19 = f22 !== M10.Open, ae5 = s11(u19, M11) ? false : x11;
  (0, import_react113.useEffect)(() => {
    let e8 = p6;
    e8 && f22 === M10.Open && e8 !== (S10 == null ? void 0 : S10.activeElement) && e8.focus({ preventScroll: true });
  }, [f22, p6, S10]), F3(f22 === M10.Open, { container: p6, accept(e8) {
    return e8.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : e8.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(e8) {
    e8.setAttribute("role", "none");
  } });
  let q5 = p(), se2 = o5((e8) => {
    var N3, z3, Q4;
    switch (q5.dispose(), e8.key) {
      case o9.Space:
        if (t12.state.searchQuery !== "") return e8.preventDefault(), e8.stopPropagation(), t12.send({ type: b9.Search, value: e8.key });
      case o9.Enter:
        if (e8.preventDefault(), e8.stopPropagation(), t12.state.activeItemIndex !== null) {
          let { dataRef: de8 } = t12.state.items[t12.state.activeItemIndex];
          (z3 = (N3 = de8.current) == null ? void 0 : N3.domRef.current) == null || z3.click();
        }
        t12.send({ type: b9.CloseMenu }), G2(t12.state.buttonElement);
        break;
      case o9.ArrowDown:
        return e8.preventDefault(), e8.stopPropagation(), t12.send({ type: b9.GoToItem, focus: c24.Next });
      case o9.ArrowUp:
        return e8.preventDefault(), e8.stopPropagation(), t12.send({ type: b9.GoToItem, focus: c24.Previous });
      case o9.Home:
      case o9.PageUp:
        return e8.preventDefault(), e8.stopPropagation(), t12.send({ type: b9.GoToItem, focus: c24.First });
      case o9.End:
      case o9.PageDown:
        return e8.preventDefault(), e8.stopPropagation(), t12.send({ type: b9.GoToItem, focus: c24.Last });
      case o9.Escape:
        e8.preventDefault(), e8.stopPropagation(), (0, import_react_dom9.flushSync)(() => t12.send({ type: b9.CloseMenu })), (Q4 = t12.state.buttonElement) == null || Q4.focus({ preventScroll: true });
        break;
      case o9.Tab:
        e8.preventDefault(), e8.stopPropagation(), (0, import_react_dom9.flushSync)(() => t12.send({ type: b9.CloseMenu })), j3(t12.state.buttonElement, e8.shiftKey ? F2.Previous : F2.Next);
        break;
      default:
        e8.key.length === 1 && (t12.send({ type: b9.Search, value: e8.key }), q5.setTimeout(() => t12.send({ type: b9.ClearSearch }), 350));
        break;
    }
  }), le5 = o5((e8) => {
    switch (e8.key) {
      case o9.Space:
        e8.preventDefault();
        break;
    }
  }), pe5 = (0, import_react113.useMemo)(() => ({ open: f22 === M10.Open }), [f22]), ie4 = _(_8 ? g8() : {}, { "aria-activedescendant": S6(t12, t12.selectors.activeDescendantId), "aria-labelledby": S6(t12, (e8) => {
    var N3;
    return (N3 = e8.buttonElement) == null ? void 0 : N3.id;
  }), id: a25, onKeyDown: se2, onKeyUp: le5, role: "menu", tabIndex: f22 === M10.Open ? 0 : void 0, ref: A8, style: { ...c64.style, ...I7, "--button-width": d3(M11, true).width }, ...R4(U7) }), ue5 = L();
  return import_react113.default.createElement(oe, { enabled: s15 ? T12.static || x11 : false, ownerDocument: L7 }, ue5({ ourProps: ie4, theirProps: c64, slot: pe5, defaultTag: et, features: tt, visible: ae5, name: "Menu.Items" }));
}
var nt = import_react113.Fragment;
function rt(T12, E15) {
  let i19 = (0, import_react57.useId)(), { id: a25 = `headlessui-menu-item-${i19}`, disabled: n13 = false, ...s15 } = T12, o21 = l15("Menu.Item"), P7 = S6(o21, (u19) => o21.selectors.isActive(u19, a25)), c64 = (0, import_react113.useRef)(null), _8 = y(E15, c64), t12 = S6(o21, (u19) => o21.selectors.shouldScrollIntoView(u19, a25));
  n(() => {
    if (t12) return o3().requestAnimationFrame(() => {
      var u19, J7;
      (J7 = (u19 = c64.current) == null ? void 0 : u19.scrollIntoView) == null || J7.call(u19, { block: "nearest" });
    });
  }, [t12, c64]);
  let R9 = s12(c64), I7 = (0, import_react113.useRef)({ disabled: n13, domRef: c64, get textValue() {
    return R9();
  } });
  n(() => {
    I7.current.disabled = n13;
  }, [I7, n13]), n(() => (o21.actions.registerItem(a25, I7), () => o21.actions.unregisterItem(a25)), [I7, a25]);
  let g8 = o5(() => {
    o21.send({ type: b9.CloseMenu });
  }), p6 = o5((u19) => {
    if (n13) return u19.preventDefault();
    o21.send({ type: b9.CloseMenu }), G2(o21.state.buttonElement);
  }), F9 = o5(() => {
    if (n13) return o21.send({ type: b9.GoToItem, focus: c24.Nothing });
    o21.send({ type: b9.GoToItem, focus: c24.Specific, id: a25 });
  }), A8 = u10(), f22 = o5((u19) => {
    A8.update(u19), !n13 && (P7 || o21.send({ type: b9.GoToItem, focus: c24.Specific, id: a25, trigger: T11.Pointer }));
  }), M11 = o5((u19) => {
    A8.wasMoved(u19) && (n13 || P7 || o21.send({ type: b9.GoToItem, focus: c24.Specific, id: a25, trigger: T11.Pointer }));
  }), L7 = o5((u19) => {
    A8.wasMoved(u19) && (n13 || P7 && o21.send({ type: b9.GoToItem, focus: c24.Nothing }));
  }), [S10, O9] = K2(), [x11, U7] = w3(), G8 = (0, import_react113.useMemo)(() => ({ active: P7, focus: P7, disabled: n13, close: g8 }), [P7, n13, g8]), l17 = { id: a25, ref: _8, role: "menuitem", tabIndex: n13 === true ? void 0 : -1, "aria-disabled": n13 === true ? true : void 0, "aria-labelledby": S10, "aria-describedby": x11, disabled: void 0, onClick: p6, onFocus: F9, onPointerEnter: f22, onMouseEnter: f22, onPointerMove: M11, onMouseMove: M11, onPointerLeave: L7, onMouseLeave: L7 }, H14 = L();
  return import_react113.default.createElement(O9, null, import_react113.default.createElement(U7, null, H14({ ourProps: l17, theirProps: s15, slot: G8, defaultTag: nt, name: "Menu.Item" })));
}
var at = "div";
function st(T12, E15) {
  let [i19, a25] = K2(), n13 = T12, s15 = { ref: E15, "aria-labelledby": i19, role: "group" }, o21 = L();
  return import_react113.default.createElement(a25, null, o21({ ourProps: s15, theirProps: n13, slot: {}, defaultTag: at, name: "Menu.Section" }));
}
var lt = "header";
function pt(T12, E15) {
  let i19 = (0, import_react57.useId)(), { id: a25 = `headlessui-menu-heading-${i19}`, ...n13 } = T12, s15 = P5();
  n(() => s15.register(a25), [a25, s15.register]);
  let o21 = { id: a25, ref: E15, role: "presentation", ...s15.props };
  return L()({ ourProps: o21, theirProps: n13, slot: {}, defaultTag: lt, name: "Menu.Heading" });
}
var it = "div";
function ut(T12, E15) {
  let i19 = T12, a25 = { ref: E15, role: "separator" };
  return L()({ ourProps: a25, theirProps: i19, slot: {}, defaultTag: it, name: "Menu.Separator" });
}
var dt = K(Qe);
var mt = K(Ze);
var Tt = K(ot);
var ft = K(rt);
var ct = K(st);
var yt2 = K(pt);
var Et2 = K(ut);
var to = Object.assign(dt, { Button: mt, Items: Tt, Item: ft, Section: ct, Heading: yt2, Separator: Et2 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/popover/popover.js
var import_react114 = __toESM(require_react(), 1);
var at2 = ((P7) => (P7[P7.Open = 0] = "Open", P7[P7.Closed = 1] = "Closed", P7))(at2 || {});
var pt2 = ((s15) => (s15[s15.TogglePopover = 0] = "TogglePopover", s15[s15.ClosePopover = 1] = "ClosePopover", s15[s15.SetButton = 2] = "SetButton", s15[s15.SetButtonId = 3] = "SetButtonId", s15[s15.SetPanel = 4] = "SetPanel", s15[s15.SetPanelId = 5] = "SetPanelId", s15))(pt2 || {});
var st2 = { [0]: (t12) => ({ ...t12, popoverState: u(t12.popoverState, { [0]: 1, [1]: 0 }), __demoMode: false }), [1](t12) {
  return t12.popoverState === 1 ? t12 : { ...t12, popoverState: 1, __demoMode: false };
}, [2](t12, l17) {
  return t12.button === l17.button ? t12 : { ...t12, button: l17.button };
}, [3](t12, l17) {
  return t12.buttonId === l17.buttonId ? t12 : { ...t12, buttonId: l17.buttonId };
}, [4](t12, l17) {
  return t12.panel === l17.panel ? t12 : { ...t12, panel: l17.panel };
}, [5](t12, l17) {
  return t12.panelId === l17.panelId ? t12 : { ...t12, panelId: l17.panelId };
} };
var be3 = (0, import_react114.createContext)(null);
be3.displayName = "PopoverContext";
function ie3(t12) {
  let l17 = (0, import_react114.useContext)(be3);
  if (l17 === null) {
    let P7 = new Error(`<${t12} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(P7, ie3), P7;
  }
  return l17;
}
var de7 = (0, import_react114.createContext)(null);
de7.displayName = "PopoverAPIContext";
function ge3(t12) {
  let l17 = (0, import_react114.useContext)(de7);
  if (l17 === null) {
    let P7 = new Error(`<${t12} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(P7, ge3), P7;
  }
  return l17;
}
var Se5 = (0, import_react114.createContext)(null);
Se5.displayName = "PopoverGroupContext";
function Oe3() {
  return (0, import_react114.useContext)(Se5);
}
var Pe3 = (0, import_react114.createContext)(null);
Pe3.displayName = "PopoverPanelContext";
function ut2() {
  return (0, import_react114.useContext)(Pe3);
}
function it2(t12, l17) {
  return u(l17.type, st2, t12, l17);
}
var dt2 = "div";
function Pt2(t12, l17) {
  var q5;
  let { __demoMode: P7 = false, ...C10 } = t12, m12 = (0, import_react114.useRef)(null), A8 = y(l17, T2((a25) => {
    m12.current = a25;
  })), s15 = (0, import_react114.useRef)([]), n13 = (0, import_react114.useReducer)(it2, { __demoMode: P7, popoverState: P7 ? 0 : 1, buttons: s15, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: (0, import_react114.createRef)(), afterPanelSentinel: (0, import_react114.createRef)(), afterButtonSentinel: (0, import_react114.createRef)() }), [{ popoverState: v5, button: i19, buttonId: o21, panel: u19, panelId: R9, beforePanelSentinel: y8, afterPanelSentinel: h11, afterButtonSentinel: d14 }, r21] = n13, T12 = n9((q5 = m12.current) != null ? q5 : i19), g8 = (0, import_react114.useMemo)(() => {
    if (!i19 || !u19) return false;
    for (let S10 of document.querySelectorAll("body > *")) if (Number(S10 == null ? void 0 : S10.contains(i19)) ^ Number(S10 == null ? void 0 : S10.contains(u19))) return true;
    let a25 = b2(), e8 = a25.indexOf(i19), p6 = (e8 + a25.length - 1) % a25.length, f22 = (e8 + 1) % a25.length, c64 = a25[p6], O9 = a25[f22];
    return !u19.contains(c64) && !u19.contains(O9);
  }, [i19, u19]), _8 = s3(o21), L7 = s3(R9), I7 = (0, import_react114.useMemo)(() => ({ buttonId: _8, panelId: L7, close: () => r21({ type: 1 }) }), [_8, L7, r21]), M11 = Oe3(), k5 = M11 == null ? void 0 : M11.registerPopover, V6 = o5(() => {
    var a25;
    return (a25 = M11 == null ? void 0 : M11.isFocusWithinPopoverGroup()) != null ? a25 : (T12 == null ? void 0 : T12.activeElement) && ((i19 == null ? void 0 : i19.contains(T12.activeElement)) || (u19 == null ? void 0 : u19.contains(T12.activeElement)));
  });
  (0, import_react114.useEffect)(() => k5 == null ? void 0 : k5(I7), [k5, I7]);
  let [B5, U7] = le(), F9 = b6(i19), N3 = R6({ mainTreeNode: F9, portals: B5, defaultContainers: [i19, u19] });
  E5(T12 == null ? void 0 : T12.defaultView, "focus", (a25) => {
    var e8, p6, f22, c64, O9, S10;
    a25.target !== window && a25.target instanceof HTMLElement && v5 === 0 && (V6() || i19 && u19 && (N3.contains(a25.target) || (p6 = (e8 = y8.current) == null ? void 0 : e8.contains) != null && p6.call(e8, a25.target) || (c64 = (f22 = h11.current) == null ? void 0 : f22.contains) != null && c64.call(f22, a25.target) || (S10 = (O9 = d14.current) == null ? void 0 : O9.contains) != null && S10.call(O9, a25.target) || r21({ type: 1 })));
  }, true), R3(v5 === 0, N3.resolveContainers, (a25, e8) => {
    r21({ type: 1 }), A2(e8, h5.Loose) || (a25.preventDefault(), i19 == null || i19.focus());
  });
  let x11 = o5((a25) => {
    r21({ type: 1 });
    let e8 = (() => a25 ? a25 instanceof HTMLElement ? a25 : "current" in a25 && a25.current instanceof HTMLElement ? a25.current : i19 : i19)();
    e8 == null || e8.focus();
  }), ee4 = (0, import_react114.useMemo)(() => ({ close: x11, isPortalled: g8 }), [x11, g8]), $4 = (0, import_react114.useMemo)(() => ({ open: v5 === 0, close: x11 }), [v5, x11]), J7 = { ref: A8 }, X6 = L();
  return import_react114.default.createElement(O5, { node: F9 }, import_react114.default.createElement(Me, null, import_react114.default.createElement(Pe3.Provider, { value: null }, import_react114.default.createElement(be3.Provider, { value: n13 }, import_react114.default.createElement(de7.Provider, { value: ee4 }, import_react114.default.createElement(C4, { value: x11 }, import_react114.default.createElement(c22, { value: u(v5, { [0]: i11.Open, [1]: i11.Closed }) }, import_react114.default.createElement(U7, null, X6({ ourProps: J7, theirProps: C10, slot: $4, defaultTag: dt2, name: "Popover" })))))))));
}
var ft2 = "button";
function ct2(t12, l17) {
  let P7 = (0, import_react57.useId)(), { id: C10 = `headlessui-popover-button-${P7}`, disabled: m12 = false, autoFocus: A8 = false, ...s15 } = t12, [n13, v5] = ie3("Popover.Button"), { isPortalled: i19 } = ge3("Popover.Button"), o21 = (0, import_react114.useRef)(null), u19 = `headlessui-focus-sentinel-${(0, import_react57.useId)()}`, R9 = Oe3(), y8 = R9 == null ? void 0 : R9.closeOthers, d14 = ut2() !== null;
  (0, import_react114.useEffect)(() => {
    if (!d14) return v5({ type: 3, buttonId: C10 }), () => {
      v5({ type: 3, buttonId: null });
    };
  }, [d14, C10, v5]);
  let [r21] = (0, import_react114.useState)(() => Symbol()), T12 = y(o21, l17, ye(), o5((e8) => {
    if (!d14) {
      if (e8) n13.buttons.current.push(r21);
      else {
        let p6 = n13.buttons.current.indexOf(r21);
        p6 !== -1 && n13.buttons.current.splice(p6, 1);
      }
      n13.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), e8 && v5({ type: 2, button: e8 });
    }
  })), g8 = y(o21, l17), _8 = n9(o21), L7 = o5((e8) => {
    var p6, f22, c64;
    if (d14) {
      if (n13.popoverState === 1) return;
      switch (e8.key) {
        case o9.Space:
        case o9.Enter:
          e8.preventDefault(), (f22 = (p6 = e8.target).click) == null || f22.call(p6), v5({ type: 1 }), (c64 = n13.button) == null || c64.focus();
          break;
      }
    } else switch (e8.key) {
      case o9.Space:
      case o9.Enter:
        e8.preventDefault(), e8.stopPropagation(), n13.popoverState === 1 && (y8 == null || y8(n13.buttonId)), v5({ type: 0 });
        break;
      case o9.Escape:
        if (n13.popoverState !== 0) return y8 == null ? void 0 : y8(n13.buttonId);
        if (!o21.current || _8 != null && _8.activeElement && !o21.current.contains(_8.activeElement)) return;
        e8.preventDefault(), e8.stopPropagation(), v5({ type: 1 });
        break;
    }
  }), I7 = o5((e8) => {
    d14 || e8.key === o9.Space && e8.preventDefault();
  }), M11 = o5((e8) => {
    var p6, f22;
    r5(e8.currentTarget) || m12 || (d14 ? (v5({ type: 1 }), (p6 = n13.button) == null || p6.focus()) : (e8.preventDefault(), e8.stopPropagation(), n13.popoverState === 1 && (y8 == null || y8(n13.buttonId)), v5({ type: 0 }), (f22 = n13.button) == null || f22.focus()));
  }), k5 = o5((e8) => {
    e8.preventDefault(), e8.stopPropagation();
  }), { isFocusVisible: V6, focusProps: B5 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: A8 }), { isHovered: U7, hoverProps: F9 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: m12 }), { pressed: N3, pressProps: Z4 } = w({ disabled: m12 }), x11 = n13.popoverState === 0, ee4 = (0, import_react114.useMemo)(() => ({ open: x11, active: N3 || x11, disabled: m12, hover: U7, focus: V6, autofocus: A8 }), [x11, U7, V6, N3, m12, A8]), $4 = e6(t12, n13.button), J7 = d14 ? _({ ref: g8, type: $4, onKeyDown: L7, onClick: M11, disabled: m12 || void 0, autoFocus: A8 }, B5, F9, Z4) : _({ ref: T12, id: n13.buttonId, type: $4, "aria-expanded": n13.popoverState === 0, "aria-controls": n13.panel ? n13.panelId : void 0, disabled: m12 || void 0, autoFocus: A8, onKeyDown: L7, onKeyUp: I7, onClick: M11, onMouseDown: k5 }, B5, F9, Z4), X6 = u17(), q5 = o5(() => {
    let e8 = n13.panel;
    if (!e8) return;
    function p6() {
      u(X6.current, { [a18.Forwards]: () => P6(e8, F2.First), [a18.Backwards]: () => P6(e8, F2.Last) }) === T5.Error && P6(b2().filter((c64) => c64.dataset.headlessuiFocusGuard !== "true"), u(X6.current, { [a18.Forwards]: F2.Next, [a18.Backwards]: F2.Previous }), { relativeTo: n13.button });
    }
    p6();
  }), a25 = L();
  return import_react114.default.createElement(import_react114.default.Fragment, null, a25({ ourProps: J7, theirProps: s15, slot: ee4, defaultTag: ft2, name: "Popover.Button" }), x11 && !d14 && i19 && import_react114.default.createElement(f4, { id: u19, ref: n13.afterButtonSentinel, features: s4.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: q5 }));
}
var vt2 = "div";
var Tt2 = O.RenderStrategy | O.Static;
function Le2(t12, l17) {
  let P7 = (0, import_react57.useId)(), { id: C10 = `headlessui-popover-backdrop-${P7}`, transition: m12 = false, ...A8 } = t12, [{ popoverState: s15 }, n13] = ie3("Popover.Backdrop"), [v5, i19] = (0, import_react114.useState)(null), o21 = y(l17, i19), u19 = u12(), [R9, y8] = x3(m12, v5, u19 !== null ? (u19 & i11.Open) === i11.Open : s15 === 0), h11 = o5((g8) => {
    if (r5(g8.currentTarget)) return g8.preventDefault();
    n13({ type: 1 });
  }), d14 = (0, import_react114.useMemo)(() => ({ open: s15 === 0 }), [s15]), r21 = { ref: o21, id: C10, "aria-hidden": true, onClick: h11, ...R4(y8) };
  return L()({ ourProps: r21, theirProps: A8, slot: d14, defaultTag: vt2, features: Tt2, visible: R9, name: "Popover.Backdrop" });
}
var mt2 = "div";
var yt3 = O.RenderStrategy | O.Static;
function Et3(t12, l17) {
  let P7 = (0, import_react57.useId)(), { id: C10 = `headlessui-popover-panel-${P7}`, focus: m12 = false, anchor: A8, portal: s15 = false, modal: n13 = false, transition: v5 = false, ...i19 } = t12, [o21, u19] = ie3("Popover.Panel"), { close: R9, isPortalled: y8 } = ge3("Popover.Panel"), h11 = `headlessui-focus-sentinel-before-${P7}`, d14 = `headlessui-focus-sentinel-after-${P7}`, r21 = (0, import_react114.useRef)(null), T12 = xe(A8), [g8, _8] = Re(T12), L7 = be();
  T12 && (s15 = true);
  let [I7, M11] = (0, import_react114.useState)(null), k5 = y(r21, l17, T12 ? g8 : null, o5((e8) => u19({ type: 4, panel: e8 })), M11), V6 = n9(o21.button), B5 = n9(r21);
  n(() => (u19({ type: 5, panelId: C10 }), () => {
    u19({ type: 5, panelId: null });
  }), [C10, u19]);
  let U7 = u12(), [F9, N3] = x3(v5, I7, U7 !== null ? (U7 & i11.Open) === i11.Open : o21.popoverState === 0);
  m6(F9, o21.button, () => {
    u19({ type: 1 });
  });
  let Z4 = o21.__demoMode ? false : n13 && F9;
  f11(Z4, B5);
  let x11 = o5((e8) => {
    var p6;
    switch (e8.key) {
      case o9.Escape:
        if (o21.popoverState !== 0 || !r21.current || B5 != null && B5.activeElement && !r21.current.contains(B5.activeElement)) return;
        e8.preventDefault(), e8.stopPropagation(), u19({ type: 1 }), (p6 = o21.button) == null || p6.focus();
        break;
    }
  });
  (0, import_react114.useEffect)(() => {
    var e8;
    t12.static || o21.popoverState === 1 && ((e8 = t12.unmount) == null || e8) && u19({ type: 4, panel: null });
  }, [o21.popoverState, t12.unmount, t12.static, u19]), (0, import_react114.useEffect)(() => {
    if (o21.__demoMode || !m12 || o21.popoverState !== 0 || !r21.current) return;
    let e8 = B5 == null ? void 0 : B5.activeElement;
    r21.current.contains(e8) || P6(r21.current, F2.First);
  }, [o21.__demoMode, m12, r21.current, o21.popoverState]);
  let ee4 = (0, import_react114.useMemo)(() => ({ open: o21.popoverState === 0, close: R9 }), [o21.popoverState, R9]), $4 = _(T12 ? L7() : {}, { ref: k5, id: C10, onKeyDown: x11, onBlur: m12 && o21.popoverState === 0 ? (e8) => {
    var f22, c64, O9, S10, w10;
    let p6 = e8.relatedTarget;
    p6 && r21.current && ((f22 = r21.current) != null && f22.contains(p6) || (u19({ type: 1 }), ((O9 = (c64 = o21.beforePanelSentinel.current) == null ? void 0 : c64.contains) != null && O9.call(c64, p6) || (w10 = (S10 = o21.afterPanelSentinel.current) == null ? void 0 : S10.contains) != null && w10.call(S10, p6)) && p6.focus({ preventScroll: true })));
  } : void 0, tabIndex: -1, style: { ...i19.style, ..._8, "--button-width": d3(o21.button, true).width }, ...R4(N3) }), J7 = u17(), X6 = o5(() => {
    let e8 = r21.current;
    if (!e8) return;
    function p6() {
      u(J7.current, { [a18.Forwards]: () => {
        var c64;
        P6(e8, F2.First) === T5.Error && ((c64 = o21.afterPanelSentinel.current) == null || c64.focus());
      }, [a18.Backwards]: () => {
        var f22;
        (f22 = o21.button) == null || f22.focus({ preventScroll: true });
      } });
    }
    p6();
  }), q5 = o5(() => {
    let e8 = r21.current;
    if (!e8) return;
    function p6() {
      u(J7.current, { [a18.Forwards]: () => {
        if (!o21.button) return;
        let f22 = b2(), c64 = f22.indexOf(o21.button), O9 = f22.slice(0, c64 + 1), w10 = [...f22.slice(c64 + 1), ...O9];
        for (let fe4 of w10.slice()) if (fe4.dataset.headlessuiFocusGuard === "true" || I7 != null && I7.contains(fe4)) {
          let Ae3 = w10.indexOf(fe4);
          Ae3 !== -1 && w10.splice(Ae3, 1);
        }
        P6(w10, F2.First, { sorted: false });
      }, [a18.Backwards]: () => {
        var c64;
        P6(e8, F2.Previous) === T5.Error && ((c64 = o21.button) == null || c64.focus());
      } });
    }
    p6();
  }), a25 = L();
  return import_react114.default.createElement(s7, null, import_react114.default.createElement(Pe3.Provider, { value: C10 }, import_react114.default.createElement(de7.Provider, { value: { close: R9, isPortalled: y8 } }, import_react114.default.createElement(oe, { enabled: s15 ? t12.static || F9 : false, ownerDocument: V6 }, F9 && y8 && import_react114.default.createElement(f4, { id: h11, ref: o21.beforePanelSentinel, features: s4.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: X6 }), a25({ ourProps: $4, theirProps: i19, slot: ee4, defaultTag: mt2, features: yt3, visible: F9, name: "Popover.Panel" }), F9 && y8 && import_react114.default.createElement(f4, { id: d14, ref: o21.afterPanelSentinel, features: s4.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: q5 })))));
}
var bt = "div";
function gt2(t12, l17) {
  let P7 = (0, import_react114.useRef)(null), C10 = y(P7, l17), [m12, A8] = (0, import_react114.useState)([]), s15 = o5((d14) => {
    A8((r21) => {
      let T12 = r21.indexOf(d14);
      if (T12 !== -1) {
        let g8 = r21.slice();
        return g8.splice(T12, 1), g8;
      }
      return r21;
    });
  }), n13 = o5((d14) => (A8((r21) => [...r21, d14]), () => s15(d14))), v5 = o5(() => {
    var T12;
    let d14 = o2(P7);
    if (!d14) return false;
    let r21 = d14.activeElement;
    return (T12 = P7.current) != null && T12.contains(r21) ? true : m12.some((g8) => {
      var _8, L7;
      return ((_8 = d14.getElementById(g8.buttonId.current)) == null ? void 0 : _8.contains(r21)) || ((L7 = d14.getElementById(g8.panelId.current)) == null ? void 0 : L7.contains(r21));
    });
  }), i19 = o5((d14) => {
    for (let r21 of m12) r21.buttonId.current !== d14 && r21.close();
  }), o21 = (0, import_react114.useMemo)(() => ({ registerPopover: n13, unregisterPopover: s15, isFocusWithinPopoverGroup: v5, closeOthers: i19 }), [n13, s15, v5, i19]), u19 = (0, import_react114.useMemo)(() => ({}), []), R9 = t12, y8 = { ref: C10 }, h11 = L();
  return import_react114.default.createElement(O5, null, import_react114.default.createElement(Se5.Provider, { value: o21 }, h11({ ourProps: y8, theirProps: R9, slot: u19, defaultTag: bt, name: "Popover.Group" })));
}
var St2 = K(Pt2);
var At2 = K(ct2);
var Ct2 = K(Le2);
var Rt2 = K(Le2);
var Bt = K(Et3);
var _t2 = K(gt2);
var ao = Object.assign(St2, { Button: At2, Backdrop: Rt2, Overlay: Ct2, Panel: Bt, Group: _t2 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var import_react115 = __toESM(require_react(), 1);
var Ie3 = ((e8) => (e8[e8.RegisterOption = 0] = "RegisterOption", e8[e8.UnregisterOption = 1] = "UnregisterOption", e8))(Ie3 || {});
var Fe4 = { [0](o21, t12) {
  let e8 = [...o21.options, { id: t12.id, element: t12.element, propsRef: t12.propsRef }];
  return { ...o21, options: _3(e8, (i19) => i19.element.current) };
}, [1](o21, t12) {
  let e8 = o21.options.slice(), i19 = o21.options.findIndex((v5) => v5.id === t12.id);
  return i19 === -1 ? o21 : (e8.splice(i19, 1), { ...o21, options: e8 });
} };
var J5 = (0, import_react115.createContext)(null);
J5.displayName = "RadioGroupDataContext";
function X5(o21) {
  let t12 = (0, import_react115.useContext)(J5);
  if (t12 === null) {
    let e8 = new Error(`<${o21} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e8, X5), e8;
  }
  return t12;
}
var z = (0, import_react115.createContext)(null);
z.displayName = "RadioGroupActionsContext";
function q4(o21) {
  let t12 = (0, import_react115.useContext)(z);
  if (t12 === null) {
    let e8 = new Error(`<${o21} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e8, q4), e8;
  }
  return t12;
}
function Ue2(o21, t12) {
  return u(t12.type, Fe4, o21, t12);
}
var Me3 = "div";
function Se6(o21, t12) {
  let e8 = (0, import_react57.useId)(), i19 = a3(), { id: v5 = `headlessui-radiogroup-${e8}`, value: m12, form: D8, name: n13, onChange: f22, by: u19, disabled: a25 = i19 || false, defaultValue: M11, tabIndex: T12 = 0, ...S10 } = o21, R9 = u8(u19), [A8, y8] = (0, import_react115.useReducer)(Ue2, { options: [] }), p6 = A8.options, [C10, _8] = K2(), [h11, L7] = w3(), k5 = (0, import_react115.useRef)(null), c64 = y(k5, t12), b11 = l2(M11), [l17, I7] = T(m12, f22, b11), g8 = (0, import_react115.useMemo)(() => p6.find((r21) => !r21.propsRef.current.disabled), [p6]), O9 = (0, import_react115.useMemo)(() => p6.some((r21) => R9(r21.propsRef.current.value, l17)), [p6, l17]), s15 = o5((r21) => {
    var d14;
    if (a25 || R9(r21, l17)) return false;
    let F9 = (d14 = p6.find((w10) => R9(w10.propsRef.current.value, r21))) == null ? void 0 : d14.propsRef.current;
    return F9 != null && F9.disabled ? false : (I7 == null || I7(r21), true);
  }), ue5 = o5((r21) => {
    let F9 = k5.current;
    if (!F9) return;
    let d14 = o2(F9), w10 = p6.filter((P7) => P7.propsRef.current.disabled === false).map((P7) => P7.element.current);
    switch (r21.key) {
      case o9.Enter:
        p2(r21.currentTarget);
        break;
      case o9.ArrowLeft:
      case o9.ArrowUp:
        if (r21.preventDefault(), r21.stopPropagation(), P6(w10, F2.Previous | F2.WrapAround) === T5.Success) {
          let E15 = p6.find((W3) => W3.element.current === (d14 == null ? void 0 : d14.activeElement));
          E15 && s15(E15.propsRef.current.value);
        }
        break;
      case o9.ArrowRight:
      case o9.ArrowDown:
        if (r21.preventDefault(), r21.stopPropagation(), P6(w10, F2.Next | F2.WrapAround) === T5.Success) {
          let E15 = p6.find((W3) => W3.element.current === (d14 == null ? void 0 : d14.activeElement));
          E15 && s15(E15.propsRef.current.value);
        }
        break;
      case o9.Space:
        {
          r21.preventDefault(), r21.stopPropagation();
          let P7 = p6.find((E15) => E15.element.current === (d14 == null ? void 0 : d14.activeElement));
          P7 && s15(P7.propsRef.current.value);
        }
        break;
    }
  }), Q4 = o5((r21) => (y8({ type: 0, ...r21 }), () => y8({ type: 1, id: r21.id }))), ce5 = (0, import_react115.useMemo)(() => ({ value: l17, firstOption: g8, containsCheckedOption: O9, disabled: a25, compare: R9, tabIndex: T12, ...A8 }), [l17, g8, O9, a25, R9, T12, A8]), fe4 = (0, import_react115.useMemo)(() => ({ registerOption: Q4, change: s15 }), [Q4, s15]), Te4 = { ref: c64, id: v5, role: "radiogroup", "aria-labelledby": C10, "aria-describedby": h11, onKeyDown: ue5 }, Re4 = (0, import_react115.useMemo)(() => ({ value: l17 }), [l17]), me4 = (0, import_react115.useCallback)(() => {
    if (b11 !== void 0) return s15(b11);
  }, [s15, b11]), ye6 = L();
  return import_react115.default.createElement(L7, { name: "RadioGroup.Description" }, import_react115.default.createElement(_8, { name: "RadioGroup.Label" }, import_react115.default.createElement(z.Provider, { value: fe4 }, import_react115.default.createElement(J5.Provider, { value: ce5 }, n13 != null && import_react115.default.createElement(j2, { disabled: a25, data: { [n13]: l17 || "on" }, overrides: { type: "radio", checked: l17 != null }, form: D8, onReset: me4 }), ye6({ ourProps: Te4, theirProps: S10, slot: Re4, defaultTag: Me3, name: "RadioGroup" })))));
}
var He3 = "div";
function we2(o21, t12) {
  var g8;
  let e8 = X5("RadioGroup.Option"), i19 = q4("RadioGroup.Option"), v5 = (0, import_react57.useId)(), { id: m12 = `headlessui-radiogroup-option-${v5}`, value: D8, disabled: n13 = e8.disabled || false, autoFocus: f22 = false, ...u19 } = o21, a25 = (0, import_react115.useRef)(null), M11 = y(a25, t12), [T12, S10] = K2(), [R9, A8] = w3(), y8 = s3({ value: D8, disabled: n13 });
  n(() => i19.registerOption({ id: m12, element: a25, propsRef: y8 }), [m12, i19, a25, y8]);
  let p6 = o5((O9) => {
    var s15;
    if (r5(O9.currentTarget)) return O9.preventDefault();
    i19.change(D8) && ((s15 = a25.current) == null || s15.focus());
  }), C10 = ((g8 = e8.firstOption) == null ? void 0 : g8.id) === m12, { isFocusVisible: _8, focusProps: h11 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: f22 }), { isHovered: L7, hoverProps: k5 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: n13 }), c64 = e8.compare(e8.value, D8), b11 = _({ ref: M11, id: m12, role: "radio", "aria-checked": c64 ? "true" : "false", "aria-labelledby": T12, "aria-describedby": R9, "aria-disabled": n13 ? true : void 0, tabIndex: (() => n13 ? -1 : c64 || !e8.containsCheckedOption && C10 ? e8.tabIndex : -1)(), onClick: n13 ? void 0 : p6, autoFocus: f22 }, h11, k5), l17 = (0, import_react115.useMemo)(() => ({ checked: c64, disabled: n13, active: _8, hover: L7, focus: _8, autofocus: f22 }), [c64, n13, L7, _8, f22]), I7 = L();
  return import_react115.default.createElement(A8, { name: "RadioGroup.Description" }, import_react115.default.createElement(S10, { name: "RadioGroup.Label" }, I7({ ourProps: b11, theirProps: u19, slot: l17, defaultTag: He3, name: "RadioGroup.Option" })));
}
var Ne2 = "span";
function We2(o21, t12) {
  var g8;
  let e8 = X5("Radio"), i19 = q4("Radio"), v5 = (0, import_react57.useId)(), m12 = u4(), D8 = a3(), { id: n13 = m12 || `headlessui-radio-${v5}`, value: f22, disabled: u19 = e8.disabled || D8 || false, autoFocus: a25 = false, ...M11 } = o21, T12 = (0, import_react115.useRef)(null), S10 = y(T12, t12), R9 = I(), A8 = U2(), y8 = s3({ value: f22, disabled: u19 });
  n(() => i19.registerOption({ id: n13, element: T12, propsRef: y8 }), [n13, i19, T12, y8]);
  let p6 = o5((O9) => {
    var s15;
    if (r5(O9.currentTarget)) return O9.preventDefault();
    i19.change(f22) && ((s15 = T12.current) == null || s15.focus());
  }), { isFocusVisible: C10, focusProps: _8 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: a25 }), { isHovered: h11, hoverProps: L7 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: u19 }), k5 = ((g8 = e8.firstOption) == null ? void 0 : g8.id) === n13, c64 = e8.compare(e8.value, f22), b11 = _({ ref: S10, id: n13, role: "radio", "aria-checked": c64 ? "true" : "false", "aria-labelledby": R9, "aria-describedby": A8, "aria-disabled": u19 ? true : void 0, tabIndex: (() => u19 ? -1 : c64 || !e8.containsCheckedOption && k5 ? e8.tabIndex : -1)(), autoFocus: a25, onClick: u19 ? void 0 : p6 }, _8, L7), l17 = (0, import_react115.useMemo)(() => ({ checked: c64, disabled: u19, hover: h11, focus: C10, autofocus: a25 }), [c64, u19, h11, C10, a25]);
  return L()({ ourProps: b11, theirProps: M11, slot: l17, defaultTag: Ne2, name: "Radio" });
}
var Be2 = K(Se6);
var Ve = K(we2);
var Ke = K(We2);
var $e2 = Q;
var je3 = H4;
var mt3 = Object.assign(Be2, { Option: Ve, Radio: Ke, Label: $e2, Description: je3 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/select/select.js
var import_react116 = __toESM(require_react(), 1);
var H12 = "select";
function B4(a25, i19) {
  let p6 = (0, import_react57.useId)(), d14 = u4(), n13 = a3(), { id: c64 = d14 || `headlessui-select-${p6}`, disabled: e8 = n13 || false, invalid: t12 = false, autoFocus: o21 = false, ...f22 } = a25, m12 = I(), u19 = U2(), { isFocusVisible: r21, focusProps: T12 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: o21 }), { isHovered: l17, hoverProps: b11 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), { pressed: s15, pressProps: y8 } = w({ disabled: e8 }), P7 = _({ ref: i19, id: c64, "aria-labelledby": m12, "aria-describedby": u19, "aria-invalid": t12 ? "true" : void 0, disabled: e8 || void 0, autoFocus: o21 }, T12, b11, y8), S10 = (0, import_react116.useMemo)(() => ({ disabled: e8, invalid: t12, hover: l17, focus: r21, active: s15, autofocus: o21 }), [e8, t12, l17, r21, s15, o21]);
  return L()({ ourProps: P7, theirProps: f22, slot: S10, defaultTag: H12, name: "Select" });
}
var j7 = K(B4);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/switch/switch.js
var import_react117 = __toESM(require_react(), 1);
var E13 = (0, import_react117.createContext)(null);
E13.displayName = "GroupContext";
var De4 = import_react117.Fragment;
function ge5(n13) {
  var u19;
  let [o21, s15] = (0, import_react117.useState)(null), [h11, b11] = K2(), [T12, t12] = w3(), p6 = (0, import_react117.useMemo)(() => ({ switch: o21, setSwitch: s15 }), [o21, s15]), y8 = {}, S10 = n13, c64 = L();
  return import_react117.default.createElement(t12, { name: "Switch.Description", value: T12 }, import_react117.default.createElement(b11, { name: "Switch.Label", value: h11, props: { htmlFor: (u19 = p6.switch) == null ? void 0 : u19.id, onClick(d14) {
    o21 && (d14.currentTarget instanceof HTMLLabelElement && d14.preventDefault(), o21.click(), o21.focus({ preventScroll: true }));
  } } }, import_react117.default.createElement(E13.Provider, { value: p6 }, c64({ ourProps: y8, theirProps: S10, slot: {}, defaultTag: De4, name: "Switch.Group" }))));
}
var ve = "button";
function xe2(n13, o21) {
  var L7;
  let s15 = (0, import_react57.useId)(), h11 = u4(), b11 = a3(), { id: T12 = h11 || `headlessui-switch-${s15}`, disabled: t12 = b11 || false, checked: p6, defaultChecked: y8, onChange: S10, name: c64, value: u19, form: d14, autoFocus: m12 = false, ...F9 } = n13, _8 = (0, import_react117.useContext)(E13), [H14, k5] = (0, import_react117.useState)(null), M11 = (0, import_react117.useRef)(null), U7 = y(M11, o21, _8 === null ? null : _8.setSwitch, k5), l17 = l2(y8), [a25, r21] = T(p6, S10, l17 != null ? l17 : false), I7 = p(), [P7, D8] = (0, import_react117.useState)(false), g8 = o5(() => {
    D8(true), r21 == null || r21(!a25), I7.nextFrame(() => {
      D8(false);
    });
  }), B5 = o5((e8) => {
    if (r5(e8.currentTarget)) return e8.preventDefault();
    e8.preventDefault(), g8();
  }), K4 = o5((e8) => {
    e8.key === o9.Space ? (e8.preventDefault(), g8()) : e8.key === o9.Enter && p2(e8.currentTarget);
  }), W3 = o5((e8) => e8.preventDefault()), O9 = I(), N3 = U2(), { isFocusVisible: v5, focusProps: J7 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: m12 }), { isHovered: x11, hoverProps: V6 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: t12 }), { pressed: C10, pressProps: X6 } = w({ disabled: t12 }), j8 = (0, import_react117.useMemo)(() => ({ checked: a25, disabled: t12, hover: x11, focus: v5, active: C10, autofocus: m12, changing: P7 }), [a25, x11, v5, C10, t12, P7, m12]), $4 = _({ id: T12, ref: U7, role: "switch", type: e6(n13, H14), tabIndex: n13.tabIndex === -1 ? 0 : (L7 = n13.tabIndex) != null ? L7 : 0, "aria-checked": a25, "aria-labelledby": O9, "aria-describedby": N3, disabled: t12 || void 0, autoFocus: m12, onClick: B5, onKeyUp: K4, onKeyPress: W3 }, J7, V6, X6), q5 = (0, import_react117.useCallback)(() => {
    if (l17 !== void 0) return r21 == null ? void 0 : r21(l17);
  }, [r21, l17]), z3 = L();
  return import_react117.default.createElement(import_react117.default.Fragment, null, c64 != null && import_react117.default.createElement(j2, { disabled: t12, data: { [c64]: u19 || "on" }, overrides: { type: "checkbox", checked: a25 }, form: d14, onReset: q5 }), z3({ ourProps: $4, theirProps: F9, slot: j8, defaultTag: ve, name: "Switch" }));
}
var Ce2 = K(xe2);
var Le3 = ge5;
var Re3 = Q;
var Ge2 = H4;
var Ye3 = Object.assign(Ce2, { Group: Le3, Label: Re3, Description: Ge2 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var import_react119 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/focus-sentinel.js
var import_react118 = __toESM(require_react(), 1);
function b10({ onFocus: n13 }) {
  let [r21, o21] = (0, import_react118.useState)(true), u19 = f19();
  return r21 ? import_react118.default.createElement(f4, { as: "button", type: "button", features: s4.Focusable, onFocus: (a25) => {
    a25.preventDefault();
    let e8, i19 = 50;
    function t12() {
      if (i19-- <= 0) {
        e8 && cancelAnimationFrame(e8);
        return;
      }
      if (n13()) {
        if (cancelAnimationFrame(e8), !u19.current) return;
        o21(false);
        return;
      }
      e8 = requestAnimationFrame(t12);
    }
    e8 = requestAnimationFrame(t12);
  } }) : null;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/stable-collection.js
var l16 = __toESM(require_react(), 1);
var s14 = l16.createContext(null);
function a24() {
  return { groups: /* @__PURE__ */ new Map(), get(o21, e8) {
    var i19;
    let t12 = this.groups.get(o21);
    t12 || (t12 = /* @__PURE__ */ new Map(), this.groups.set(o21, t12));
    let n13 = (i19 = t12.get(e8)) != null ? i19 : 0;
    t12.set(e8, n13 + 1);
    let r21 = Array.from(t12.keys()).indexOf(e8);
    function u19() {
      let c64 = t12.get(e8);
      c64 > 1 ? t12.set(e8, c64 - 1) : t12.delete(e8);
    }
    return [r21, u19];
  } };
}
function f21({ children: o21 }) {
  let e8 = l16.useRef(a24());
  return l16.createElement(s14.Provider, { value: e8 }, o21);
}
function C8(o21) {
  let e8 = l16.useContext(s14);
  if (!e8) throw new Error("You must wrap your component in a <StableCollection>");
  let t12 = l16.useId(), [n13, r21] = e8.current.get(o21, t12);
  return l16.useEffect(() => r21, []), n13;
}

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var Le4 = ((t12) => (t12[t12.Forwards = 0] = "Forwards", t12[t12.Backwards = 1] = "Backwards", t12))(Le4 || {});
var _e2 = ((l17) => (l17[l17.Less = -1] = "Less", l17[l17.Equal = 0] = "Equal", l17[l17.Greater = 1] = "Greater", l17))(_e2 || {});
var De5 = ((n13) => (n13[n13.SetSelectedIndex = 0] = "SetSelectedIndex", n13[n13.RegisterTab = 1] = "RegisterTab", n13[n13.UnregisterTab = 2] = "UnregisterTab", n13[n13.RegisterPanel = 3] = "RegisterPanel", n13[n13.UnregisterPanel = 4] = "UnregisterPanel", n13))(De5 || {});
var Se7 = { [0](e8, r21) {
  var d14;
  let t12 = _3(e8.tabs, (u19) => u19.current), l17 = _3(e8.panels, (u19) => u19.current), a25 = t12.filter((u19) => {
    var T12;
    return !((T12 = u19.current) != null && T12.hasAttribute("disabled"));
  }), n13 = { ...e8, tabs: t12, panels: l17 };
  if (r21.index < 0 || r21.index > t12.length - 1) {
    let u19 = u(Math.sign(r21.index - e8.selectedIndex), { [-1]: () => 1, [0]: () => u(Math.sign(r21.index), { [-1]: () => 0, [0]: () => 0, [1]: () => 1 }), [1]: () => 0 });
    if (a25.length === 0) return n13;
    let T12 = u(u19, { [0]: () => t12.indexOf(a25[0]), [1]: () => t12.indexOf(a25[a25.length - 1]) });
    return { ...n13, selectedIndex: T12 === -1 ? e8.selectedIndex : T12 };
  }
  let s15 = t12.slice(0, r21.index), b11 = [...t12.slice(r21.index), ...s15].find((u19) => a25.includes(u19));
  if (!b11) return n13;
  let f22 = (d14 = t12.indexOf(b11)) != null ? d14 : e8.selectedIndex;
  return f22 === -1 && (f22 = e8.selectedIndex), { ...n13, selectedIndex: f22 };
}, [1](e8, r21) {
  if (e8.tabs.includes(r21.tab)) return e8;
  let t12 = e8.tabs[e8.selectedIndex], l17 = _3([...e8.tabs, r21.tab], (n13) => n13.current), a25 = e8.selectedIndex;
  return e8.info.current.isControlled || (a25 = l17.indexOf(t12), a25 === -1 && (a25 = e8.selectedIndex)), { ...e8, tabs: l17, selectedIndex: a25 };
}, [2](e8, r21) {
  return { ...e8, tabs: e8.tabs.filter((t12) => t12 !== r21.tab) };
}, [3](e8, r21) {
  return e8.panels.includes(r21.panel) ? e8 : { ...e8, panels: _3([...e8.panels, r21.panel], (t12) => t12.current) };
}, [4](e8, r21) {
  return { ...e8, panels: e8.panels.filter((t12) => t12 !== r21.panel) };
} };
var V5 = (0, import_react119.createContext)(null);
V5.displayName = "TabsDataContext";
function C9(e8) {
  let r21 = (0, import_react119.useContext)(V5);
  if (r21 === null) {
    let t12 = new Error(`<${e8} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t12, C9), t12;
  }
  return r21;
}
var Q3 = (0, import_react119.createContext)(null);
Q3.displayName = "TabsActionsContext";
function Y3(e8) {
  let r21 = (0, import_react119.useContext)(Q3);
  if (r21 === null) {
    let t12 = new Error(`<${e8} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t12, Y3), t12;
  }
  return r21;
}
function Fe5(e8, r21) {
  return u(r21.type, Se7, e8, r21);
}
var Ie4 = "div";
function he3(e8, r21) {
  let { defaultIndex: t12 = 0, vertical: l17 = false, manual: a25 = false, onChange: n13, selectedIndex: s15 = null, ...g8 } = e8;
  const b11 = l17 ? "vertical" : "horizontal", f22 = a25 ? "manual" : "auto";
  let d14 = s15 !== null, u19 = s3({ isControlled: d14 }), T12 = y(r21), [p6, c64] = (0, import_react119.useReducer)(Fe5, { info: u19, selectedIndex: s15 != null ? s15 : t12, tabs: [], panels: [] }), h11 = (0, import_react119.useMemo)(() => ({ selectedIndex: p6.selectedIndex }), [p6.selectedIndex]), m12 = s3(n13 || (() => {
  })), M11 = s3(p6.tabs), S10 = (0, import_react119.useMemo)(() => ({ orientation: b11, activation: f22, ...p6 }), [b11, f22, p6]), P7 = o5((i19) => (c64({ type: 1, tab: i19 }), () => c64({ type: 2, tab: i19 }))), A8 = o5((i19) => (c64({ type: 3, panel: i19 }), () => c64({ type: 4, panel: i19 }))), E15 = o5((i19) => {
    _8.current !== i19 && m12.current(i19), d14 || c64({ type: 0, index: i19 });
  }), _8 = s3(d14 ? e8.selectedIndex : p6.selectedIndex), D8 = (0, import_react119.useMemo)(() => ({ registerTab: P7, registerPanel: A8, change: E15 }), []);
  n(() => {
    c64({ type: 0, index: s15 != null ? s15 : t12 });
  }, [s15]), n(() => {
    if (_8.current === void 0 || p6.tabs.length <= 0) return;
    let i19 = _3(p6.tabs, (R9) => R9.current);
    i19.some((R9, X6) => p6.tabs[X6] !== R9) && E15(i19.indexOf(p6.tabs[_8.current]));
  });
  let K4 = { ref: T12 }, J7 = L();
  return import_react119.default.createElement(f21, null, import_react119.default.createElement(Q3.Provider, { value: D8 }, import_react119.default.createElement(V5.Provider, { value: S10 }, S10.tabs.length <= 0 && import_react119.default.createElement(b10, { onFocus: () => {
    var i19, G8;
    for (let R9 of M11.current) if (((i19 = R9.current) == null ? void 0 : i19.tabIndex) === 0) return (G8 = R9.current) == null || G8.focus(), true;
    return false;
  } }), J7({ ourProps: K4, theirProps: g8, slot: h11, defaultTag: Ie4, name: "Tabs" }))));
}
var ve2 = "div";
function Ce3(e8, r21) {
  let { orientation: t12, selectedIndex: l17 } = C9("Tab.List"), a25 = y(r21), n13 = (0, import_react119.useMemo)(() => ({ selectedIndex: l17 }), [l17]), s15 = e8, g8 = { ref: a25, role: "tablist", "aria-orientation": t12 };
  return L()({ ourProps: g8, theirProps: s15, slot: n13, defaultTag: ve2, name: "Tabs.List" });
}
var Me4 = "button";
function Ge3(e8, r21) {
  var ee4, te6;
  let t12 = (0, import_react57.useId)(), { id: l17 = `headlessui-tabs-tab-${t12}`, disabled: a25 = false, autoFocus: n13 = false, ...s15 } = e8, { orientation: g8, activation: b11, selectedIndex: f22, tabs: d14, panels: u19 } = C9("Tab"), T12 = Y3("Tab"), p6 = C9("Tab"), [c64, h11] = (0, import_react119.useState)(null), m12 = (0, import_react119.useRef)(null), M11 = y(m12, r21, h11);
  n(() => T12.registerTab(m12), [T12, m12]);
  let S10 = C8("tabs"), P7 = d14.indexOf(m12);
  P7 === -1 && (P7 = S10);
  let A8 = P7 === f22, E15 = o5((o21) => {
    var $4;
    let L7 = o21();
    if (L7 === T5.Success && b11 === "auto") {
      let q5 = ($4 = o2(m12)) == null ? void 0 : $4.activeElement, re6 = p6.tabs.findIndex((ce5) => ce5.current === q5);
      re6 !== -1 && T12.change(re6);
    }
    return L7;
  }), _8 = o5((o21) => {
    let L7 = d14.map((q5) => q5.current).filter(Boolean);
    if (o21.key === o9.Space || o21.key === o9.Enter) {
      o21.preventDefault(), o21.stopPropagation(), T12.change(P7);
      return;
    }
    switch (o21.key) {
      case o9.Home:
      case o9.PageUp:
        return o21.preventDefault(), o21.stopPropagation(), E15(() => P6(L7, F2.First));
      case o9.End:
      case o9.PageDown:
        return o21.preventDefault(), o21.stopPropagation(), E15(() => P6(L7, F2.Last));
    }
    if (E15(() => u(g8, { vertical() {
      return o21.key === o9.ArrowUp ? P6(L7, F2.Previous | F2.WrapAround) : o21.key === o9.ArrowDown ? P6(L7, F2.Next | F2.WrapAround) : T5.Error;
    }, horizontal() {
      return o21.key === o9.ArrowLeft ? P6(L7, F2.Previous | F2.WrapAround) : o21.key === o9.ArrowRight ? P6(L7, F2.Next | F2.WrapAround) : T5.Error;
    } })) === T5.Success) return o21.preventDefault();
  }), D8 = (0, import_react119.useRef)(false), K4 = o5(() => {
    var o21;
    D8.current || (D8.current = true, (o21 = m12.current) == null || o21.focus({ preventScroll: true }), T12.change(P7), t(() => {
      D8.current = false;
    }));
  }), J7 = o5((o21) => {
    o21.preventDefault();
  }), { isFocusVisible: i19, focusProps: G8 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: n13 }), { isHovered: R9, hoverProps: X6 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: a25 }), { pressed: Z4, pressProps: ue5 } = w({ disabled: a25 }), Te4 = (0, import_react119.useMemo)(() => ({ selected: A8, hover: R9, active: Z4, focus: i19, autofocus: n13, disabled: a25 }), [A8, R9, i19, Z4, n13, a25]), de8 = _({ ref: M11, onKeyDown: _8, onMouseDown: J7, onClick: K4, id: l17, role: "tab", type: e6(e8, c64), "aria-controls": (te6 = (ee4 = u19[P7]) == null ? void 0 : ee4.current) == null ? void 0 : te6.id, "aria-selected": A8, tabIndex: A8 ? 0 : -1, disabled: a25 || void 0, autoFocus: n13 }, G8, X6, ue5);
  return L()({ ourProps: de8, theirProps: s15, slot: Te4, defaultTag: Me4, name: "Tabs.Tab" });
}
var Ue3 = "div";
function He4(e8, r21) {
  let { selectedIndex: t12 } = C9("Tab.Panels"), l17 = y(r21), a25 = (0, import_react119.useMemo)(() => ({ selectedIndex: t12 }), [t12]), n13 = e8, s15 = { ref: l17 };
  return L()({ ourProps: s15, theirProps: n13, slot: a25, defaultTag: Ue3, name: "Tabs.Panels" });
}
var we3 = "div";
var Oe4 = O.RenderStrategy | O.Static;
function Ne3(e8, r21) {
  var A8, E15, _8, D8;
  let t12 = (0, import_react57.useId)(), { id: l17 = `headlessui-tabs-panel-${t12}`, tabIndex: a25 = 0, ...n13 } = e8, { selectedIndex: s15, tabs: g8, panels: b11 } = C9("Tab.Panel"), f22 = Y3("Tab.Panel"), d14 = (0, import_react119.useRef)(null), u19 = y(d14, r21);
  n(() => f22.registerPanel(d14), [f22, d14]);
  let T12 = C8("panels"), p6 = b11.indexOf(d14);
  p6 === -1 && (p6 = T12);
  let c64 = p6 === s15, { isFocusVisible: h11, focusProps: m12 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), M11 = (0, import_react119.useMemo)(() => ({ selected: c64, focus: h11 }), [c64, h11]), S10 = _({ ref: u19, id: l17, role: "tabpanel", "aria-labelledby": (E15 = (A8 = g8[p6]) == null ? void 0 : A8.current) == null ? void 0 : E15.id, tabIndex: c64 ? a25 : -1 }, m12), P7 = L();
  return !c64 && ((_8 = n13.unmount) == null || _8) && !((D8 = n13.static) != null && D8) ? import_react119.default.createElement(f4, { "aria-hidden": "true", ...S10 }) : P7({ ourProps: S10, theirProps: n13, slot: M11, defaultTag: we3, features: Oe4, visible: c64, name: "Tabs.Panel" });
}
var ke2 = K(Ge3);
var Be3 = K(he3);
var We3 = K(Ce3);
var je4 = K(He4);
var Ke2 = K(Ne3);
var Tt3 = Object.assign(ke2, { Group: Be3, List: We3, Panels: je4, Panel: Ke2 });

// node_modules/.pnpm/@headlessui+react@2.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/textarea/textarea.js
var import_react120 = __toESM(require_react(), 1);
var L6 = "textarea";
function H13(s15, l17) {
  let i19 = (0, import_react57.useId)(), d14 = u4(), n13 = a3(), { id: p6 = d14 || `headlessui-textarea-${i19}`, disabled: e8 = n13 || false, autoFocus: r21 = false, invalid: a25 = false, ...T12 } = s15, f22 = I(), m12 = U2(), { isFocused: o21, focusProps: u19 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: r21 }), { isHovered: t12, hoverProps: b11 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: e8 }), y8 = _({ ref: l17, id: p6, "aria-labelledby": f22, "aria-describedby": m12, "aria-invalid": a25 ? "true" : void 0, disabled: e8 || void 0, autoFocus: r21 }, u19, b11), x11 = (0, import_react120.useMemo)(() => ({ disabled: e8, invalid: a25, hover: t12, focus: o21, autofocus: r21 }), [e8, a25, t12, o21, r21]);
  return L()({ ourProps: y8, theirProps: T12, slot: x11, defaultTag: L6, name: "Textarea" });
}
var J6 = K(H13);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/type-documentation.js
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime17 = __toESM(require_dist());
var import_react123 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/explorer/components/field-link.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime16 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/spinner.js
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime18 = __toESM(require_dist());
var import_react124 = __toESM(require_react());
var Spinner = (0, import_react124.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime18.c)(6);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-spinner", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  if ($4[2] !== props || $4[3] !== ref || $4[4] !== t0) {
    t1 = (0, import_jsx_runtime19.jsx)("div", { ...props, ref, className: t0 });
    $4[2] = props;
    $4[3] = ref;
    $4[4] = t0;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  return t1;
});
Spinner.displayName = "Spinner";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/plugin.js
var PluginContext = createNullableContext("PluginContext");
var usePluginContext = createContextHook(PluginContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/query-editor.js
var import_react_compiler_runtime23 = __toESM(require_dist());
var import_react128 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/whitespace.js
var invalidCharacters = Array.from({
  length: 11
}, (_8, i19) => {
  return String.fromCharCode(8192 + i19);
}).concat(["\u2028", "\u2029", " ", " "]);
var sanitizeRegex = new RegExp("[" + invalidCharacters.join("") + "]", "g");

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/tabs.js
var import_react129 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/variable-editor.js
var import_react_compiler_runtime24 = __toESM(require_dist());
var import_react130 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/context.js
var EditorContext = createNullableContext("EditorContext");
var useEditorContext = createContextHook(EditorContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/execution.js
var ExecutionContext = createNullableContext("ExecutionContext");
var useExecutionContext = createContextHook(ExecutionContext);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/provider.js
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime27 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/theme.js
var import_react_compiler_runtime28 = __toESM(require_dist());
var import_react133 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/utility/resize.js
var import_react_compiler_runtime29 = __toESM(require_dist());
var import_react134 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/components/header-editor.js
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime30 = __toESM(require_dist());
var import_react135 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/components/image-preview.js
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime31 = __toESM(require_dist());
var import_react136 = __toESM(require_react());
function ImagePreview(props) {
  var _a;
  const $4 = (0, import_react_compiler_runtime31.c)(14);
  let t0;
  if ($4[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      width: null,
      height: null
    };
    $4[0] = t0;
  } else {
    t0 = $4[0];
  }
  const [dimensions, setDimensions] = (0, import_react136.useState)(t0);
  const [mime, setMime] = (0, import_react136.useState)(null);
  const ref = (0, import_react136.useRef)(null);
  const src = (_a = tokenToURL(props.token)) == null ? void 0 : _a.href;
  let t1;
  let t22;
  if ($4[1] !== src) {
    t1 = () => {
      if (!ref.current) {
        return;
      }
      if (!src) {
        setDimensions({
          width: null,
          height: null
        });
        setMime(null);
        return;
      }
      fetch(src, {
        method: "HEAD"
      }).then((response) => {
        setMime(response.headers.get("Content-Type"));
      }).catch(() => {
        setMime(null);
      });
    };
    t22 = [src];
    $4[1] = src;
    $4[2] = t1;
    $4[3] = t22;
  } else {
    t1 = $4[2];
    t22 = $4[3];
  }
  (0, import_react136.useEffect)(t1, t22);
  let t32;
  if ($4[4] !== dimensions.height || $4[5] !== dimensions.width || $4[6] !== mime) {
    t32 = dimensions.width !== null && dimensions.height !== null ? (0, import_jsx_runtime26.jsxs)("div", { children: [
      dimensions.width,
      "x",
      dimensions.height,
      mime === null ? null : " " + mime
    ] }) : null;
    $4[4] = dimensions.height;
    $4[5] = dimensions.width;
    $4[6] = mime;
    $4[7] = t32;
  } else {
    t32 = $4[7];
  }
  const dims = t32;
  let t42;
  if ($4[8] === Symbol.for("react.memo_cache_sentinel")) {
    t42 = () => {
      var _a2, _b;
      setDimensions({
        width: ((_a2 = ref.current) == null ? void 0 : _a2.naturalWidth) ?? null,
        height: ((_b = ref.current) == null ? void 0 : _b.naturalHeight) ?? null
      });
    };
    $4[8] = t42;
  } else {
    t42 = $4[8];
  }
  let t52;
  if ($4[9] !== src) {
    t52 = (0, import_jsx_runtime26.jsx)("img", { onLoad: t42, ref, src });
    $4[9] = src;
    $4[10] = t52;
  } else {
    t52 = $4[10];
  }
  let t62;
  if ($4[11] !== dims || $4[12] !== t52) {
    t62 = (0, import_jsx_runtime26.jsxs)("div", { children: [
      t52,
      dims
    ] });
    $4[11] = dims;
    $4[12] = t52;
    $4[13] = t62;
  } else {
    t62 = $4[13];
  }
  return t62;
}
ImagePreview.shouldRender = function shouldRender(token) {
  const url = tokenToURL(token);
  return url ? isImageURL(url) : false;
};
function tokenToURL(token) {
  if (token.type !== "string") {
    return;
  }
  const value = token.string.slice(1).slice(0, -1).trim();
  try {
    return new URL(value, location.protocol + "//" + location.host);
  } catch {
  }
}
function isImageURL(url) {
  return /\.(bmp|gif|jpe?g|png|svg|webp)$/.test(url.pathname);
}

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/components/query-editor.js
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime32 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/components/response-editor.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime34 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/response-editor.js
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime33 = __toESM(require_dist());
var import_react137 = __toESM(require_react());
var import_client = __toESM(require_client());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/editor/components/variable-editor.js
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime35 = __toESM(require_dist());
var import_react138 = __toESM(require_react());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/button-group.js
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime36 = __toESM(require_dist());
var import_react139 = __toESM(require_react());
var ButtonGroup = (0, import_react139.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime36.c)(6);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-button-group", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  if ($4[2] !== props || $4[3] !== ref || $4[4] !== t0) {
    t1 = (0, import_jsx_runtime31.jsx)("div", { ...props, ref, className: t0 });
    $4[2] = props;
    $4[3] = ref;
    $4[4] = t0;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  return t1;
});
ButtonGroup.displayName = "ButtonGroup";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/dialog.js
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime37 = __toESM(require_dist());
var import_react140 = __toESM(require_react());
var DialogClose = (0, import_react140.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime37.c)(8);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-dialog-close", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  let t22;
  if ($4[2] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime32.jsx)(Root2, { children: "Close dialog" });
    t22 = (0, import_jsx_runtime32.jsx)(CloseIcon, {});
    $4[2] = t1;
    $4[3] = t22;
  } else {
    t1 = $4[2];
    t22 = $4[3];
  }
  let t32;
  if ($4[4] !== props || $4[5] !== ref || $4[6] !== t0) {
    t32 = (0, import_jsx_runtime32.jsx)(Close, { asChild: true, children: (0, import_jsx_runtime32.jsxs)(UnStyledButton, { ...props, ref, type: "button", className: t0, children: [
      t1,
      t22
    ] }) });
    $4[4] = props;
    $4[5] = ref;
    $4[6] = t0;
    $4[7] = t32;
  } else {
    t32 = $4[7];
  }
  return t32;
});
DialogClose.displayName = "Dialog.Close";
function DialogRoot(t0) {
  const $4 = (0, import_react_compiler_runtime37.c)(9);
  let children;
  let props;
  if ($4[0] !== t0) {
    ({
      children,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = props;
  } else {
    children = $4[1];
    props = $4[2];
  }
  let t1;
  if ($4[3] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime32.jsx)(Overlay, { className: "graphiql-dialog-overlay" });
    $4[3] = t1;
  } else {
    t1 = $4[3];
  }
  let t22;
  if ($4[4] !== children) {
    t22 = (0, import_jsx_runtime32.jsxs)(Portal, { children: [
      t1,
      (0, import_jsx_runtime32.jsx)(Content, { className: "graphiql-dialog", children })
    ] });
    $4[4] = children;
    $4[5] = t22;
  } else {
    t22 = $4[5];
  }
  let t32;
  if ($4[6] !== props || $4[7] !== t22) {
    t32 = (0, import_jsx_runtime32.jsx)(Root, { ...props, children: t22 });
    $4[6] = props;
    $4[7] = t22;
    $4[8] = t32;
  } else {
    t32 = $4[8];
  }
  return t32;
}
var Dialog = Object.assign(DialogRoot, {
  Close: DialogClose,
  Title,
  Trigger,
  Description
});

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/dropdown.js
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime38 = __toESM(require_dist());
var import_react141 = __toESM(require_react());
var Button2 = (0, import_react141.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime38.c)(6);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-un-styled", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  if ($4[2] !== props || $4[3] !== ref || $4[4] !== t0) {
    t1 = (0, import_jsx_runtime33.jsx)(Trigger2, { asChild: true, children: (0, import_jsx_runtime33.jsx)("button", { ...props, ref, className: t0 }) });
    $4[2] = props;
    $4[3] = ref;
    $4[4] = t0;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  return t1;
});
Button2.displayName = "DropdownMenuButton";
function Content3(t0) {
  const $4 = (0, import_react_compiler_runtime38.c)(14);
  let children;
  let className;
  let props;
  let t1;
  let t22;
  if ($4[0] !== t0) {
    ({
      children,
      align: t1,
      sideOffset: t22,
      className,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = className;
    $4[3] = props;
    $4[4] = t1;
    $4[5] = t22;
  } else {
    children = $4[1];
    className = $4[2];
    props = $4[3];
    t1 = $4[4];
    t22 = $4[5];
  }
  const align = t1 === void 0 ? "start" : t1;
  const sideOffset = t22 === void 0 ? 5 : t22;
  let t32;
  if ($4[6] !== className) {
    t32 = clsx("graphiql-dropdown-content", className);
    $4[6] = className;
    $4[7] = t32;
  } else {
    t32 = $4[7];
  }
  let t42;
  if ($4[8] !== align || $4[9] !== children || $4[10] !== props || $4[11] !== sideOffset || $4[12] !== t32) {
    t42 = (0, import_jsx_runtime33.jsx)(Portal2, { children: (0, import_jsx_runtime33.jsx)(Content2, { align, sideOffset, className: t32, ...props, children }) });
    $4[8] = align;
    $4[9] = children;
    $4[10] = props;
    $4[11] = sideOffset;
    $4[12] = t32;
    $4[13] = t42;
  } else {
    t42 = $4[13];
  }
  return t42;
}
var Item = (t0) => {
  const $4 = (0, import_react_compiler_runtime38.c)(10);
  let children;
  let className;
  let props;
  if ($4[0] !== t0) {
    ({
      className,
      children,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = className;
    $4[3] = props;
  } else {
    children = $4[1];
    className = $4[2];
    props = $4[3];
  }
  let t1;
  if ($4[4] !== className) {
    t1 = clsx("graphiql-dropdown-item", className);
    $4[4] = className;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  let t22;
  if ($4[6] !== children || $4[7] !== props || $4[8] !== t1) {
    t22 = (0, import_jsx_runtime33.jsx)(Item2, { className: t1, ...props, children });
    $4[6] = children;
    $4[7] = props;
    $4[8] = t1;
    $4[9] = t22;
  } else {
    t22 = $4[9];
  }
  return t22;
};
var DropdownMenu = Object.assign(Root22, {
  Button: Button2,
  Item,
  Content: Content3
});

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/tabs.js
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime39 = __toESM(require_dist());
var import_react190 = __toESM(require_react());

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var import_jsx_runtime36 = __toESM(require_jsx_runtime(), 1);
var import_react151 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react142 = __toESM(require_react(), 1);
var LayoutGroupContext = (0, import_react142.createContext)({});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react143 = __toESM(require_react(), 1);
function useConstant(init) {
  const ref = (0, import_react143.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react144 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser = typeof window !== "undefined";

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser ? import_react144.useLayoutEffect : import_react144.useEffect;

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var import_jsx_runtime35 = __toESM(require_jsx_runtime(), 1);
var React34 = __toESM(require_react(), 1);
var import_react148 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react145 = __toESM(require_react(), 1);
var PresenceContext = (0, import_react145.createContext)(null);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs
var import_jsx_runtime34 = __toESM(require_jsx_runtime(), 1);
var React33 = __toESM(require_react(), 1);
var import_react147 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react146 = __toESM(require_react(), 1);
var MotionConfigContext = (0, import_react146.createContext)({
  transformPagePoint: (p6) => p6,
  isStatic: false,
  reducedMotion: "never"
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react149 = __toESM(require_react(), 1);
function usePresence(subscribe = true) {
  const context = (0, import_react149.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  const { isPresent, onExitComplete, register } = context;
  const id3 = (0, import_react149.useId)();
  (0, import_react149.useEffect)(() => {
    if (subscribe) {
      return register(id3);
    }
  }, [subscribe]);
  const safeToRemove = (0, import_react149.useCallback)(() => subscribe && onExitComplete && onExitComplete(id3), [id3, onExitComplete, subscribe]);
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs
var import_react150 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var import_jsx_runtime37 = __toESM(require_jsx_runtime(), 1);
var import_react155 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react152 = __toESM(require_react(), 1);
var DeprecatedLayoutGroupContext = (0, import_react152.createContext)(null);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/array.mjs
function addUniqueItem(arr, item) {
  if (arr.indexOf(item) === -1)
    arr.push(item);
}
function removeItem(arr, item) {
  const index2 = arr.indexOf(item);
  if (index2 > -1)
    arr.splice(index2, 1);
}
function moveItem([...arr], fromIndex, toIndex) {
  const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < arr.length) {
    const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
    const [item] = arr.splice(fromIndex, 1);
    arr.splice(endIndex, 0, item);
  }
  return arr;
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/clamp.mjs
var clamp = (min2, max2, v5) => {
  if (v5 > max2)
    return max2;
  if (v5 < min2)
    return min2;
  return v5;
};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/errors.mjs
var warning = () => {
};
var invariant = () => {
};
if (true) {
  warning = (check, message) => {
    if (!check && typeof console !== "undefined") {
      console.warn(message);
    }
  };
  invariant = (check, message) => {
    if (!check) {
      throw new Error(message);
    }
  };
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/global-config.mjs
var MotionGlobalConfig = {};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/is-numerical-string.mjs
var isNumericalString = (v5) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v5);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/is-zero-value-string.mjs
var isZeroValueString = (v5) => /^0[^.\s]+$/u.test(v5);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/memo.mjs
function memo(callback) {
  let result;
  return () => {
    if (result === void 0)
      result = callback();
    return result;
  };
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/noop.mjs
var noop = (any) => any;

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/pipe.mjs
var combineFunctions = (a25, b11) => (v5) => b11(a25(v5));
var pipe = (...transformers) => transformers.reduce(combineFunctions);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/progress.mjs
var progress = (from, to2, value) => {
  const toFromDifference = to2 - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/subscription-manager.mjs
var SubscriptionManager = class {
  constructor() {
    this.subscriptions = [];
  }
  add(handler) {
    addUniqueItem(this.subscriptions, handler);
    return () => removeItem(this.subscriptions, handler);
  }
  notify(a25, b11, c64) {
    const numSubscriptions = this.subscriptions.length;
    if (!numSubscriptions)
      return;
    if (numSubscriptions === 1) {
      this.subscriptions[0](a25, b11, c64);
    } else {
      for (let i19 = 0; i19 < numSubscriptions; i19++) {
        const handler = this.subscriptions[i19];
        handler && handler(a25, b11, c64);
      }
    }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/time-conversion.mjs
var secondsToMilliseconds = (seconds) => seconds * 1e3;
var millisecondsToSeconds = (milliseconds) => milliseconds / 1e3;

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/warn-once.mjs
var warned = /* @__PURE__ */ new Set();
function warnOnce(condition, message, element) {
  if (condition || warned.has(message))
    return;
  console.warn(message);
  if (element)
    console.warn(element);
  warned.add(message);
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/wrap.mjs
var wrap = (min2, max2, v5) => {
  const rangeSize = max2 - min2;
  return ((v5 - min2) % rangeSize + rangeSize) % rangeSize + min2;
};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs
var calcBezier = (t12, a1, a25) => (((1 - 3 * a25 + 3 * a1) * t12 + (3 * a25 - 6 * a1)) * t12 + 3 * a1) * t12;
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 12;
function binarySubdivide(x11, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i19 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - x11;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i19 < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop;
  const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t12) => t12 === 0 || t12 === 1 ? t12 : calcBezier(getTForX(t12), mY1, mY2);
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs
var mirrorEasing = (easing) => (p6) => p6 <= 0.5 ? easing(2 * p6) / 2 : (2 - easing(2 * (1 - p6))) / 2;

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs
var reverseEasing = (easing) => (p6) => 1 - easing(1 - p6);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/back.mjs
var backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);
var backIn = reverseEasing(backOut);
var backInOut = mirrorEasing(backIn);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/anticipate.mjs
var anticipate = (p6) => (p6 *= 2) < 1 ? 0.5 * backIn(p6) : 0.5 * (2 - Math.pow(2, -10 * (p6 - 1)));

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/circ.mjs
var circIn = (p6) => 1 - Math.sin(Math.acos(p6));
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circIn);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/ease.mjs
var easeIn = cubicBezier(0.42, 0, 1, 1);
var easeOut = cubicBezier(0, 0, 0.58, 1);
var easeInOut = cubicBezier(0.42, 0, 0.58, 1);

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs
var isEasingArray = (ease2) => {
  return Array.isArray(ease2) && typeof ease2[0] !== "number";
};

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/utils/get-easing-for-segment.mjs
function getEasingForSegment(easing, i19) {
  return isEasingArray(easing) ? easing[wrap(0, easing.length, i19)] : easing;
}

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs
var isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === "number";

// node_modules/.pnpm/motion-utils@12.9.4/node_modules/motion-utils/dist/es/easing/utils/map.mjs
var easingLookup = {
  linear: noop,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate
};
var isValidEasing = (easing) => {
  return typeof easing === "string";
};
var easingDefinitionToFunction = (definition) => {
  if (isBezierDefinition(definition)) {
    invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);
    const [x1, y1, x22, y22] = definition;
    return cubicBezier(x1, y1, x22, y22);
  } else if (isValidEasing(definition)) {
    invariant(easingLookup[definition] !== void 0, `Invalid easing type '${definition}'`);
    return easingLookup[definition];
  }
  return definition;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/order.mjs
var stepsOrder = [
  "setup",
  // Compute
  "read",
  // Read
  "resolveKeyframes",
  // Write/Read/Write/Read
  "preUpdate",
  // Compute
  "update",
  // Compute
  "preRender",
  // Compute
  "render",
  // Write
  "postRender"
  // Compute
];

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/stats/buffer.mjs
var statsBuffer = {
  value: null,
  addProjectionMetrics: null
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/render-step.mjs
function createRenderStep(runNextFrame, stepName) {
  let thisFrame = /* @__PURE__ */ new Set();
  let nextFrame = /* @__PURE__ */ new Set();
  let isProcessing = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  let latestFrameData = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  let numCalls = 0;
  function triggerCallback(callback) {
    if (toKeepAlive.has(callback)) {
      step.schedule(callback);
      runNextFrame();
    }
    numCalls++;
    callback(latestFrameData);
  }
  const step = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing;
      const queue = addToCurrentFrame ? thisFrame : nextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (!queue.has(callback))
        queue.add(callback);
      return callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      nextFrame.delete(callback);
      toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData2) => {
      latestFrameData = frameData2;
      if (isProcessing) {
        flushNextFrame = true;
        return;
      }
      isProcessing = true;
      [thisFrame, nextFrame] = [nextFrame, thisFrame];
      thisFrame.forEach(triggerCallback);
      if (stepName && statsBuffer.value) {
        statsBuffer.value.frameloop[stepName].push(numCalls);
      }
      numCalls = 0;
      thisFrame.clear();
      isProcessing = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData2);
      }
    }
  };
  return step;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/batcher.mjs
var maxElapsed = 40;
function createRenderBatcher(scheduleNextBatch, allowKeepAlive) {
  let runNextFrame = false;
  let useDefaultElapsed = true;
  const state = {
    delta: 0,
    timestamp: 0,
    isProcessing: false
  };
  const flagRunNextFrame = () => runNextFrame = true;
  const steps2 = stepsOrder.reduce((acc, key) => {
    acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : void 0);
    return acc;
  }, {});
  const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender } = steps2;
  const processBatch = () => {
    const timestamp = MotionGlobalConfig.useManualTiming ? state.timestamp : performance.now();
    runNextFrame = false;
    if (!MotionGlobalConfig.useManualTiming) {
      state.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);
    }
    state.timestamp = timestamp;
    state.isProcessing = true;
    setup.process(state);
    read.process(state);
    resolveKeyframes.process(state);
    preUpdate.process(state);
    update.process(state);
    preRender.process(state);
    render.process(state);
    postRender.process(state);
    state.isProcessing = false;
    if (runNextFrame && allowKeepAlive) {
      useDefaultElapsed = false;
      scheduleNextBatch(processBatch);
    }
  };
  const wake = () => {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!state.isProcessing) {
      scheduleNextBatch(processBatch);
    }
  };
  const schedule = stepsOrder.reduce((acc, key) => {
    const step = steps2[key];
    acc[key] = (process2, keepAlive = false, immediate = false) => {
      if (!runNextFrame)
        wake();
      return step.schedule(process2, keepAlive, immediate);
    };
    return acc;
  }, {});
  const cancel = (process2) => {
    for (let i19 = 0; i19 < stepsOrder.length; i19++) {
      steps2[stepsOrder[i19]].cancel(process2);
    }
  };
  return { schedule, cancel, state, steps: steps2 };
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/frame.mjs
var { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps } = createRenderBatcher(typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : noop, true);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/sync-time.mjs
var now;
function clearTime() {
  now = void 0;
}
var time = {
  now: () => {
    if (now === void 0) {
      time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming ? frameData.timestamp : performance.now());
    }
    return now;
  },
  set: (newTime) => {
    now = newTime;
    queueMicrotask(clearTime);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/stats/animation-count.mjs
var activeAnimations = {
  layout: 0,
  mainThread: 0,
  waapi: 0
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs
var checkStringStartsWith = (token) => (key) => typeof key === "string" && key.startsWith(token);
var isCSSVariableName = checkStringStartsWith("--");
var startsAsVariableToken = checkStringStartsWith("var(--");
var isCSSVariableToken = (value) => {
  const startsWithToken = startsAsVariableToken(value);
  if (!startsWithToken)
    return false;
  return singleCssVariableRegex.test(value.split("/*")[0].trim());
};
var singleCssVariableRegex = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/numbers/index.mjs
var number = {
  test: (v5) => typeof v5 === "number",
  parse: parseFloat,
  transform: (v5) => v5
};
var alpha = {
  ...number,
  transform: (v5) => clamp(0, 1, v5)
};
var scale = {
  ...number,
  default: 1
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs
var sanitize = (v5) => Math.round(v5 * 1e5) / 1e5;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs
var floatRegex = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs
function isNullish(v5) {
  return v5 == null;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs
var singleColorRegex = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/utils.mjs
var isColorString = (type, testProp) => (v5) => {
  return Boolean(typeof v5 === "string" && singleColorRegex.test(v5) && v5.startsWith(type) || testProp && !isNullish(v5) && Object.prototype.hasOwnProperty.call(v5, testProp));
};
var splitColor = (aName, bName, cName) => (v5) => {
  if (typeof v5 !== "string")
    return v5;
  const [a25, b11, c64, alpha2] = v5.match(floatRegex);
  return {
    [aName]: parseFloat(a25),
    [bName]: parseFloat(b11),
    [cName]: parseFloat(c64),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/rgba.mjs
var clampRgbUnit = (v5) => clamp(0, 255, v5);
var rgbUnit = {
  ...number,
  transform: (v5) => Math.round(clampRgbUnit(v5))
};
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/hex.mjs
function parseHex(v5) {
  let r21 = "";
  let g8 = "";
  let b11 = "";
  let a25 = "";
  if (v5.length > 5) {
    r21 = v5.substring(1, 3);
    g8 = v5.substring(3, 5);
    b11 = v5.substring(5, 7);
    a25 = v5.substring(7, 9);
  } else {
    r21 = v5.substring(1, 2);
    g8 = v5.substring(2, 3);
    b11 = v5.substring(3, 4);
    a25 = v5.substring(4, 5);
    r21 += r21;
    g8 += g8;
    b11 += b11;
    a25 += a25;
  }
  return {
    red: parseInt(r21, 16),
    green: parseInt(g8, 16),
    blue: parseInt(b11, 16),
    alpha: a25 ? parseInt(a25, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v5) => typeof v5 === "string" && v5.endsWith(unit) && v5.split(" ").length === 1,
  parse: parseFloat,
  transform: (v5) => `${v5}${unit}`
});
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = (() => ({
  ...percent,
  parse: (v5) => percent.parse(v5) / 100,
  transform: (v5) => percent.transform(v5 * 100)
}))();

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/index.mjs
var color = {
  test: (v5) => rgba.test(v5) || hex.test(v5) || hsla.test(v5),
  parse: (v5) => {
    if (rgba.test(v5)) {
      return rgba.parse(v5);
    } else if (hsla.test(v5)) {
      return hsla.parse(v5);
    } else {
      return hex.parse(v5);
    }
  },
  transform: (v5) => {
    return typeof v5 === "string" ? v5 : v5.hasOwnProperty("red") ? rgba.transform(v5) : hsla.transform(v5);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs
var colorRegex = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/complex/index.mjs
function test(v5) {
  var _a, _b;
  return isNaN(v5) && typeof v5 === "string" && (((_a = v5.match(floatRegex)) == null ? void 0 : _a.length) || 0) + (((_b = v5.match(colorRegex)) == null ? void 0 : _b.length) || 0) > 0;
}
var NUMBER_TOKEN = "number";
var COLOR_TOKEN = "color";
var VAR_TOKEN = "var";
var VAR_FUNCTION_TOKEN = "var(";
var SPLIT_TOKEN = "${}";
var complexRegex = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function analyseComplexValue(value) {
  const originalValue = value.toString();
  const values = [];
  const indexes = {
    color: [],
    number: [],
    var: []
  };
  const types = [];
  let i19 = 0;
  const tokenised = originalValue.replace(complexRegex, (parsedValue) => {
    if (color.test(parsedValue)) {
      indexes.color.push(i19);
      types.push(COLOR_TOKEN);
      values.push(color.parse(parsedValue));
    } else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {
      indexes.var.push(i19);
      types.push(VAR_TOKEN);
      values.push(parsedValue);
    } else {
      indexes.number.push(i19);
      types.push(NUMBER_TOKEN);
      values.push(parseFloat(parsedValue));
    }
    ++i19;
    return SPLIT_TOKEN;
  });
  const split = tokenised.split(SPLIT_TOKEN);
  return { values, split, indexes, types };
}
function parseComplexValue(v5) {
  return analyseComplexValue(v5).values;
}
function createTransformer(source) {
  const { split, types } = analyseComplexValue(source);
  const numSections = split.length;
  return (v5) => {
    let output = "";
    for (let i19 = 0; i19 < numSections; i19++) {
      output += split[i19];
      if (v5[i19] !== void 0) {
        const type = types[i19];
        if (type === NUMBER_TOKEN) {
          output += sanitize(v5[i19]);
        } else if (type === COLOR_TOKEN) {
          output += color.transform(v5[i19]);
        } else {
          output += v5[i19];
        }
      }
    }
    return output;
  };
}
var convertNumbersToZero = (v5) => typeof v5 === "number" ? 0 : v5;
function getAnimatableNone(v5) {
  const parsed = parseComplexValue(v5);
  const transformer = createTransformer(v5);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = {
  test,
  parse: parseComplexValue,
  createTransformer,
  getAnimatableNone
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs
function hueToRgb(p6, q5, t12) {
  if (t12 < 0)
    t12 += 1;
  if (t12 > 1)
    t12 -= 1;
  if (t12 < 1 / 6)
    return p6 + (q5 - p6) * 6 * t12;
  if (t12 < 1 / 2)
    return q5;
  if (t12 < 2 / 3)
    return p6 + (q5 - p6) * (2 / 3 - t12) * 6;
  return p6;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q5 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p6 = 2 * lightness - q5;
    red = hueToRgb(p6, q5, hue + 1 / 3);
    green = hueToRgb(p6, q5, hue);
    blue = hueToRgb(p6, q5, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/immediate.mjs
function mixImmediate(a25, b11) {
  return (p6) => p6 > 0 ? b11 : a25;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/number.mjs
var mixNumber = (from, to2, progress2) => {
  return from + (to2 - from) * progress2;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/color.mjs
var mixLinearColor = (from, to2, v5) => {
  const fromExpo = from * from;
  const expo = v5 * (to2 * to2 - fromExpo) + fromExpo;
  return expo < 0 ? 0 : Math.sqrt(expo);
};
var colorTypes = [hex, rgba, hsla];
var getColorType = (v5) => colorTypes.find((type) => type.test(v5));
function asRGBA(color2) {
  const type = getColorType(color2);
  warning(Boolean(type), `'${color2}' is not an animatable color. Use the equivalent color code instead.`);
  if (!Boolean(type))
    return false;
  let model = type.parse(color2);
  if (type === hsla) {
    model = hslaToRgba(model);
  }
  return model;
}
var mixColor = (from, to2) => {
  const fromRGBA = asRGBA(from);
  const toRGBA = asRGBA(to2);
  if (!fromRGBA || !toRGBA) {
    return mixImmediate(from, to2);
  }
  const blended = { ...fromRGBA };
  return (v5) => {
    blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v5);
    blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v5);
    blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v5);
    blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v5);
    return rgba.transform(blended);
  };
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/visibility.mjs
var invisibleValues = /* @__PURE__ */ new Set(["none", "hidden"]);
function mixVisibility(origin, target) {
  if (invisibleValues.has(origin)) {
    return (p6) => p6 <= 0 ? origin : target;
  } else {
    return (p6) => p6 >= 1 ? target : origin;
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/complex.mjs
function mixNumber2(a25, b11) {
  return (p6) => mixNumber(a25, b11, p6);
}
function getMixer(a25) {
  if (typeof a25 === "number") {
    return mixNumber2;
  } else if (typeof a25 === "string") {
    return isCSSVariableToken(a25) ? mixImmediate : color.test(a25) ? mixColor : mixComplex;
  } else if (Array.isArray(a25)) {
    return mixArray;
  } else if (typeof a25 === "object") {
    return color.test(a25) ? mixColor : mixObject;
  }
  return mixImmediate;
}
function mixArray(a25, b11) {
  const output = [...a25];
  const numValues = output.length;
  const blendValue = a25.map((v5, i19) => getMixer(v5)(v5, b11[i19]));
  return (p6) => {
    for (let i19 = 0; i19 < numValues; i19++) {
      output[i19] = blendValue[i19](p6);
    }
    return output;
  };
}
function mixObject(a25, b11) {
  const output = { ...a25, ...b11 };
  const blendValue = {};
  for (const key in output) {
    if (a25[key] !== void 0 && b11[key] !== void 0) {
      blendValue[key] = getMixer(a25[key])(a25[key], b11[key]);
    }
  }
  return (v5) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v5);
    }
    return output;
  };
}
function matchOrder(origin, target) {
  const orderedOrigin = [];
  const pointers = { color: 0, var: 0, number: 0 };
  for (let i19 = 0; i19 < target.values.length; i19++) {
    const type = target.types[i19];
    const originIndex = origin.indexes[type][pointers[type]];
    const originValue = origin.values[originIndex] ?? 0;
    orderedOrigin[i19] = originValue;
    pointers[type]++;
  }
  return orderedOrigin;
}
var mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyseComplexValue(origin);
  const targetStats = analyseComplexValue(target);
  const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;
  if (canInterpolate) {
    if (invisibleValues.has(origin) && !targetStats.values.length || invisibleValues.has(target) && !originStats.values.length) {
      return mixVisibility(origin, target);
    }
    return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);
  } else {
    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
    return mixImmediate(origin, target);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/mix/index.mjs
function mix(from, to2, p6) {
  if (typeof from === "number" && typeof to2 === "number" && typeof p6 === "number") {
    return mixNumber(from, to2, p6);
  }
  const mixer = getMixer(from);
  return mixer(from, to2);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/drivers/driver-frameloop.mjs
var frameloopDriver = (update) => {
  const passTimestamp = ({ timestamp }) => update(timestamp);
  return {
    start: () => frame.update(passTimestamp, true),
    stop: () => cancelFrame(passTimestamp),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => frameData.isProcessing ? frameData.timestamp : time.now()
  };
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs
var generateLinearEasing = (easing, duration, resolution = 10) => {
  let points = "";
  const numPoints = Math.max(Math.round(duration / resolution), 2);
  for (let i19 = 0; i19 < numPoints; i19++) {
    points += easing(i19 / (numPoints - 1)) + ", ";
  }
  return `linear(${points.substring(0, points.length - 2)})`;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs
var maxGeneratorDuration = 2e4;
function calcGeneratorDuration(generator) {
  let duration = 0;
  const timeStep = 50;
  let state = generator.next(duration);
  while (!state.done && duration < maxGeneratorDuration) {
    duration += timeStep;
    state = generator.next(duration);
  }
  return duration >= maxGeneratorDuration ? Infinity : duration;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs
function createGeneratorEasing(options, scale2 = 100, createGenerator) {
  const generator = createGenerator({ ...options, keyframes: [0, scale2] });
  const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);
  return {
    type: "keyframes",
    ease: (progress2) => {
      return generator.next(duration * progress2).value / scale2;
    },
    duration: millisecondsToSeconds(duration)
  };
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs
var velocitySampleDuration = 5;
function calcGeneratorVelocity(resolveValue, t12, current) {
  const prevT = Math.max(t12 - velocitySampleDuration, 0);
  return velocityPerSecond(current - resolveValue(prevT), t12 - prevT);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs
var springDefaults = {
  // Default spring physics
  stiffness: 100,
  damping: 10,
  mass: 1,
  velocity: 0,
  // Default duration/bounce-based options
  duration: 800,
  // in ms
  bounce: 0.3,
  visualDuration: 0.3,
  // in seconds
  // Rest thresholds
  restSpeed: {
    granular: 0.01,
    default: 2
  },
  restDelta: {
    granular: 5e-3,
    default: 0.5
  },
  // Limits
  minDuration: 0.01,
  // in seconds
  maxDuration: 10,
  // in seconds
  minDamping: 0.05,
  maxDamping: 1
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs
var safeMin = 1e-3;
function findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass }) {
  let envelope;
  let derivative;
  warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);
  duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a25 = exponentialDecay - velocity;
      const b11 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c64 = Math.exp(-delta);
      return safeMin - a25 / b11 * c64;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d14 = delta * velocity + velocity;
      const e8 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f22 = Math.exp(-delta);
      const g8 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d14 - e8) * f22) / g8;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a25 = Math.exp(-undampedFreq2 * duration);
      const b11 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a25 * b11;
    };
    derivative = (undampedFreq2) => {
      const a25 = Math.exp(-undampedFreq2 * duration);
      const b11 = (velocity - undampedFreq2) * (duration * duration);
      return a25 * b11;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = secondsToMilliseconds(duration);
  if (isNaN(undampedFreq)) {
    return {
      stiffness: springDefaults.stiffness,
      damping: springDefaults.damping,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i19 = 1; i19 < rootIterations; i19++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = {
    velocity: springDefaults.velocity,
    stiffness: springDefaults.stiffness,
    damping: springDefaults.damping,
    mass: springDefaults.mass,
    isResolvedFromDuration: false,
    ...options
  };
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    if (options.visualDuration) {
      const visualDuration = options.visualDuration;
      const root = 2 * Math.PI / (visualDuration * 1.2);
      const stiffness = root * root;
      const damping = 2 * clamp(0.05, 1, 1 - (options.bounce || 0)) * Math.sqrt(stiffness);
      springOptions = {
        ...springOptions,
        mass: springDefaults.mass,
        stiffness,
        damping
      };
    } else {
      const derived = findSpring(options);
      springOptions = {
        ...springOptions,
        ...derived,
        mass: springDefaults.mass
      };
      springOptions.isResolvedFromDuration = true;
    }
  }
  return springOptions;
}
function spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {
  const options = typeof optionsOrVisualDuration !== "object" ? {
    visualDuration: optionsOrVisualDuration,
    keyframes: [0, 1],
    bounce
  } : optionsOrVisualDuration;
  let { restSpeed, restDelta } = options;
  const origin = options.keyframes[0];
  const target = options.keyframes[options.keyframes.length - 1];
  const state = { done: false, value: origin };
  const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration } = getSpringOptions({
    ...options,
    velocity: -millisecondsToSeconds(options.velocity || 0)
  });
  const initialVelocity = velocity || 0;
  const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
  const initialDelta = target - origin;
  const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? springDefaults.restSpeed.granular : springDefaults.restSpeed.default);
  restDelta || (restDelta = isGranularScale ? springDefaults.restDelta.granular : springDefaults.restDelta.default);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
    resolveSpring = (t12) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t12);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t12) + initialDelta * Math.cos(angularFreq * t12));
    };
  } else if (dampingRatio === 1) {
    resolveSpring = (t12) => target - Math.exp(-undampedAngularFreq * t12) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t12);
  } else {
    const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t12) => {
      const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t12);
      const freqForT = Math.min(dampedAngularFreq * t12, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  const generator = {
    calculatedDuration: isResolvedFromDuration ? duration || null : null,
    next: (t12) => {
      const current = resolveSpring(t12);
      if (!isResolvedFromDuration) {
        let currentVelocity = t12 === 0 ? initialVelocity : 0;
        if (dampingRatio < 1) {
          currentVelocity = t12 === 0 ? secondsToMilliseconds(initialVelocity) : calcGeneratorVelocity(resolveSpring, t12, current);
        }
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t12 >= duration;
      }
      state.value = state.done ? target : current;
      return state;
    },
    toString: () => {
      const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);
      const easing = generateLinearEasing((progress2) => generator.next(calculatedDuration * progress2).value, calculatedDuration, 30);
      return calculatedDuration + "ms " + easing;
    },
    toTransition: () => {
    }
  };
  return generator;
}
spring.applyToOptions = (options) => {
  const generatorOptions = createGeneratorEasing(options, 100, spring);
  options.ease = generatorOptions.ease;
  options.duration = secondsToMilliseconds(generatorOptions.duration);
  options.type = "keyframes";
  return options;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/inertia.mjs
function inertia({ keyframes: keyframes2, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min: min2, max: max2, restDelta = 0.5, restSpeed }) {
  const origin = keyframes2[0];
  const state = {
    done: false,
    value: origin
  };
  const isOutOfBounds = (v5) => min2 !== void 0 && v5 < min2 || max2 !== void 0 && v5 > max2;
  const nearestBoundary = (v5) => {
    if (min2 === void 0)
      return max2;
    if (max2 === void 0)
      return min2;
    return Math.abs(min2 - v5) < Math.abs(max2 - v5) ? min2 : max2;
  };
  let amplitude = power * velocity;
  const ideal = origin + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - origin;
  const calcDelta = (t12) => -amplitude * Math.exp(-t12 / timeConstant);
  const calcLatest = (t12) => target + calcDelta(t12);
  const applyFriction = (t12) => {
    const delta = calcDelta(t12);
    const latest = calcLatest(t12);
    state.done = Math.abs(delta) <= restDelta;
    state.value = state.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t12) => {
    if (!isOutOfBounds(state.value))
      return;
    timeReachedBoundary = t12;
    spring$1 = spring({
      keyframes: [state.value, nearestBoundary(state.value)],
      velocity: calcGeneratorVelocity(calcLatest, t12, state.value),
      // TODO: This should be passing * 1000
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return {
    calculatedDuration: null,
    next: (t12) => {
      let hasUpdatedFrame = false;
      if (!spring$1 && timeReachedBoundary === void 0) {
        hasUpdatedFrame = true;
        applyFriction(t12);
        checkCatchBoundary(t12);
      }
      if (timeReachedBoundary !== void 0 && t12 >= timeReachedBoundary) {
        return spring$1.next(t12 - timeReachedBoundary);
      } else {
        !hasUpdatedFrame && applyFriction(t12);
        return state;
      }
    }
  };
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/interpolate.mjs
function createMixers(output, ease2, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;
  const numMixers = output.length - 1;
  for (let i19 = 0; i19 < numMixers; i19++) {
    let mixer = mixerFactory(output[i19], output[i19 + 1]);
    if (ease2) {
      const easingFunction = Array.isArray(ease2) ? ease2[i19] || noop : ease2;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate(input, output, { clamp: isClamp = true, ease: ease2, mixer } = {}) {
  const inputLength = input.length;
  invariant(inputLength === output.length, "Both input and output ranges must be the same length");
  if (inputLength === 1)
    return () => output[0];
  if (inputLength === 2 && output[0] === output[1])
    return () => output[1];
  const isZeroDeltaRange = input[0] === input[1];
  if (input[0] > input[inputLength - 1]) {
    input = [...input].reverse();
    output = [...output].reverse();
  }
  const mixers = createMixers(output, ease2, mixer);
  const numMixers = mixers.length;
  const interpolator = (v5) => {
    if (isZeroDeltaRange && v5 < input[0])
      return output[0];
    let i19 = 0;
    if (numMixers > 1) {
      for (; i19 < input.length - 2; i19++) {
        if (v5 < input[i19 + 1])
          break;
      }
    }
    const progressInRange = progress(input[i19], input[i19 + 1], v5);
    return mixers[i19](progressInRange);
  };
  return isClamp ? (v5) => interpolator(clamp(input[0], input[inputLength - 1], v5)) : interpolator;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs
function fillOffset(offset2, remaining) {
  const min2 = offset2[offset2.length - 1];
  for (let i19 = 1; i19 <= remaining; i19++) {
    const offsetProgress = progress(0, remaining, i19);
    offset2.push(mixNumber(min2, 1, offsetProgress));
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs
function defaultOffset(arr) {
  const offset2 = [0];
  fillOffset(offset2, arr.length - 1);
  return offset2;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs
function convertOffsetToTimes(offset2, duration) {
  return offset2.map((o21) => o21 * duration);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease: ease2 = "easeInOut" }) {
  const easingFunctions = isEasingArray(ease2) ? ease2.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease2);
  const state = {
    done: false,
    value: keyframeValues[0]
  };
  const absoluteTimes = convertOffsetToTimes(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues),
    duration
  );
  const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t12) => {
      state.value = mapTimeToKeyframe(t12);
      state.done = t12 >= duration;
      return state;
    }
  };
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs
var isNotNull = (value) => value !== null;
function getFinalKeyframe(keyframes2, { repeat, repeatType = "loop" }, finalKeyframe, speed = 1) {
  const resolvedKeyframes = keyframes2.filter(isNotNull);
  const useFirstKeyframe = speed < 0 || repeat && repeatType !== "loop" && repeat % 2 === 1;
  const index2 = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;
  return !index2 || finalKeyframe === void 0 ? resolvedKeyframes[index2] : finalKeyframe;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs
var transitionTypeMap = {
  decay: inertia,
  inertia,
  tween: keyframes,
  keyframes,
  spring
};
function replaceTransitionType(transition) {
  if (typeof transition.type === "string") {
    transition.type = transitionTypeMap[transition.type];
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs
var WithPromise = class {
  constructor() {
    this.count = 0;
    this.updateFinished();
  }
  get finished() {
    return this._finished;
  }
  updateFinished() {
    this.count++;
    this._finished = new Promise((resolve) => {
      this.resolve = resolve;
    });
  }
  notifyFinished() {
    this.resolve();
  }
  /**
   * Allows the animation to be awaited.
   *
   * @deprecated Use `finished` instead.
   */
  then(onResolve, onReject) {
    return this.finished.then(onResolve, onReject);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/JSAnimation.mjs
var percentToProgress = (percent2) => percent2 / 100;
var JSAnimation = class extends WithPromise {
  constructor(options) {
    super();
    this.state = "idle";
    this.startTime = null;
    this.isStopped = false;
    this.currentTime = 0;
    this.holdTime = null;
    this.playbackSpeed = 1;
    this.stop = () => {
      const { motionValue: motionValue2 } = this.options;
      if (motionValue2 && motionValue2.updatedAt !== time.now()) {
        this.tick(time.now());
      }
      this.isStopped = true;
      if (this.state === "idle")
        return;
      this.teardown();
      const { onStop } = this.options;
      onStop && onStop();
    };
    activeAnimations.mainThread++;
    this.options = options;
    this.initAnimation();
    this.play();
    if (options.autoplay === false)
      this.pause();
  }
  initAnimation() {
    const { options } = this;
    replaceTransitionType(options);
    const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0 } = options;
    let { keyframes: keyframes$1 } = options;
    const generatorFactory = type || keyframes;
    if (generatorFactory !== keyframes) {
      invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);
    }
    if (generatorFactory !== keyframes && typeof keyframes$1[0] !== "number") {
      this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));
      keyframes$1 = [0, 100];
    }
    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });
    if (repeatType === "mirror") {
      this.mirroredGenerator = generatorFactory({
        ...options,
        keyframes: [...keyframes$1].reverse(),
        velocity: -velocity
      });
    }
    if (generator.calculatedDuration === null) {
      generator.calculatedDuration = calcGeneratorDuration(generator);
    }
    const { calculatedDuration } = generator;
    this.calculatedDuration = calculatedDuration;
    this.resolvedDuration = calculatedDuration + repeatDelay;
    this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;
    this.generator = generator;
  }
  updateTime(timestamp) {
    const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;
    if (this.holdTime !== null) {
      this.currentTime = this.holdTime;
    } else {
      this.currentTime = animationTime;
    }
  }
  tick(timestamp, sample = false) {
    const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration } = this;
    if (this.startTime === null)
      return generator.next(0);
    const { delay: delay2 = 0, keyframes: keyframes2, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe } = this.options;
    if (this.speed > 0) {
      this.startTime = Math.min(this.startTime, timestamp);
    } else if (this.speed < 0) {
      this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);
    }
    if (sample) {
      this.currentTime = timestamp;
    } else {
      this.updateTime(timestamp);
    }
    const timeWithoutDelay = this.currentTime - delay2 * (this.playbackSpeed >= 0 ? 1 : -1);
    const isInDelayPhase = this.playbackSpeed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
    this.currentTime = Math.max(timeWithoutDelay, 0);
    if (this.state === "finished" && this.holdTime === null) {
      this.currentTime = totalDuration;
    }
    let elapsed = this.currentTime;
    let frameGenerator = generator;
    if (repeat) {
      const progress2 = Math.min(this.currentTime, totalDuration) / resolvedDuration;
      let currentIteration = Math.floor(progress2);
      let iterationProgress = progress2 % 1;
      if (!iterationProgress && progress2 >= 1) {
        iterationProgress = 1;
      }
      iterationProgress === 1 && currentIteration--;
      currentIteration = Math.min(currentIteration, repeat + 1);
      const isOddIteration = Boolean(currentIteration % 2);
      if (isOddIteration) {
        if (repeatType === "reverse") {
          iterationProgress = 1 - iterationProgress;
          if (repeatDelay) {
            iterationProgress -= repeatDelay / resolvedDuration;
          }
        } else if (repeatType === "mirror") {
          frameGenerator = mirroredGenerator;
        }
      }
      elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;
    }
    const state = isInDelayPhase ? { done: false, value: keyframes2[0] } : frameGenerator.next(elapsed);
    if (mixKeyframes) {
      state.value = mixKeyframes(state.value);
    }
    let { done } = state;
    if (!isInDelayPhase && calculatedDuration !== null) {
      done = this.playbackSpeed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;
    }
    const isAnimationFinished = this.holdTime === null && (this.state === "finished" || this.state === "running" && done);
    if (isAnimationFinished && type !== inertia) {
      state.value = getFinalKeyframe(keyframes2, this.options, finalKeyframe, this.speed);
    }
    if (onUpdate) {
      onUpdate(state.value);
    }
    if (isAnimationFinished) {
      this.finish();
    }
    return state;
  }
  /**
   * Allows the returned animation to be awaited or promise-chained. Currently
   * resolves when the animation finishes at all but in a future update could/should
   * reject if its cancels.
   */
  then(resolve, reject) {
    return this.finished.then(resolve, reject);
  }
  get duration() {
    return millisecondsToSeconds(this.calculatedDuration);
  }
  get time() {
    return millisecondsToSeconds(this.currentTime);
  }
  set time(newTime) {
    newTime = secondsToMilliseconds(newTime);
    this.currentTime = newTime;
    if (this.startTime === null || this.holdTime !== null || this.playbackSpeed === 0) {
      this.holdTime = newTime;
    } else if (this.driver) {
      this.startTime = this.driver.now() - newTime / this.playbackSpeed;
    }
  }
  get speed() {
    return this.playbackSpeed;
  }
  set speed(newSpeed) {
    this.updateTime(time.now());
    const hasChanged = this.playbackSpeed !== newSpeed;
    this.playbackSpeed = newSpeed;
    if (hasChanged) {
      this.time = millisecondsToSeconds(this.currentTime);
    }
  }
  play() {
    if (this.isStopped)
      return;
    const { driver = frameloopDriver, onPlay, startTime } = this.options;
    if (!this.driver) {
      this.driver = driver((timestamp) => this.tick(timestamp));
    }
    onPlay && onPlay();
    const now2 = this.driver.now();
    if (this.state === "finished") {
      this.updateFinished();
      this.startTime = now2;
    } else if (this.holdTime !== null) {
      this.startTime = now2 - this.holdTime;
    } else if (!this.startTime) {
      this.startTime = startTime ?? now2;
    }
    if (this.state === "finished" && this.speed < 0) {
      this.startTime += this.calculatedDuration;
    }
    this.holdTime = null;
    this.state = "running";
    this.driver.start();
  }
  pause() {
    this.state = "paused";
    this.updateTime(time.now());
    this.holdTime = this.currentTime;
  }
  complete() {
    if (this.state !== "running") {
      this.play();
    }
    this.state = "finished";
    this.holdTime = null;
  }
  finish() {
    this.teardown();
    this.state = "finished";
    const { onComplete } = this.options;
    onComplete && onComplete();
  }
  cancel() {
    this.holdTime = null;
    this.startTime = 0;
    this.tick(0);
    this.teardown();
  }
  teardown() {
    this.notifyFinished();
    this.state = "idle";
    this.stopDriver();
    this.startTime = this.holdTime = null;
    activeAnimations.mainThread--;
  }
  stopDriver() {
    if (!this.driver)
      return;
    this.driver.stop();
    this.driver = void 0;
  }
  sample(sampleTime) {
    this.startTime = 0;
    return this.tick(sampleTime, true);
  }
  attachTimeline(timeline) {
    if (this.options.allowFlatten) {
      this.options.type = "keyframes";
      this.options.ease = "linear";
      this.initAnimation();
    }
    return timeline.observe(this);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs
function fillWildcards(keyframes2) {
  for (let i19 = 1; i19 < keyframes2.length; i19++) {
    keyframes2[i19] ?? (keyframes2[i19] = keyframes2[i19 - 1]);
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs
var radToDeg = (rad) => rad * 180 / Math.PI;
var rotate = (v5) => {
  const angle = radToDeg(Math.atan2(v5[1], v5[0]));
  return rebaseAngle(angle);
};
var matrix2dParsers = {
  x: 4,
  y: 5,
  translateX: 4,
  translateY: 5,
  scaleX: 0,
  scaleY: 3,
  scale: (v5) => (Math.abs(v5[0]) + Math.abs(v5[3])) / 2,
  rotate,
  rotateZ: rotate,
  skewX: (v5) => radToDeg(Math.atan(v5[1])),
  skewY: (v5) => radToDeg(Math.atan(v5[2])),
  skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[2])) / 2
};
var rebaseAngle = (angle) => {
  angle = angle % 360;
  if (angle < 0)
    angle += 360;
  return angle;
};
var rotateZ = rotate;
var scaleX = (v5) => Math.sqrt(v5[0] * v5[0] + v5[1] * v5[1]);
var scaleY = (v5) => Math.sqrt(v5[4] * v5[4] + v5[5] * v5[5]);
var matrix3dParsers = {
  x: 12,
  y: 13,
  z: 14,
  translateX: 12,
  translateY: 13,
  translateZ: 14,
  scaleX,
  scaleY,
  scale: (v5) => (scaleX(v5) + scaleY(v5)) / 2,
  rotateX: (v5) => rebaseAngle(radToDeg(Math.atan2(v5[6], v5[5]))),
  rotateY: (v5) => rebaseAngle(radToDeg(Math.atan2(-v5[2], v5[0]))),
  rotateZ,
  rotate: rotateZ,
  skewX: (v5) => radToDeg(Math.atan(v5[4])),
  skewY: (v5) => radToDeg(Math.atan(v5[1])),
  skew: (v5) => (Math.abs(v5[1]) + Math.abs(v5[4])) / 2
};
function defaultTransformValue(name) {
  return name.includes("scale") ? 1 : 0;
}
function parseValueFromTransform(transform2, name) {
  if (!transform2 || transform2 === "none") {
    return defaultTransformValue(name);
  }
  const matrix3dMatch = transform2.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
  let parsers;
  let match;
  if (matrix3dMatch) {
    parsers = matrix3dParsers;
    match = matrix3dMatch;
  } else {
    const matrix2dMatch = transform2.match(/^matrix\(([-\d.e\s,]+)\)$/u);
    parsers = matrix2dParsers;
    match = matrix2dMatch;
  }
  if (!match) {
    return defaultTransformValue(name);
  }
  const valueParser = parsers[name];
  const values = match[1].split(",").map(convertTransformToNumber);
  return typeof valueParser === "function" ? valueParser(values) : values[valueParser];
}
var readTransformValue = (instance, name) => {
  const { transform: transform2 = "none" } = getComputedStyle(instance);
  return parseValueFromTransform(transform2, name);
};
function convertTransformToNumber(value) {
  return parseFloat(value.trim());
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs
var transformPropOrder = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
];
var transformProps = (() => new Set(transformPropOrder))();

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs
var isNumOrPxType = (v5) => v5 === number || v5 === px;
var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));
function removeNonTranslationalTransform(visualElement) {
  const removedTransforms = [];
  nonTranslationalTransformKeys.forEach((key) => {
    const value = visualElement.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  return removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: ({ x: x11 }, { paddingLeft = "0", paddingRight = "0" }) => x11.max - x11.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
  height: ({ y: y8 }, { paddingTop = "0", paddingBottom = "0" }) => y8.max - y8.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
  top: (_bbox, { top }) => parseFloat(top),
  left: (_bbox, { left }) => parseFloat(left),
  bottom: ({ y: y8 }, { top }) => parseFloat(top) + (y8.max - y8.min),
  right: ({ x: x11 }, { left }) => parseFloat(left) + (x11.max - x11.min),
  // Transform
  x: (_bbox, { transform: transform2 }) => parseValueFromTransform(transform2, "x"),
  y: (_bbox, { transform: transform2 }) => parseValueFromTransform(transform2, "y")
};
positionalValues.translateX = positionalValues.x;
positionalValues.translateY = positionalValues.y;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs
var toResolve = /* @__PURE__ */ new Set();
var isScheduled = false;
var anyNeedsMeasurement = false;
var isForced = false;
function measureAllKeyframes() {
  if (anyNeedsMeasurement) {
    const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);
    const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));
    const transformsToRestore = /* @__PURE__ */ new Map();
    elementsToMeasure.forEach((element) => {
      const removedTransforms = removeNonTranslationalTransform(element);
      if (!removedTransforms.length)
        return;
      transformsToRestore.set(element, removedTransforms);
      element.render();
    });
    resolversToMeasure.forEach((resolver) => resolver.measureInitialState());
    elementsToMeasure.forEach((element) => {
      element.render();
      const restore = transformsToRestore.get(element);
      if (restore) {
        restore.forEach(([key, value]) => {
          var _a;
          (_a = element.getValue(key)) == null ? void 0 : _a.set(value);
        });
      }
    });
    resolversToMeasure.forEach((resolver) => resolver.measureEndState());
    resolversToMeasure.forEach((resolver) => {
      if (resolver.suspendedScrollY !== void 0) {
        window.scrollTo(0, resolver.suspendedScrollY);
      }
    });
  }
  anyNeedsMeasurement = false;
  isScheduled = false;
  toResolve.forEach((resolver) => resolver.complete(isForced));
  toResolve.clear();
}
function readAllKeyframes() {
  toResolve.forEach((resolver) => {
    resolver.readKeyframes();
    if (resolver.needsMeasurement) {
      anyNeedsMeasurement = true;
    }
  });
}
function flushKeyframeResolvers() {
  isForced = true;
  readAllKeyframes();
  measureAllKeyframes();
  isForced = false;
}
var KeyframeResolver = class {
  constructor(unresolvedKeyframes, onComplete, name, motionValue2, element, isAsync = false) {
    this.isComplete = false;
    this.isAsync = false;
    this.needsMeasurement = false;
    this.isScheduled = false;
    this.unresolvedKeyframes = [...unresolvedKeyframes];
    this.onComplete = onComplete;
    this.name = name;
    this.motionValue = motionValue2;
    this.element = element;
    this.isAsync = isAsync;
  }
  scheduleResolve() {
    this.isScheduled = true;
    if (this.isAsync) {
      toResolve.add(this);
      if (!isScheduled) {
        isScheduled = true;
        frame.read(readAllKeyframes);
        frame.resolveKeyframes(measureAllKeyframes);
      }
    } else {
      this.readKeyframes();
      this.complete();
    }
  }
  readKeyframes() {
    const { unresolvedKeyframes, name, element, motionValue: motionValue2 } = this;
    if (unresolvedKeyframes[0] === null) {
      const currentValue = motionValue2 == null ? void 0 : motionValue2.get();
      const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
      if (currentValue !== void 0) {
        unresolvedKeyframes[0] = currentValue;
      } else if (element && name) {
        const valueAsRead = element.readValue(name, finalKeyframe);
        if (valueAsRead !== void 0 && valueAsRead !== null) {
          unresolvedKeyframes[0] = valueAsRead;
        }
      }
      if (unresolvedKeyframes[0] === void 0) {
        unresolvedKeyframes[0] = finalKeyframe;
      }
      if (motionValue2 && currentValue === void 0) {
        motionValue2.set(unresolvedKeyframes[0]);
      }
    }
    fillWildcards(unresolvedKeyframes);
  }
  setFinalKeyframe() {
  }
  measureInitialState() {
  }
  renderEndStyles() {
  }
  measureEndState() {
  }
  complete(isForced2 = false) {
    this.isComplete = true;
    this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced2);
    toResolve.delete(this);
  }
  cancel() {
    if (!this.isComplete) {
      this.isScheduled = false;
      toResolve.delete(this);
    }
  }
  resume() {
    if (!this.isComplete)
      this.scheduleResolve();
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs
var isCSSVar = (name) => name.startsWith("--");

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/dom/style-set.mjs
function setStyle(element, name, value) {
  isCSSVar(name) ? element.style.setProperty(name, value) : element.style[name] = value;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs
var supportsScrollTimeline = memo(() => window.ScrollTimeline !== void 0);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/supports/flags.mjs
var supportsFlags = {};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/supports/memo.mjs
function memoSupports(callback, supportsFlag) {
  const memoized = memo(callback);
  return () => supportsFlags[supportsFlag] ?? memoized();
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs
var supportsLinearEasing = memoSupports(() => {
  try {
    document.createElement("div").animate({ opacity: 0 }, { easing: "linear(0, 1)" });
  } catch (e8) {
    return false;
  }
  return true;
}, "linearEasing");

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs
var cubicBezierAsString = ([a25, b11, c64, d14]) => `cubic-bezier(${a25}, ${b11}, ${c64}, ${d14})`;

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs
var supportedWaapiEasing = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs
function mapEasingToNativeEasing(easing, duration) {
  if (!easing) {
    return void 0;
  } else if (typeof easing === "function") {
    return supportsLinearEasing() ? generateLinearEasing(easing, duration) : "ease-out";
  } else if (isBezierDefinition(easing)) {
    return cubicBezierAsString(easing);
  } else if (Array.isArray(easing)) {
    return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) || supportedWaapiEasing.easeOut);
  } else {
    return supportedWaapiEasing[easing];
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs
function startWaapiAnimation(element, valueName, keyframes2, { delay: delay2 = 0, duration = 300, repeat = 0, repeatType = "loop", ease: ease2 = "easeOut", times } = {}, pseudoElement = void 0) {
  const keyframeOptions = {
    [valueName]: keyframes2
  };
  if (times)
    keyframeOptions.offset = times;
  const easing = mapEasingToNativeEasing(ease2, duration);
  if (Array.isArray(easing))
    keyframeOptions.easing = easing;
  if (statsBuffer.value) {
    activeAnimations.waapi++;
  }
  const options = {
    delay: delay2,
    duration,
    easing: !Array.isArray(easing) ? easing : "linear",
    fill: "both",
    iterations: repeat + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal"
  };
  if (pseudoElement)
    options.pseudoElement = pseudoElement;
  const animation = element.animate(keyframeOptions, options);
  if (statsBuffer.value) {
    animation.finished.finally(() => {
      activeAnimations.waapi--;
    });
  }
  return animation;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs
function isGenerator(type) {
  return typeof type === "function" && "applyToOptions" in type;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs
function applyGeneratorOptions({ type, ...options }) {
  if (isGenerator(type) && supportsLinearEasing()) {
    return type.applyToOptions(options);
  } else {
    options.duration ?? (options.duration = 300);
    options.ease ?? (options.ease = "easeOut");
  }
  return options;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs
var NativeAnimation = class extends WithPromise {
  constructor(options) {
    super();
    this.finishedTime = null;
    this.isStopped = false;
    if (!options)
      return;
    const { element, name, keyframes: keyframes2, pseudoElement, allowFlatten = false, finalKeyframe, onComplete } = options;
    this.isPseudoElement = Boolean(pseudoElement);
    this.allowFlatten = allowFlatten;
    this.options = options;
    invariant(typeof options.type !== "string", `animateMini doesn't support "type" as a string. Did you mean to import { spring } from "motion"?`);
    const transition = applyGeneratorOptions(options);
    this.animation = startWaapiAnimation(element, name, keyframes2, transition, pseudoElement);
    if (transition.autoplay === false) {
      this.animation.pause();
    }
    this.animation.onfinish = () => {
      this.finishedTime = this.time;
      if (!pseudoElement) {
        const keyframe = getFinalKeyframe(keyframes2, this.options, finalKeyframe, this.speed);
        if (this.updateMotionValue) {
          this.updateMotionValue(keyframe);
        } else {
          setStyle(element, name, keyframe);
        }
        this.animation.cancel();
      }
      onComplete == null ? void 0 : onComplete();
      this.notifyFinished();
    };
    this.animation.oncancel = () => this.notifyFinished();
  }
  play() {
    if (this.isStopped)
      return;
    this.animation.play();
    if (this.state === "finished") {
      this.updateFinished();
    }
  }
  pause() {
    this.animation.pause();
  }
  complete() {
    var _a, _b;
    (_b = (_a = this.animation).finish) == null ? void 0 : _b.call(_a);
  }
  cancel() {
    try {
      this.animation.cancel();
    } catch (e8) {
    }
  }
  stop() {
    if (this.isStopped)
      return;
    this.isStopped = true;
    const { state } = this;
    if (state === "idle" || state === "finished") {
      return;
    }
    if (this.updateMotionValue) {
      this.updateMotionValue();
    } else {
      this.commitStyles();
    }
    if (!this.isPseudoElement)
      this.cancel();
  }
  /**
   * WAAPI doesn't natively have any interruption capabilities.
   *
   * In this method, we commit styles back to the DOM before cancelling
   * the animation.
   *
   * This is designed to be overridden by NativeAnimationExtended, which
   * will create a renderless JS animation and sample it twice to calculate
   * its current value, "previous" value, and therefore allow
   * Motion to also correctly calculate velocity for any subsequent animation
   * while deferring the commit until the next animation frame.
   */
  commitStyles() {
    var _a, _b;
    if (!this.isPseudoElement) {
      (_b = (_a = this.animation).commitStyles) == null ? void 0 : _b.call(_a);
    }
  }
  get duration() {
    var _a, _b;
    const duration = ((_b = (_a = this.animation.effect) == null ? void 0 : _a.getComputedTiming) == null ? void 0 : _b.call(_a).duration) || 0;
    return millisecondsToSeconds(Number(duration));
  }
  get time() {
    return millisecondsToSeconds(Number(this.animation.currentTime) || 0);
  }
  set time(newTime) {
    this.finishedTime = null;
    this.animation.currentTime = secondsToMilliseconds(newTime);
  }
  /**
   * The playback speed of the animation.
   * 1 = normal speed, 2 = double speed, 0.5 = half speed.
   */
  get speed() {
    return this.animation.playbackRate;
  }
  set speed(newSpeed) {
    if (newSpeed < 0)
      this.finishedTime = null;
    this.animation.playbackRate = newSpeed;
  }
  get state() {
    return this.finishedTime !== null ? "finished" : this.animation.playState;
  }
  get startTime() {
    return Number(this.animation.startTime);
  }
  set startTime(newStartTime) {
    this.animation.startTime = newStartTime;
  }
  /**
   * Attaches a timeline to the animation, for instance the `ScrollTimeline`.
   */
  attachTimeline({ timeline, observe }) {
    var _a;
    if (this.allowFlatten) {
      (_a = this.animation.effect) == null ? void 0 : _a.updateTiming({ easing: "linear" });
    }
    this.animation.onfinish = null;
    if (timeline && supportsScrollTimeline()) {
      this.animation.timeline = timeline;
      return noop;
    } else {
      return observe(this);
    }
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs
var unsupportedEasingFunctions = {
  anticipate,
  backInOut,
  circInOut
};
function isUnsupportedEase(key) {
  return key in unsupportedEasingFunctions;
}
function replaceStringEasing(transition) {
  if (typeof transition.ease === "string" && isUnsupportedEase(transition.ease)) {
    transition.ease = unsupportedEasingFunctions[transition.ease];
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs
var sampleDelta = 10;
var NativeAnimationExtended = class extends NativeAnimation {
  constructor(options) {
    replaceStringEasing(options);
    replaceTransitionType(options);
    super(options);
    if (options.startTime) {
      this.startTime = options.startTime;
    }
    this.options = options;
  }
  /**
   * WAAPI doesn't natively have any interruption capabilities.
   *
   * Rather than read commited styles back out of the DOM, we can
   * create a renderless JS animation and sample it twice to calculate
   * its current value, "previous" value, and therefore allow
   * Motion to calculate velocity for any subsequent animation.
   */
  updateMotionValue(value) {
    const { motionValue: motionValue2, onUpdate, onComplete, element, ...options } = this.options;
    if (!motionValue2)
      return;
    if (value !== void 0) {
      motionValue2.set(value);
      return;
    }
    const sampleAnimation = new JSAnimation({
      ...options,
      autoplay: false
    });
    const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);
    motionValue2.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);
    sampleAnimation.stop();
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = (value, name) => {
  if (name === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && // It's animatable if we have a string
  (complex.test(value) || value === "0") && // And it contains numbers and/or colors
  !value.startsWith("url(")) {
    return true;
  }
  return false;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs
function hasKeyframesChanged(keyframes2) {
  const current = keyframes2[0];
  if (keyframes2.length === 1)
    return true;
  for (let i19 = 0; i19 < keyframes2.length; i19++) {
    if (keyframes2[i19] !== current)
      return true;
  }
}
function canAnimate(keyframes2, name, type, velocity) {
  const originKeyframe = keyframes2[0];
  if (originKeyframe === null)
    return false;
  if (name === "display" || name === "visibility")
    return true;
  const targetKeyframe = keyframes2[keyframes2.length - 1];
  const isOriginAnimatable = isAnimatable(originKeyframe, name);
  const isTargetAnimatable = isAnimatable(targetKeyframe, name);
  warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`);
  if (!isOriginAnimatable || !isTargetAnimatable) {
    return false;
  }
  return hasKeyframesChanged(keyframes2) || (type === "spring" || isGenerator(type)) && velocity;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs
var acceleratedValues = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform"
  // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved
  // or until we implement support for linear() easing.
  // "background-color"
]);
var supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, "animate"));
function supportsBrowserAnimation(options) {
  const { motionValue: motionValue2, name, repeatDelay, repeatType, damping, type } = options;
  if (!motionValue2 || !motionValue2.owner || !(motionValue2.owner.current instanceof HTMLElement)) {
    return false;
  }
  const { onUpdate, transformTemplate } = motionValue2.owner.getProps();
  return supportsWaapi() && name && acceleratedValues.has(name) && (name !== "transform" || !transformTemplate) && /**
   * If we're outputting values to onUpdate then we can't use WAAPI as there's
   * no way to read the value from WAAPI every frame.
   */
  !onUpdate && !repeatDelay && repeatType !== "mirror" && damping !== 0 && type !== "inertia";
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs
var MAX_RESOLVE_DELAY = 40;
var AsyncMotionValueAnimation = class extends WithPromise {
  constructor({ autoplay = true, delay: delay2 = 0, type = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", keyframes: keyframes2, name, motionValue: motionValue2, element, ...options }) {
    var _a;
    super();
    this.stop = () => {
      var _a2, _b;
      if (this._animation) {
        this._animation.stop();
        (_a2 = this.stopTimeline) == null ? void 0 : _a2.call(this);
      } else {
        (_b = this.keyframeResolver) == null ? void 0 : _b.cancel();
      }
    };
    this.createdAt = time.now();
    const optionsWithDefaults = {
      autoplay,
      delay: delay2,
      type,
      repeat,
      repeatDelay,
      repeatType,
      name,
      motionValue: motionValue2,
      element,
      ...options
    };
    const KeyframeResolver$1 = (element == null ? void 0 : element.KeyframeResolver) || KeyframeResolver;
    this.keyframeResolver = new KeyframeResolver$1(keyframes2, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue2, element);
    (_a = this.keyframeResolver) == null ? void 0 : _a.scheduleResolve();
  }
  onKeyframesResolved(keyframes2, finalKeyframe, options, sync2) {
    this.keyframeResolver = void 0;
    const { name, type, velocity, delay: delay2, isHandoff, onUpdate } = options;
    this.resolvedAt = time.now();
    if (!canAnimate(keyframes2, name, type, velocity)) {
      if (MotionGlobalConfig.instantAnimations || !delay2) {
        onUpdate == null ? void 0 : onUpdate(getFinalKeyframe(keyframes2, options, finalKeyframe));
      }
      keyframes2[0] = keyframes2[keyframes2.length - 1];
      options.duration = 0;
      options.repeat = 0;
    }
    const startTime = sync2 ? !this.resolvedAt ? this.createdAt : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY ? this.resolvedAt : this.createdAt : void 0;
    const resolvedOptions = {
      startTime,
      finalKeyframe,
      ...options,
      keyframes: keyframes2
    };
    const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions) ? new NativeAnimationExtended({
      ...resolvedOptions,
      element: resolvedOptions.motionValue.owner.current
    }) : new JSAnimation(resolvedOptions);
    animation.finished.then(() => this.notifyFinished()).catch(noop);
    if (this.pendingTimeline) {
      this.stopTimeline = animation.attachTimeline(this.pendingTimeline);
      this.pendingTimeline = void 0;
    }
    this._animation = animation;
  }
  get finished() {
    if (!this._animation) {
      return this._finished;
    } else {
      return this.animation.finished;
    }
  }
  then(onResolve, _onReject) {
    return this.finished.finally(onResolve).then(() => {
    });
  }
  get animation() {
    if (!this._animation) {
      flushKeyframeResolvers();
    }
    return this._animation;
  }
  get duration() {
    return this.animation.duration;
  }
  get time() {
    return this.animation.time;
  }
  set time(newTime) {
    this.animation.time = newTime;
  }
  get speed() {
    return this.animation.speed;
  }
  get state() {
    return this.animation.state;
  }
  set speed(newSpeed) {
    this.animation.speed = newSpeed;
  }
  get startTime() {
    return this.animation.startTime;
  }
  attachTimeline(timeline) {
    if (this._animation) {
      this.stopTimeline = this.animation.attachTimeline(timeline);
    } else {
      this.pendingTimeline = timeline;
    }
    return () => this.stop();
  }
  play() {
    this.animation.play();
  }
  pause() {
    this.animation.pause();
  }
  complete() {
    this.animation.complete();
  }
  cancel() {
    this.animation.cancel();
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs
var GroupAnimation = class {
  constructor(animations2) {
    this.stop = () => this.runAll("stop");
    this.animations = animations2.filter(Boolean);
  }
  get finished() {
    return Promise.all(this.animations.map((animation) => animation.finished));
  }
  /**
   * TODO: Filter out cancelled or stopped animations before returning
   */
  getAll(propName) {
    return this.animations[0][propName];
  }
  setAll(propName, newValue) {
    for (let i19 = 0; i19 < this.animations.length; i19++) {
      this.animations[i19][propName] = newValue;
    }
  }
  attachTimeline(timeline) {
    const subscriptions = this.animations.map((animation) => animation.attachTimeline(timeline));
    return () => {
      subscriptions.forEach((cancel, i19) => {
        cancel && cancel();
        this.animations[i19].stop();
      });
    };
  }
  get time() {
    return this.getAll("time");
  }
  set time(time2) {
    this.setAll("time", time2);
  }
  get speed() {
    return this.getAll("speed");
  }
  set speed(speed) {
    this.setAll("speed", speed);
  }
  get state() {
    return this.getAll("state");
  }
  get startTime() {
    return this.getAll("startTime");
  }
  get duration() {
    let max2 = 0;
    for (let i19 = 0; i19 < this.animations.length; i19++) {
      max2 = Math.max(max2, this.animations[i19].duration);
    }
    return max2;
  }
  runAll(methodName) {
    this.animations.forEach((controls) => controls[methodName]());
  }
  play() {
    this.runAll("play");
  }
  pause() {
    this.runAll("pause");
  }
  cancel() {
    this.runAll("cancel");
  }
  complete() {
    this.runAll("complete");
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs
var GroupAnimationWithThen = class extends GroupAnimation {
  then(onResolve, _onReject) {
    return this.finished.finally(onResolve).then(() => {
    });
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/active-animations.mjs
var animationMaps = /* @__PURE__ */ new WeakMap();
var animationMapKey = (name, pseudoElement = "") => `${name}:${pseudoElement}`;
function getAnimationMap(element) {
  const map = animationMaps.get(element) || /* @__PURE__ */ new Map();
  animationMaps.set(element, map);
  return map;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs
var splitCSSVariableRegex = (
  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
  /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u
);
function parseCSSVariable(current) {
  const match = splitCSSVariableRegex.exec(current);
  if (!match)
    return [,];
  const [, token1, token2, fallback] = match;
  return [`--${token1 ?? token2}`, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth = 1) {
  invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);
  const [token, fallback] = parseCSSVariable(current);
  if (!token)
    return;
  const resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    const trimmed = resolved.trim();
    return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;
  }
  return isCSSVariableToken(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs
function getValueTransition(transition, key) {
  return (transition == null ? void 0 : transition[key]) ?? (transition == null ? void 0 : transition["default"]) ?? transition;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/utils/keys-position.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  ...transformPropOrder
]);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/auto.mjs
var auto = {
  test: (v5) => v5 === "auto",
  parse: (v5) => v5
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/test.mjs
var testValueType = (v5) => (type) => type.test(v5);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
var findDimensionValueType = (v5) => dimensionValueTypes.find(testValueType(v5));

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs
function isNone(value) {
  if (typeof value === "number") {
    return value === 0;
  } else if (value !== null) {
    return value === "none" || value === "0" || isZeroValueString(value);
  } else {
    return true;
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v5) {
  const [name, value] = v5.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v5;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v5;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /\b([a-z-]*)\(.*?\)/gu;
var filter = {
  ...complex,
  getAnimatableNone: (v5) => {
    const functions = v5.match(functionRegex);
    return functions ? functions.map(applyDefaultFilter).join(" ") : v5;
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/int.mjs
var int = {
  ...number,
  transform: Math.round
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/maps/transform.mjs
var transformValueTypes = {
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/maps/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Misc
  backgroundPositionX: px,
  backgroundPositionY: px,
  ...transformValueTypes,
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs
var defaultValueTypes = {
  ...numberValueTypes,
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
};
var getDefaultValueType = (key) => defaultValueTypes[key];

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs
function getAnimatableNone2(key, value) {
  let defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs
var invalidTemplates = /* @__PURE__ */ new Set(["auto", "none", "0"]);
function makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {
  let i19 = 0;
  let animatableTemplate = void 0;
  while (i19 < unresolvedKeyframes.length && !animatableTemplate) {
    const keyframe = unresolvedKeyframes[i19];
    if (typeof keyframe === "string" && !invalidTemplates.has(keyframe) && analyseComplexValue(keyframe).values.length) {
      animatableTemplate = unresolvedKeyframes[i19];
    }
    i19++;
  }
  if (animatableTemplate && name) {
    for (const noneIndex of noneKeyframeIndexes) {
      unresolvedKeyframes[noneIndex] = getAnimatableNone2(name, animatableTemplate);
    }
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs
var DOMKeyframesResolver = class extends KeyframeResolver {
  constructor(unresolvedKeyframes, onComplete, name, motionValue2, element) {
    super(unresolvedKeyframes, onComplete, name, motionValue2, element, true);
  }
  readKeyframes() {
    const { unresolvedKeyframes, element, name } = this;
    if (!element || !element.current)
      return;
    super.readKeyframes();
    for (let i19 = 0; i19 < unresolvedKeyframes.length; i19++) {
      let keyframe = unresolvedKeyframes[i19];
      if (typeof keyframe === "string") {
        keyframe = keyframe.trim();
        if (isCSSVariableToken(keyframe)) {
          const resolved = getVariableValue(keyframe, element.current);
          if (resolved !== void 0) {
            unresolvedKeyframes[i19] = resolved;
          }
          if (i19 === unresolvedKeyframes.length - 1) {
            this.finalKeyframe = keyframe;
          }
        }
      }
    }
    this.resolveNoneKeyframes();
    if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {
      return;
    }
    const [origin, target] = unresolvedKeyframes;
    const originType = findDimensionValueType(origin);
    const targetType = findDimensionValueType(target);
    if (originType === targetType)
      return;
    if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {
      for (let i19 = 0; i19 < unresolvedKeyframes.length; i19++) {
        const value = unresolvedKeyframes[i19];
        if (typeof value === "string") {
          unresolvedKeyframes[i19] = parseFloat(value);
        }
      }
    } else {
      this.needsMeasurement = true;
    }
  }
  resolveNoneKeyframes() {
    const { unresolvedKeyframes, name } = this;
    const noneKeyframeIndexes = [];
    for (let i19 = 0; i19 < unresolvedKeyframes.length; i19++) {
      if (unresolvedKeyframes[i19] === null || isNone(unresolvedKeyframes[i19])) {
        noneKeyframeIndexes.push(i19);
      }
    }
    if (noneKeyframeIndexes.length) {
      makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);
    }
  }
  measureInitialState() {
    const { element, unresolvedKeyframes, name } = this;
    if (!element || !element.current)
      return;
    if (name === "height") {
      this.suspendedScrollY = window.pageYOffset;
    }
    this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));
    unresolvedKeyframes[0] = this.measuredOrigin;
    const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
    if (measureKeyframe !== void 0) {
      element.getValue(name, measureKeyframe).jump(measureKeyframe, false);
    }
  }
  measureEndState() {
    var _a;
    const { element, name, unresolvedKeyframes } = this;
    if (!element || !element.current)
      return;
    const value = element.getValue(name);
    value && value.jump(this.measuredOrigin, false);
    const finalKeyframeIndex = unresolvedKeyframes.length - 1;
    const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];
    unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));
    if (finalKeyframe !== null && this.finalKeyframe === void 0) {
      this.finalKeyframe = finalKeyframe;
    }
    if ((_a = this.removedTransforms) == null ? void 0 : _a.length) {
      this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {
        element.getValue(unsetTransformName).set(unsetTransformValue);
      });
    }
    this.resolveNoneKeyframes();
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/utils/px-values.mjs
var pxValues = /* @__PURE__ */ new Set([
  // Border props
  "borderWidth",
  "borderTopWidth",
  "borderRightWidth",
  "borderBottomWidth",
  "borderLeftWidth",
  "borderRadius",
  "radius",
  "borderTopLeftRadius",
  "borderTopRightRadius",
  "borderBottomRightRadius",
  "borderBottomLeftRadius",
  // Positioning props
  "width",
  "maxWidth",
  "height",
  "maxHeight",
  "top",
  "right",
  "bottom",
  "left",
  // Spacing props
  "padding",
  "paddingTop",
  "paddingRight",
  "paddingBottom",
  "paddingLeft",
  "margin",
  "marginTop",
  "marginRight",
  "marginBottom",
  "marginLeft",
  // Misc
  "backgroundPositionX",
  "backgroundPositionY"
]);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/keyframes/utils/apply-px-defaults.mjs
function applyPxDefaults(keyframes2, name) {
  for (let i19 = 0; i19 < keyframes2.length; i19++) {
    if (typeof keyframes2[i19] === "number" && pxValues.has(name)) {
      keyframes2[i19] = keyframes2[i19] + "px";
    }
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/animation/waapi/supports/partial-keyframes.mjs
var supportsPartialKeyframes = memo(() => {
  try {
    document.createElement("div").animate({ opacity: [1] });
  } catch (e8) {
    return false;
  }
  return true;
});

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs
function resolveElements(elementOrSelector, scope, selectorCache) {
  if (elementOrSelector instanceof EventTarget) {
    return [elementOrSelector];
  } else if (typeof elementOrSelector === "string") {
    let root = document;
    if (scope) {
      root = scope.current;
    }
    const elements = (selectorCache == null ? void 0 : selectorCache[elementOrSelector]) ?? root.querySelectorAll(elementOrSelector);
    return elements ? Array.from(elements) : [];
  }
  return Array.from(elementOrSelector);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/microtask.mjs
var { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs
var isDragging = {
  x: false,
  y: false
};
function isDragActive() {
  return isDragging.x || isDragging.y;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs
function setDragLock(axis) {
  if (axis === "x" || axis === "y") {
    if (isDragging[axis]) {
      return null;
    } else {
      isDragging[axis] = true;
      return () => {
        isDragging[axis] = false;
      };
    }
  } else {
    if (isDragging.x || isDragging.y) {
      return null;
    } else {
      isDragging.x = isDragging.y = true;
      return () => {
        isDragging.x = isDragging.y = false;
      };
    }
  }
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/utils/setup.mjs
function setupGesture(elementOrSelector, options) {
  const elements = resolveElements(elementOrSelector);
  const gestureAbortController = new AbortController();
  const eventOptions = {
    passive: true,
    ...options,
    signal: gestureAbortController.signal
  };
  const cancel = () => gestureAbortController.abort();
  return [elements, eventOptions, cancel];
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/hover.mjs
function isValidHover(event) {
  return !(event.pointerType === "touch" || isDragActive());
}
function hover(elementOrSelector, onHoverStart, options = {}) {
  const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);
  const onPointerEnter = (enterEvent) => {
    if (!isValidHover(enterEvent))
      return;
    const { target } = enterEvent;
    const onHoverEnd = onHoverStart(target, enterEvent);
    if (typeof onHoverEnd !== "function" || !target)
      return;
    const onPointerLeave = (leaveEvent) => {
      if (!isValidHover(leaveEvent))
        return;
      onHoverEnd(leaveEvent);
      target.removeEventListener("pointerleave", onPointerLeave);
    };
    target.addEventListener("pointerleave", onPointerLeave, eventOptions);
  };
  elements.forEach((element) => {
    element.addEventListener("pointerenter", onPointerEnter, eventOptions);
  });
  return cancel;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = (parent, child) => {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs
var isPrimaryPointer = (event) => {
  if (event.pointerType === "mouse") {
    return typeof event.button !== "number" || event.button <= 0;
  } else {
    return event.isPrimary !== false;
  }
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs
var focusableElements = /* @__PURE__ */ new Set([
  "BUTTON",
  "INPUT",
  "SELECT",
  "TEXTAREA",
  "A"
]);
function isElementKeyboardAccessible(element) {
  return focusableElements.has(element.tagName) || element.tabIndex !== -1;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs
var isPressing = /* @__PURE__ */ new WeakSet();

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs
function filterEvents(callback) {
  return (event) => {
    if (event.key !== "Enter")
      return;
    callback(event);
  };
}
function firePointerEvent(target, type) {
  target.dispatchEvent(new PointerEvent("pointer" + type, { isPrimary: true, bubbles: true }));
}
var enableKeyboardPress = (focusEvent, eventOptions) => {
  const element = focusEvent.currentTarget;
  if (!element)
    return;
  const handleKeydown = filterEvents(() => {
    if (isPressing.has(element))
      return;
    firePointerEvent(element, "down");
    const handleKeyup = filterEvents(() => {
      firePointerEvent(element, "up");
    });
    const handleBlur = () => firePointerEvent(element, "cancel");
    element.addEventListener("keyup", handleKeyup, eventOptions);
    element.addEventListener("blur", handleBlur, eventOptions);
  });
  element.addEventListener("keydown", handleKeydown, eventOptions);
  element.addEventListener("blur", () => element.removeEventListener("keydown", handleKeydown), eventOptions);
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/gestures/press/index.mjs
function isValidPressEvent(event) {
  return isPrimaryPointer(event) && !isDragActive();
}
function press(targetOrSelector, onPressStart, options = {}) {
  const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);
  const startPress = (startEvent) => {
    const target = startEvent.currentTarget;
    if (!isValidPressEvent(startEvent) || isPressing.has(target))
      return;
    isPressing.add(target);
    const onPressEnd = onPressStart(target, startEvent);
    const onPointerEnd = (endEvent, success) => {
      window.removeEventListener("pointerup", onPointerUp);
      window.removeEventListener("pointercancel", onPointerCancel);
      if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {
        return;
      }
      isPressing.delete(target);
      if (typeof onPressEnd === "function") {
        onPressEnd(endEvent, { success });
      }
    };
    const onPointerUp = (upEvent) => {
      onPointerEnd(upEvent, target === window || target === document || options.useGlobalTarget || isNodeOrChild(target, upEvent.target));
    };
    const onPointerCancel = (cancelEvent) => {
      onPointerEnd(cancelEvent, false);
    };
    window.addEventListener("pointerup", onPointerUp, eventOptions);
    window.addEventListener("pointercancel", onPointerCancel, eventOptions);
  };
  targets.forEach((target) => {
    const pointerDownTarget = options.useGlobalTarget ? window : target;
    pointerDownTarget.addEventListener("pointerdown", startPress, eventOptions);
    if (target instanceof HTMLElement) {
      target.addEventListener("focus", (event) => enableKeyboardPress(event, eventOptions));
      if (!isElementKeyboardAccessible(target) && !target.hasAttribute("tabindex")) {
        target.tabIndex = 0;
      }
    }
  });
  return cancelEvents;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/render/dom/style-computed.mjs
function getComputedStyle3(element, name) {
  const computedStyle = window.getComputedStyle(element);
  return isCSSVar(name) ? computedStyle.getPropertyValue(name) : computedStyle[name];
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/utils/transform.mjs
function transform(...args) {
  const useImmediate = !Array.isArray(args[0]);
  const argOffset = useImmediate ? 0 : -1;
  const inputValue = args[0 + argOffset];
  const inputRange = args[1 + argOffset];
  const outputRange = args[2 + argOffset];
  const options = args[3 + argOffset];
  const interpolator = interpolate(inputRange, outputRange, options);
  return useImmediate ? interpolator(inputValue) : interpolator;
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/index.mjs
var MAX_VELOCITY_DELTA = 30;
var isFloat = (value) => {
  return !isNaN(parseFloat(value));
};
var collectMotionValues = {
  current: void 0
};
var MotionValue = class {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   */
  constructor(init, options = {}) {
    this.version = "__VERSION__";
    this.canTrackVelocity = null;
    this.events = {};
    this.updateAndNotify = (v5, render = true) => {
      var _a, _b;
      const currentTime = time.now();
      if (this.updatedAt !== currentTime) {
        this.setPrevFrameValue();
      }
      this.prev = this.current;
      this.setCurrent(v5);
      if (this.current !== this.prev) {
        (_a = this.events.change) == null ? void 0 : _a.notify(this.current);
      }
      if (render) {
        (_b = this.events.renderRequest) == null ? void 0 : _b.notify(this.current);
      }
    };
    this.hasAnimated = false;
    this.setCurrent(init);
    this.owner = options.owner;
  }
  setCurrent(current) {
    this.current = current;
    this.updatedAt = time.now();
    if (this.canTrackVelocity === null && current !== void 0) {
      this.canTrackVelocity = isFloat(this.current);
    }
  }
  setPrevFrameValue(prevFrameValue = this.current) {
    this.prevFrameValue = prevFrameValue;
    this.prevUpdatedAt = this.updatedAt;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(subscription) {
    if (true) {
      warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on("change", callback).`);
    }
    return this.on("change", subscription);
  }
  on(eventName, callback) {
    if (!this.events[eventName]) {
      this.events[eventName] = new SubscriptionManager();
    }
    const unsubscribe = this.events[eventName].add(callback);
    if (eventName === "change") {
      return () => {
        unsubscribe();
        frame.read(() => {
          if (!this.events.change.getSize()) {
            this.stop();
          }
        });
      };
    }
    return unsubscribe;
  }
  clearListeners() {
    for (const eventManagers in this.events) {
      this.events[eventManagers].clear();
    }
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   */
  attach(passiveEffect, stopPassiveEffect) {
    this.passiveEffect = passiveEffect;
    this.stopPassiveEffect = stopPassiveEffect;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(v5, render = true) {
    if (!render || !this.passiveEffect) {
      this.updateAndNotify(v5, render);
    } else {
      this.passiveEffect(v5, this.updateAndNotify);
    }
  }
  setWithVelocity(prev, current, delta) {
    this.set(current);
    this.prev = void 0;
    this.prevFrameValue = prev;
    this.prevUpdatedAt = this.updatedAt - delta;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(v5, endAnimation = true) {
    this.updateAndNotify(v5);
    this.prev = v5;
    this.prevUpdatedAt = this.prevFrameValue = void 0;
    endAnimation && this.stop();
    if (this.stopPassiveEffect)
      this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    if (collectMotionValues.current) {
      collectMotionValues.current.push(this);
    }
    return this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    const currentTime = time.now();
    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {
      return 0;
    }
    const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);
    return velocityPerSecond(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   */
  start(startAnimation) {
    this.stop();
    return new Promise((resolve) => {
      this.hasAnimated = true;
      this.animation = startAnimation(resolve);
      if (this.events.animationStart) {
        this.events.animationStart.notify();
      }
    }).then(() => {
      if (this.events.animationComplete) {
        this.events.animationComplete.notify();
      }
      this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    if (this.animation) {
      this.animation.stop();
      if (this.events.animationCancel) {
        this.events.animationCancel.notify();
      }
    }
    this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    var _a;
    (_a = this.events.destroy) == null ? void 0 : _a.notify();
    this.clearListeners();
    this.stop();
    if (this.stopPassiveEffect) {
      this.stopPassiveEffect();
    }
  }
};
function motionValue(init, options) {
  return new MotionValue(init, options);
}

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/find.mjs
var valueTypes = [...dimensionValueTypes, color, complex];
var findValueType = (v5) => valueTypes.find(testValueType(v5));

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs
var getValueAsType = (value, type) => {
  return type && typeof value === "number" ? type.transform(value) : value;
};

// node_modules/.pnpm/motion-dom@12.9.4/node_modules/motion-dom/dist/es/frameloop/index-legacy.mjs
var cancelSync = stepsOrder.reduce((acc, key) => {
  acc[key] = (process2) => cancelFrame(process2);
  return acc;
}, {});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react154 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react153 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs
var import_jsx_runtime38 = __toESM(require_jsx_runtime(), 1);
var import_react157 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react156 = __toESM(require_react(), 1);
var LazyContext = (0, import_react156.createContext)({ strict: false });

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var featureProps = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
};
var featureDefinitions = {};
for (const key in featureProps) {
  featureDefinitions[key] = {
    isEnabled: (props) => featureProps[key].some((name) => !!props[name])
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/load-features.mjs
function loadFeatures(features) {
  for (const key in features) {
    featureDefinitions[key] = {
      ...featureDefinitions[key],
      ...features[key]
    };
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs
var import_jsx_runtime39 = __toESM(require_jsx_runtime(), 1);
var import_react158 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "custom",
  "inherit",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "globalTapTarget",
  "ignoreStrict",
  "viewport"
]);
function isValidMotionProp(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || key.startsWith("onLayout") || validMotionProps.has(key);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = (key) => !isValidMotionProp(key);
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = (key) => key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
}
try {
  loadExternalIsValidProp((init_is_prop_valid_browser_esm(), __toCommonJS(is_prop_valid_browser_esm_exports)).default);
} catch {
}
function filterProps(props, isDom, forwardMotionProps) {
  const filteredProps = {};
  for (const key in props) {
    if (key === "values" && typeof props.values === "object")
      continue;
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-proxy.mjs
function createDOMMotionComponentProxy(componentFactory) {
  if (typeof Proxy === "undefined") {
    return componentFactory;
  }
  const componentCache = /* @__PURE__ */ new Map();
  const deprecatedFactoryFunction = (...args) => {
    if (true) {
      warnOnce(false, "motion() is deprecated. Use motion.create() instead.");
    }
    return componentFactory(...args);
  };
  return new Proxy(deprecatedFactoryFunction, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => {
      if (key === "create")
        return componentFactory;
      if (!componentCache.has(key)) {
        componentCache.set(key, componentFactory(key));
      }
      return componentCache.get(key);
    }
  });
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs
var import_jsx_runtime40 = __toESM(require_jsx_runtime(), 1);
var import_react164 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react159 = __toESM(require_react(), 1);
var MotionContext = (0, import_react159.createContext)({});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react160 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v5) {
  return v5 !== null && typeof v5 === "object" && typeof v5.start === "function";
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs
function isVariantLabel(v5) {
  return typeof v5 === "string" || Array.isArray(v5);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs
var variantPriorityOrder = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
];
var variantProps = ["initial", ...variantPriorityOrder];

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs
function isControllingVariants(props) {
  return isAnimationControls(props.animate) || variantProps.some((name) => isVariantLabel(props[name]));
}
function isVariantNode(props) {
  return Boolean(isControllingVariants(props) || props.variants);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (isControllingVariants(props)) {
    const { initial, animate: animate2 } = props;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate2) ? animate2 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  const { initial, animate: animate2 } = getCurrentTreeVariants(props, (0, import_react160.useContext)(MotionContext));
  return (0, import_react160.useMemo)(() => ({ initial, animate: animate2 }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate2)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs
var motionComponentSymbol = Symbol.for("motionComponentSymbol");

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react161 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return ref && typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement, externalRef) {
  return (0, import_react161.useCallback)(
    (instance) => {
      if (instance) {
        visualState.onMount && visualState.onMount(instance);
      }
      if (visualElement) {
        if (instance) {
          visualElement.mount(instance);
        } else {
          visualElement.unmount();
        }
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react163 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs
var optimizedAppearDataId = "framerAppearId";
var optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react162 = __toESM(require_react(), 1);
var SwitchLayoutGroupContext = (0, import_react162.createContext)({});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component3, visualState, props, createVisualElement, ProjectionNodeConstructor) {
  var _a, _b;
  const { visualElement: parent } = (0, import_react163.useContext)(MotionContext);
  const lazyContext = (0, import_react163.useContext)(LazyContext);
  const presenceContext = (0, import_react163.useContext)(PresenceContext);
  const reducedMotionConfig = (0, import_react163.useContext)(MotionConfigContext).reducedMotion;
  const visualElementRef = (0, import_react163.useRef)(null);
  createVisualElement = createVisualElement || lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component3, {
      visualState,
      parent,
      props,
      presenceContext,
      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,
      reducedMotionConfig
    });
  }
  const visualElement = visualElementRef.current;
  const initialLayoutGroupConfig = (0, import_react163.useContext)(SwitchLayoutGroupContext);
  if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === "html" || visualElement.type === "svg")) {
    createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);
  }
  const isMounted = (0, import_react163.useRef)(false);
  (0, import_react163.useInsertionEffect)(() => {
    if (visualElement && isMounted.current) {
      visualElement.update(props, presenceContext);
    }
  });
  const optimisedAppearId = props[optimizedAppearDataAttribute];
  const wantsHandoff = (0, import_react163.useRef)(Boolean(optimisedAppearId) && !((_a = window.MotionHandoffIsComplete) == null ? void 0 : _a.call(window, optimisedAppearId)) && ((_b = window.MotionHasOptimisedAnimation) == null ? void 0 : _b.call(window, optimisedAppearId)));
  useIsomorphicLayoutEffect(() => {
    if (!visualElement)
      return;
    isMounted.current = true;
    window.MotionIsMounted = true;
    visualElement.updateFeatures();
    microtask.render(visualElement.render);
    if (wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
  });
  (0, import_react163.useEffect)(() => {
    if (!visualElement)
      return;
    if (!wantsHandoff.current && visualElement.animationState) {
      visualElement.animationState.animateChanges();
    }
    if (wantsHandoff.current) {
      queueMicrotask(() => {
        var _a2;
        (_a2 = window.MotionHandoffMarkAsComplete) == null ? void 0 : _a2.call(window, optimisedAppearId);
      });
      wantsHandoff.current = false;
    }
  });
  return visualElement;
}
function createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {
  const { layoutId, layout: layout2, drag: drag2, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade } = props;
  visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props["data-framer-portal-id"] ? void 0 : getClosestProjectingNode(visualElement.parent));
  visualElement.projection.setOptions({
    layoutId,
    layout: layout2,
    alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
    visualElement,
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout2 === "string" ? layout2 : "both",
    initialPromotionConfig,
    crossfade: layoutCrossfade,
    layoutScroll,
    layoutRoot
  });
}
function getClosestProjectingNode(visualElement) {
  if (!visualElement)
    return void 0;
  return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode(visualElement.parent);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs
function createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState: useVisualState2, Component: Component3 }) {
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    let MeasureLayout2;
    const configAndProps = {
      ...(0, import_react164.useContext)(MotionConfigContext),
      ...props,
      layoutId: useLayoutId(props)
    };
    const { isStatic } = configAndProps;
    const context = useCreateMotionContext(props);
    const visualState = useVisualState2(props, isStatic);
    if (!isStatic && isBrowser) {
      useStrictMode(configAndProps, preloadedFeatures);
      const layoutProjection = getProjectionFunctionality(configAndProps);
      MeasureLayout2 = layoutProjection.MeasureLayout;
      context.visualElement = useVisualElement(Component3, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);
    }
    return (0, import_jsx_runtime40.jsxs)(MotionContext.Provider, { value: context, children: [MeasureLayout2 && context.visualElement ? (0, import_jsx_runtime40.jsx)(MeasureLayout2, { visualElement: context.visualElement, ...configAndProps }) : null, useRender(Component3, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] });
  }
  MotionComponent.displayName = `motion.${typeof Component3 === "string" ? Component3 : `create(${Component3.displayName ?? Component3.name ?? ""})`}`;
  const ForwardRefMotionComponent = (0, import_react164.forwardRef)(MotionComponent);
  ForwardRefMotionComponent[motionComponentSymbol] = Component3;
  return ForwardRefMotionComponent;
}
function useLayoutId({ layoutId }) {
  const layoutGroupId = (0, import_react164.useContext)(LayoutGroupContext).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}
function useStrictMode(configAndProps, preloadedFeatures) {
  const isStrict = (0, import_react164.useContext)(LazyContext).strict;
  if (preloadedFeatures && isStrict) {
    const strictMessage = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);
  }
}
function getProjectionFunctionality(props) {
  const { drag: drag2, layout: layout2 } = featureDefinitions;
  if (!drag2 && !layout2)
    return {};
  const combined = { ...drag2, ...layout2 };
  return {
    MeasureLayout: (drag2 == null ? void 0 : drag2.isEnabled(props)) || (layout2 == null ? void 0 : layout2.isEnabled(props)) ? combined.MeasureLayout : void 0,
    ProjectionNode: combined.ProjectionNode
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react167 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react165 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  for (const key in correctors) {
    scaleCorrectors[key] = correctors[key];
    if (isCSSVariableName(key)) {
      scaleCorrectors[key].isCSSVariable = true;
    }
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, { layout: layout2, layoutId }) {
  return transformProps.has(key) || key.startsWith("origin") || (layout2 || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = (value) => Boolean(value && value.getVelocity);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
var numTransforms = transformPropOrder.length;
function buildTransform(latestValues, transform2, transformTemplate) {
  let transformString = "";
  let transformIsDefault = true;
  for (let i19 = 0; i19 < numTransforms; i19++) {
    const key = transformPropOrder[i19];
    const value = latestValues[key];
    if (value === void 0)
      continue;
    let valueIsDefault = true;
    if (typeof value === "number") {
      valueIsDefault = value === (key.startsWith("scale") ? 1 : 0);
    } else {
      valueIsDefault = parseFloat(value) === 0;
    }
    if (!valueIsDefault || transformTemplate) {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (!valueIsDefault) {
        transformIsDefault = false;
        const transformName = translateAlias[key] || key;
        transformString += `${transformName}(${valueAsType}) `;
      }
      if (transformTemplate) {
        transform2[key] = valueAsType;
      }
    }
  }
  transformString = transformString.trim();
  if (transformTemplate) {
    transformString = transformTemplate(transform2, transformIsDefault ? "" : transformString);
  } else if (transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, transformTemplate) {
  const { style, vars, transformOrigin } = state;
  let hasTransform2 = false;
  let hasTransformOrigin = false;
  for (const key in latestValues) {
    const value = latestValues[key];
    if (transformProps.has(key)) {
      hasTransform2 = true;
      continue;
    } else if (isCSSVariableName(key)) {
      vars[key] = value;
      continue;
    } else {
      const valueAsType = getValueAsType(value, numberValueTypes[key]);
      if (key.startsWith("origin")) {
        hasTransformOrigin = true;
        transformOrigin[key] = valueAsType;
      } else {
        style[key] = valueAsType;
      }
    }
  }
  if (!latestValues.transform) {
    if (hasTransform2 || transformTemplate) {
      style.transform = buildTransform(latestValues, state.transform, transformTemplate);
    } else if (style.transform) {
      style.transform = "none";
    }
  }
  if (hasTransformOrigin) {
    const { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (const key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues({ transformTemplate }, visualState) {
  return (0, import_react165.useMemo)(() => {
    const state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, transformTemplate);
    return Object.assign({}, state.vars, state.style);
  }, [visualState]);
}
function useStyle(props, visualState) {
  const styleProp = props.style || {};
  const style = {};
  copyRawValuesOnly(style, styleProp, props);
  Object.assign(style, useInitialMotionValues(props, visualState));
  return style;
}
function useHTMLProps(props, visualState) {
  const htmlProps = {};
  const style = useStyle(props, visualState);
  if (props.drag && props.dragListener !== false) {
    htmlProps.draggable = false;
    style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
    style.touchAction = props.drag === true ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`;
  }
  if (props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap)) {
    htmlProps.tabIndex = 0;
  }
  htmlProps.style = style;
  return htmlProps;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component3) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component3 !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component3.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component3) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/u.test(Component3)
  ) {
    return true;
  }
  return false;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react166 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length, spacing = 1, offset2 = 0, useDashCase = true) {
  attrs.pathLength = 1;
  const keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset2);
  const pathLength = px.transform(length);
  const pathSpacing = px.transform(spacing);
  attrs[keys.array] = `${pathLength} ${pathSpacing}`;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, {
  attrX,
  attrY,
  attrScale,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, isSVGTag2, transformTemplate) {
  buildHTMLStyles(state, latest, transformTemplate);
  if (isSVGTag2) {
    if (state.style.viewBox) {
      state.attrs.viewBox = state.style.viewBox;
    }
    return;
  }
  state.attrs = state.style;
  state.style = {};
  const { attrs, style } = state;
  if (attrs.transform) {
    style.transform = attrs.transform;
    delete attrs.transform;
  }
  if (style.transform || attrs.transformOrigin) {
    style.transformOrigin = attrs.transformOrigin ?? "50% 50%";
    delete attrs.transformOrigin;
  }
  if (style.transform) {
    style.transformBox = "fill-box";
    delete attrs.transformBox;
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (attrScale !== void 0)
    attrs.scale = attrScale;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = () => ({
  ...createHtmlRenderState(),
  attrs: {}
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs
var isSVGTag = (tag) => typeof tag === "string" && tag.toLowerCase() === "svg";

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState, _isStatic, Component3) {
  const visualProps = (0, import_react166.useMemo)(() => {
    const state = createSvgRenderState();
    buildSVGAttrs(state, visualState, isSVGTag(Component3), props.transformTemplate);
    return {
      ...state.attrs,
      style: { ...state.style }
    };
  }, [visualState]);
  if (props.style) {
    const rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps = false) {
  const useRender = (Component3, props, ref, { latestValues }, isStatic) => {
    const useVisualProps = isSVGComponent(Component3) ? useSVGProps : useHTMLProps;
    const visualProps = useVisualProps(props, latestValues, isStatic, Component3);
    const filteredProps = filterProps(props, typeof Component3 === "string", forwardMotionProps);
    const elementProps = Component3 !== import_react167.Fragment ? { ...filteredProps, ...visualProps, ref } : {};
    const { children } = props;
    const renderedChildren = (0, import_react167.useMemo)(() => isMotionValue(children) ? children.get() : children, [children]);
    return (0, import_react167.createElement)(Component3, {
      ...elementProps,
      children: renderedChildren
    });
  };
  return useRender;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react168 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs
function getValueState(visualElement) {
  const state = [{}, {}];
  visualElement == null ? void 0 : visualElement.values.forEach((value, key) => {
    state[0][key] = value.get();
    state[1][key] = value.getVelocity();
  });
  return state;
}
function resolveVariantFromProps(props, definition, custom, visualElement) {
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom !== void 0 ? custom : props.custom, current, velocity);
  }
  if (typeof definition === "string") {
    definition = props.variants && props.variants[definition];
  }
  if (typeof definition === "function") {
    const [current, velocity] = getValueState(visualElement);
    definition = definition(custom !== void 0 ? custom : props.custom, current, velocity);
  }
  return definition;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  return isMotionValue(value) ? value.get() : value;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState({ scrapeMotionValuesFromProps: scrapeMotionValuesFromProps3, createRenderState }, props, context, presenceContext) {
  const state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  return state;
}
var makeUseVisualState = (config) => (props, isStatic) => {
  const context = (0, import_react168.useContext)(MotionContext);
  const presenceContext = (0, import_react168.useContext)(PresenceContext);
  const make = () => makeState(config, props, context, presenceContext);
  return isStatic ? make() : useConstant(make);
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  const values = {};
  const motionValues = scrapeMotionValues(props, {});
  for (const key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  let { initial, animate: animate2 } = props;
  const isControllingVariants$1 = isControllingVariants(props);
  const isVariantNode$1 = isVariantNode(props);
  if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {
    if (initial === void 0)
      initial = context.initial;
    if (animate2 === void 0)
      animate2 = context.animate;
  }
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;
  const variantToSet = isInitialAnimationBlocked ? animate2 : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    for (let i19 = 0; i19 < list.length; i19++) {
      const resolved = resolveVariantFromProps(props, list[i19]);
      if (resolved) {
        const { transitionEnd, transition, ...target } = resolved;
        for (const key in target) {
          let valueTarget = target[key];
          if (Array.isArray(valueTarget)) {
            const index2 = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
            valueTarget = valueTarget[index2];
          }
          if (valueTarget !== null) {
            values[key] = valueTarget;
          }
        }
        for (const key in transitionEnd) {
          values[key] = transitionEnd[key];
        }
      }
    }
  }
  return values;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props, prevProps, visualElement) {
  var _a;
  const { style } = props;
  const newValues = {};
  for (const key in style) {
    if (isMotionValue(style[key]) || prevProps.style && isMotionValue(prevProps.style[key]) || isForcedMotionValue(key, props) || ((_a = visualElement == null ? void 0 : visualElement.getValue(key)) == null ? void 0 : _a.liveStyle) !== void 0) {
      newValues[key] = style[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props, prevProps, visualElement) {
  const newValues = scrapeMotionValuesFromProps(props, prevProps, visualElement);
  for (const key in props) {
    if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {
      const targetKey = transformPropOrder.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState
  })
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/create-factory.mjs
function createMotionComponentFactory(preloadedFeatures, createVisualElement) {
  return function createMotionComponent2(Component3, { forwardMotionProps } = { forwardMotionProps: false }) {
    const baseConfig = isSVGComponent(Component3) ? svgMotionConfig : htmlMotionConfig;
    const config = {
      ...baseConfig,
      preloadedFeatures,
      useRender: createUseRender(forwardMotionProps),
      createVisualElement,
      Component: Component3
    };
    return createRendererMotionComponent(config);
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/m/create.mjs
var createMinimalMotionComponent = createMotionComponentFactory();

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/m/proxy.mjs
var m11 = createDOMMotionComponentProxy(createMinimalMotionComponent);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs
function resolveVariant(visualElement, definition, custom) {
  const props = visualElement.getProps();
  return resolveVariantFromProps(props, definition, custom !== void 0 ? custom : props.custom, visualElement);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = (v5) => {
  return Array.isArray(v5);
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement, key, value) {
  if (visualElement.hasValue(key)) {
    visualElement.getValue(key).set(value);
  } else {
    visualElement.addValue(key, motionValue(value));
  }
}
function resolveFinalValueInKeyframes(v5) {
  return isKeyframesTarget(v5) ? v5[v5.length - 1] || 0 : v5;
}
function setTarget(visualElement, definition) {
  const resolved = resolveVariant(visualElement, definition);
  let { transitionEnd = {}, transition = {}, ...target } = resolved || {};
  target = { ...target, ...transitionEnd };
  for (const key in target) {
    const value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement, key, value);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs
function isWillChangeMotionValue(value) {
  return Boolean(isMotionValue(value) && value.add);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs
function addValueToWillChange(visualElement, key) {
  const willChange = visualElement.getValue("willChange");
  if (isWillChangeMotionValue(willChange)) {
    return willChange.add(key);
  } else if (!willChange && MotionGlobalConfig.WillChange) {
    const newWillChange = new MotionGlobalConfig.WillChange("auto");
    visualElement.addValue("willChange", newWillChange);
    newWillChange.add(key);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs
function getOptimisedAppearId(visualElement) {
  return visualElement.props[optimizedAppearDataAttribute];
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs
var isNotNull2 = (value) => value !== null;
function getFinalKeyframe2(keyframes2, { repeat, repeatType = "loop" }, finalKeyframe) {
  const resolvedKeyframes = keyframes2.filter(isNotNull2);
  const index2 = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;
  return !index2 || finalKeyframe === void 0 ? resolvedKeyframes[index2] : finalKeyframe;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
};
var criticallyDampedSpring = (target) => ({
  type: "spring",
  stiffness: 550,
  damping: target === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
});
var keyframesTransition = {
  type: "keyframes",
  duration: 0.8
};
var ease = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
};
var getDefaultTransition = (valueKey, { keyframes: keyframes2 }) => {
  if (keyframes2.length > 2) {
    return keyframesTransition;
  } else if (transformProps.has(valueKey)) {
    return valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes2[1]) : underDampedSpring;
  }
  return ease;
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs
var animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {
  const valueTransition = getValueTransition(transition, name) || {};
  const delay2 = valueTransition.delay || transition.delay || 0;
  let { elapsed = 0 } = transition;
  elapsed = elapsed - secondsToMilliseconds(delay2);
  const options = {
    keyframes: Array.isArray(target) ? target : [null, target],
    ease: "easeOut",
    velocity: value.getVelocity(),
    ...valueTransition,
    delay: -elapsed,
    onUpdate: (v5) => {
      value.set(v5);
      valueTransition.onUpdate && valueTransition.onUpdate(v5);
    },
    onComplete: () => {
      onComplete();
      valueTransition.onComplete && valueTransition.onComplete();
    },
    name,
    motionValue: value,
    element: isHandoff ? void 0 : element
  };
  if (!isTransitionDefined(valueTransition)) {
    Object.assign(options, getDefaultTransition(name, options));
  }
  options.duration && (options.duration = secondsToMilliseconds(options.duration));
  options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));
  if (options.from !== void 0) {
    options.keyframes[0] = options.from;
  }
  let shouldSkip = false;
  if (options.type === false || options.duration === 0 && !options.repeatDelay) {
    options.duration = 0;
    if (options.delay === 0) {
      shouldSkip = true;
    }
  }
  if (MotionGlobalConfig.instantAnimations || MotionGlobalConfig.skipAnimations) {
    shouldSkip = true;
    options.duration = 0;
    options.delay = 0;
  }
  options.allowFlatten = !valueTransition.type && !valueTransition.ease;
  if (shouldSkip && !isHandoff && value.get() !== void 0) {
    const finalKeyframe = getFinalKeyframe2(options.keyframes, valueTransition);
    if (finalKeyframe !== void 0) {
      frame.update(() => {
        options.onUpdate(finalKeyframe);
        options.onComplete();
      });
      return;
    }
  }
  return new AsyncMotionValueAnimation(options);
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs
function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
  const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}
function animateTarget(visualElement, targetAndTransition, { delay: delay2 = 0, transitionOverride, type } = {}) {
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;
  if (transitionOverride)
    transition = transitionOverride;
  const animations2 = [];
  const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];
  for (const key in target) {
    const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);
    const valueTarget = target[key];
    if (valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    const valueTransition = {
      delay: delay2,
      ...getValueTransition(transition || {}, key)
    };
    const currentValue = value.get();
    if (currentValue !== void 0 && !value.isAnimating && !Array.isArray(valueTarget) && valueTarget === currentValue && !valueTransition.velocity) {
      continue;
    }
    let isHandoff = false;
    if (window.MotionHandoffAnimation) {
      const appearId = getOptimisedAppearId(visualElement);
      if (appearId) {
        const startTime = window.MotionHandoffAnimation(appearId, key, frame);
        if (startTime !== null) {
          valueTransition.startTime = startTime;
          isHandoff = true;
        }
      }
    }
    addValueToWillChange(visualElement, key);
    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key) ? { type: false } : valueTransition, visualElement, isHandoff));
    const animation = value.animation;
    if (animation) {
      animations2.push(animation);
    }
  }
  if (transitionEnd) {
    Promise.all(animations2).then(() => {
      frame.update(() => {
        transitionEnd && setTarget(visualElement, transitionEnd);
      });
    });
  }
  return animations2;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs
function animateVariant(visualElement, variant, options = {}) {
  var _a;
  const resolved = resolveVariant(visualElement, variant, options.type === "exit" ? (_a = visualElement.presenceContext) == null ? void 0 : _a.custom : void 0);
  let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  const getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve();
  const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    const { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve();
  const { when } = transition;
  if (when) {
    const [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else {
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
  }
}
function animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  const animations2 = [];
  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
  const generateStaggerDuration = staggerDirection === 1 ? (i19 = 0) => i19 * staggerChildren : (i19 = 0) => maxStaggerDuration - i19 * staggerChildren;
  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i19) => {
    child.notify("AnimationStart", variant);
    animations2.push(animateVariant(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i19)
    }).then(() => child.notify("AnimationComplete", variant)));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a25, b11) {
  return a25.sortNodePosition(b11);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs
function animateVisualElement(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    const animations2 = definition.map((variant) => animateVariant(visualElement, variant, options));
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement, definition, options);
  } else {
    const resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => {
    visualElement.notify("AnimationComplete", definition);
  });
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  const prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (let i19 = 0; i19 < prevLength; i19++) {
    if (prev[i19] !== next[i19])
      return false;
  }
  return true;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs
var numVariantProps = variantProps.length;
function getVariantContext(visualElement) {
  if (!visualElement)
    return void 0;
  if (!visualElement.isControllingVariants) {
    const context2 = visualElement.parent ? getVariantContext(visualElement.parent) || {} : {};
    if (visualElement.props.initial !== void 0) {
      context2.initial = visualElement.props.initial;
    }
    return context2;
  }
  const context = {};
  for (let i19 = 0; i19 < numVariantProps; i19++) {
    const name = variantProps[i19];
    const prop = visualElement.props[name];
    if (isVariantLabel(prop) || prop === false) {
      context[name] = prop;
    }
  }
  return context;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var reversePriorityOrder = [...variantPriorityOrder].reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
  return (animations2) => Promise.all(animations2.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
  let animate2 = animateList(visualElement);
  let state = createState();
  let isInitialRender = true;
  const buildResolvedTypeValues = (type) => (acc, definition) => {
    var _a;
    const resolved = resolveVariant(visualElement, definition, type === "exit" ? (_a = visualElement.presenceContext) == null ? void 0 : _a.custom : void 0);
    if (resolved) {
      const { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate2 = makeAnimator(visualElement);
  }
  function animateChanges(changedActiveType) {
    const { props } = visualElement;
    const context = getVariantContext(visualElement.parent) || {};
    const animations2 = [];
    const removedKeys = /* @__PURE__ */ new Set();
    let encounteredKeys = {};
    let removedVariantIndex = Infinity;
    for (let i19 = 0; i19 < numAnimationTypes; i19++) {
      const type = reversePriorityOrder[i19];
      const typeState = state[type];
      const prop = props[type] !== void 0 ? props[type] : context[type];
      const propIsVariant = isVariantLabel(prop);
      const activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i19;
      let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = { ...encounteredKeys };
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        continue;
      }
      const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i19 > removedVariantIndex && propIsVariant;
      let handledRemovedValues = false;
      const definitionList = Array.isArray(prop) ? prop : [prop];
      let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});
      if (activeDelta === false)
        resolvedValues = {};
      const { prevResolvedValues = {} } = typeState;
      const allKeys2 = {
        ...prevResolvedValues,
        ...resolvedValues
      };
      const markToAnimate = (key) => {
        shouldAnimateType = true;
        if (removedKeys.has(key)) {
          handledRemovedValues = true;
          removedKeys.delete(key);
        }
        typeState.needsAnimating[key] = true;
        const motionValue2 = visualElement.getValue(key);
        if (motionValue2)
          motionValue2.liveStyle = false;
      };
      for (const key in allKeys2) {
        const next = resolvedValues[key];
        const prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        let valueHasChanged = false;
        if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
          valueHasChanged = !shallowCompare(next, prev);
        } else {
          valueHasChanged = next !== prev;
        }
        if (valueHasChanged) {
          if (next !== void 0 && next !== null) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = { ...encounteredKeys, ...resolvedValues };
      }
      if (isInitialRender && visualElement.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      const willAnimateViaParent = isInherited && variantDidChange;
      const needsAnimating = !willAnimateViaParent || handledRemovedValues;
      if (shouldAnimateType && needsAnimating) {
        animations2.push(...definitionList.map((animation) => ({
          animation,
          options: { type }
        })));
      }
    }
    if (removedKeys.size) {
      const fallbackAnimation = {};
      if (typeof props.initial !== "boolean") {
        const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial) ? props.initial[0] : props.initial);
        if (initialTransition && initialTransition.transition) {
          fallbackAnimation.transition = initialTransition.transition;
        }
      }
      removedKeys.forEach((key) => {
        const fallbackTarget = visualElement.getBaseTarget(key);
        const motionValue2 = visualElement.getValue(key);
        if (motionValue2)
          motionValue2.liveStyle = true;
        fallbackAnimation[key] = fallbackTarget ?? null;
      });
      animations2.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && (props.initial === false || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate2(animations2) : Promise.resolve();
  }
  function setActive(type, isActive) {
    var _a;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement.variantChildren) == null ? void 0 : _a.forEach((child) => {
      var _a2;
      return (_a2 = child.animationState) == null ? void 0 : _a2.setActive(type, isActive);
    });
    state[type].isActive = isActive;
    const animations2 = animateChanges(type);
    for (const key in state) {
      state[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state,
    reset: () => {
      state = createState();
      isInitialRender = true;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (Array.isArray(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive = false) {
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  return {
    animate: createTypeState(true),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState()
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/Feature.mjs
var Feature = class {
  constructor(node) {
    this.isMounted = false;
    this.node = node;
  }
  update() {
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs
var AnimationFeature = class extends Feature {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(node) {
    super(node);
    node.animationState || (node.animationState = createAnimationState(node));
  }
  updateAnimationControlsSubscription() {
    const { animate: animate2 } = this.node.getProps();
    if (isAnimationControls(animate2)) {
      this.unmountControls = animate2.subscribe(this.node);
    }
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    const { animate: animate2 } = this.node.getProps();
    const { animate: prevAnimate } = this.node.prevProps || {};
    if (animate2 !== prevAnimate) {
      this.updateAnimationControlsSubscription();
    }
  }
  unmount() {
    var _a;
    this.node.animationState.reset();
    (_a = this.unmountControls) == null ? void 0 : _a.call(this);
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs
var id = 0;
var ExitAnimationFeature = class extends Feature {
  constructor() {
    super(...arguments);
    this.id = id++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    const { isPresent, onExitComplete } = this.node.presenceContext;
    const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || isPresent === prevIsPresent) {
      return;
    }
    const exitAnimation = this.node.animationState.setActive("exit", !isPresent);
    if (onExitComplete && !isPresent) {
      exitAnimation.then(() => {
        onExitComplete(this.id);
      });
    }
  }
  mount() {
    const { register, onExitComplete } = this.node.presenceContext || {};
    if (onExitComplete) {
      onExitComplete(this.id);
    }
    if (register) {
      this.unmount = register(this.id);
    }
  }
  unmount() {
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: {
    Feature: AnimationFeature
  },
  exit: {
    Feature: ExitAnimationFeature
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/add-dom-event.mjs
function addDomEvent(target, eventName, handler, options = { passive: true }) {
  target.addEventListener(eventName, handler, options);
  return () => target.removeEventListener(eventName, handler);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/event-info.mjs
function extractEventInfo(event) {
  return {
    point: {
      x: event.pageX,
      y: event.pageY
    }
  };
}
var addPointerInfo = (handler) => {
  return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, eventName, addPointerInfo(handler), options);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox({ top, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox({ x: x11, y: y8 }) {
  return { top: y8.min, right: x11.max, bottom: y8.max, left: x11.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  const topLeft = transformPoint2({ x: point.left, y: point.top });
  const bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
var SCALE_PRECISION = 1e-4;
var SCALE_MIN = 1 - SCALE_PRECISION;
var SCALE_MAX = 1 + SCALE_PRECISION;
var TRANSLATE_PRECISION = 0.01;
var TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;
var TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta(delta, source, target, origin = 0.5) {
  delta.origin = origin;
  delta.originPoint = mixNumber(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  delta.translate = mixNumber(target.min, target.max, delta.origin) - delta.originPoint;
  if (delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX || isNaN(delta.scale)) {
    delta.scale = 1;
  }
  if (delta.translate >= TRANSLATE_MIN && delta.translate <= TRANSLATE_MAX || isNaN(delta.translate)) {
    delta.translate = 0;
  }
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : void 0);
  calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : void 0);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min;
  target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x);
  calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout2, parent) {
  target.min = layout2.min - parent.min;
  target.max = target.min + calcLength(layout2);
}
function calcRelativePosition(target, layout2, parent) {
  calcRelativeAxisPosition(target.x, layout2.x, parent.x);
  calcRelativeAxisPosition(target.y, layout2.y, parent.y);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
});
var createDelta = () => ({
  x: createAxisDelta(),
  y: createAxisDelta()
});
var createAxis = () => ({ min: 0, max: 0 });
var createBox = () => ({
  x: createAxis(),
  y: createAxis()
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale({ scale: scale2, scaleX: scaleX2, scaleY: scaleY2 }) {
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX2) || !isIdentityScale(scaleY2);
}
function hasTransform(values) {
  return hasScale(values) || has2DTranslate(values) || values.z || values.rotate || values.rotateX || values.rotateY || values.skewX || values.skewY;
}
function has2DTranslate(values) {
  return is2DTranslate(values.x) || is2DTranslate(values.y);
}
function is2DTranslate(value) {
  return value && value !== "0%";
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  const distanceFromOrigin = point - originPoint;
  const scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate = 0, scale2 = 1, originPoint, boxScale) {
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, { x: x11, y: y8 }) {
  applyAxisDelta(box.x, x11.translate, x11.scale, x11.originPoint);
  applyAxisDelta(box.y, y8.translate, y8.scale, y8.originPoint);
}
var TREE_SCALE_SNAP_MIN = 0.999999999999;
var TREE_SCALE_SNAP_MAX = 1.0000000000001;
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {
  const treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  let node;
  let delta;
  for (let i19 = 0; i19 < treeLength; i19++) {
    node = treePath[i19];
    delta = node.projectionDelta;
    const { visualElement } = node.options;
    if (visualElement && visualElement.props.style && visualElement.props.style.display === "contents") {
      continue;
    }
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox(box, {
        x: -node.scroll.offset.x,
        y: -node.scroll.offset.y
      });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box, delta);
    }
    if (isSharedTransition && hasTransform(node.latestValues)) {
      transformBox(box, node.latestValues);
    }
  }
  if (treeScale.x < TREE_SCALE_SNAP_MAX && treeScale.x > TREE_SCALE_SNAP_MIN) {
    treeScale.x = 1;
  }
  if (treeScale.y < TREE_SCALE_SNAP_MAX && treeScale.y > TREE_SCALE_SNAP_MIN) {
    treeScale.y = 1;
  }
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2;
  axis.max = axis.max + distance2;
}
function transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {
  const originPoint = mixNumber(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);
}
function transformBox(box, transform2) {
  transformAxis(box.x, transform2.x, transform2.scaleX, transform2.scale, transform2.originX);
  transformAxis(box.y, transform2.y, transform2.scaleY, transform2.scale, transform2.originY);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  const viewportBox = measureViewportBox(element, transformPagePoint);
  const { scroll: scroll2 } = rootProjectionNode2;
  if (scroll2) {
    translateAxis(viewportBox.x, scroll2.offset.x);
    translateAxis(viewportBox.y, scroll2.offset.y);
  }
  return viewportBox;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/get-context-window.mjs
var getContextWindow = ({ current }) => {
  return current ? current.ownerDocument.defaultView : null;
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/distance.mjs
var distance = (a25, b11) => Math.abs(a25 - b11);
function distance2D(a25, b11) {
  const xDelta = distance(a25.x, b11.x);
  const yDelta = distance(a25.y, b11.y);
  return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs
var PanSession = class {
  constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {
    this.startEvent = null;
    this.lastMoveEvent = null;
    this.lastMoveEventInfo = null;
    this.handlers = {};
    this.contextWindow = window;
    this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const info2 = getPanInfo(this.lastMoveEventInfo, this.history);
      const isPanStarted = this.startEvent !== null;
      const isDistancePastThreshold = distance2D(info2.offset, { x: 0, y: 0 }) >= 3;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      const { point: point2 } = info2;
      const { timestamp: timestamp2 } = frameData;
      this.history.push({ ...point2, timestamp: timestamp2 });
      const { onStart, onMove } = this.handlers;
      if (!isPanStarted) {
        onStart && onStart(this.lastMoveEvent, info2);
        this.startEvent = this.lastMoveEvent;
      }
      onMove && onMove(this.lastMoveEvent, info2);
    };
    this.handlePointerMove = (event2, info2) => {
      this.lastMoveEvent = event2;
      this.lastMoveEventInfo = transformPoint(info2, this.transformPagePoint);
      frame.update(this.updatePoint, true);
    };
    this.handlePointerUp = (event2, info2) => {
      this.end();
      const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;
      if (this.dragSnapToOrigin)
        resumeAnimation && resumeAnimation();
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      const panInfo = getPanInfo(event2.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint(info2, this.transformPagePoint), this.history);
      if (this.startEvent && onEnd) {
        onEnd(event2, panInfo);
      }
      onSessionEnd && onSessionEnd(event2, panInfo);
    };
    if (!isPrimaryPointer(event))
      return;
    this.dragSnapToOrigin = dragSnapToOrigin;
    this.handlers = handlers;
    this.transformPagePoint = transformPagePoint;
    this.contextWindow = contextWindow || window;
    const info = extractEventInfo(event);
    const initialInfo = transformPoint(info, this.transformPagePoint);
    const { point } = initialInfo;
    const { timestamp } = frameData;
    this.history = [{ ...point, timestamp }];
    const { onSessionStart } = handlers;
    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
    this.removeListeners = pipe(addPointerEvent(this.contextWindow, "pointermove", this.handlePointerMove), addPointerEvent(this.contextWindow, "pointerup", this.handlePointerUp), addPointerEvent(this.contextWindow, "pointercancel", this.handlePointerUp));
  }
  updateHandlers(handlers) {
    this.handlers = handlers;
  }
  end() {
    this.removeListeners && this.removeListeners();
    cancelFrame(this.updatePoint);
  }
};
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a25, b11) {
  return { x: a25.x - b11.x, y: a25.y - b11.y };
}
function getPanInfo({ point }, history) {
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  let i19 = history.length - 1;
  let timestampedPoint = null;
  const lastPoint = lastDevicePoint(history);
  while (i19 >= 0) {
    timestampedPoint = history[i19];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i19--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  const time2 = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);
  if (time2 === 0) {
    return { x: 0, y: 0 };
  }
  const currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time2,
    y: (lastPoint.y - timestampedPoint.y) / time2
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, { min: min2, max: max2 }, elastic) {
  if (min2 !== void 0 && point < min2) {
    point = elastic ? mixNumber(min2, point, elastic.min) : Math.max(point, min2);
  } else if (max2 !== void 0 && point > max2) {
    point = elastic ? mixNumber(max2, point, elastic.max) : Math.min(point, max2);
  }
  return point;
}
function calcRelativeAxisConstraints(axis, min2, max2) {
  return {
    min: min2 !== void 0 ? axis.min + min2 : void 0,
    max: max2 !== void 0 ? axis.max + max2 - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  let min2 = constraintsAxis.min - layoutAxis.min;
  let max2 = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    [min2, max2] = [max2, min2];
  }
  return { min: min2, max: max2 };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin(source, target) {
  let origin = 0.5;
  const sourceLength = calcLength(source);
  const targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp(0, 1, origin);
}
function rebaseAxisConstraints(layout2, constraints) {
  const relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout2.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout2.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic = defaultElastic) {
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  return typeof dragElastic === "number" ? dragElastic : dragElastic[label] || 0;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap();
var VisualElementDragControls = class {
  constructor(visualElement) {
    this.openDragLock = null;
    this.isDragging = false;
    this.currentDirection = null;
    this.originPoint = { x: 0, y: 0 };
    this.constraints = false;
    this.hasMutatedConstraints = false;
    this.elastic = createBox();
    this.visualElement = visualElement;
  }
  start(originEvent, { snapToCursor = false } = {}) {
    const { presenceContext } = this.visualElement;
    if (presenceContext && presenceContext.isPresent === false)
      return;
    const onSessionStart = (event) => {
      const { dragSnapToOrigin: dragSnapToOrigin2 } = this.getProps();
      dragSnapToOrigin2 ? this.pauseAnimation() : this.stopAnimation();
      if (snapToCursor) {
        this.snapToCursor(extractEventInfo(event).point);
      }
    };
    const onStart = (event, info) => {
      const { drag: drag2, dragPropagation, onDragStart } = this.getProps();
      if (drag2 && !dragPropagation) {
        if (this.openDragLock)
          this.openDragLock();
        this.openDragLock = setDragLock(drag2);
        if (!this.openDragLock)
          return;
      }
      this.isDragging = true;
      this.currentDirection = null;
      this.resolveConstraints();
      if (this.visualElement.projection) {
        this.visualElement.projection.isAnimationBlocked = true;
        this.visualElement.projection.target = void 0;
      }
      eachAxis((axis) => {
        let current = this.getAxisMotionValue(axis).get() || 0;
        if (percent.test(current)) {
          const { projection } = this.visualElement;
          if (projection && projection.layout) {
            const measuredAxis = projection.layout.layoutBox[axis];
            if (measuredAxis) {
              const length = calcLength(measuredAxis);
              current = length * (parseFloat(current) / 100);
            }
          }
        }
        this.originPoint[axis] = current;
      });
      if (onDragStart) {
        frame.postRender(() => onDragStart(event, info));
      }
      addValueToWillChange(this.visualElement, "transform");
      const { animationState } = this.visualElement;
      animationState && animationState.setActive("whileDrag", true);
    };
    const onMove = (event, info) => {
      const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
      if (!dragPropagation && !this.openDragLock)
        return;
      const { offset: offset2 } = info;
      if (dragDirectionLock && this.currentDirection === null) {
        this.currentDirection = getCurrentDirection(offset2);
        if (this.currentDirection !== null) {
          onDirectionLock && onDirectionLock(this.currentDirection);
        }
        return;
      }
      this.updateAxis("x", info.point, offset2);
      this.updateAxis("y", info.point, offset2);
      this.visualElement.render();
      onDrag && onDrag(event, info);
    };
    const onSessionEnd = (event, info) => this.stop(event, info);
    const resumeAnimation = () => eachAxis((axis) => {
      var _a;
      return this.getAnimationState(axis) === "paused" && ((_a = this.getAxisMotionValue(axis).animation) == null ? void 0 : _a.play());
    });
    const { dragSnapToOrigin } = this.getProps();
    this.panSession = new PanSession(originEvent, {
      onSessionStart,
      onStart,
      onMove,
      onSessionEnd,
      resumeAnimation
    }, {
      transformPagePoint: this.visualElement.getTransformPagePoint(),
      dragSnapToOrigin,
      contextWindow: getContextWindow(this.visualElement)
    });
  }
  stop(event, info) {
    const isDragging2 = this.isDragging;
    this.cancel();
    if (!isDragging2)
      return;
    const { velocity } = info;
    this.startAnimation(velocity);
    const { onDragEnd } = this.getProps();
    if (onDragEnd) {
      frame.postRender(() => onDragEnd(event, info));
    }
  }
  cancel() {
    this.isDragging = false;
    const { projection, animationState } = this.visualElement;
    if (projection) {
      projection.isAnimationBlocked = false;
    }
    this.panSession && this.panSession.end();
    this.panSession = void 0;
    const { dragPropagation } = this.getProps();
    if (!dragPropagation && this.openDragLock) {
      this.openDragLock();
      this.openDragLock = null;
    }
    animationState && animationState.setActive("whileDrag", false);
  }
  updateAxis(axis, _point, offset2) {
    const { drag: drag2 } = this.getProps();
    if (!offset2 || !shouldDrag(axis, drag2, this.currentDirection))
      return;
    const axisValue = this.getAxisMotionValue(axis);
    let next = this.originPoint[axis] + offset2[axis];
    if (this.constraints && this.constraints[axis]) {
      next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
    }
    axisValue.set(next);
  }
  resolveConstraints() {
    var _a;
    const { dragConstraints, dragElastic } = this.getProps();
    const layout2 = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(false) : (_a = this.visualElement.projection) == null ? void 0 : _a.layout;
    const prevConstraints = this.constraints;
    if (dragConstraints && isRefObject(dragConstraints)) {
      if (!this.constraints) {
        this.constraints = this.resolveRefConstraints();
      }
    } else {
      if (dragConstraints && layout2) {
        this.constraints = calcRelativeConstraints(layout2.layoutBox, dragConstraints);
      } else {
        this.constraints = false;
      }
    }
    this.elastic = resolveDragElastic(dragElastic);
    if (prevConstraints !== this.constraints && layout2 && this.constraints && !this.hasMutatedConstraints) {
      eachAxis((axis) => {
        if (this.constraints !== false && this.getAxisMotionValue(axis)) {
          this.constraints[axis] = rebaseAxisConstraints(layout2.layoutBox[axis], this.constraints[axis]);
        }
      });
    }
  }
  resolveRefConstraints() {
    const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
    if (!constraints || !isRefObject(constraints))
      return false;
    const constraintsElement = constraints.current;
    invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    const { projection } = this.visualElement;
    if (!projection || !projection.layout)
      return false;
    const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
    let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);
    if (onMeasureDragConstraints) {
      const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
      this.hasMutatedConstraints = !!userConstraints;
      if (userConstraints) {
        measuredConstraints = convertBoundingBoxToBox(userConstraints);
      }
    }
    return measuredConstraints;
  }
  startAnimation(velocity) {
    const { drag: drag2, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps();
    const constraints = this.constraints || {};
    const momentumAnimations = eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, this.currentDirection)) {
        return;
      }
      let transition = constraints && constraints[axis] || {};
      if (dragSnapToOrigin)
        transition = { min: 0, max: 0 };
      const bounceStiffness = dragElastic ? 200 : 1e6;
      const bounceDamping = dragElastic ? 40 : 1e7;
      const inertia2 = {
        type: "inertia",
        velocity: dragMomentum ? velocity[axis] : 0,
        bounceStiffness,
        bounceDamping,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...dragTransition,
        ...transition
      };
      return this.startAxisValueAnimation(axis, inertia2);
    });
    return Promise.all(momentumAnimations).then(onDragTransitionEnd);
  }
  startAxisValueAnimation(axis, transition) {
    const axisValue = this.getAxisMotionValue(axis);
    addValueToWillChange(this.visualElement, axis);
    return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));
  }
  stopAnimation() {
    eachAxis((axis) => this.getAxisMotionValue(axis).stop());
  }
  pauseAnimation() {
    eachAxis((axis) => {
      var _a;
      return (_a = this.getAxisMotionValue(axis).animation) == null ? void 0 : _a.pause();
    });
  }
  getAnimationState(axis) {
    var _a;
    return (_a = this.getAxisMotionValue(axis).animation) == null ? void 0 : _a.state;
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(axis) {
    const dragKey = `_drag${axis.toUpperCase()}`;
    const props = this.visualElement.getProps();
    const externalMotionValue = props[dragKey];
    return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : void 0) || 0);
  }
  snapToCursor(point) {
    eachAxis((axis) => {
      const { drag: drag2 } = this.getProps();
      if (!shouldDrag(axis, drag2, this.currentDirection))
        return;
      const { projection } = this.visualElement;
      const axisValue = this.getAxisMotionValue(axis);
      if (projection && projection.layout) {
        const { min: min2, max: max2 } = projection.layout.layoutBox[axis];
        axisValue.set(point[axis] - mixNumber(min2, max2, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    const { drag: drag2, dragConstraints } = this.getProps();
    const { projection } = this.visualElement;
    if (!isRefObject(dragConstraints) || !projection || !this.constraints)
      return;
    this.stopAnimation();
    const boxProgress = { x: 0, y: 0 };
    eachAxis((axis) => {
      const axisValue = this.getAxisMotionValue(axis);
      if (axisValue && this.constraints !== false) {
        const latest = axisValue.get();
        boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);
      }
    });
    const { transformTemplate } = this.visualElement.getProps();
    this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
    projection.root && projection.root.updateScroll();
    projection.updateLayout();
    this.resolveConstraints();
    eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, null))
        return;
      const axisValue = this.getAxisMotionValue(axis);
      const { min: min2, max: max2 } = this.constraints[axis];
      axisValue.set(mixNumber(min2, max2, boxProgress[axis]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    elementDragControls.set(this.visualElement, this);
    const element = this.visualElement.current;
    const stopPointerListener = addPointerEvent(element, "pointerdown", (event) => {
      const { drag: drag2, dragListener = true } = this.getProps();
      drag2 && dragListener && this.start(event);
    });
    const measureDragConstraints = () => {
      const { dragConstraints } = this.getProps();
      if (isRefObject(dragConstraints) && dragConstraints.current) {
        this.constraints = this.resolveRefConstraints();
      }
    };
    const { projection } = this.visualElement;
    const stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
    if (projection && !projection.layout) {
      projection.root && projection.root.updateScroll();
      projection.updateLayout();
    }
    frame.read(measureDragConstraints);
    const stopResizeListener = addDomEvent(window, "resize", () => this.scalePositionWithinConstraints());
    const stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged }) => {
      if (this.isDragging && hasLayoutChanged) {
        eachAxis((axis) => {
          const motionValue2 = this.getAxisMotionValue(axis);
          if (!motionValue2)
            return;
          this.originPoint[axis] += delta[axis].translate;
          motionValue2.set(motionValue2.get() + delta[axis].translate);
        });
        this.visualElement.render();
      }
    });
    return () => {
      stopResizeListener();
      stopPointerListener();
      stopMeasureLayoutListener();
      stopLayoutUpdateListener && stopLayoutUpdateListener();
    };
  }
  getProps() {
    const props = this.visualElement.getProps();
    const { drag: drag2 = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true } = props;
    return {
      ...props,
      drag: drag2,
      dragDirectionLock,
      dragPropagation,
      dragConstraints,
      dragElastic,
      dragMomentum
    };
  }
};
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset2, lockThreshold = 10) {
  let direction = null;
  if (Math.abs(offset2.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset2.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/index.mjs
var DragGesture = class extends Feature {
  constructor(node) {
    super(node);
    this.removeGroupControls = noop;
    this.removeListeners = noop;
    this.controls = new VisualElementDragControls(node);
  }
  mount() {
    const { dragControls } = this.node.getProps();
    if (dragControls) {
      this.removeGroupControls = dragControls.subscribe(this.controls);
    }
    this.removeListeners = this.controls.addListeners() || noop;
  }
  unmount() {
    this.removeGroupControls();
    this.removeListeners();
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/index.mjs
var asyncHandler = (handler) => (event, info) => {
  if (handler) {
    frame.postRender(() => handler(event, info));
  }
};
var PanGesture = class extends Feature {
  constructor() {
    super(...arguments);
    this.removePointerDownListener = noop;
  }
  onPointerDown(pointerDownEvent) {
    this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: getContextWindow(this.node)
    });
  }
  createPanHandlers() {
    const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
    return {
      onSessionStart: asyncHandler(onPanSessionStart),
      onStart: asyncHandler(onPanStart),
      onMove: onPan,
      onEnd: (event, info) => {
        delete this.session;
        if (onPanEnd) {
          frame.postRender(() => onPanEnd(event, info));
        }
      }
    };
  }
  mount() {
    this.removePointerDownListener = addPointerEvent(this.node.current, "pointerdown", (event) => this.onPointerDown(event));
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener();
    this.session && this.session.end();
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_jsx_runtime41 = __toESM(require_jsx_runtime(), 1);
var import_react169 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: true,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: false
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: (latest, node) => {
    if (!node.target)
      return latest;
    if (typeof latest === "string") {
      if (px.test(latest)) {
        latest = parseFloat(latest);
      } else {
        return latest;
      }
    }
    const x11 = pixelsToPercent(latest, node.target.x);
    const y8 = pixelsToPercent(latest, node.target.y);
    return `${x11}% ${y8}%`;
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var correctBoxShadow = {
  correct: (latest, { treeScale, projectionDelta }) => {
    const original = latest;
    const shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    const template = complex.createTransformer(latest);
    const offset2 = typeof shadow[0] !== "number" ? 1 : 0;
    const xScale = projectionDelta.x.scale * treeScale.x;
    const yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset2] /= xScale;
    shadow[1 + offset2] /= yScale;
    const averageScale = mixNumber(xScale, yScale, 0.5);
    if (typeof shadow[2 + offset2] === "number")
      shadow[2 + offset2] /= averageScale;
    if (typeof shadow[3 + offset2] === "number")
      shadow[3 + offset2] /= averageScale;
    return template(shadow);
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = class extends import_react169.Component {
  /**
   * This only mounts projection nodes for components that
   * need measuring, we might want to do it for all components
   * in order to incorporate transforms
   */
  componentDidMount() {
    const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;
    const { projection } = visualElement;
    addScaleCorrector(defaultScaleCorrectors);
    if (projection) {
      if (layoutGroup.group)
        layoutGroup.group.add(projection);
      if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {
        switchLayoutGroup.register(projection);
      }
      projection.root.didUpdate();
      projection.addEventListener("animationComplete", () => {
        this.safeToRemove();
      });
      projection.setOptions({
        ...projection.options,
        onExitComplete: () => this.safeToRemove()
      });
    }
    globalProjectionState.hasEverUpdated = true;
  }
  getSnapshotBeforeUpdate(prevProps) {
    const { layoutDependency, visualElement, drag: drag2, isPresent } = this.props;
    const projection = visualElement.projection;
    if (!projection)
      return null;
    projection.isPresent = isPresent;
    if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 || prevProps.isPresent !== isPresent) {
      projection.willUpdate();
    } else {
      this.safeToRemove();
    }
    if (prevProps.isPresent !== isPresent) {
      if (isPresent) {
        projection.promote();
      } else if (!projection.relegate()) {
        frame.postRender(() => {
          const stack = projection.getStack();
          if (!stack || !stack.members.length) {
            this.safeToRemove();
          }
        });
      }
    }
    return null;
  }
  componentDidUpdate() {
    const { projection } = this.props.visualElement;
    if (projection) {
      projection.root.didUpdate();
      microtask.postRender(() => {
        if (!projection.currentAnimation && projection.isLead()) {
          this.safeToRemove();
        }
      });
    }
  }
  componentWillUnmount() {
    const { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props;
    const { projection } = visualElement;
    if (projection) {
      projection.scheduleCheckAfterUnmount();
      if (layoutGroup && layoutGroup.group)
        layoutGroup.group.remove(projection);
      if (promoteContext && promoteContext.deregister)
        promoteContext.deregister(projection);
    }
  }
  safeToRemove() {
    const { safeToRemove } = this.props;
    safeToRemove && safeToRemove();
  }
  render() {
    return null;
  }
};
function MeasureLayout(props) {
  const [isPresent, safeToRemove] = usePresence();
  const layoutGroup = (0, import_react169.useContext)(LayoutGroupContext);
  return (0, import_jsx_runtime41.jsx)(MeasureLayoutWithContext, { ...props, layoutGroup, switchLayoutGroup: (0, import_react169.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove });
}
var defaultScaleCorrectors = {
  borderRadius: {
    ...correctBorderRadius,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/single-value.mjs
function animateSingleValue(value, keyframes2, options) {
  const motionValue$1 = isMotionValue(value) ? value : motionValue(value);
  motionValue$1.start(animateMotionValue("", motionValue$1, keyframes2, options));
  return motionValue$1.animation;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs
function isSVGElement(element) {
  return element instanceof SVGElement && element.tagName !== "svg";
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = (a25, b11) => a25.depth - b11.depth;

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = class {
  constructor() {
    this.children = [];
    this.isDirty = false;
  }
  add(child) {
    addUniqueItem(this.children, child);
    this.isDirty = true;
  }
  remove(child) {
    removeItem(this.children, child);
    this.isDirty = true;
  }
  forEach(callback) {
    this.isDirty && this.children.sort(compareByDepth);
    this.isDirty = false;
    this.children.forEach(callback);
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/delay.mjs
function delay(callback, timeout) {
  const start = time.now();
  const checkElapsed = ({ timestamp }) => {
    const elapsed = timestamp - start;
    if (elapsed >= timeout) {
      cancelFrame(checkElapsed);
      callback(elapsed - timeout);
    }
  };
  frame.setup(checkElapsed, true);
  return () => cancelFrame(checkElapsed);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
var asNumber = (value) => typeof value === "string" ? parseFloat(value) : value;
var isPx = (value) => typeof value === "number" || px.test(value);
function mixValues(target, follow, lead, progress2, shouldCrossfadeOpacity, isOnlyMember) {
  if (shouldCrossfadeOpacity) {
    target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress2));
    target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress2));
  } else if (isOnlyMember) {
    target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress2);
  }
  for (let i19 = 0; i19 < numBorders; i19++) {
    const borderLabel = `border${borders[i19]}Radius`;
    let followRadius = getRadius(follow, borderLabel);
    let leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    const canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress2), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress2);
  }
}
function getRadius(values, radiusName) {
  return values[radiusName] !== void 0 ? values[radiusName] : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut);
var easeCrossfadeOut = compress(0.5, 0.95, noop);
function compress(min2, max2, easing) {
  return (p6) => {
    if (p6 < min2)
      return 0;
    if (p6 > max2)
      return 1;
    return easing(progress(min2, max2, p6));
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x);
  copyAxisInto(box.y, originBox.y);
}
function copyAxisDeltaInto(delta, originDelta) {
  delta.translate = originDelta.translate;
  delta.scale = originDelta.scale;
  delta.originPoint = originDelta.originPoint;
  delta.origin = originDelta.origin;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale2, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate = 0, scale2 = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  let originPoint = mixNumber(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {
  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : void 0, sourceBox ? sourceBox.x : void 0);
  removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : void 0, sourceBox ? sourceBox.y : void 0);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function axisEquals(a25, b11) {
  return a25.min === b11.min && a25.max === b11.max;
}
function boxEquals(a25, b11) {
  return axisEquals(a25.x, b11.x) && axisEquals(a25.y, b11.y);
}
function axisEqualsRounded(a25, b11) {
  return Math.round(a25.min) === Math.round(b11.min) && Math.round(a25.max) === Math.round(b11.max);
}
function boxEqualsRounded(a25, b11) {
  return axisEqualsRounded(a25.x, b11.x) && axisEqualsRounded(a25.y, b11.y);
}
function aspectRatio(box) {
  return calcLength(box.x) / calcLength(box.y);
}
function axisDeltaEquals(a25, b11) {
  return a25.translate === b11.translate && a25.scale === b11.scale && a25.originPoint === b11.originPoint;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = class {
  constructor() {
    this.members = [];
  }
  add(node) {
    addUniqueItem(this.members, node);
    node.scheduleRender();
  }
  remove(node) {
    removeItem(this.members, node);
    if (node === this.prevLead) {
      this.prevLead = void 0;
    }
    if (node === this.lead) {
      const prevLead = this.members[this.members.length - 1];
      if (prevLead) {
        this.promote(prevLead);
      }
    }
  }
  relegate(node) {
    const indexOfNode = this.members.findIndex((member) => node === member);
    if (indexOfNode === 0)
      return false;
    let prevLead;
    for (let i19 = indexOfNode; i19 >= 0; i19--) {
      const member = this.members[i19];
      if (member.isPresent !== false) {
        prevLead = member;
        break;
      }
    }
    if (prevLead) {
      this.promote(prevLead);
      return true;
    } else {
      return false;
    }
  }
  promote(node, preserveFollowOpacity) {
    const prevLead = this.lead;
    if (node === prevLead)
      return;
    this.prevLead = prevLead;
    this.lead = node;
    node.show();
    if (prevLead) {
      prevLead.instance && prevLead.scheduleRender();
      node.scheduleRender();
      node.resumeFrom = prevLead;
      if (preserveFollowOpacity) {
        node.resumeFrom.preserveOpacity = true;
      }
      if (prevLead.snapshot) {
        node.snapshot = prevLead.snapshot;
        node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
      }
      if (node.root && node.root.isUpdating) {
        node.isLayoutDirty = true;
      }
      const { crossfade } = node.options;
      if (crossfade === false) {
        prevLead.hide();
      }
    }
  }
  exitAnimationComplete() {
    this.members.forEach((node) => {
      const { options, resumingFrom } = node;
      options.onExitComplete && options.onExitComplete();
      if (resumingFrom) {
        resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
      }
    });
  }
  scheduleRender() {
    this.members.forEach((node) => {
      node.instance && node.scheduleRender(false);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    if (this.lead && this.lead.snapshot) {
      this.lead.snapshot = void 0;
    }
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/transform.mjs
function buildProjectionTransform(delta, treeScale, latestTransform) {
  let transform2 = "";
  const xTranslate = delta.x.translate / treeScale.x;
  const yTranslate = delta.y.translate / treeScale.y;
  const zTranslate = (latestTransform == null ? void 0 : latestTransform.z) || 0;
  if (xTranslate || yTranslate || zTranslate) {
    transform2 = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;
  }
  if (treeScale.x !== 1 || treeScale.y !== 1) {
    transform2 += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;
  }
  if (latestTransform) {
    const { transformPerspective, rotate: rotate2, rotateX, rotateY, skewX, skewY } = latestTransform;
    if (transformPerspective)
      transform2 = `perspective(${transformPerspective}px) ${transform2}`;
    if (rotate2)
      transform2 += `rotate(${rotate2}deg) `;
    if (rotateX)
      transform2 += `rotateX(${rotateX}deg) `;
    if (rotateY)
      transform2 += `rotateY(${rotateY}deg) `;
    if (skewX)
      transform2 += `skewX(${skewX}deg) `;
    if (skewY)
      transform2 += `skewY(${skewY}deg) `;
  }
  const elementScaleX = delta.x.scale * treeScale.x;
  const elementScaleY = delta.y.scale * treeScale.y;
  if (elementScaleX !== 1 || elementScaleY !== 1) {
    transform2 += `scale(${elementScaleX}, ${elementScaleY})`;
  }
  return transform2 || "none";
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var metrics = {
  nodes: 0,
  calculatedTargetDeltas: 0,
  calculatedProjections: 0
};
var transformAxes = ["", "X", "Y", "Z"];
var hiddenVisibility = { visibility: "hidden" };
var animationTarget = 1e3;
var id2 = 0;
function resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {
  const { latestValues } = visualElement;
  if (latestValues[key]) {
    values[key] = latestValues[key];
    visualElement.setStaticValue(key, 0);
    if (sharedAnimationValues) {
      sharedAnimationValues[key] = 0;
    }
  }
}
function cancelTreeOptimisedTransformAnimations(projectionNode) {
  projectionNode.hasCheckedOptimisedAppear = true;
  if (projectionNode.root === projectionNode)
    return;
  const { visualElement } = projectionNode.options;
  if (!visualElement)
    return;
  const appearId = getOptimisedAppearId(visualElement);
  if (window.MotionHasOptimisedAnimation(appearId, "transform")) {
    const { layout: layout2, layoutId } = projectionNode.options;
    window.MotionCancelOptimisedAnimation(appearId, "transform", frame, !(layout2 || layoutId));
  }
  const { parent } = projectionNode;
  if (parent && !parent.hasCheckedOptimisedAppear) {
    cancelTreeOptimisedTransformAnimations(parent);
  }
}
function createProjectionNode2({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
  return class ProjectionNode {
    constructor(latestValues = {}, parent = defaultParent == null ? void 0 : defaultParent()) {
      this.id = id2++;
      this.animationId = 0;
      this.children = /* @__PURE__ */ new Set();
      this.options = {};
      this.isTreeAnimating = false;
      this.isAnimationBlocked = false;
      this.isLayoutDirty = false;
      this.isProjectionDirty = false;
      this.isSharedProjectionDirty = false;
      this.isTransformDirty = false;
      this.updateManuallyBlocked = false;
      this.updateBlockedByResize = false;
      this.isUpdating = false;
      this.isSVG = false;
      this.needsReset = false;
      this.shouldResetTransform = false;
      this.hasCheckedOptimisedAppear = false;
      this.treeScale = { x: 1, y: 1 };
      this.eventHandlers = /* @__PURE__ */ new Map();
      this.hasTreeAnimated = false;
      this.updateScheduled = false;
      this.scheduleUpdate = () => this.update();
      this.projectionUpdateScheduled = false;
      this.checkUpdateFailed = () => {
        if (this.isUpdating) {
          this.isUpdating = false;
          this.clearAllSnapshots();
        }
      };
      this.updateProjection = () => {
        this.projectionUpdateScheduled = false;
        if (statsBuffer.value) {
          metrics.nodes = metrics.calculatedTargetDeltas = metrics.calculatedProjections = 0;
        }
        this.nodes.forEach(propagateDirtyNodes);
        this.nodes.forEach(resolveTargetDelta);
        this.nodes.forEach(calcProjection);
        this.nodes.forEach(cleanDirtyNodes);
        if (statsBuffer.addProjectionMetrics) {
          statsBuffer.addProjectionMetrics(metrics);
        }
      };
      this.resolvedRelativeTargetAt = 0;
      this.hasProjected = false;
      this.isVisible = true;
      this.animationProgress = 0;
      this.sharedNodes = /* @__PURE__ */ new Map();
      this.latestValues = latestValues;
      this.root = parent ? parent.root || parent : this;
      this.path = parent ? [...parent.path, parent] : [];
      this.parent = parent;
      this.depth = parent ? parent.depth + 1 : 0;
      for (let i19 = 0; i19 < this.path.length; i19++) {
        this.path[i19].shouldResetTransform = true;
      }
      if (this.root === this)
        this.nodes = new FlatTree();
    }
    addEventListener(name, handler) {
      if (!this.eventHandlers.has(name)) {
        this.eventHandlers.set(name, new SubscriptionManager());
      }
      return this.eventHandlers.get(name).add(handler);
    }
    notifyListeners(name, ...args) {
      const subscriptionManager = this.eventHandlers.get(name);
      subscriptionManager && subscriptionManager.notify(...args);
    }
    hasListeners(name) {
      return this.eventHandlers.has(name);
    }
    /**
     * Lifecycles
     */
    mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = isSVGElement(instance);
      this.instance = instance;
      const { layoutId, layout: layout2, visualElement } = this.options;
      if (visualElement && !visualElement.current) {
        visualElement.mount(instance);
      }
      this.root.nodes.add(this);
      this.parent && this.parent.children.add(this);
      if (isLayoutDirty && (layout2 || layoutId)) {
        this.isLayoutDirty = true;
      }
      if (attachResizeListener) {
        let cancelDelay;
        const resizeUnblockUpdate = () => this.root.updateBlockedByResize = false;
        attachResizeListener(instance, () => {
          this.root.updateBlockedByResize = true;
          cancelDelay && cancelDelay();
          cancelDelay = delay(resizeUnblockUpdate, 250);
          if (globalProjectionState.hasAnimatedSinceResize) {
            globalProjectionState.hasAnimatedSinceResize = false;
            this.nodes.forEach(finishAnimation);
          }
        });
      }
      if (layoutId) {
        this.root.registerSharedNode(layoutId, this);
      }
      if (this.options.animate !== false && visualElement && (layoutId || layout2)) {
        this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout }) => {
          if (this.isTreeAnimationBlocked()) {
            this.target = void 0;
            this.relativeTarget = void 0;
            return;
          }
          const layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition;
          const { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps();
          const hasTargetChanged = !this.targetLayout || !boxEqualsRounded(this.targetLayout, newLayout);
          const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;
          if (this.options.layoutRoot || this.resumeFrom || hasOnlyRelativeTargetChanged || hasLayoutChanged && (hasTargetChanged || !this.currentAnimation)) {
            if (this.resumeFrom) {
              this.resumingFrom = this.resumeFrom;
              this.resumingFrom.resumingFrom = void 0;
            }
            this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
            const animationOptions = {
              ...getValueTransition(layoutTransition, "layout"),
              onPlay: onLayoutAnimationStart,
              onComplete: onLayoutAnimationComplete
            };
            if (visualElement.shouldReduceMotion || this.options.layoutRoot) {
              animationOptions.delay = 0;
              animationOptions.type = false;
            }
            this.startAnimation(animationOptions);
          } else {
            if (!hasLayoutChanged) {
              finishAnimation(this);
            }
            if (this.isLead() && this.options.onExitComplete) {
              this.options.onExitComplete();
            }
          }
          this.targetLayout = newLayout;
        });
      }
    }
    unmount() {
      this.options.layoutId && this.willUpdate();
      this.root.nodes.remove(this);
      const stack = this.getStack();
      stack && stack.remove(this);
      this.parent && this.parent.children.delete(this);
      this.instance = void 0;
      this.eventHandlers.clear();
      cancelFrame(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = true;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = false;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || false;
    }
    // Note: currently only running on root node
    startUpdate() {
      if (this.isUpdateBlocked())
        return;
      this.isUpdating = true;
      this.nodes && this.nodes.forEach(resetSkewAndRotation);
      this.animationId++;
    }
    getTransformTemplate() {
      const { visualElement } = this.options;
      return visualElement && visualElement.getProps().transformTemplate;
    }
    willUpdate(shouldNotifyListeners = true) {
      this.root.hasTreeAnimated = true;
      if (this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear) {
        cancelTreeOptimisedTransformAnimations(this);
      }
      !this.root.isUpdating && this.root.startUpdate();
      if (this.isLayoutDirty)
        return;
      this.isLayoutDirty = true;
      for (let i19 = 0; i19 < this.path.length; i19++) {
        const node = this.path[i19];
        node.shouldResetTransform = true;
        node.updateScroll("snapshot");
        if (node.options.layoutRoot) {
          node.willUpdate(false);
        }
      }
      const { layoutId, layout: layout2 } = this.options;
      if (layoutId === void 0 && !layout2)
        return;
      const transformTemplate = this.getTransformTemplate();
      this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      this.updateSnapshot();
      shouldNotifyListeners && this.notifyListeners("willUpdate");
    }
    update() {
      this.updateScheduled = false;
      const updateWasBlocked = this.isUpdateBlocked();
      if (updateWasBlocked) {
        this.unblockUpdate();
        this.clearAllSnapshots();
        this.nodes.forEach(clearMeasurements);
        return;
      }
      if (!this.isUpdating) {
        this.nodes.forEach(clearIsLayoutDirty);
      }
      this.isUpdating = false;
      this.nodes.forEach(resetTransformStyle);
      this.nodes.forEach(updateLayout);
      this.nodes.forEach(notifyLayoutUpdate);
      this.clearAllSnapshots();
      const now2 = time.now();
      frameData.delta = clamp(0, 1e3 / 60, now2 - frameData.timestamp);
      frameData.timestamp = now2;
      frameData.isProcessing = true;
      frameSteps.update.process(frameData);
      frameSteps.preRender.process(frameData);
      frameSteps.render.process(frameData);
      frameData.isProcessing = false;
    }
    didUpdate() {
      if (!this.updateScheduled) {
        this.updateScheduled = true;
        microtask.read(this.scheduleUpdate);
      }
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot);
      this.sharedNodes.forEach(removeLeadSnapshots);
    }
    scheduleUpdateProjection() {
      if (!this.projectionUpdateScheduled) {
        this.projectionUpdateScheduled = true;
        frame.preRender(this.updateProjection, false, true);
      }
    }
    scheduleCheckAfterUnmount() {
      frame.postRender(() => {
        if (this.isLayoutDirty) {
          this.root.didUpdate();
        } else {
          this.root.checkUpdateFailed();
        }
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      if (this.snapshot || !this.instance)
        return;
      this.snapshot = this.measure();
      if (this.snapshot && !calcLength(this.snapshot.measuredBox.x) && !calcLength(this.snapshot.measuredBox.y)) {
        this.snapshot = void 0;
      }
    }
    updateLayout() {
      if (!this.instance)
        return;
      this.updateScroll();
      if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
        return;
      }
      if (this.resumeFrom && !this.resumeFrom.instance) {
        for (let i19 = 0; i19 < this.path.length; i19++) {
          const node = this.path[i19];
          node.updateScroll();
        }
      }
      const prevLayout = this.layout;
      this.layout = this.measure(false);
      this.layoutCorrected = createBox();
      this.isLayoutDirty = false;
      this.projectionDelta = void 0;
      this.notifyListeners("measure", this.layout.layoutBox);
      const { visualElement } = this.options;
      visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : void 0);
    }
    updateScroll(phase = "measure") {
      let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase) {
        needsMeasurement = false;
      }
      if (needsMeasurement) {
        const isRoot = checkIsScrollRoot(this.instance);
        this.scroll = {
          animationId: this.root.animationId,
          phase,
          isRoot,
          offset: measureScroll(this.instance),
          wasRoot: this.scroll ? this.scroll.isRoot : isRoot
        };
      }
    }
    resetTransform() {
      if (!resetTransform)
        return;
      const isResetRequested = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout;
      const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
      const transformTemplate = this.getTransformTemplate();
      const transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0;
      const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
        resetTransform(this.instance, transformTemplateValue);
        this.shouldResetTransform = false;
        this.scheduleRender();
      }
    }
    measure(removeTransform = true) {
      const pageBox = this.measurePageBox();
      let layoutBox = this.removeElementScroll(pageBox);
      if (removeTransform) {
        layoutBox = this.removeTransform(layoutBox);
      }
      roundBox(layoutBox);
      return {
        animationId: this.root.animationId,
        measuredBox: pageBox,
        layoutBox,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      var _a;
      const { visualElement } = this.options;
      if (!visualElement)
        return createBox();
      const box = visualElement.measureViewportBox();
      const wasInScrollRoot = ((_a = this.scroll) == null ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);
      if (!wasInScrollRoot) {
        const { scroll: scroll2 } = this.root;
        if (scroll2) {
          translateAxis(box.x, scroll2.offset.x);
          translateAxis(box.y, scroll2.offset.y);
        }
      }
      return box;
    }
    removeElementScroll(box) {
      var _a;
      const boxWithoutScroll = createBox();
      copyBoxInto(boxWithoutScroll, box);
      if ((_a = this.scroll) == null ? void 0 : _a.wasRoot) {
        return boxWithoutScroll;
      }
      for (let i19 = 0; i19 < this.path.length; i19++) {
        const node = this.path[i19];
        const { scroll: scroll2, options } = node;
        if (node !== this.root && scroll2 && options.layoutScroll) {
          if (scroll2.wasRoot) {
            copyBoxInto(boxWithoutScroll, box);
          }
          translateAxis(boxWithoutScroll.x, scroll2.offset.x);
          translateAxis(boxWithoutScroll.y, scroll2.offset.y);
        }
      }
      return boxWithoutScroll;
    }
    applyTransform(box, transformOnly = false) {
      const withTransforms = createBox();
      copyBoxInto(withTransforms, box);
      for (let i19 = 0; i19 < this.path.length; i19++) {
        const node = this.path[i19];
        if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
          transformBox(withTransforms, {
            x: -node.scroll.offset.x,
            y: -node.scroll.offset.y
          });
        }
        if (!hasTransform(node.latestValues))
          continue;
        transformBox(withTransforms, node.latestValues);
      }
      if (hasTransform(this.latestValues)) {
        transformBox(withTransforms, this.latestValues);
      }
      return withTransforms;
    }
    removeTransform(box) {
      const boxWithoutTransform = createBox();
      copyBoxInto(boxWithoutTransform, box);
      for (let i19 = 0; i19 < this.path.length; i19++) {
        const node = this.path[i19];
        if (!node.instance)
          continue;
        if (!hasTransform(node.latestValues))
          continue;
        hasScale(node.latestValues) && node.updateSnapshot();
        const sourceBox = createBox();
        const nodeBox = node.measurePageBox();
        copyBoxInto(sourceBox, nodeBox);
        removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : void 0, sourceBox);
      }
      if (hasTransform(this.latestValues)) {
        removeBoxTransforms(boxWithoutTransform, this.latestValues);
      }
      return boxWithoutTransform;
    }
    setTargetDelta(delta) {
      this.targetDelta = delta;
      this.root.scheduleUpdateProjection();
      this.isProjectionDirty = true;
    }
    setOptions(options) {
      this.options = {
        ...this.options,
        ...options,
        crossfade: options.crossfade !== void 0 ? options.crossfade : true
      };
    }
    clearMeasurements() {
      this.scroll = void 0;
      this.layout = void 0;
      this.snapshot = void 0;
      this.prevTransformTemplateValue = void 0;
      this.targetDelta = void 0;
      this.target = void 0;
      this.isLayoutDirty = false;
    }
    forceRelativeParentToResolveTarget() {
      if (!this.relativeParent)
        return;
      if (this.relativeParent.resolvedRelativeTargetAt !== frameData.timestamp) {
        this.relativeParent.resolveTargetDelta(true);
      }
    }
    resolveTargetDelta(forceRecalculation = false) {
      var _a;
      const lead = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);
      this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);
      this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      const canSkip = !(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || ((_a = this.parent) == null ? void 0 : _a.isProjectionDirty) || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize);
      if (canSkip)
        return;
      const { layout: layout2, layoutId } = this.options;
      if (!this.layout || !(layout2 || layoutId))
        return;
      this.resolvedRelativeTargetAt = frameData.timestamp;
      if (!this.targetDelta && !this.relativeTarget) {
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && relativeParent.layout && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox();
          this.relativeTargetOrigin = createBox();
          calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (!this.relativeTarget && !this.targetDelta)
        return;
      if (!this.target) {
        this.target = createBox();
        this.targetWithTransforms = createBox();
      }
      if (this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target) {
        this.forceRelativeParentToResolveTarget();
        calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
      } else if (this.targetDelta) {
        if (Boolean(this.resumingFrom)) {
          this.target = this.applyTransform(this.layout.layoutBox);
        } else {
          copyBoxInto(this.target, this.layout.layoutBox);
        }
        applyBoxDelta(this.target, this.targetDelta);
      } else {
        copyBoxInto(this.target, this.layout.layoutBox);
      }
      if (this.attemptToResolveRelativeTarget) {
        this.attemptToResolveRelativeTarget = false;
        const relativeParent = this.getClosestProjectingParent();
        if (relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1) {
          this.relativeParent = relativeParent;
          this.forceRelativeParentToResolveTarget();
          this.relativeTarget = createBox();
          this.relativeTargetOrigin = createBox();
          calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);
          copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
        } else {
          this.relativeParent = this.relativeTarget = void 0;
        }
      }
      if (statsBuffer.value) {
        metrics.calculatedTargetDeltas++;
      }
    }
    getClosestProjectingParent() {
      if (!this.parent || hasScale(this.parent.latestValues) || has2DTranslate(this.parent.latestValues)) {
        return void 0;
      }
      if (this.parent.isProjecting()) {
        return this.parent;
      } else {
        return this.parent.getClosestProjectingParent();
      }
    }
    isProjecting() {
      return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var _a;
      const lead = this.getLead();
      const isShared = Boolean(this.resumingFrom) || this !== lead;
      let canSkip = true;
      if (this.isProjectionDirty || ((_a = this.parent) == null ? void 0 : _a.isProjectionDirty)) {
        canSkip = false;
      }
      if (isShared && (this.isSharedProjectionDirty || this.isTransformDirty)) {
        canSkip = false;
      }
      if (this.resolvedRelativeTargetAt === frameData.timestamp) {
        canSkip = false;
      }
      if (canSkip)
        return;
      const { layout: layout2, layoutId } = this.options;
      this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation);
      if (!this.isTreeAnimating) {
        this.targetDelta = this.relativeTarget = void 0;
      }
      if (!this.layout || !(layout2 || layoutId))
        return;
      copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
      const prevTreeScaleX = this.treeScale.x;
      const prevTreeScaleY = this.treeScale.y;
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);
      if (lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {
        lead.target = lead.layout.layoutBox;
        lead.targetWithTransforms = createBox();
      }
      const { target } = lead;
      if (!target) {
        if (this.prevProjectionDelta) {
          this.createProjectionDeltas();
          this.scheduleRender();
        }
        return;
      }
      if (!this.projectionDelta || !this.prevProjectionDelta) {
        this.createProjectionDeltas();
      } else {
        copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);
        copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);
      }
      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
      if (this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY || !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) || !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {
        this.hasProjected = true;
        this.scheduleRender();
        this.notifyListeners("projectionUpdate", target);
      }
      if (statsBuffer.value) {
        metrics.calculatedProjections++;
      }
    }
    hide() {
      this.isVisible = false;
    }
    show() {
      this.isVisible = true;
    }
    scheduleRender(notifyAll = true) {
      var _a;
      (_a = this.options.visualElement) == null ? void 0 : _a.scheduleRender();
      if (notifyAll) {
        const stack = this.getStack();
        stack && stack.scheduleRender();
      }
      if (this.resumingFrom && !this.resumingFrom.instance) {
        this.resumingFrom = void 0;
      }
    }
    createProjectionDeltas() {
      this.prevProjectionDelta = createDelta();
      this.projectionDelta = createDelta();
      this.projectionDeltaWithTransform = createDelta();
    }
    setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {
      const snapshot = this.snapshot;
      const snapshotLatestValues = snapshot ? snapshot.latestValues : {};
      const mixedValues = { ...this.latestValues };
      const targetDelta = createDelta();
      if (!this.relativeParent || !this.relativeParent.options.layoutRoot) {
        this.relativeTarget = this.relativeTargetOrigin = void 0;
      }
      this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      const relativeLayout = createBox();
      const snapshotSource = snapshot ? snapshot.source : void 0;
      const layoutSource = this.layout ? this.layout.source : void 0;
      const isSharedLayoutAnimation = snapshotSource !== layoutSource;
      const stack = this.getStack();
      const isOnlyMember = !stack || stack.members.length <= 1;
      const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
      this.animationProgress = 0;
      let prevRelativeTarget;
      this.mixTargetDelta = (latest) => {
        const progress2 = latest / 1e3;
        mixAxisDelta(targetDelta.x, delta.x, progress2);
        mixAxisDelta(targetDelta.y, delta.y, progress2);
        this.setTargetDelta(targetDelta);
        if (this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout) {
          calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);
          mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress2);
          if (prevRelativeTarget && boxEquals(this.relativeTarget, prevRelativeTarget)) {
            this.isProjectionDirty = false;
          }
          if (!prevRelativeTarget)
            prevRelativeTarget = createBox();
          copyBoxInto(prevRelativeTarget, this.relativeTarget);
        }
        if (isSharedLayoutAnimation) {
          this.animationValues = mixedValues;
          mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress2, shouldCrossfadeOpacity, isOnlyMember);
        }
        this.root.scheduleUpdateProjection();
        this.scheduleRender();
        this.animationProgress = progress2;
      };
      this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(options) {
      this.notifyListeners("animationStart");
      this.currentAnimation && this.currentAnimation.stop();
      if (this.resumingFrom && this.resumingFrom.currentAnimation) {
        this.resumingFrom.currentAnimation.stop();
      }
      if (this.pendingAnimation) {
        cancelFrame(this.pendingAnimation);
        this.pendingAnimation = void 0;
      }
      this.pendingAnimation = frame.update(() => {
        globalProjectionState.hasAnimatedSinceResize = true;
        activeAnimations.layout++;
        this.currentAnimation = animateSingleValue(0, animationTarget, {
          ...options,
          onUpdate: (latest) => {
            this.mixTargetDelta(latest);
            options.onUpdate && options.onUpdate(latest);
          },
          onStop: () => {
            activeAnimations.layout--;
          },
          onComplete: () => {
            activeAnimations.layout--;
            options.onComplete && options.onComplete();
            this.completeAnimation();
          }
        });
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = this.currentAnimation;
        }
        this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      if (this.resumingFrom) {
        this.resumingFrom.currentAnimation = void 0;
        this.resumingFrom.preserveOpacity = void 0;
      }
      const stack = this.getStack();
      stack && stack.exitAnimationComplete();
      this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
      this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      if (this.currentAnimation) {
        this.mixTargetDelta && this.mixTargetDelta(animationTarget);
        this.currentAnimation.stop();
      }
      this.completeAnimation();
    }
    applyTransformsToTarget() {
      const lead = this.getLead();
      let { targetWithTransforms, target, layout: layout2, latestValues } = lead;
      if (!targetWithTransforms || !target || !layout2)
        return;
      if (this !== lead && this.layout && layout2 && shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout2.layoutBox)) {
        target = this.target || createBox();
        const xLength = calcLength(this.layout.layoutBox.x);
        target.x.min = lead.target.x.min;
        target.x.max = target.x.min + xLength;
        const yLength = calcLength(this.layout.layoutBox.y);
        target.y.min = lead.target.y.min;
        target.y.max = target.y.min + yLength;
      }
      copyBoxInto(targetWithTransforms, target);
      transformBox(targetWithTransforms, latestValues);
      calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
    }
    registerSharedNode(layoutId, node) {
      if (!this.sharedNodes.has(layoutId)) {
        this.sharedNodes.set(layoutId, new NodeStack());
      }
      const stack = this.sharedNodes.get(layoutId);
      stack.add(node);
      const config = node.options.initialPromotionConfig;
      node.promote({
        transition: config ? config.transition : void 0,
        preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : void 0
      });
    }
    isLead() {
      const stack = this.getStack();
      return stack ? stack.lead === this : true;
    }
    getLead() {
      var _a;
      const { layoutId } = this.options;
      return layoutId ? ((_a = this.getStack()) == null ? void 0 : _a.lead) || this : this;
    }
    getPrevLead() {
      var _a;
      const { layoutId } = this.options;
      return layoutId ? (_a = this.getStack()) == null ? void 0 : _a.prevLead : void 0;
    }
    getStack() {
      const { layoutId } = this.options;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    }
    promote({ needsReset, transition, preserveFollowOpacity } = {}) {
      const stack = this.getStack();
      if (stack)
        stack.promote(this, preserveFollowOpacity);
      if (needsReset) {
        this.projectionDelta = void 0;
        this.needsReset = true;
      }
      if (transition)
        this.setOptions({ transition });
    }
    relegate() {
      const stack = this.getStack();
      if (stack) {
        return stack.relegate(this);
      } else {
        return false;
      }
    }
    resetSkewAndRotation() {
      const { visualElement } = this.options;
      if (!visualElement)
        return;
      let hasDistortingTransform = false;
      const { latestValues } = visualElement;
      if (latestValues.z || latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ || latestValues.skewX || latestValues.skewY) {
        hasDistortingTransform = true;
      }
      if (!hasDistortingTransform)
        return;
      const resetValues = {};
      if (latestValues.z) {
        resetDistortingTransform("z", visualElement, resetValues, this.animationValues);
      }
      for (let i19 = 0; i19 < transformAxes.length; i19++) {
        resetDistortingTransform(`rotate${transformAxes[i19]}`, visualElement, resetValues, this.animationValues);
        resetDistortingTransform(`skew${transformAxes[i19]}`, visualElement, resetValues, this.animationValues);
      }
      visualElement.render();
      for (const key in resetValues) {
        visualElement.setStaticValue(key, resetValues[key]);
        if (this.animationValues) {
          this.animationValues[key] = resetValues[key];
        }
      }
      visualElement.scheduleRender();
    }
    getProjectionStyles(styleProp) {
      if (!this.instance || this.isSVG)
        return void 0;
      if (!this.isVisible) {
        return hiddenVisibility;
      }
      const styles = {
        visibility: ""
      };
      const transformTemplate = this.getTransformTemplate();
      if (this.needsReset) {
        this.needsReset = false;
        styles.opacity = "";
        styles.pointerEvents = resolveMotionValue(styleProp == null ? void 0 : styleProp.pointerEvents) || "";
        styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
        return styles;
      }
      const lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        const emptyStyles = {};
        if (this.options.layoutId) {
          emptyStyles.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1;
          emptyStyles.pointerEvents = resolveMotionValue(styleProp == null ? void 0 : styleProp.pointerEvents) || "";
        }
        if (this.hasProjected && !hasTransform(this.latestValues)) {
          emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
          this.hasProjected = false;
        }
        return emptyStyles;
      }
      const valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget();
      styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
      if (transformTemplate) {
        styles.transform = transformTemplate(valuesToRender, styles.transform);
      }
      const { x: x11, y: y8 } = this.projectionDelta;
      styles.transformOrigin = `${x11.origin * 100}% ${y8.origin * 100}% 0`;
      if (lead.animationValues) {
        styles.opacity = lead === this ? valuesToRender.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
      } else {
        styles.opacity = lead === this ? valuesToRender.opacity !== void 0 ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== void 0 ? valuesToRender.opacityExit : 0;
      }
      for (const key in scaleCorrectors) {
        if (valuesToRender[key] === void 0)
          continue;
        const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];
        const corrected = styles.transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
        if (applyTo) {
          const num = applyTo.length;
          for (let i19 = 0; i19 < num; i19++) {
            styles[applyTo[i19]] = corrected;
          }
        } else {
          if (isCSSVariable) {
            this.options.visualElement.renderState.vars[key] = corrected;
          } else {
            styles[key] = corrected;
          }
        }
      }
      if (this.options.layoutId) {
        styles.pointerEvents = lead === this ? resolveMotionValue(styleProp == null ? void 0 : styleProp.pointerEvents) || "" : "none";
      }
      return styles;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((node) => {
        var _a;
        return (_a = node.currentAnimation) == null ? void 0 : _a.stop();
      });
      this.root.nodes.forEach(clearMeasurements);
      this.root.sharedNodes.clear();
    }
  };
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a;
  const snapshot = ((_a = node.resumeFrom) == null ? void 0 : _a.snapshot) || node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    const { layoutBox: layout2, measuredBox: measuredLayout } = node.layout;
    const { animationType } = node.options;
    const isShared = snapshot.source !== node.layout.source;
    if (animationType === "size") {
      eachAxis((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength(axisSnapshot);
        axisSnapshot.min = layout2[axis].min;
        axisSnapshot.max = axisSnapshot.min + length;
      });
    } else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout2)) {
      eachAxis((axis) => {
        const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
        const length = calcLength(layout2[axis]);
        axisSnapshot.max = axisSnapshot.min + length;
        if (node.relativeTarget && !node.currentAnimation) {
          node.isProjectionDirty = true;
          node.relativeTarget[axis].max = node.relativeTarget[axis].min + length;
        }
      });
    }
    const layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout2, snapshot.layoutBox);
    const visualDelta = createDelta();
    if (isShared) {
      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);
    } else {
      calcBoxDelta(visualDelta, layout2, snapshot.layoutBox);
    }
    const hasLayoutChanged = !isDeltaZero(layoutDelta);
    let hasRelativeLayoutChanged = false;
    if (!node.resumeFrom) {
      const relativeParent = node.getClosestProjectingParent();
      if (relativeParent && !relativeParent.resumeFrom) {
        const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
        if (parentSnapshot && parentLayout) {
          const relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
          const relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout2, parentLayout.layoutBox);
          if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {
            hasRelativeLayoutChanged = true;
          }
          if (relativeParent.options.layoutRoot) {
            node.relativeTarget = relativeLayout;
            node.relativeTargetOrigin = relativeSnapshot;
            node.relativeParent = relativeParent;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout2,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeLayoutChanged
    });
  } else if (node.isLead()) {
    const { onExitComplete } = node.options;
    onExitComplete && onExitComplete();
  }
  node.options.transition = void 0;
}
function propagateDirtyNodes(node) {
  if (statsBuffer.value) {
    metrics.nodes++;
  }
  if (!node.parent)
    return;
  if (!node.isProjecting()) {
    node.isProjectionDirty = node.parent.isProjectionDirty;
  }
  node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty));
  node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);
}
function cleanDirtyNodes(node) {
  node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = false;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function clearIsLayoutDirty(node) {
  node.isLayoutDirty = false;
}
function resetTransformStyle(node) {
  const { visualElement } = node.options;
  if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {
    visualElement.notify("BeforeLayoutMeasure");
  }
  node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
  node.isProjectionDirty = true;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetSkewAndRotation(node) {
  node.resetSkewAndRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p6) {
  output.translate = mixNumber(delta.translate, 0, p6);
  output.scale = mixNumber(delta.scale, 1, p6);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to2, p6) {
  output.min = mixNumber(from.min, to2.min, p6);
  output.max = mixNumber(from.max, to2.max, p6);
}
function mixBox(output, from, to2, p6) {
  mixAxis(output.x, from.x, to2.x, p6);
  mixAxis(output.y, from.y, to2.y, p6);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
var userAgentContains = (string) => typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(string);
var roundPoint = userAgentContains("applewebkit/") && !userAgentContains("chrome/") ? Math.round : noop;
function roundAxis(axis) {
  axis.min = roundPoint(axis.min);
  axis.max = roundPoint(axis.max);
}
function roundBox(box) {
  roundAxis(box.x);
  roundAxis(box.y);
}
function shouldAnimatePositionOnly(animationType, snapshot, layout2) {
  return animationType === "position" || animationType === "preserve-aspect" && !isNear(aspectRatio(snapshot), aspectRatio(layout2), 0.2);
}
function checkNodeWasScrollRoot(node) {
  var _a;
  return node !== node.root && ((_a = node.scroll) == null ? void 0 : _a.wasRoot);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode2({
  attachResizeListener: (ref, notify) => addDomEvent(ref, "resize", notify),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => true
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
};
var HTMLProjectionNode = createProjectionNode2({
  measureScroll: (instance) => ({
    x: instance.scrollLeft,
    y: instance.scrollTop
  }),
  defaultParent: () => {
    if (!rootProjectionNode.current) {
      const documentNode = new DocumentProjectionNode({});
      documentNode.mount(window);
      documentNode.setOptions({ layoutScroll: true });
      rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: (instance, value) => {
    instance.style.transform = value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === "fixed")
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: {
    Feature: PanGesture
  },
  drag: {
    Feature: DragGesture,
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/hover.mjs
function handleHoverEvent(node, event, lifecycle) {
  const { props } = node;
  if (node.animationState && props.whileHover) {
    node.animationState.setActive("whileHover", lifecycle === "Start");
  }
  const eventName = "onHover" + lifecycle;
  const callback = props[eventName];
  if (callback) {
    frame.postRender(() => callback(event, extractEventInfo(event)));
  }
}
var HoverGesture = class extends Feature {
  mount() {
    const { current } = this.node;
    if (!current)
      return;
    this.unmount = hover(current, (_element, startEvent) => {
      handleHoverEvent(this.node, startEvent, "Start");
      return (endEvent) => handleHoverEvent(this.node, endEvent, "End");
    });
  }
  unmount() {
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/focus.mjs
var FocusGesture = class extends Feature {
  constructor() {
    super(...arguments);
    this.isActive = false;
  }
  onFocus() {
    let isFocusVisible = false;
    try {
      isFocusVisible = this.node.current.matches(":focus-visible");
    } catch (e8) {
      isFocusVisible = true;
    }
    if (!isFocusVisible || !this.node.animationState)
      return;
    this.node.animationState.setActive("whileFocus", true);
    this.isActive = true;
  }
  onBlur() {
    if (!this.isActive || !this.node.animationState)
      return;
    this.node.animationState.setActive("whileFocus", false);
    this.isActive = false;
  }
  mount() {
    this.unmount = pipe(addDomEvent(this.node.current, "focus", () => this.onFocus()), addDomEvent(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/press.mjs
function handlePressEvent(node, event, lifecycle) {
  const { props } = node;
  if (node.current instanceof HTMLButtonElement && node.current.disabled) {
    return;
  }
  if (node.animationState && props.whileTap) {
    node.animationState.setActive("whileTap", lifecycle === "Start");
  }
  const eventName = "onTap" + (lifecycle === "End" ? "" : lifecycle);
  const callback = props[eventName];
  if (callback) {
    frame.postRender(() => callback(event, extractEventInfo(event)));
  }
}
var PressGesture = class extends Feature {
  mount() {
    const { current } = this.node;
    if (!current)
      return;
    this.unmount = press(current, (_element, startEvent) => {
      handlePressEvent(this.node, startEvent, "Start");
      return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? "End" : "Cancel");
    }, { useGlobalTarget: this.node.props.globalTapTarget });
  }
  unmount() {
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap();
var observers = /* @__PURE__ */ new WeakMap();
var fireObserverCallback = (entry) => {
  const callback = observerCallbacks.get(entry.target);
  callback && callback(entry);
};
var fireAllObserverCallbacks = (entries) => {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver({ root, ...options }) {
  const lookupRoot = root || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  const rootObservers = observers.get(lookupRoot);
  const key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  const rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return () => {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs
var thresholdNames = {
  some: 0,
  all: 1
};
var InViewFeature = class extends Feature {
  constructor() {
    super(...arguments);
    this.hasEnteredView = false;
    this.isInView = false;
  }
  startObserver() {
    this.unmount();
    const { viewport = {} } = this.node.getProps();
    const { root, margin: rootMargin, amount = "some", once } = viewport;
    const options = {
      root: root ? root.current : void 0,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    const onIntersectionUpdate = (entry) => {
      const { isIntersecting } = entry;
      if (this.isInView === isIntersecting)
        return;
      this.isInView = isIntersecting;
      if (once && !isIntersecting && this.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        this.hasEnteredView = true;
      }
      if (this.node.animationState) {
        this.node.animationState.setActive("whileInView", isIntersecting);
      }
      const { onViewportEnter, onViewportLeave } = this.node.getProps();
      const callback = isIntersecting ? onViewportEnter : onViewportLeave;
      callback && callback(entry);
    };
    return observeIntersection(this.node.current, options, onIntersectionUpdate);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver === "undefined")
      return;
    const { props, prevProps } = this.node;
    const hasOptionsChanged = ["amount", "margin", "root"].some(hasViewportOptionChanged(props, prevProps));
    if (hasOptionsChanged) {
      this.startObserver();
    }
  }
  unmount() {
  }
};
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name) => viewport[name] !== prevViewport[name];
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: {
    Feature: InViewFeature
  },
  tap: {
    Feature: PressGesture
  },
  focus: {
    Feature: FocusGesture
  },
  hover: {
    Feature: HoverGesture
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout.mjs
var layout = {
  layout: {
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var import_react170 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs
var prefersReducedMotion = { current: null };
var hasReducedMotionListener = { current: false };

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs
function initPrefersReducedMotion() {
  hasReducedMotionListener.current = true;
  if (!isBrowser)
    return;
  if (window.matchMedia) {
    const motionMediaQuery = window.matchMedia("(prefers-reduced-motion)");
    const setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;
    motionMediaQuery.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/store.mjs
var visualElementStore = /* @__PURE__ */ new WeakMap();

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  for (const key in next) {
    const nextValue = next[key];
    const prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue, { owner: element }));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        const existingValue = element.getValue(key);
        if (existingValue.liveStyle === true) {
          existingValue.jump(nextValue);
        } else if (!existingValue.hasAnimated) {
          existingValue.set(nextValue);
        }
      } else {
        const latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
    }
  }
  for (const key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/VisualElement.mjs
var propEventHandlers = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
];
var VisualElement = class {
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {
    return {};
  }
  constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState }, options = {}) {
    this.current = null;
    this.children = /* @__PURE__ */ new Set();
    this.isVariantNode = false;
    this.isControllingVariants = false;
    this.shouldReduceMotion = null;
    this.values = /* @__PURE__ */ new Map();
    this.KeyframeResolver = KeyframeResolver;
    this.features = {};
    this.valueSubscriptions = /* @__PURE__ */ new Map();
    this.prevMotionValues = {};
    this.events = {};
    this.propEventSubscriptions = {};
    this.notifyUpdate = () => this.notify("Update", this.latestValues);
    this.render = () => {
      if (!this.current)
        return;
      this.triggerBuild();
      this.renderInstance(this.current, this.renderState, this.props.style, this.projection);
    };
    this.renderScheduledAt = 0;
    this.scheduleRender = () => {
      const now2 = time.now();
      if (this.renderScheduledAt < now2) {
        this.renderScheduledAt = now2;
        frame.render(this.render, false, true);
      }
    };
    const { latestValues, renderState } = visualState;
    this.latestValues = latestValues;
    this.baseTarget = { ...latestValues };
    this.initialValues = props.initial ? { ...latestValues } : {};
    this.renderState = renderState;
    this.parent = parent;
    this.props = props;
    this.presenceContext = presenceContext;
    this.depth = parent ? parent.depth + 1 : 0;
    this.reducedMotionConfig = reducedMotionConfig;
    this.options = options;
    this.blockInitialAnimation = Boolean(blockInitialAnimation);
    this.isControllingVariants = isControllingVariants(props);
    this.isVariantNode = isVariantNode(props);
    if (this.isVariantNode) {
      this.variantChildren = /* @__PURE__ */ new Set();
    }
    this.manuallyAnimateOnMount = Boolean(parent && parent.current);
    const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);
    for (const key in initialMotionValues) {
      const value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
  }
  mount(instance) {
    this.current = instance;
    visualElementStore.set(instance, this);
    if (this.projection && !this.projection.instance) {
      this.projection.mount(instance);
    }
    if (this.parent && this.isVariantNode && !this.isControllingVariants) {
      this.removeFromVariantTree = this.parent.addVariantChild(this);
    }
    this.values.forEach((value, key) => this.bindToMotionValue(key, value));
    if (!hasReducedMotionListener.current) {
      initPrefersReducedMotion();
    }
    this.shouldReduceMotion = this.reducedMotionConfig === "never" ? false : this.reducedMotionConfig === "always" ? true : prefersReducedMotion.current;
    if (true) {
      warnOnce(this.shouldReduceMotion !== true, "You have Reduced Motion enabled on your device. Animations may not appear as expected.");
    }
    if (this.parent)
      this.parent.children.add(this);
    this.update(this.props, this.presenceContext);
  }
  unmount() {
    this.projection && this.projection.unmount();
    this.projection = void 0;
    cancelFrame(this.notifyUpdate);
    cancelFrame(this.render);
    this.valueSubscriptions.forEach((remove) => remove());
    this.valueSubscriptions.clear();
    this.removeFromVariantTree && this.removeFromVariantTree();
    this.parent && this.parent.children.delete(this);
    for (const key in this.events) {
      this.events[key].clear();
    }
    for (const key in this.features) {
      const feature = this.features[key];
      if (feature) {
        feature.unmount();
        feature.isMounted = false;
      }
    }
    this.current = null;
  }
  bindToMotionValue(key, value) {
    if (this.valueSubscriptions.has(key)) {
      this.valueSubscriptions.get(key)();
    }
    const valueIsTransform = transformProps.has(key);
    if (valueIsTransform && this.onBindTransform) {
      this.onBindTransform();
    }
    const removeOnChange = value.on("change", (latestValue) => {
      this.latestValues[key] = latestValue;
      this.props.onUpdate && frame.preRender(this.notifyUpdate);
      if (valueIsTransform && this.projection) {
        this.projection.isTransformDirty = true;
      }
    });
    const removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
    let removeSyncCheck;
    if (window.MotionCheckAppearSync) {
      removeSyncCheck = window.MotionCheckAppearSync(this, key, value);
    }
    this.valueSubscriptions.set(key, () => {
      removeOnChange();
      removeOnRenderRequest();
      if (removeSyncCheck)
        removeSyncCheck();
      if (value.owner)
        value.stop();
    });
  }
  sortNodePosition(other) {
    if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {
      return 0;
    }
    return this.sortInstanceNodePosition(this.current, other.current);
  }
  updateFeatures() {
    let key = "animation";
    for (key in featureDefinitions) {
      const featureDefinition = featureDefinitions[key];
      if (!featureDefinition)
        continue;
      const { isEnabled, Feature: FeatureConstructor } = featureDefinition;
      if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {
        this.features[key] = new FeatureConstructor(this);
      }
      if (this.features[key]) {
        const feature = this.features[key];
        if (feature.isMounted) {
          feature.update();
        } else {
          feature.mount();
          feature.isMounted = true;
        }
      }
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
  }
  getStaticValue(key) {
    return this.latestValues[key];
  }
  setStaticValue(key, value) {
    this.latestValues[key] = value;
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(props, presenceContext) {
    if (props.transformTemplate || this.props.transformTemplate) {
      this.scheduleRender();
    }
    this.prevProps = this.props;
    this.props = props;
    this.prevPresenceContext = this.presenceContext;
    this.presenceContext = presenceContext;
    for (let i19 = 0; i19 < propEventHandlers.length; i19++) {
      const key = propEventHandlers[i19];
      if (this.propEventSubscriptions[key]) {
        this.propEventSubscriptions[key]();
        delete this.propEventSubscriptions[key];
      }
      const listenerName = "on" + key;
      const listener = props[listenerName];
      if (listener) {
        this.propEventSubscriptions[key] = this.on(key, listener);
      }
    }
    this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);
    if (this.handleChildMotionValue) {
      this.handleChildMotionValue();
    }
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(name) {
    return this.props.variants ? this.props.variants[name] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(child) {
    const closestVariantNode = this.getClosestVariantNode();
    if (closestVariantNode) {
      closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);
      return () => closestVariantNode.variantChildren.delete(child);
    }
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(key, value) {
    const existingValue = this.values.get(key);
    if (value !== existingValue) {
      if (existingValue)
        this.removeValue(key);
      this.bindToMotionValue(key, value);
      this.values.set(key, value);
      this.latestValues[key] = value.get();
    }
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(key) {
    this.values.delete(key);
    const unsubscribe = this.valueSubscriptions.get(key);
    if (unsubscribe) {
      unsubscribe();
      this.valueSubscriptions.delete(key);
    }
    delete this.latestValues[key];
    this.removeValueFromRenderState(key, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(key) {
    return this.values.has(key);
  }
  getValue(key, defaultValue) {
    if (this.props.values && this.props.values[key]) {
      return this.props.values[key];
    }
    let value = this.values.get(key);
    if (value === void 0 && defaultValue !== void 0) {
      value = motionValue(defaultValue === null ? void 0 : defaultValue, { owner: this });
      this.addValue(key, value);
    }
    return value;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(key, target) {
    let value = this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : this.getBaseTargetFromProps(this.props, key) ?? this.readValueFromInstance(this.current, key, this.options);
    if (value !== void 0 && value !== null) {
      if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
        value = parseFloat(value);
      } else if (!findValueType(value) && complex.test(target)) {
        value = getAnimatableNone2(key, target);
      }
      this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);
    }
    return isMotionValue(value) ? value.get() : value;
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(key, value) {
    this.baseTarget[key] = value;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(key) {
    var _a;
    const { initial } = this.props;
    let valueFromInitial;
    if (typeof initial === "string" || typeof initial === "object") {
      const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) == null ? void 0 : _a.custom);
      if (variant) {
        valueFromInitial = variant[key];
      }
    }
    if (initial && valueFromInitial !== void 0) {
      return valueFromInitial;
    }
    const target = this.getBaseTargetFromProps(this.props, key);
    if (target !== void 0 && !isMotionValue(target))
      return target;
    return this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
  }
  on(eventName, callback) {
    if (!this.events[eventName]) {
      this.events[eventName] = new SubscriptionManager();
    }
    return this.events[eventName].add(callback);
  }
  notify(eventName, ...args) {
    if (this.events[eventName]) {
      this.events[eventName].notify(...args);
    }
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs
var DOMVisualElement = class extends VisualElement {
  constructor() {
    super(...arguments);
    this.KeyframeResolver = DOMKeyframesResolver;
  }
  sortInstanceNodePosition(a25, b11) {
    return a25.compareDocumentPosition(b11) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(props, key) {
    return props.style ? props.style[key] : void 0;
  }
  removeValueFromRenderState(key, { vars, style }) {
    delete vars[key];
    delete style[key];
  }
  handleChildMotionValue() {
    if (this.childSubscription) {
      this.childSubscription();
      delete this.childSubscription;
    }
    const { children } = this.props;
    if (isMotionValue(children)) {
      this.childSubscription = children.on("change", (latest) => {
        if (this.current) {
          this.current.textContent = `${latest}`;
        }
      });
    }
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (const key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs
function getComputedStyle4(element) {
  return window.getComputedStyle(element);
}
var HTMLVisualElement = class extends DOMVisualElement {
  constructor() {
    super(...arguments);
    this.type = "html";
    this.renderInstance = renderHTML;
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      return readTransformValue(instance, key);
    } else {
      const computedStyle = getComputedStyle4(instance);
      const value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
      return typeof value === "string" ? value.trim() : value;
    }
  }
  measureInstanceViewportBox(instance, { transformPagePoint }) {
    return measureViewportBox(instance, transformPagePoint);
  }
  build(renderState, latestValues, props) {
    buildHTMLStyles(renderState, latestValues, props.transformTemplate);
  }
  scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    return scrapeMotionValuesFromProps(props, prevProps, visualElement);
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (const key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs
var SVGVisualElement = class extends DOMVisualElement {
  constructor() {
    super(...arguments);
    this.type = "svg";
    this.isSVGTag = false;
    this.measureInstanceViewportBox = createBox;
  }
  getBaseTargetFromProps(props, key) {
    return props[key];
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      const defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    }
    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
    return instance.getAttribute(key);
  }
  scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    return scrapeMotionValuesFromProps2(props, prevProps, visualElement);
  }
  build(renderState, latestValues, props) {
    buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderSVG(instance, renderState, styleProp, projection);
  }
  mount(instance) {
    this.isSVGTag = isSVGTag(instance.tagName);
    super.mount(instance);
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = (Component3, options) => {
  return isSVGComponent(Component3) ? new SVGVisualElement(options) : new HTMLVisualElement(options, {
    allowProjection: Component3 !== import_react170.Fragment
  });
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/create.mjs
var createMotionComponent = createMotionComponentFactory({
  ...animations,
  ...gestureAnimations,
  ...drag,
  ...layout
}, createDomVisualElement);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs
var motion = createDOMMotionComponentProxy(createMotionComponent);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react171 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/features-animation.mjs
var domAnimation = {
  renderer: createDomVisualElement,
  ...animations,
  ...gestureAnimations
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/features-max.mjs
var domMax = {
  ...domAnimation,
  ...drag,
  ...layout
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/features-min.mjs
var domMin = {
  renderer: createDomVisualElement,
  ...animations
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-motion-value-event.mjs
var import_react172 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-scroll.mjs
var import_react173 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-motion-value.mjs
var import_react174 = __toESM(require_react(), 1);
function useMotionValue(initial) {
  const value = useConstant(() => motionValue(initial));
  const { isStatic } = (0, import_react174.useContext)(MotionConfigContext);
  if (isStatic) {
    const [, setLatest] = (0, import_react174.useState)(initial);
    (0, import_react174.useEffect)(() => value.on("change", setLatest), []);
  }
  return value;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-combine-values.mjs
function useCombineMotionValues(values, combineValues) {
  const value = useMotionValue(combineValues());
  const updateValue = () => value.set(combineValues());
  updateValue();
  useIsomorphicLayoutEffect(() => {
    const scheduleUpdate = () => frame.preRender(updateValue, false, true);
    const subscriptions = values.map((v5) => v5.on("change", scheduleUpdate));
    return () => {
      subscriptions.forEach((unsubscribe) => unsubscribe());
      cancelFrame(updateValue);
    };
  });
  return value;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-spring.mjs
var import_react175 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs
var import_react176 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-computed.mjs
function useComputed(compute) {
  collectMotionValues.current = [];
  compute();
  const value = useCombineMotionValues(collectMotionValues.current, compute);
  collectMotionValues.current = void 0;
  return value;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-transform.mjs
function useTransform(input, inputRangeOrTransformer, outputRange, options) {
  if (typeof input === "function") {
    return useComputed(input);
  }
  const transformer = typeof inputRangeOrTransformer === "function" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);
  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], ([latest]) => transformer(latest));
}
function useListTransform(values, transformer) {
  const latest = useConstant(() => []);
  return useCombineMotionValues(values, () => {
    latest.length = 0;
    const numValues = values.length;
    for (let i19 = 0; i19 < numValues; i19++) {
      latest[i19] = values[i19].get();
    }
    return transformer(latest);
  });
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion.mjs
var import_react177 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/reduced-motion/use-reduced-motion-config.mjs
var import_react178 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs
function isDOMKeyframes(keyframes2) {
  return typeof keyframes2 === "object" && !Array.isArray(keyframes2);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/resolve-subjects.mjs
function resolveSubjects(subject, keyframes2, scope, selectorCache) {
  if (typeof subject === "string" && isDOMKeyframes(keyframes2)) {
    return resolveElements(subject, scope, selectorCache);
  } else if (subject instanceof NodeList) {
    return Array.from(subject);
  } else if (Array.isArray(subject)) {
    return subject;
  } else {
    return [subject];
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/utils/calc-repeat-duration.mjs
function calculateRepeatDuration(duration, repeat, _repeatDelay) {
  return duration * (repeat + 1);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs
function calcNextTime(current, next, prev, labels) {
  if (typeof next === "number") {
    return next;
  } else if (next.startsWith("-") || next.startsWith("+")) {
    return Math.max(0, current + parseFloat(next));
  } else if (next === "<") {
    return prev;
  } else {
    return labels.get(next) ?? current;
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs
function eraseKeyframes(sequence, startTime, endTime) {
  for (let i19 = 0; i19 < sequence.length; i19++) {
    const keyframe = sequence[i19];
    if (keyframe.at > startTime && keyframe.at < endTime) {
      removeItem(sequence, keyframe);
      i19--;
    }
  }
}
function addKeyframes(sequence, keyframes2, easing, offset2, startTime, endTime) {
  eraseKeyframes(sequence, startTime, endTime);
  for (let i19 = 0; i19 < keyframes2.length; i19++) {
    sequence.push({
      value: keyframes2[i19],
      at: mixNumber(startTime, endTime, offset2[i19]),
      easing: getEasingForSegment(easing, i19)
    });
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/utils/normalize-times.mjs
function normalizeTimes(times, repeat) {
  for (let i19 = 0; i19 < times.length; i19++) {
    times[i19] = times[i19] / (repeat + 1);
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs
function compareByTime(a25, b11) {
  if (a25.at === b11.at) {
    if (a25.value === null)
      return 1;
    if (b11.value === null)
      return -1;
    return 0;
  } else {
    return a25.at - b11.at;
  }
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/sequence/create.mjs
var defaultSegmentEasing = "easeInOut";
var MAX_REPEAT = 20;
function createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {
  const defaultDuration = defaultTransition.duration || 0.3;
  const animationDefinitions = /* @__PURE__ */ new Map();
  const sequences = /* @__PURE__ */ new Map();
  const elementCache = {};
  const timeLabels = /* @__PURE__ */ new Map();
  let prevTime = 0;
  let currentTime = 0;
  let totalDuration = 0;
  for (let i19 = 0; i19 < sequence.length; i19++) {
    const segment = sequence[i19];
    if (typeof segment === "string") {
      timeLabels.set(segment, currentTime);
      continue;
    } else if (!Array.isArray(segment)) {
      timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));
      continue;
    }
    let [subject, keyframes2, transition = {}] = segment;
    if (transition.at !== void 0) {
      currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);
    }
    let maxDuration = 0;
    const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {
      const valueKeyframesAsList = keyframesAsList(valueKeyframes);
      const { delay: delay2 = 0, times = defaultOffset(valueKeyframesAsList), type = "keyframes", repeat, repeatType, repeatDelay = 0, ...remainingTransition } = valueTransition;
      let { ease: ease2 = defaultTransition.ease || "easeOut", duration } = valueTransition;
      const calculatedDelay = typeof delay2 === "function" ? delay2(elementIndex, numSubjects) : delay2;
      const numKeyframes = valueKeyframesAsList.length;
      const createGenerator = isGenerator(type) ? type : generators == null ? void 0 : generators[type];
      if (numKeyframes <= 2 && createGenerator) {
        let absoluteDelta = 100;
        if (numKeyframes === 2 && isNumberKeyframesArray(valueKeyframesAsList)) {
          const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];
          absoluteDelta = Math.abs(delta);
        }
        const springTransition = { ...remainingTransition };
        if (duration !== void 0) {
          springTransition.duration = secondsToMilliseconds(duration);
        }
        const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);
        ease2 = springEasing.ease;
        duration = springEasing.duration;
      }
      duration ?? (duration = defaultDuration);
      const startTime = currentTime + calculatedDelay;
      if (times.length === 1 && times[0] === 0) {
        times[1] = 1;
      }
      const remainder = times.length - valueKeyframesAsList.length;
      remainder > 0 && fillOffset(times, remainder);
      valueKeyframesAsList.length === 1 && valueKeyframesAsList.unshift(null);
      if (repeat) {
        invariant(repeat < MAX_REPEAT, "Repeat count too high, must be less than 20");
        duration = calculateRepeatDuration(duration, repeat);
        const originalKeyframes = [...valueKeyframesAsList];
        const originalTimes = [...times];
        ease2 = Array.isArray(ease2) ? [...ease2] : [ease2];
        const originalEase = [...ease2];
        for (let repeatIndex = 0; repeatIndex < repeat; repeatIndex++) {
          valueKeyframesAsList.push(...originalKeyframes);
          for (let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++) {
            times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));
            ease2.push(keyframeIndex === 0 ? "linear" : getEasingForSegment(originalEase, keyframeIndex - 1));
          }
        }
        normalizeTimes(times, repeat);
      }
      const targetTime = startTime + duration;
      addKeyframes(valueSequence, valueKeyframesAsList, ease2, times, startTime, targetTime);
      maxDuration = Math.max(calculatedDelay + duration, maxDuration);
      totalDuration = Math.max(targetTime, totalDuration);
    };
    if (isMotionValue(subject)) {
      const subjectSequence = getSubjectSequence(subject, sequences);
      resolveValueSequence(keyframes2, transition, getValueSequence("default", subjectSequence));
    } else {
      const subjects = resolveSubjects(subject, keyframes2, scope, elementCache);
      const numSubjects = subjects.length;
      for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {
        keyframes2 = keyframes2;
        transition = transition;
        const thisSubject = subjects[subjectIndex];
        const subjectSequence = getSubjectSequence(thisSubject, sequences);
        for (const key in keyframes2) {
          resolveValueSequence(keyframes2[key], getValueTransition2(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);
        }
      }
    }
    prevTime = currentTime;
    currentTime += maxDuration;
  }
  sequences.forEach((valueSequences, element) => {
    for (const key in valueSequences) {
      const valueSequence = valueSequences[key];
      valueSequence.sort(compareByTime);
      const keyframes2 = [];
      const valueOffset = [];
      const valueEasing = [];
      for (let i19 = 0; i19 < valueSequence.length; i19++) {
        const { at: at3, value, easing } = valueSequence[i19];
        keyframes2.push(value);
        valueOffset.push(progress(0, totalDuration, at3));
        valueEasing.push(easing || "easeOut");
      }
      if (valueOffset[0] !== 0) {
        valueOffset.unshift(0);
        keyframes2.unshift(keyframes2[0]);
        valueEasing.unshift(defaultSegmentEasing);
      }
      if (valueOffset[valueOffset.length - 1] !== 1) {
        valueOffset.push(1);
        keyframes2.push(null);
      }
      if (!animationDefinitions.has(element)) {
        animationDefinitions.set(element, {
          keyframes: {},
          transition: {}
        });
      }
      const definition = animationDefinitions.get(element);
      definition.keyframes[key] = keyframes2;
      definition.transition[key] = {
        ...defaultTransition,
        duration: totalDuration,
        ease: valueEasing,
        times: valueOffset,
        ...sequenceTransition
      };
    }
  });
  return animationDefinitions;
}
function getSubjectSequence(subject, sequences) {
  !sequences.has(subject) && sequences.set(subject, {});
  return sequences.get(subject);
}
function getValueSequence(name, sequences) {
  if (!sequences[name])
    sequences[name] = [];
  return sequences[name];
}
function keyframesAsList(keyframes2) {
  return Array.isArray(keyframes2) ? keyframes2 : [keyframes2];
}
function getValueTransition2(transition, key) {
  return transition && transition[key] ? {
    ...transition,
    ...transition[key]
  } : { ...transition };
}
var isNumber = (keyframe) => typeof keyframe === "number";
var isNumberKeyframesArray = (keyframes2) => keyframes2.every(isNumber);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs
function isObjectKey(key, object) {
  return key in object;
}
var ObjectVisualElement = class extends VisualElement {
  constructor() {
    super(...arguments);
    this.type = "object";
  }
  readValueFromInstance(instance, key) {
    if (isObjectKey(key, instance)) {
      const value = instance[key];
      if (typeof value === "string" || typeof value === "number") {
        return value;
      }
    }
    return void 0;
  }
  getBaseTargetFromProps() {
    return void 0;
  }
  removeValueFromRenderState(key, renderState) {
    delete renderState.output[key];
  }
  measureInstanceViewportBox() {
    return createBox();
  }
  build(renderState, latestValues) {
    Object.assign(renderState.output, latestValues);
  }
  renderInstance(instance, { output }) {
    Object.assign(instance, output);
  }
  sortInstanceNodePosition() {
    return 0;
  }
};

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs
function createDOMVisualElement(element) {
  const options = {
    presenceContext: null,
    props: {},
    visualState: {
      renderState: {
        transform: {},
        transformOrigin: {},
        style: {},
        vars: {},
        attrs: {}
      },
      latestValues: {}
    }
  };
  const node = isSVGElement(element) ? new SVGVisualElement(options) : new HTMLVisualElement(options);
  node.mount(element);
  visualElementStore.set(element, node);
}
function createObjectVisualElement(subject) {
  const options = {
    presenceContext: null,
    props: {},
    visualState: {
      renderState: {
        output: {}
      },
      latestValues: {}
    }
  };
  const node = new ObjectVisualElement(options);
  node.mount(subject);
  visualElementStore.set(subject, node);
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/subject.mjs
function isSingleValue(subject, keyframes2) {
  return isMotionValue(subject) || typeof subject === "number" || typeof subject === "string" && !isDOMKeyframes(keyframes2);
}
function animateSubject(subject, keyframes2, options, scope) {
  const animations2 = [];
  if (isSingleValue(subject, keyframes2)) {
    animations2.push(animateSingleValue(subject, isDOMKeyframes(keyframes2) ? keyframes2.default || keyframes2 : keyframes2, options ? options.default || options : options));
  } else {
    const subjects = resolveSubjects(subject, keyframes2, scope);
    const numSubjects = subjects.length;
    invariant(Boolean(numSubjects), "No valid elements provided.");
    for (let i19 = 0; i19 < numSubjects; i19++) {
      const thisSubject = subjects[i19];
      const createVisualElement = thisSubject instanceof Element ? createDOMVisualElement : createObjectVisualElement;
      if (!visualElementStore.has(thisSubject)) {
        createVisualElement(thisSubject);
      }
      const visualElement = visualElementStore.get(thisSubject);
      const transition = { ...options };
      if ("delay" in transition && typeof transition.delay === "function") {
        transition.delay = transition.delay(i19, numSubjects);
      }
      animations2.push(...animateTarget(visualElement, { ...keyframes2, transition }, {}));
    }
  }
  return animations2;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/sequence.mjs
function animateSequence(sequence, options, scope) {
  const animations2 = [];
  const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });
  animationDefinitions.forEach(({ keyframes: keyframes2, transition }, subject) => {
    animations2.push(...animateSubject(subject, keyframes2, transition));
  });
  return animations2;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate/index.mjs
function isSequence(value) {
  return Array.isArray(value) && value.some(Array.isArray);
}
function createScopedAnimate(scope) {
  function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {
    let animations2 = [];
    if (isSequence(subjectOrSequence)) {
      animations2 = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);
    } else {
      animations2 = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);
    }
    const animation = new GroupAnimationWithThen(animations2);
    if (scope) {
      scope.animations.push(animation);
    }
    return animation;
  }
  return scopedAnimate;
}
var animate = createScopedAnimate();

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/animate-elements.mjs
function animateElements(elementOrSelector, keyframes2, options, scope) {
  const elements = resolveElements(elementOrSelector, scope);
  const numElements = elements.length;
  invariant(Boolean(numElements), "No valid element provided.");
  const animationDefinitions = [];
  for (let i19 = 0; i19 < numElements; i19++) {
    const element = elements[i19];
    const elementTransition = { ...options };
    if (typeof elementTransition.delay === "function") {
      elementTransition.delay = elementTransition.delay(i19, numElements);
    }
    for (const valueName in keyframes2) {
      let valueKeyframes = keyframes2[valueName];
      if (!Array.isArray(valueKeyframes)) {
        valueKeyframes = [valueKeyframes];
      }
      const valueOptions = {
        ...getValueTransition(elementTransition, valueName)
      };
      valueOptions.duration && (valueOptions.duration = secondsToMilliseconds(valueOptions.duration));
      valueOptions.delay && (valueOptions.delay = secondsToMilliseconds(valueOptions.delay));
      const map = getAnimationMap(element);
      const key = animationMapKey(valueName, valueOptions.pseudoElement || "");
      const currentAnimation = map.get(key);
      currentAnimation && currentAnimation.stop();
      animationDefinitions.push({
        map,
        key,
        unresolvedKeyframes: valueKeyframes,
        options: {
          ...valueOptions,
          element,
          name: valueName,
          allowFlatten: !elementTransition.type && !elementTransition.ease
        }
      });
    }
  }
  for (let i19 = 0; i19 < animationDefinitions.length; i19++) {
    const { unresolvedKeyframes, options: animationOptions } = animationDefinitions[i19];
    const { element, name, pseudoElement } = animationOptions;
    if (!pseudoElement && unresolvedKeyframes[0] === null) {
      unresolvedKeyframes[0] = getComputedStyle3(element, name);
    }
    fillWildcards(unresolvedKeyframes);
    applyPxDefaults(unresolvedKeyframes, name);
    if (!pseudoElement && unresolvedKeyframes.length < 2) {
      unresolvedKeyframes.unshift(getComputedStyle3(element, name));
    }
    animationOptions.keyframes = unresolvedKeyframes;
  }
  const animations2 = [];
  for (let i19 = 0; i19 < animationDefinitions.length; i19++) {
    const { map, key, options: animationOptions } = animationDefinitions[i19];
    const animation = new NativeAnimation(animationOptions);
    map.set(key, animation);
    animation.finished.finally(() => map.delete(key));
    animations2.push(animation);
  }
  return animations2;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animators/waapi/animate-style.mjs
var createScopedWaapiAnimate = (scope) => {
  function scopedAnimate(elementOrSelector, keyframes2, options) {
    return new GroupAnimationWithThen(animateElements(elementOrSelector, keyframes2, options, scope));
  }
  return scopedAnimate;
};
var animateMini = createScopedWaapiAnimate();

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence-data.mjs
var import_react179 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/use-dom-event.mjs
var import_react180 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs
var import_react181 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-cycle.mjs
var import_react182 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-in-view.mjs
var import_react183 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs
var import_react184 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs
var import_react185 = __toESM(require_react(), 1);
var createObject = () => ({});
var useVisualState = makeUseVisualState({
  scrapeMotionValuesFromProps: createObject,
  createRenderState: createObject
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs
var import_jsx_runtime42 = __toESM(require_jsx_runtime(), 1);
var React35 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-inverted-scale.mjs
var import_react186 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/namespace.mjs
var namespace_exports = {};
__export(namespace_exports, {
  Group: () => ReorderGroup,
  Item: () => ReorderItem
});

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
var import_jsx_runtime43 = __toESM(require_jsx_runtime(), 1);
var import_react188 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/ReorderContext.mjs
var import_react187 = __toESM(require_react(), 1);
var ReorderContext = (0, import_react187.createContext)(null);

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs
function checkReorder(order, value, offset2, velocity) {
  if (!velocity)
    return order;
  const index2 = order.findIndex((item2) => item2.value === value);
  if (index2 === -1)
    return order;
  const nextOffset = velocity > 0 ? 1 : -1;
  const nextItem = order[index2 + nextOffset];
  if (!nextItem)
    return order;
  const item = order[index2];
  const nextLayout = nextItem.layout;
  const nextItemCenter = mixNumber(nextLayout.min, nextLayout.max, 0.5);
  if (nextOffset === 1 && item.layout.max + offset2 > nextItemCenter || nextOffset === -1 && item.layout.min + offset2 < nextItemCenter) {
    return moveItem(order, index2, index2 + nextOffset);
  }
  return order;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
function ReorderGroupComponent({ children, as = "ul", axis = "y", onReorder, values, ...props }, externalRef) {
  const Component3 = useConstant(() => motion[as]);
  const order = [];
  const isReordering = (0, import_react188.useRef)(false);
  invariant(Boolean(values), "Reorder.Group must be provided a values prop");
  const context = {
    axis,
    registerItem: (value, layout2) => {
      const idx = order.findIndex((entry) => value === entry.value);
      if (idx !== -1) {
        order[idx].layout = layout2[axis];
      } else {
        order.push({ value, layout: layout2[axis] });
      }
      order.sort(compareMin);
    },
    updateOrder: (item, offset2, velocity) => {
      if (isReordering.current)
        return;
      const newOrder = checkReorder(order, item, offset2, velocity);
      if (order !== newOrder) {
        isReordering.current = true;
        onReorder(newOrder.map(getValue2).filter((value) => values.indexOf(value) !== -1));
      }
    }
  };
  (0, import_react188.useEffect)(() => {
    isReordering.current = false;
  });
  return (0, import_jsx_runtime43.jsx)(Component3, { ...props, ref: externalRef, ignoreStrict: true, children: (0, import_jsx_runtime43.jsx)(ReorderContext.Provider, { value: context, children }) });
}
var ReorderGroup = (0, import_react188.forwardRef)(ReorderGroupComponent);
function getValue2(item) {
  return item.value;
}
function compareMin(a25, b11) {
  return a25.layout.min - b11.layout.min;
}

// node_modules/.pnpm/framer-motion@12.9.4_@emotion+is-prop-valid@0.8.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
var import_jsx_runtime44 = __toESM(require_jsx_runtime(), 1);
var import_react189 = __toESM(require_react(), 1);
function useDefaultMotionValue(value, defaultValue = 0) {
  return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItemComponent({ children, style = {}, value, as = "li", onDrag, layout: layout2 = true, ...props }, externalRef) {
  const Component3 = useConstant(() => motion[as]);
  const context = (0, import_react189.useContext)(ReorderContext);
  const point = {
    x: useDefaultMotionValue(style.x),
    y: useDefaultMotionValue(style.y)
  };
  const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : "unset");
  invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
  const { axis, registerItem, updateOrder } = context;
  return (0, import_jsx_runtime44.jsx)(Component3, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout2, onDrag: (event, gesturePoint) => {
    const { velocity } = gesturePoint;
    velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);
    onDrag && onDrag(event, gesturePoint);
  }, onLayoutMeasure: (measured) => registerItem(value, measured), ref: externalRef, ignoreStrict: true, children });
}
var ReorderItem = (0, import_react189.forwardRef)(ReorderItemComponent);

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/tabs.js
var TabRoot = (0, import_react190.forwardRef)((t0, ref) => {
  const $4 = (0, import_react_compiler_runtime39.c)(16);
  let children;
  let className;
  let isActive;
  let props;
  let value;
  if ($4[0] !== t0) {
    ({
      isActive,
      value,
      children,
      className,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = className;
    $4[3] = isActive;
    $4[4] = props;
    $4[5] = value;
  } else {
    children = $4[1];
    className = $4[2];
    isActive = $4[3];
    props = $4[4];
    value = $4[5];
  }
  const t1 = isActive && "graphiql-tab-active";
  let t22;
  if ($4[6] !== className || $4[7] !== t1) {
    t22 = clsx("graphiql-tab", t1, className);
    $4[6] = className;
    $4[7] = t1;
    $4[8] = t22;
  } else {
    t22 = $4[8];
  }
  let t32;
  if ($4[9] !== children || $4[10] !== isActive || $4[11] !== props || $4[12] !== ref || $4[13] !== t22 || $4[14] !== value) {
    t32 = (0, import_jsx_runtime45.jsx)(namespace_exports.Item, { ...props, ref, value, "aria-selected": isActive, role: "tab", className: t22, children });
    $4[9] = children;
    $4[10] = isActive;
    $4[11] = props;
    $4[12] = ref;
    $4[13] = t22;
    $4[14] = value;
    $4[15] = t32;
  } else {
    t32 = $4[15];
  }
  return t32;
});
TabRoot.displayName = "Tab";
var TabButton = (0, import_react190.forwardRef)((t0, ref) => {
  const $4 = (0, import_react_compiler_runtime39.c)(11);
  let children;
  let className;
  let props;
  if ($4[0] !== t0) {
    ({
      children,
      className,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = className;
    $4[3] = props;
  } else {
    children = $4[1];
    className = $4[2];
    props = $4[3];
  }
  let t1;
  if ($4[4] !== className) {
    t1 = clsx("graphiql-tab-button", className);
    $4[4] = className;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  let t22;
  if ($4[6] !== children || $4[7] !== props || $4[8] !== ref || $4[9] !== t1) {
    t22 = (0, import_jsx_runtime45.jsx)(UnStyledButton, { ...props, ref, type: "button", className: t1, children });
    $4[6] = children;
    $4[7] = props;
    $4[8] = ref;
    $4[9] = t1;
    $4[10] = t22;
  } else {
    t22 = $4[10];
  }
  return t22;
});
TabButton.displayName = "Tab.Button";
var TabClose = (0, import_react190.forwardRef)((props, ref) => {
  const $4 = (0, import_react_compiler_runtime39.c)(7);
  let t0;
  if ($4[0] !== props.className) {
    t0 = clsx("graphiql-tab-close", props.className);
    $4[0] = props.className;
    $4[1] = t0;
  } else {
    t0 = $4[1];
  }
  let t1;
  if ($4[2] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime45.jsx)(CloseIcon, {});
    $4[2] = t1;
  } else {
    t1 = $4[2];
  }
  let t22;
  if ($4[3] !== props || $4[4] !== ref || $4[5] !== t0) {
    t22 = (0, import_jsx_runtime45.jsx)(UnStyledButton, { "aria-label": "Close Tab", ...props, ref, type: "button", className: t0, children: t1 });
    $4[3] = props;
    $4[4] = ref;
    $4[5] = t0;
    $4[6] = t22;
  } else {
    t22 = $4[6];
  }
  return t22;
});
TabClose.displayName = "Tab.Close";
var Tab = Object.assign(TabRoot, {
  Button: TabButton,
  Close: TabClose
});
var Tabs = (0, import_react190.forwardRef)((t0, ref) => {
  const $4 = (0, import_react_compiler_runtime39.c)(15);
  let children;
  let className;
  let onReorder;
  let props;
  let values;
  if ($4[0] !== t0) {
    ({
      values,
      onReorder,
      children,
      className,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = children;
    $4[2] = className;
    $4[3] = onReorder;
    $4[4] = props;
    $4[5] = values;
  } else {
    children = $4[1];
    className = $4[2];
    onReorder = $4[3];
    props = $4[4];
    values = $4[5];
  }
  let t1;
  if ($4[6] !== className) {
    t1 = clsx("graphiql-tabs", className);
    $4[6] = className;
    $4[7] = t1;
  } else {
    t1 = $4[7];
  }
  let t22;
  if ($4[8] !== children || $4[9] !== onReorder || $4[10] !== props || $4[11] !== ref || $4[12] !== t1 || $4[13] !== values) {
    t22 = (0, import_jsx_runtime45.jsx)(namespace_exports.Group, { ...props, ref, values, onReorder, axis: "x", role: "tablist", className: t1, children });
    $4[8] = children;
    $4[9] = onReorder;
    $4[10] = props;
    $4[11] = ref;
    $4[12] = t1;
    $4[13] = values;
    $4[14] = t22;
  } else {
    t22 = $4[14];
  }
  return t22;
});
Tabs.displayName = "Tabs";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/ui/tooltip.js
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime40 = __toESM(require_dist());
var TooltipRoot = (t0) => {
  const $4 = (0, import_react_compiler_runtime40.c)(10);
  const {
    children,
    align: t1,
    side: t22,
    sideOffset: t32,
    label
  } = t0;
  const align = t1 === void 0 ? "start" : t1;
  const side = t22 === void 0 ? "bottom" : t22;
  const sideOffset = t32 === void 0 ? 5 : t32;
  let t42;
  if ($4[0] !== children) {
    t42 = (0, import_jsx_runtime46.jsx)(Trigger3, { asChild: true, children });
    $4[0] = children;
    $4[1] = t42;
  } else {
    t42 = $4[1];
  }
  let t52;
  if ($4[2] !== align || $4[3] !== label || $4[4] !== side || $4[5] !== sideOffset) {
    t52 = (0, import_jsx_runtime46.jsx)(Portal3, { children: (0, import_jsx_runtime46.jsx)(Content22, { className: "graphiql-tooltip", align, side, sideOffset, children: label }) });
    $4[2] = align;
    $4[3] = label;
    $4[4] = side;
    $4[5] = sideOffset;
    $4[6] = t52;
  } else {
    t52 = $4[6];
  }
  let t62;
  if ($4[7] !== t42 || $4[8] !== t52) {
    t62 = (0, import_jsx_runtime46.jsxs)(Root3, { children: [
      t42,
      t52
    ] });
    $4[7] = t42;
    $4[8] = t52;
    $4[9] = t62;
  } else {
    t62 = $4[9];
  }
  return t62;
};
var Tooltip = Object.assign(TooltipRoot, {
  Provider
});

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/toolbar/button.js
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime41 = __toESM(require_dist());
var import_react191 = __toESM(require_react());
var ToolbarButton = (0, import_react191.forwardRef)((t0, ref) => {
  const $4 = (0, import_react_compiler_runtime41.c)(19);
  let label;
  let onClick;
  let props;
  if ($4[0] !== t0) {
    ({
      label,
      onClick,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = label;
    $4[2] = onClick;
    $4[3] = props;
  } else {
    label = $4[1];
    onClick = $4[2];
    props = $4[3];
  }
  const [error2, setError] = (0, import_react191.useState)(null);
  let t1;
  if ($4[4] !== onClick) {
    t1 = (event) => {
      try {
        if (onClick) {
          onClick(event);
        }
        setError(null);
      } catch (t222) {
        const err = t222;
        setError(err instanceof Error ? err : new Error(`Toolbar button click failed: ${err}`));
      }
    };
    $4[4] = onClick;
    $4[5] = t1;
  } else {
    t1 = $4[5];
  }
  const handleClick = t1;
  const t22 = error2 && "error";
  let t32;
  if ($4[6] !== props.className || $4[7] !== t22) {
    t32 = clsx("graphiql-toolbar-button", t22, props.className);
    $4[6] = props.className;
    $4[7] = t22;
    $4[8] = t32;
  } else {
    t32 = $4[8];
  }
  const t42 = error2 ? error2.message : label;
  const t52 = error2 ? "true" : props["aria-invalid"];
  let t62;
  if ($4[9] !== handleClick || $4[10] !== props || $4[11] !== ref || $4[12] !== t32 || $4[13] !== t42 || $4[14] !== t52) {
    t62 = (0, import_jsx_runtime47.jsx)(UnStyledButton, { ...props, ref, type: "button", className: t32, onClick: handleClick, "aria-label": t42, "aria-invalid": t52 });
    $4[9] = handleClick;
    $4[10] = props;
    $4[11] = ref;
    $4[12] = t32;
    $4[13] = t42;
    $4[14] = t52;
    $4[15] = t62;
  } else {
    t62 = $4[15];
  }
  let t72;
  if ($4[16] !== label || $4[17] !== t62) {
    t72 = (0, import_jsx_runtime47.jsx)(Tooltip, { label, children: t62 });
    $4[16] = label;
    $4[17] = t62;
    $4[18] = t72;
  } else {
    t72 = $4[18];
  }
  return t72;
});
ToolbarButton.displayName = "ToolbarButton";

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/toolbar/execute.js
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime42 = __toESM(require_dist());

// node_modules/.pnpm/@graphiql+react@0.31.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_graphql@_a65ac5f7b31416590b2b50cc08df5158/node_modules/@graphiql/react/dist/toolbar/menu.js
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var import_react_compiler_runtime43 = __toESM(require_dist());
var ToolbarMenuRoot = (t0) => {
  const $4 = (0, import_react_compiler_runtime43.c)(20);
  let button;
  let children;
  let label;
  let props;
  if ($4[0] !== t0) {
    ({
      button,
      children,
      label,
      ...props
    } = t0);
    $4[0] = t0;
    $4[1] = button;
    $4[2] = children;
    $4[3] = label;
    $4[4] = props;
  } else {
    button = $4[1];
    children = $4[2];
    label = $4[3];
    props = $4[4];
  }
  let t1;
  if ($4[5] !== props.className) {
    t1 = clsx("graphiql-un-styled graphiql-toolbar-menu", props.className);
    $4[5] = props.className;
    $4[6] = t1;
  } else {
    t1 = $4[6];
  }
  let t22;
  if ($4[7] !== button || $4[8] !== label || $4[9] !== t1) {
    t22 = (0, import_jsx_runtime49.jsx)(DropdownMenu.Button, { className: t1, "aria-label": label, children: button });
    $4[7] = button;
    $4[8] = label;
    $4[9] = t1;
    $4[10] = t22;
  } else {
    t22 = $4[10];
  }
  let t32;
  if ($4[11] !== label || $4[12] !== t22) {
    t32 = (0, import_jsx_runtime49.jsx)(Tooltip, { label, children: t22 });
    $4[11] = label;
    $4[12] = t22;
    $4[13] = t32;
  } else {
    t32 = $4[13];
  }
  let t42;
  if ($4[14] !== children) {
    t42 = (0, import_jsx_runtime49.jsx)(DropdownMenu.Content, { children });
    $4[14] = children;
    $4[15] = t42;
  } else {
    t42 = $4[15];
  }
  let t52;
  if ($4[16] !== props || $4[17] !== t32 || $4[18] !== t42) {
    t52 = (0, import_jsx_runtime49.jsxs)(DropdownMenu, { ...props, children: [
      t32,
      t42
    ] });
    $4[16] = props;
    $4[17] = t32;
    $4[18] = t42;
    $4[19] = t52;
  } else {
    t52 = $4[19];
  }
  return t52;
};
var ToolbarMenu = Object.assign(ToolbarMenuRoot, {
  Item: DropdownMenu.Item
});

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/context.js
var SnippetContext = createNullableContext("SnippetContext");
function SnippetContextProvider(t0) {
  const $4 = (0, import_react_compiler_runtime44.c)(15);
  const {
    editQuery,
    editVariables,
    snippetsEndpoint,
    children
  } = t0;
  let t1;
  if ($4[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = [];
    $4[0] = t1;
  } else {
    t1 = $4[0];
  }
  const [snippets, setSnippets] = (0, import_react192.useState)(t1);
  const [isLoading, setIsLoading] = (0, import_react192.useState)(true);
  let t22;
  if ($4[1] !== isLoading || $4[2] !== snippetsEndpoint) {
    t22 = () => {
      if (!isLoading) {
        return;
      }
      fetch(snippetsEndpoint).then(_temp).then((data) => setSnippets(data)).catch(_temp2).finally(() => setIsLoading(false));
    };
    $4[1] = isLoading;
    $4[2] = snippetsEndpoint;
    $4[3] = t22;
  } else {
    t22 = $4[3];
  }
  let t32;
  if ($4[4] === Symbol.for("react.memo_cache_sentinel")) {
    t32 = [];
    $4[4] = t32;
  } else {
    t32 = $4[4];
  }
  (0, import_react192.useEffect)(t22, t32);
  let items;
  if ($4[5] !== snippets) {
    items = [];
    for (const snippet of snippets) {
      items.push({
        operationName: snippet.title,
        query: snippet.query,
        variables: snippet.variables
      });
    }
    $4[5] = snippets;
    $4[6] = items;
  } else {
    items = $4[6];
  }
  let t42;
  if ($4[7] !== editQuery || $4[8] !== editVariables || $4[9] !== items || $4[10] !== snippetsEndpoint) {
    t42 = {
      items,
      editQuery,
      editVariables,
      snippetsEndpoint
    };
    $4[7] = editQuery;
    $4[8] = editVariables;
    $4[9] = items;
    $4[10] = snippetsEndpoint;
    $4[11] = t42;
  } else {
    t42 = $4[11];
  }
  const value = t42;
  let t52;
  if ($4[12] !== children || $4[13] !== value) {
    t52 = (0, import_jsx_runtime50.jsx)(SnippetContext.Provider, { value, children });
    $4[12] = children;
    $4[13] = value;
    $4[14] = t52;
  } else {
    t52 = $4[14];
  }
  return t52;
}
function _temp2(error2) {
  return console.error(error2);
}
function _temp(response) {
  if (!response.ok) {
    throw new Error("Cannot download snippets.");
  }
  return response.json();
}
var useSnippetContext = createContextHook(SnippetContext);

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/components.js
var import_jsx_runtime51 = __toESM(require_jsx_runtime(), 1);
var import_react_compiler_runtime45 = __toESM(require_dist(), 1);
function Snippet() {
  const $4 = (0, import_react_compiler_runtime45.c)(5);
  const context = useSnippetContext();
  console.log("context", context);
  let t0;
  if ($4[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = (0, import_jsx_runtime51.jsx)("div", { className: "graphiql-history-header", children: "Snippet" });
    $4[0] = t0;
  } else {
    t0 = $4[0];
  }
  let t1;
  if ($4[1] !== (context == null ? void 0 : context.items)) {
    t1 = context == null ? void 0 : context.items.map(_temp3);
    $4[1] = context == null ? void 0 : context.items;
    $4[2] = t1;
  } else {
    t1 = $4[2];
  }
  let t22;
  if ($4[3] !== t1) {
    t22 = (0, import_jsx_runtime51.jsxs)("section", { "aria-label": "Snippet", className: "graphiql-history", children: [
      t0,
      (0, import_jsx_runtime51.jsx)("ul", { className: "graphiql-history-items", children: t1 })
    ] });
    $4[3] = t1;
    $4[4] = t22;
  } else {
    t22 = $4[4];
  }
  return t22;
}
function _temp3(item, index2) {
  return (0, import_jsx_runtime51.jsx)(SnippetItem, { item }, `snippet-item-${index2}`);
}
function SnippetItem(props) {
  const $4 = (0, import_react_compiler_runtime45.c)(10);
  const context = useSnippetContext();
  let t0;
  if ($4[0] !== context || $4[1] !== props.item.query || $4[2] !== props.item.variables) {
    t0 = () => {
      context == null ? void 0 : context.editQuery(props.item.query ?? "");
      if (context == null ? void 0 : context.editVariables) {
        context.editVariables(props.item.variables ?? "");
      }
    };
    $4[0] = context;
    $4[1] = props.item.query;
    $4[2] = props.item.variables;
    $4[3] = t0;
  } else {
    t0 = $4[3];
  }
  let t1;
  if ($4[4] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = clsx("graphiql-history-item");
    $4[4] = t1;
  } else {
    t1 = $4[4];
  }
  let t22;
  if ($4[5] !== props.item.operationName) {
    t22 = (0, import_jsx_runtime51.jsx)(import_jsx_runtime51.Fragment, { children: (0, import_jsx_runtime51.jsx)(UnStyledButton, { type: "button", className: "graphiql-history-item-label", "aria-label": "Set active", children: props.item.operationName }) });
    $4[5] = props.item.operationName;
    $4[6] = t22;
  } else {
    t22 = $4[6];
  }
  let t32;
  if ($4[7] !== t0 || $4[8] !== t22) {
    t32 = (0, import_jsx_runtime51.jsx)("li", { onClick: t0, className: t1, children: t22 });
    $4[7] = t0;
    $4[8] = t22;
    $4[9] = t32;
  } else {
    t32 = $4[9];
  }
  return t32;
}

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/icon.js
var React36 = __toESM(require_react(), 1);
var SvgIcon = (props) => React36.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, React36.createElement("title", null, "code snippet document icon"), React36.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H17.25M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H16.25C16.8023 0.75 17.25 1.19772 17.25 1.75V5.25M0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H17.25", stroke: "currentColor", strokeWidth: 1.5 }), React36.createElement("path", { d: "M7.5 14L5.5 12L7.5 10", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), React36.createElement("path", { d: "M12.5 10L14.5 12L12.5 14", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round" }), React36.createElement("path", { d: "M10 10.5L9 13.5", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }));

// node_modules/.pnpm/graphiql-snippets@1.0.0_@codemirror+language@6.0.0_@emotion+is-prop-valid@0.8.8_react-d_55c9dd990caac8f7cabec5abf270af34/node_modules/graphiql-snippets/dist/index.js
function snippetPlugin(snippetsEndpoint, setQuery, setVariables) {
  return {
    title: "Snippet",
    icon: () => (0, import_jsx_runtime52.jsx)(SvgIcon, {}),
    content: () => {
      return (0, import_jsx_runtime52.jsx)(SnippetContextProvider, { editQuery: setQuery, editVariables: setVariables, snippetsEndpoint, children: (0, import_jsx_runtime52.jsx)(Snippet, {}) });
    }
  };
}
export {
  Snippet,
  SnippetContext,
  SnippetContextProvider,
  snippetPlugin as default,
  useSnippetContext
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-with-selector.development.js:
  (**
   * @license React
   * use-sync-external-store-with-selector.development.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

tabbable/dist/index.esm.js:
  (*!
  * tabbable 6.2.0
  * @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
  *)
*/
//# sourceMappingURL=graphiql-snippets.js.map
