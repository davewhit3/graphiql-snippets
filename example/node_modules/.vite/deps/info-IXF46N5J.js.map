{
  "version": 3,
  "sources": ["../../.pnpm/codemirror-graphql@2.2.1_@codemirror+language@6.0.0_codemirror@5.65.19_graphql@16.11.0/node_modules/codemirror-graphql/src/info.ts"],
  "sourcesContent": ["/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport {\n  GraphQLDirective,\n  GraphQLEnumType,\n  GraphQLEnumValue,\n  GraphQLInputField,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLSchema,\n  GraphQLType,\n} from 'graphql';\nimport CodeMirror from 'codemirror';\n\nimport getTypeInfo, { TypeInfo } from './utils/getTypeInfo';\nimport {\n  getArgumentReference,\n  getDirectiveReference,\n  getEnumValueReference,\n  getFieldReference,\n  getTypeReference,\n  SchemaReference,\n} from './utils/SchemaReference';\nimport './utils/info-addon';\nimport type { Maybe } from 'graphql-language-service';\n\nexport interface GraphQLInfoOptions {\n  schema?: GraphQLSchema;\n  onClick?: Maybe<(ref: Maybe<SchemaReference>, e: MouseEvent) => void>;\n  renderDescription?: (str: string) => string;\n  render?: () => string;\n}\n\n/**\n * Registers GraphQL \"info\" tooltips for CodeMirror.\n *\n * When hovering over a token, this presents a tooltip explaining it.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - hoverTime: The number of ms to wait before showing info. (Default 500)\n *   - renderDescription: Convert a description to some HTML, Useful since\n *                        descriptions are often Markdown formatted.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\nCodeMirror.registerHelper(\n  'info',\n  'graphql',\n  (token: CodeMirror.Token, options: GraphQLInfoOptions) => {\n    if (!options.schema || !token.state) {\n      return;\n    }\n    const { kind, step } = token.state;\n    const typeInfo = getTypeInfo(options.schema, token.state);\n    // Given a Schema and a Token, produce the contents of an info tooltip.\n    // To do this, create a div element that we will render \"into\" and then pass\n    // it to various rendering functions.\n    if (\n      (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n      (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef) ||\n      (kind === 'ObjectField' && step === 0 && typeInfo.fieldDef)\n    ) {\n      const header = document.createElement('div');\n      header.className = 'CodeMirror-info-header';\n      renderField(header, typeInfo, options);\n      const into = document.createElement('div');\n      into.append(header);\n      renderDescription(into, options, typeInfo.fieldDef as any);\n      return into;\n    }\n\n    if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n      const header = document.createElement('div');\n      header.className = 'CodeMirror-info-header';\n      renderDirective(header, typeInfo, options);\n      const into = document.createElement('div');\n      into.append(header);\n      renderDescription(into, options, typeInfo.directiveDef);\n      return into;\n    }\n    if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n      const header = document.createElement('div');\n      header.className = 'CodeMirror-info-header';\n      renderArg(header, typeInfo, options);\n      const into = document.createElement('div');\n      into.append(header);\n      renderDescription(into, options, typeInfo.argDef);\n      return into;\n    }\n    if (kind === 'EnumValue' && typeInfo.enumValue?.description) {\n      const header = document.createElement('div');\n      header.className = 'CodeMirror-info-header';\n      renderEnumValue(header, typeInfo, options);\n      const into = document.createElement('div');\n      into.append(header);\n      renderDescription(into, options, typeInfo.enumValue);\n      return into;\n    }\n    if (\n      kind === 'NamedType' &&\n      typeInfo.type &&\n      (typeInfo.type as GraphQLObjectType).description\n    ) {\n      const header = document.createElement('div');\n      header.className = 'CodeMirror-info-header';\n      renderType(header, typeInfo, options, typeInfo.type);\n      const into = document.createElement('div');\n      into.append(header);\n      renderDescription(into, options, typeInfo.type);\n      return into;\n    }\n  },\n);\n\nfunction renderField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\n\nfunction renderQualifiedField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const fieldName = typeInfo.fieldDef?.name || '';\n  text(into, fieldName, 'field-name', options, getFieldReference(typeInfo));\n}\n\nfunction renderDirective(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = '@' + (typeInfo.directiveDef?.name || '');\n  text(into, name, 'directive-name', options, getDirectiveReference(typeInfo));\n}\n\nfunction renderArg(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = typeInfo.argDef?.name || '';\n  text(into, name, 'arg-name', options, getArgumentReference(typeInfo));\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n}\n\nfunction renderEnumValue(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = typeInfo.enumValue?.name || '';\n  renderType(into, typeInfo, options, typeInfo.inputType);\n  text(into, '.');\n  text(into, name, 'enum-value', options, getEnumValueReference(typeInfo));\n}\n\nfunction renderTypeAnnotation(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  const typeSpan = document.createElement('span');\n  typeSpan.className = 'type-name-pill';\n  if (t instanceof GraphQLNonNull) {\n    renderType(typeSpan, typeInfo, options, t.ofType);\n    text(typeSpan, '!');\n  } else if (t instanceof GraphQLList) {\n    text(typeSpan, '[');\n    renderType(typeSpan, typeInfo, options, t.ofType);\n    text(typeSpan, ']');\n  } else {\n    text(\n      typeSpan,\n      t?.name || '',\n      'type-name',\n      options,\n      getTypeReference(typeInfo, t),\n    );\n  }\n  into.append(typeSpan);\n}\n\nfunction renderType(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  if (t instanceof GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(\n      into,\n      t?.name || '',\n      'type-name',\n      options,\n      getTypeReference(typeInfo, t),\n    );\n  }\n}\n\nfunction renderDescription(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const { description } = def as GraphQLInputField;\n  if (description) {\n    const descriptionDiv = document.createElement('div');\n    descriptionDiv.className = 'info-description';\n    if (options.renderDescription) {\n      descriptionDiv.innerHTML = options.renderDescription(description);\n    } else {\n      descriptionDiv.append(document.createTextNode(description));\n    }\n    into.append(descriptionDiv);\n  }\n\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const reason = (def as GraphQLInputField).deprecationReason;\n  if (reason) {\n    const deprecationDiv = document.createElement('div');\n    deprecationDiv.className = 'info-deprecation';\n    into.append(deprecationDiv);\n\n    const label = document.createElement('span');\n    label.className = 'info-deprecation-label';\n    label.append(document.createTextNode('Deprecated'));\n    deprecationDiv.append(label);\n\n    const reasonDiv = document.createElement('div');\n    reasonDiv.className = 'info-deprecation-reason';\n    if (options.renderDescription) {\n      reasonDiv.innerHTML = options.renderDescription(reason);\n    } else {\n      reasonDiv.append(document.createTextNode(reason));\n    }\n    deprecationDiv.append(reasonDiv);\n  }\n}\n\nfunction text(\n  into: HTMLElement,\n  content: string,\n  className = '',\n  options: GraphQLInfoOptions = { onClick: null },\n  ref: Maybe<SchemaReference> = null,\n) {\n  if (className) {\n    const { onClick } = options;\n    let node;\n    if (onClick) {\n      node = document.createElement('a');\n\n      // Providing a href forces proper a tag behavior, though we don't actually\n      // want clicking the node to navigate anywhere.\n      node.href = 'javascript:void 0'; // eslint-disable-line no-script-url\n      node.addEventListener('click', (e: MouseEvent) => {\n        // Although an href of 'javascript:void 0' should never navigate away from the page,\n        //   that is not always the case: https://github.com/graphql/graphiql/issues/3565\n        e.preventDefault();\n        onClick(ref, e);\n      });\n    } else {\n      node = document.createElement('span');\n    }\n    node.className = className;\n    node.append(document.createTextNode(content));\n    into.append(node);\n  } else {\n    into.append(document.createTextNode(content));\n  }\n}\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
