import {
  Close,
  Content,
  Content2,
  Content22,
  Description,
  HistoryStore,
  Item2,
  Overlay,
  Portal,
  Portal2,
  Portal3,
  Provider,
  Root,
  Root2,
  Root23 as Root22,
  Root3,
  StorageAPI,
  Title,
  Trigger,
  Trigger2,
  Trigger3,
  __assign,
  __extends,
  __read,
  __rest,
  __spreadArray,
  clsx,
  fetcherReturnToPromise,
  fillLeafs,
  formatError,
  formatResult,
  getSelectedOperationName,
  init_is_prop_valid_browser_esm,
  isAsyncIterable,
  isObservable,
  isPromise,
  is_prop_valid_browser_esm_exports,
  lib_default,
  mergeAst,
  require_copy_to_clipboard,
  require_dist,
  require_get_value,
  require_set_value,
  useVirtualizer
} from "./chunk-BIPRIKRM.js";
import {
  GraphQLDocumentMode,
  getFragmentDependenciesForAST,
  getOperationFacts
} from "./chunk-OASP4XPL.js";
import {
  require_jsx_runtime
} from "./chunk-5BYWATHG.js";
import "./chunk-XZLBJKVO.js";
import {
  astFromValue,
  buildClientSchema,
  getIntrospectionQuery,
  isAbstractType,
  isEnumType,
  isInputObjectType,
  isInterfaceType,
  isListType,
  isNamedType,
  isNonNullType,
  isObjectType,
  isScalarType,
  isSchema,
  isType,
  isUnionType,
  parse,
  print,
  validateSchema,
  visit
} from "./chunk-LKNORULI.js";
import {
  require_react_dom
} from "./chunk-VF3F2CFT.js";
import {
  require_react
} from "./chunk-RUMNNJCN.js";
import {
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/.pnpm/@graphiql+react@0.29.0_@codemirror+language@6.0.0_graphql@16.11.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@graphiql/react/dist/index.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react_compiler_runtime = __toESM(require_dist(), 1);
var React12 = __toESM(require_react(), 1);
var import_react93 = __toESM(require_react(), 1);
var import_set_value = __toESM(require_set_value(), 1);
var import_get_value = __toESM(require_get_value(), 1);
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs
var React2 = __toESM(require_react(), 1);
var import_react16 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var React = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/process.mjs
var defaultEnvironment = "production";
var env = typeof process === "undefined" || process.env === void 0 ? defaultEnvironment : "development";

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var createDefinition = function(propNames) {
  return {
    isEnabled: function(props) {
      return propNames.some(function(name) {
        return !!props[name];
      });
    }
  };
};
var featureDefinitions = {
  measureLayout: createDefinition(["layout", "layoutId", "drag"]),
  animation: createDefinition([
    "animate",
    "exit",
    "variants",
    "whileHover",
    "whileTap",
    "whileFocus",
    "whileDrag",
    "whileInView"
  ]),
  exit: createDefinition(["exit"]),
  drag: createDefinition(["drag", "dragControls"]),
  focus: createDefinition(["whileFocus"]),
  hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
  tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
  pan: createDefinition([
    "onPan",
    "onPanStart",
    "onPanSessionStart",
    "onPanEnd"
  ]),
  inView: createDefinition([
    "whileInView",
    "onViewportEnter",
    "onViewportLeave"
  ])
};
function loadFeatures(features) {
  for (var key in features) {
    if (features[key] === null)
      continue;
    if (key === "projectionNodeConstructor") {
      featureDefinitions.projectionNodeConstructor = features[key];
    } else {
      featureDefinitions[key].Component = features[key];
    }
  }
}

// node_modules/.pnpm/hey-listen@1.0.8/node_modules/hey-listen/dist/hey-listen.es.js
var warning = function() {
};
var invariant = function() {
};
if (true) {
  warning = function(check, message) {
    if (!check && typeof console !== "undefined") {
      console.warn(message);
    }
  };
  invariant = function(check, message) {
    if (!check) {
      throw new Error(message);
    }
  };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react = __toESM(require_react(), 1);
var LazyContext = (0, import_react.createContext)({ strict: false });

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
function useFeatures(props, visualElement2, preloadedFeatures) {
  var features = [];
  var lazyContext = (0, import_react2.useContext)(LazyContext);
  if (!visualElement2)
    return null;
  if (env !== "production" && preloadedFeatures && lazyContext.strict) {
    invariant(false, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
  }
  for (var i8 = 0; i8 < numFeatures; i8++) {
    var name_1 = featureNames[i8];
    var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;
    if (isEnabled(props) && Component) {
      features.push(React.createElement(Component, __assign({ key: name_1 }, props, { visualElement: visualElement2 })));
    }
  }
  return features;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react3 = __toESM(require_react(), 1);
var MotionConfigContext = (0, import_react3.createContext)({
  transformPagePoint: function(p7) {
    return p7;
  },
  isStatic: false,
  reducedMotion: "never"
});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react4 = __toESM(require_react(), 1);
var MotionContext = (0, import_react4.createContext)({});
function useVisualElementContext() {
  return (0, import_react4.useContext)(MotionContext).visualElement;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react8 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react5 = __toESM(require_react(), 1);
var PresenceContext = (0, import_react5.createContext)(null);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react6 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser = typeof document !== "undefined";

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser ? import_react6.useLayoutEffect : import_react6.useEffect;

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs
var import_react7 = __toESM(require_react(), 1);
var prefersReducedMotion = { current: null };
var hasDetected = false;
function initPrefersReducedMotion() {
  hasDetected = true;
  if (!isBrowser)
    return;
  if (window.matchMedia) {
    var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
    var setReducedMotionPreferences = function() {
      return prefersReducedMotion.current = motionMediaQuery_1.matches;
    };
    motionMediaQuery_1.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
function useReducedMotion() {
  !hasDetected && initPrefersReducedMotion();
  var _a = __read((0, import_react7.useState)(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];
  return shouldReduceMotion;
}
function useReducedMotionConfig() {
  var reducedMotionPreference = useReducedMotion();
  var reducedMotion = (0, import_react7.useContext)(MotionConfigContext).reducedMotion;
  if (reducedMotion === "never") {
    return false;
  } else if (reducedMotion === "always") {
    return true;
  } else {
    return reducedMotionPreference;
  }
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component, visualState, props, createVisualElement) {
  var lazyContext = (0, import_react8.useContext)(LazyContext);
  var parent = useVisualElementContext();
  var presenceContext = (0, import_react8.useContext)(PresenceContext);
  var shouldReduceMotion = useReducedMotionConfig();
  var visualElementRef = (0, import_react8.useRef)(void 0);
  if (!createVisualElement)
    createVisualElement = lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component, {
      visualState,
      parent,
      props,
      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
      shouldReduceMotion
    });
  }
  var visualElement2 = visualElementRef.current;
  useIsomorphicLayoutEffect(function() {
    visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
  });
  (0, import_react8.useEffect)(function() {
    var _a;
    (_a = visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
  });
  useIsomorphicLayoutEffect(function() {
    return function() {
      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();
    };
  }, []);
  return visualElement2;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react9 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement2, externalRef) {
  return (0, import_react9.useCallback)(
    function(instance) {
      var _a;
      instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
      if (visualElement2) {
        instance ? visualElement2.mount(instance) : visualElement2.unmount();
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement2]
  );
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react10 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/variants.mjs
function isVariantLabels(v6) {
  return Array.isArray(v6);
}
function isVariantLabel(v6) {
  return typeof v6 === "string" || isVariantLabels(v6);
}
function getCurrent(visualElement2) {
  var current = {};
  visualElement2.forEachValue(function(value, key) {
    return current[key] = value.get();
  });
  return current;
}
function getVelocity(visualElement2) {
  var velocity = {};
  visualElement2.forEachValue(function(value, key) {
    return velocity[key] = value.getVelocity();
  });
  return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
  var _a;
  if (currentValues === void 0) {
    currentValues = {};
  }
  if (currentVelocity === void 0) {
    currentVelocity = {};
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  if (typeof definition === "string") {
    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  return definition;
}
function resolveVariant(visualElement2, definition, custom) {
  var props = visualElement2.getProps();
  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity(visualElement2));
}
function checkIfControllingVariants(props) {
  var _a;
  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
}
function checkIfVariantNode(props) {
  return Boolean(checkIfControllingVariants(props) || props.variants);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (checkIfControllingVariants(props)) {
    var initial = props.initial, animate4 = props.animate;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate4) ? animate4 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  var _a = getCurrentTreeVariants(props, (0, import_react10.useContext)(MotionContext)), initial = _a.initial, animate4 = _a.animate;
  return (0, import_react10.useMemo)(function() {
    return { initial, animate: animate4 };
  }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate4)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react11 = __toESM(require_react(), 1);
function useConstant(init) {
  var ref = (0, import_react11.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: true,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: false
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/id.mjs
var id = 1;
function useProjectionId() {
  return useConstant(function() {
    if (globalProjectionState.hasEverUpdated) {
      return id++;
    }
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react12 = __toESM(require_react(), 1);
var LayoutGroupContext = (0, import_react12.createContext)({});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
var import_react14 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react13 = __toESM(require_react(), 1);
var SwitchLayoutGroupContext = (0, import_react13.createContext)({});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
function useProjection(projectionId, _a, visualElement2, ProjectionNodeConstructor) {
  var _b;
  var layoutId = _a.layoutId, layout = _a.layout, drag2 = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;
  var initialPromotionConfig = (0, import_react14.useContext)(SwitchLayoutGroupContext);
  if (!ProjectionNodeConstructor || !visualElement2 || (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.projection)) {
    return;
  }
  visualElement2.projection = new ProjectionNodeConstructor(projectionId, visualElement2.getLatestValues(), (_b = visualElement2.parent) === null || _b === void 0 ? void 0 : _b.projection);
  visualElement2.projection.setOptions({
    layoutId,
    layout,
    alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
    visualElement: visualElement2,
    scheduleRender: function() {
      return visualElement2.scheduleRender();
    },
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout === "string" ? layout : "both",
    initialPromotionConfig,
    layoutScroll
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs
var import_react15 = __toESM(require_react(), 1);
var VisualElementHandler = (
  /** @class */
  function(_super) {
    __extends(VisualElementHandler2, _super);
    function VisualElementHandler2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
      this.updateProps();
      return null;
    };
    VisualElementHandler2.prototype.componentDidUpdate = function() {
    };
    VisualElementHandler2.prototype.updateProps = function() {
      var _a = this.props, visualElement2 = _a.visualElement, props = _a.props;
      if (visualElement2)
        visualElement2.setProps(props);
    };
    VisualElementHandler2.prototype.render = function() {
      return this.props.children;
    };
    return VisualElementHandler2;
  }(import_react15.default.Component)
);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent(_a) {
  var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState2 = _a.useVisualState, Component = _a.Component;
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    var layoutId = useLayoutId(props);
    props = __assign(__assign({}, props), { layoutId });
    var config = (0, import_react16.useContext)(MotionConfigContext);
    var features = null;
    var context = useCreateMotionContext(props);
    var projectionId = config.isStatic ? void 0 : useProjectionId();
    var visualState = useVisualState2(props, config.isStatic);
    if (!config.isStatic && isBrowser) {
      context.visualElement = useVisualElement(Component, visualState, __assign(__assign({}, config), props), createVisualElement);
      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);
      features = useFeatures(props, context.visualElement, preloadedFeatures);
    }
    return React2.createElement(
      VisualElementHandler,
      { visualElement: context.visualElement, props: __assign(__assign({}, config), props) },
      features,
      React2.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))
    );
  }
  return (0, import_react16.forwardRef)(MotionComponent);
}
function useLayoutId(_a) {
  var _b;
  var layoutId = _a.layoutId;
  var layoutGroupId = (_b = (0, import_react16.useContext)(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component, customMotionComponentConfig) {
    if (customMotionComponentConfig === void 0) {
      customMotionComponentConfig = {};
    }
    return createMotionComponent(createConfig(Component, customMotionComponentConfig));
  }
  if (typeof Proxy === "undefined") {
    return custom;
  }
  var componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: function(_target, key) {
      if (!componentCache.has(key)) {
        componentCache.set(key, custom(key));
      }
      return componentCache.get(key);
    }
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view"
];

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/.test(Component)
  ) {
    return true;
  }
  return false;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react19 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react17 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformAxes = ["", "X", "Y", "Z"];
var order = ["translate", "scale", "rotate", "skew"];
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function(operationKey) {
  return transformAxes.forEach(function(axesKey) {
    return transformProps.push(operationKey + axesKey);
  });
});
function sortTransformProps(a11, b8) {
  return transformProps.indexOf(a11) - transformProps.indexOf(b8);
}
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
  return transformPropSet.has(key);
}
var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
  return transformOriginProps.has(key);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, _a) {
  var layout = _a.layout, layoutId = _a.layoutId;
  return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = function(value) {
  return Boolean(value !== null && typeof value === "object" && value.getVelocity);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
function buildTransform(_a, _b, transformIsDefault, transformTemplate) {
  var transform2 = _a.transform, transformKeys2 = _a.transformKeys;
  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
  var transformString = "";
  transformKeys2.sort(sortTransformProps);
  var transformHasZ = false;
  var numTransformKeys = transformKeys2.length;
  for (var i8 = 0; i8 < numTransformKeys; i8++) {
    var key = transformKeys2[i8];
    transformString += "".concat(translateAlias[key] || key, "(").concat(transform2[key], ") ");
    if (key === "z")
      transformHasZ = true;
  }
  if (!transformHasZ && enableHardwareAcceleration) {
    transformString += "translateZ(0)";
  } else {
    transformString = transformString.trim();
  }
  if (transformTemplate) {
    transformString = transformTemplate(transform2, transformIsDefault ? "" : transformString);
  } else if (allowTransformNone && transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildTransformOrigin(_a) {
  var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
  return "".concat(originX, " ").concat(originY, " ").concat(originZ);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
function isCSSVariable(key) {
  return key.startsWith("--");
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = function(value, type) {
  return type && typeof value === "number" ? type.transform(value) : value;
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/utils.mjs
var clamp = (min, max) => (v6) => Math.max(Math.min(v6, max), min);
var sanitize = (v6) => v6 % 1 ? Number(v6.toFixed(5)) : v6;
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v6) {
  return typeof v6 === "string";
}

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/numbers/index.mjs
var number = {
  test: (v6) => typeof v6 === "number",
  parse: parseFloat,
  transform: (v6) => v6
};
var alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });
var scale = Object.assign(Object.assign({}, number), { default: 1 });

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v6) => isString(v6) && v6.endsWith(unit) && v6.split(" ").length === 1,
  parse: parseFloat,
  transform: (v6) => `${v6}${unit}`
});
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v6) => percent.parse(v6) / 100, transform: (v6) => percent.transform(v6 * 100) });

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/utils.mjs
var isColorString = (type, testProp) => (v6) => {
  return Boolean(isString(v6) && singleColorRegex.test(v6) && v6.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v6, testProp));
};
var splitColor = (aName, bName, cName) => (v6) => {
  if (!isString(v6))
    return v6;
  const [a11, b8, c16, alpha2] = v6.match(floatRegex);
  return {
    [aName]: parseFloat(a11),
    [bName]: parseFloat(b8),
    [cName]: parseFloat(c16),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/rgba.mjs
var clampRgbUnit = clamp(0, 255);
var rgbUnit = Object.assign(Object.assign({}, number), { transform: (v6) => Math.round(clampRgbUnit(v6)) });
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/hex.mjs
function parseHex(v6) {
  let r9 = "";
  let g5 = "";
  let b8 = "";
  let a11 = "";
  if (v6.length > 5) {
    r9 = v6.substr(1, 2);
    g5 = v6.substr(3, 2);
    b8 = v6.substr(5, 2);
    a11 = v6.substr(7, 2);
  } else {
    r9 = v6.substr(1, 1);
    g5 = v6.substr(2, 1);
    b8 = v6.substr(3, 1);
    a11 = v6.substr(4, 1);
    r9 += r9;
    g5 += g5;
    b8 += b8;
    a11 += a11;
  }
  return {
    red: parseInt(r9, 16),
    green: parseInt(g5, 16),
    blue: parseInt(b8, 16),
    alpha: a11 ? parseInt(a11, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/color/index.mjs
var color = {
  test: (v6) => rgba.test(v6) || hex.test(v6) || hsla.test(v6),
  parse: (v6) => {
    if (rgba.test(v6)) {
      return rgba.parse(v6);
    } else if (hsla.test(v6)) {
      return hsla.parse(v6);
    } else {
      return hex.parse(v6);
    }
  },
  transform: (v6) => {
    return isString(v6) ? v6 : v6.hasOwnProperty("red") ? rgba.transform(v6) : hsla.transform(v6);
  }
};

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/complex/index.mjs
var colorToken = "${c}";
var numberToken = "${n}";
function test(v6) {
  var _a, _b, _c, _d;
  return isNaN(v6) && isString(v6) && ((_b = (_a = v6.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v6.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
}
function analyse(v6) {
  if (typeof v6 === "number")
    v6 = `${v6}`;
  const values = [];
  let numColors = 0;
  const colors = v6.match(colorRegex);
  if (colors) {
    numColors = colors.length;
    v6 = v6.replace(colorRegex, colorToken);
    values.push(...colors.map(color.parse));
  }
  const numbers = v6.match(floatRegex);
  if (numbers) {
    v6 = v6.replace(floatRegex, numberToken);
    values.push(...numbers.map(number.parse));
  }
  return { values, numColors, tokenised: v6 };
}
function parse2(v6) {
  return analyse(v6).values;
}
function createTransformer(v6) {
  const { values, numColors, tokenised } = analyse(v6);
  const numValues = values.length;
  return (v7) => {
    let output = tokenised;
    for (let i8 = 0; i8 < numValues; i8++) {
      output = output.replace(i8 < numColors ? colorToken : numberToken, i8 < numColors ? color.transform(v7[i8]) : sanitize(v7[i8]));
    }
    return output;
  };
}
var convertNumbersToZero = (v6) => typeof v6 === "number" ? 0 : v6;
function getAnimatableNone(v6) {
  const parsed = parse2(v6);
  const transformer = createTransformer(v6);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test, parse: parse2, createTransformer, getAnimatableNone };

// node_modules/.pnpm/style-value-types@5.0.0/node_modules/style-value-types/dist/es/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v6) {
  let [name, value] = v6.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v6;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v6;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v6) => {
  const functions = v6.match(functionRegex);
  return functions ? functions.map(applyDefaultFilter).join(" ") : v6;
} });

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = __assign(__assign({}, number), { transform: Math.round });

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  size: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Transform props
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px,
  // Misc
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, options, transformTemplate) {
  var _a;
  var style2 = state.style, vars = state.vars, transform2 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
  transformKeys2.length = 0;
  var hasTransform2 = false;
  var hasTransformOrigin = false;
  var transformIsNone = true;
  for (var key in latestValues) {
    var value = latestValues[key];
    if (isCSSVariable(key)) {
      vars[key] = value;
      continue;
    }
    var valueType = numberValueTypes[key];
    var valueAsType = getValueAsType(value, valueType);
    if (isTransformProp(key)) {
      hasTransform2 = true;
      transform2[key] = valueAsType;
      transformKeys2.push(key);
      if (!transformIsNone)
        continue;
      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
        transformIsNone = false;
    } else if (isTransformOriginProp(key)) {
      transformOrigin[key] = valueAsType;
      hasTransformOrigin = true;
    } else {
      style2[key] = valueAsType;
    }
  }
  if (hasTransform2) {
    style2.transform = buildTransform(state, options, transformIsNone, transformTemplate);
  } else if (transformTemplate) {
    style2.transform = transformTemplate({}, "");
  } else if (!latestValues.transform && style2.transform) {
    style2.transform = "none";
  }
  if (hasTransformOrigin) {
    style2.transformOrigin = buildTransformOrigin(transformOrigin);
  }
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = function() {
  return {
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {}
  };
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (var key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues(_a, visualState, isStatic) {
  var transformTemplate = _a.transformTemplate;
  return (0, import_react17.useMemo)(function() {
    var state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);
    var vars = state.vars, style2 = state.style;
    return __assign(__assign({}, vars), style2);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  var styleProp = props.style || {};
  var style2 = {};
  copyRawValuesOnly(style2, styleProp, props);
  Object.assign(style2, useInitialMotionValues(props, visualState, isStatic));
  if (props.transformValues) {
    style2 = props.transformValues(style2);
  }
  return style2;
}
function useHTMLProps(props, visualState, isStatic) {
  var htmlProps = {};
  var style2 = useStyle(props, visualState, isStatic);
  if (Boolean(props.drag) && props.dragListener !== false) {
    htmlProps.draggable = false;
    style2.userSelect = style2.WebkitUserSelect = style2.WebkitTouchCallout = "none";
    style2.touchAction = props.drag === true ? "none" : "pan-".concat(props.drag === "x" ? "y" : "x");
  }
  htmlProps.style = style2;
  return htmlProps;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "initial",
  "animate",
  "exit",
  "style",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "layout",
  "layoutId",
  "layoutDependency",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "drag",
  "dragControls",
  "dragListener",
  "dragConstraints",
  "dragDirectionLock",
  "dragSnapToOrigin",
  "_dragX",
  "_dragY",
  "dragElastic",
  "dragMomentum",
  "dragPropagation",
  "dragTransition",
  "whileDrag",
  "onPan",
  "onPanStart",
  "onPanEnd",
  "onPanSessionStart",
  "onTap",
  "onTapStart",
  "onTapCancel",
  "onHoverStart",
  "onHoverEnd",
  "whileFocus",
  "whileTap",
  "whileHover",
  "whileInView",
  "onViewportEnter",
  "onViewportLeave",
  "viewport",
  "layoutScroll"
]);
function isValidMotionProp(key) {
  return validMotionProps.has(key);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = function(key) {
  return !isValidMotionProp(key);
};
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = function(key) {
    return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
  };
}
try {
  loadExternalIsValidProp((init_is_prop_valid_browser_esm(), __toCommonJS(is_prop_valid_browser_esm_exports)).default);
} catch (_a) {
}
function filterProps(props, isDom, forwardMotionProps) {
  var filteredProps = {};
  for (var key in props) {
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react18 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset, size) {
  return typeof origin === "string" ? origin : px.transform(offset + size * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return "".concat(pxOriginX, " ").concat(pxOriginY);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length2, spacing, offset, useDashCase) {
  if (spacing === void 0) {
    spacing = 1;
  }
  if (offset === void 0) {
    offset = 0;
  }
  if (useDashCase === void 0) {
    useDashCase = true;
  }
  attrs.pathLength = 1;
  var keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset);
  var pathLength = px.transform(length2);
  var pathSpacing = px.transform(spacing);
  attrs[keys.array] = "".concat(pathLength, " ").concat(pathSpacing);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, _a, options, transformTemplate) {
  var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
  buildHTMLStyles(state, latest, options, transformTemplate);
  state.attrs = state.style;
  state.style = {};
  var attrs = state.attrs, style2 = state.style, dimensions = state.dimensions;
  if (attrs.transform) {
    if (dimensions)
      style2.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style2.transform)) {
    style2.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = function() {
  return __assign(__assign({}, createHtmlRenderState()), { attrs: {} });
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState) {
  var visualProps = (0, import_react18.useMemo)(function() {
    var state = createSvgRenderState();
    buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);
    return __assign(__assign({}, state.attrs), { style: __assign({}, state.style) });
  }, [visualState]);
  if (props.style) {
    var rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);
  }
  return visualProps;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps) {
  if (forwardMotionProps === void 0) {
    forwardMotionProps = false;
  }
  var useRender = function(Component, props, projectionId, ref, _a, isStatic) {
    var latestValues = _a.latestValues;
    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;
    var visualProps = useVisualProps(props, latestValues, isStatic);
    var filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
    var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref });
    if (projectionId) {
      elementProps["data-projection-id"] = projectionId;
    }
    return (0, import_react19.createElement)(Component, elementProps);
  };
  return useRender;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
var camelToDash = function(str) {
  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, _a, styleProp, projection) {
  var style2 = _a.style, vars = _a.vars;
  Object.assign(element.style, style2, projection && projection.getProjectionStyles(styleProp));
  for (var key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength"
]);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (var key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props) {
  var style2 = props.style;
  var newValues = {};
  for (var key in style2) {
    if (isMotionValue(style2[key]) || isForcedMotionValue(key, props)) {
      newValues[key] = style2[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props) {
  var newValues = scrapeMotionValuesFromProps(props);
  for (var key in props) {
    if (isMotionValue(props[key])) {
      var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react20 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v6) {
  return typeof v6 === "object" && typeof v6.start === "function";
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = function(v6) {
  return Array.isArray(v6);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = function(v6) {
  return Boolean(v6 && typeof v6 === "object" && v6.mix && v6.toValue);
};
var resolveFinalValueInKeyframes = function(v6) {
  return isKeyframesTarget(v6) ? v6[v6.length - 1] || 0 : v6;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  var unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState(_a, props, context, presenceContext) {
  var scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
  var state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  if (onMount) {
    state.mount = function(instance) {
      return onMount(props, instance, state);
    };
  }
  return state;
}
var makeUseVisualState = function(config) {
  return function(props, isStatic) {
    var context = (0, import_react20.useContext)(MotionContext);
    var presenceContext = (0, import_react20.useContext)(PresenceContext);
    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function() {
      return makeState(config, props, context, presenceContext);
    });
  };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  var values = {};
  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
  var motionValues = scrapeMotionValues(props);
  for (var key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  var initial = props.initial, animate4 = props.animate;
  var isControllingVariants = checkIfControllingVariants(props);
  var isVariantNode = checkIfVariantNode(props);
  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {
    initial !== null && initial !== void 0 ? initial : initial = context.initial;
    animate4 !== null && animate4 !== void 0 ? animate4 : animate4 = context.animate;
  }
  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;
  var variantToSet = initialAnimationIsBlocked ? animate4 : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    list.forEach(function(definition) {
      var resolved = resolveVariantFromProps(props, definition);
      if (!resolved)
        return;
      var transitionEnd = resolved.transitionEnd;
      resolved.transition;
      var target = __rest(resolved, ["transitionEnd", "transition"]);
      for (var key2 in target) {
        var valueTarget = target[key2];
        if (Array.isArray(valueTarget)) {
          var index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;
          valueTarget = valueTarget[index];
        }
        if (valueTarget !== null) {
          values[key2] = valueTarget;
        }
      }
      for (var key2 in transitionEnd)
        values[key2] = transitionEnd[key2];
    });
  }
  return values;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: function(props, instance, _a) {
      var renderState = _a.renderState, latestValues = _a.latestValues;
      try {
        renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch (e4) {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);
      renderSVG(instance, renderState);
    }
  })
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
  var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
  var baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;
  return __assign(__assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement, projectionNodeConstructor, Component });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/types.mjs
var AnimationType;
(function(AnimationType2) {
  AnimationType2["Animate"] = "animate";
  AnimationType2["Hover"] = "whileHover";
  AnimationType2["Tap"] = "whileTap";
  AnimationType2["Drag"] = "whileDrag";
  AnimationType2["Focus"] = "whileFocus";
  AnimationType2["InView"] = "whileInView";
  AnimationType2["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/use-dom-event.mjs
var import_react21 = __toESM(require_react(), 1);
function addDomEvent(target, eventName, handler, options) {
  if (options === void 0) {
    options = { passive: true };
  }
  target.addEventListener(eventName, handler, options);
  return function() {
    return target.removeEventListener(eventName, handler);
  };
}
function useDomEvent(ref, eventName, handler, options) {
  (0, import_react21.useEffect)(function() {
    var element = ref.current;
    if (handler && element) {
      return addDomEvent(element, eventName, handler, options);
    }
  }, [ref, eventName, handler, options]);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs
function useFocusGesture(_a) {
  var whileFocus = _a.whileFocus, visualElement2 = _a.visualElement;
  var onFocus = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, true);
  };
  var onBlur = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, false);
  };
  useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0);
  useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs
function isMouseEvent(event) {
  if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof MouseEvent;
}
function isTouchEvent(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/event-info.mjs
function filterPrimaryPointer(eventHandler) {
  return function(event) {
    var isMouseEvent2 = event instanceof MouseEvent;
    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e4, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e4.touches[0] || e4.changedTouches[0];
  var point = primaryTouch || defaultPagePoint;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
  };
}
var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function(event) {
    return handler(event, extractEventInfo(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/utils.mjs
var supportsPointerEvents = function() {
  return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function() {
  return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function() {
  return isBrowser && window.onmousedown === null;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/events/use-pointer-event.mjs
var mouseEventNames = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName(name) {
  if (supportsPointerEvents()) {
    return name;
  } else if (supportsTouchEvents()) {
    return touchEventNames[name];
  } else if (supportsMouseEvents()) {
    return mouseEventNames[name];
  }
  return name;
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  var lock = null;
  return function() {
    var openLock = function() {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  var lock = false;
  if (drag2 === "y") {
    lock = globalVerticalLock();
  } else if (drag2 === "x") {
    lock = globalHorizontalLock();
  } else {
    var openHorizontal_1 = globalHorizontalLock();
    var openVertical_1 = globalVerticalLock();
    if (openHorizontal_1 && openVertical_1) {
      lock = function() {
        openHorizontal_1();
        openVertical_1();
      };
    } else {
      if (openHorizontal_1)
        openHorizontal_1();
      if (openVertical_1)
        openVertical_1();
    }
  }
  return lock;
}
function isDragActive() {
  var openGestureLock = getGlobalLock(true);
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs
function createHoverEvent(visualElement2, isActive, callback) {
  return function(event, info) {
    var _a;
    if (!isMouseEvent(event) || isDragActive())
      return;
    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);
    callback === null || callback === void 0 ? void 0 : callback(event, info);
  };
}
function useHoverGesture(_a) {
  var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement2 = _a.visualElement;
  usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0, { passive: !onHoverStart });
  usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0, { passive: !onHoverEnd });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
var import_react23 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = function(parent, child) {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react22 = __toESM(require_react(), 1);
function useUnmountEffect(callback) {
  return (0, import_react22.useEffect)(function() {
    return function() {
      return callback();
    };
  }, []);
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/clamp.mjs
var clamp2 = (min, max, v6) => Math.min(Math.max(v6, min), max);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/find-spring.mjs
var safeMin = 1e-3;
var minDuration = 0.01;
var maxDuration = 10;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope;
  let derivative;
  warning(duration <= maxDuration * 1e3, "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp2(minDamping, maxDamping, dampingRatio);
  duration = clamp2(minDuration, maxDuration, duration / 1e3);
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a11 = exponentialDecay - velocity;
      const b8 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c16 = Math.exp(-delta);
      return safeMin - a11 / b8 * c16;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d16 = delta * velocity + velocity;
      const e4 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f14 = Math.exp(-delta);
      const g5 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d16 - e4) * f14) / g5;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a11 = Math.exp(-undampedFreq2 * duration);
      const b8 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a11 * b8;
    };
    derivative = (undampedFreq2) => {
      const a11 = Math.exp(-undampedFreq2 * duration);
      const b8 = (velocity - undampedFreq2) * (duration * duration);
      return a11 * b8;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = duration * 1e3;
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i8 = 1; i8 < rootIterations; i8++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/spring.mjs
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    const derived = findSpring(options);
    springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 });
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring(_a) {
  var { from = 0, to = 1, restSpeed = 2, restDelta } = _a, options = __rest(_a, ["from", "to", "restSpeed", "restDelta"]);
  const state = { done: false, value: from };
  let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options);
  let resolveSpring = zero;
  let resolveVelocity = zero;
  function createSpring() {
    const initialVelocity = velocity ? -(velocity / 1e3) : 0;
    const initialDelta = to - from;
    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
    if (restDelta === void 0) {
      restDelta = Math.min(Math.abs(to - from) / 100, 0.4);
    }
    if (dampingRatio < 1) {
      const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
      resolveSpring = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
      };
      resolveVelocity = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t18)) - envelope * (Math.cos(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t18));
      };
    } else if (dampingRatio === 1) {
      resolveSpring = (t18) => to - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t18);
    } else {
      const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
      resolveSpring = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        const freqForT = Math.min(dampedAngularFreq * t18, 300);
        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
      };
    }
  }
  createSpring();
  return {
    next: (t18) => {
      const current = resolveSpring(t18);
      if (!isResolvedFromDuration) {
        const currentVelocity = resolveVelocity(t18) * 1e3;
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t18 >= duration;
      }
      state.value = state.done ? to : current;
      return state;
    },
    flipTarget: () => {
      velocity = -velocity;
      [from, to] = [to, from];
      createSpring();
    }
  };
}
spring.needsInterpolation = (a11, b8) => typeof a11 === "string" || typeof b8 === "string";
var zero = (_t2) => 0;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/progress.mjs
var progress = (from, to, value) => {
  const toFromDifference = to - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix.mjs
var mix = (from, to, progress3) => -progress3 * from + progress3 * to + from;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p7, q6, t18) {
  if (t18 < 0)
    t18 += 1;
  if (t18 > 1)
    t18 -= 1;
  if (t18 < 1 / 6)
    return p7 + (q6 - p7) * 6 * t18;
  if (t18 < 1 / 2)
    return q6;
  if (t18 < 2 / 3)
    return p7 + (q6 - p7) * (2 / 3 - t18) * 6;
  return p7;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q6 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p7 = 2 * lightness - q6;
    red = hueToRgb(p7, q6, hue + 1 / 3);
    green = hueToRgb(p7, q6, hue);
    blue = hueToRgb(p7, q6, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from, to, v6) => {
  const fromExpo = from * from;
  const toExpo = to * to;
  return Math.sqrt(Math.max(0, v6 * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [hex, rgba, hsla];
var getColorType = (v6) => colorTypes.find((type) => type.test(v6));
var notAnimatable = (color2) => `'${color2}' is not an animatable color. Use the equivalent color code instead.`;
var mixColor = (from, to) => {
  let fromColorType = getColorType(from);
  let toColorType = getColorType(to);
  invariant(!!fromColorType, notAnimatable(from));
  invariant(!!toColorType, notAnimatable(to));
  let fromColor = fromColorType.parse(from);
  let toColor = toColorType.parse(to);
  if (fromColorType === hsla) {
    fromColor = hslaToRgba(fromColor);
    fromColorType = rgba;
  }
  if (toColorType === hsla) {
    toColor = hslaToRgba(toColor);
    toColorType = rgba;
  }
  const blended = Object.assign({}, fromColor);
  return (v6) => {
    for (const key in blended) {
      if (key !== "alpha") {
        blended[key] = mixLinearColor(fromColor[key], toColor[key], v6);
      }
    }
    blended.alpha = mix(fromColor.alpha, toColor.alpha, v6);
    return fromColorType.transform(blended);
  };
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/inc.mjs
var isNum = (v6) => typeof v6 === "number";

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/pipe.mjs
var combineFunctions = (a11, b8) => (v6) => b8(a11(v6));
var pipe = (...transformers) => transformers.reduce(combineFunctions);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/mix-complex.mjs
function getMixer(origin, target) {
  if (isNum(origin)) {
    return (v6) => mix(origin, target, v6);
  } else if (color.test(origin)) {
    return mixColor(origin, target);
  } else {
    return mixComplex(origin, target);
  }
}
var mixArray = (from, to) => {
  const output = [...from];
  const numValues = output.length;
  const blendValue = from.map((fromThis, i8) => getMixer(fromThis, to[i8]));
  return (v6) => {
    for (let i8 = 0; i8 < numValues; i8++) {
      output[i8] = blendValue[i8](v6);
    }
    return output;
  };
};
var mixObject = (origin, target) => {
  const output = Object.assign(Object.assign({}, origin), target);
  const blendValue = {};
  for (const key in output) {
    if (origin[key] !== void 0 && target[key] !== void 0) {
      blendValue[key] = getMixer(origin[key], target[key]);
    }
  }
  return (v6) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v6);
    }
    return output;
  };
};
function analyse2(value) {
  const parsed = complex.parse(value);
  const numValues = parsed.length;
  let numNumbers = 0;
  let numRGB = 0;
  let numHSL = 0;
  for (let i8 = 0; i8 < numValues; i8++) {
    if (numNumbers || typeof parsed[i8] === "number") {
      numNumbers++;
    } else {
      if (parsed[i8].hue !== void 0) {
        numHSL++;
      } else {
        numRGB++;
      }
    }
  }
  return { parsed, numNumbers, numRGB, numHSL };
}
var mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyse2(origin);
  const targetStats = analyse2(target);
  const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;
  if (canInterpolate) {
    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
  } else {
    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
    return (p7) => `${p7 > 0 ? target : origin}`;
  }
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/interpolate.mjs
var mixNumber = (from, to) => (p7) => mix(from, to, p7);
function detectMixerFactory(v6) {
  if (typeof v6 === "number") {
    return mixNumber;
  } else if (typeof v6 === "string") {
    if (color.test(v6)) {
      return mixColor;
    } else {
      return mixComplex;
    }
  } else if (Array.isArray(v6)) {
    return mixArray;
  } else if (typeof v6 === "object") {
    return mixObject;
  }
}
function createMixers(output, ease, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || detectMixerFactory(output[0]);
  const numMixers = output.length - 1;
  for (let i8 = 0; i8 < numMixers; i8++) {
    let mixer = mixerFactory(output[i8], output[i8 + 1]);
    if (ease) {
      const easingFunction = Array.isArray(ease) ? ease[i8] : ease;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function fastInterpolate([from, to], [mixer]) {
  return (v6) => mixer(progress(from, to, v6));
}
function slowInterpolate(input, mixers) {
  const inputLength = input.length;
  const lastInputIndex = inputLength - 1;
  return (v6) => {
    let mixerIndex = 0;
    let foundMixerIndex = false;
    if (v6 <= input[0]) {
      foundMixerIndex = true;
    } else if (v6 >= input[lastInputIndex]) {
      mixerIndex = lastInputIndex - 1;
      foundMixerIndex = true;
    }
    if (!foundMixerIndex) {
      let i8 = 1;
      for (; i8 < inputLength; i8++) {
        if (input[i8] > v6 || i8 === lastInputIndex) {
          break;
        }
      }
      mixerIndex = i8 - 1;
    }
    const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v6);
    return mixers[mixerIndex](progressInRange);
  };
}
function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
  const inputLength = input.length;
  invariant(inputLength === output.length, "Both input and output ranges must be the same length");
  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.");
  if (input[0] > input[inputLength - 1]) {
    input = [].concat(input);
    output = [].concat(output);
    input.reverse();
    output.reverse();
  }
  const mixers = createMixers(output, ease, mixer);
  const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
  return isClamp ? (v6) => interpolator(clamp2(input[0], input[inputLength - 1], v6)) : interpolator;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/utils.mjs
var reverseEasing = (easing) => (p7) => 1 - easing(1 - p7);
var mirrorEasing = (easing) => (p7) => p7 <= 0.5 ? easing(2 * p7) / 2 : (2 - easing(2 * (1 - p7))) / 2;
var createExpoIn = (power) => (p7) => Math.pow(p7, power);
var createBackIn = (power) => (p7) => p7 * p7 * ((power + 1) * p7 - power);
var createAnticipate = (power) => {
  const backEasing = createBackIn(power);
  return (p7) => (p7 *= 2) < 1 ? 0.5 * backEasing(p7) : 0.5 * (2 - Math.pow(2, -10 * (p7 - 1)));
};

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/index.mjs
var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4 / 11;
var BOUNCE_SECOND_THRESHOLD = 8 / 11;
var BOUNCE_THIRD_THRESHOLD = 9 / 10;
var linear = (p7) => p7;
var easeIn = createExpoIn(2);
var easeOut = reverseEasing(easeIn);
var easeInOut = mirrorEasing(easeIn);
var circIn = (p7) => 1 - Math.sin(Math.acos(p7));
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circOut);
var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = reverseEasing(backIn);
var backInOut = mirrorEasing(backIn);
var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356 / 361;
var cb = 35442 / 1805;
var cc = 16061 / 1805;
var bounceOut = (p7) => {
  if (p7 === 1 || p7 === 0)
    return p7;
  const p22 = p7 * p7;
  return p7 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p7 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p7 + 3.4 : p7 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p7 + cc : 10.8 * p7 * p7 - 20.52 * p7 + 10.72;
};
var bounceIn = reverseEasing(bounceOut);
var bounceInOut = (p7) => p7 < 0.5 ? 0.5 * (1 - bounceOut(1 - p7 * 2)) : 0.5 * bounceOut(p7 * 2 - 1) + 0.5;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function defaultOffset(values) {
  const numValues = values.length;
  return values.map((_value, i8) => i8 !== 0 ? i8 / (numValues - 1) : 0);
}
function convertOffsetToTimes(offset, duration) {
  return offset.map((o13) => o13 * duration);
}
function keyframes({ from = 0, to = 1, ease, offset, duration = 300 }) {
  const state = { done: false, value: from };
  const values = Array.isArray(to) ? to : [from, to];
  const times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);
  function createInterpolator() {
    return interpolate(times, values, {
      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
    });
  }
  let interpolator = createInterpolator();
  return {
    next: (t18) => {
      state.value = interpolator(t18);
      state.done = t18 >= duration;
      return state;
    },
    flipTarget: () => {
      values.reverse();
      interpolator = createInterpolator();
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/generators/decay.mjs
function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
  const state = { done: false, value: from };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - from;
  return {
    next: (t18) => {
      const delta = -amplitude * Math.exp(-t18 / timeConstant);
      state.done = !(delta > restDelta || delta < -restDelta);
      state.value = state.done ? target : target + delta;
      return state;
    },
    flipTarget: () => {
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs
var types = { keyframes, spring, decay };
function detectAnimationFromOptions(config) {
  if (Array.isArray(config.to)) {
    return keyframes;
  } else if (types[config.type]) {
    return types[config.type];
  }
  const keys = new Set(Object.keys(config));
  if (keys.has("ease") || keys.has("duration") && !keys.has("dampingRatio")) {
    return keyframes;
  } else if (keys.has("dampingRatio") || keys.has("stiffness") || keys.has("mass") || keys.has("damping") || keys.has("restSpeed") || keys.has("restDelta")) {
    return spring;
  }
  return keyframes;
}

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/on-next-frame.mjs
var defaultTimestep = 1 / 60 * 1e3;
var getCurrentTime = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
var onNextFrame = typeof window !== "undefined" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/create-render-step.mjs
function createRenderStep(runNextFrame2) {
  let toRun = [];
  let toRunNextFrame = [];
  let numToRun = 0;
  let isProcessing2 = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  const step = {
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing2;
      const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing2)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: (callback) => {
      const index = toRunNextFrame.indexOf(callback);
      if (index !== -1)
        toRunNextFrame.splice(index, 1);
      toKeepAlive.delete(callback);
    },
    process: (frameData) => {
      if (isProcessing2) {
        flushNextFrame = true;
        return;
      }
      isProcessing2 = true;
      [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (let i8 = 0; i8 < numToRun; i8++) {
          const callback = toRun[i8];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame2();
          }
        }
      }
      isProcessing2 = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData);
      }
    }
  };
  return step;
}

// node_modules/.pnpm/framesync@6.0.1/node_modules/framesync/dist/es/index.mjs
var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
  delta: 0,
  timestamp: 0
};
var stepsOrder = [
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
];
var steps = stepsOrder.reduce((acc, key) => {
  acc[key] = createRenderStep(() => runNextFrame = true);
  return acc;
}, {});
var sync = stepsOrder.reduce((acc, key) => {
  const step = steps[key];
  acc[key] = (process2, keepAlive = false, immediate = false) => {
    if (!runNextFrame)
      startLoop();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync = stepsOrder.reduce((acc, key) => {
  acc[key] = steps[key].cancel;
  return acc;
}, {});
var flushSync = stepsOrder.reduce((acc, key) => {
  acc[key] = () => steps[key].process(frame);
  return acc;
}, {});
var processStep = (stepId) => steps[stepId].process(frame);
var processFrame = (timestamp) => {
  runNextFrame = false;
  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
  frame.timestamp = timestamp;
  isProcessing = true;
  stepsOrder.forEach(processStep);
  isProcessing = false;
  if (runNextFrame) {
    useDefaultElapsed = false;
    onNextFrame(processFrame);
  }
};
var startLoop = () => {
  runNextFrame = true;
  useDefaultElapsed = true;
  if (!isProcessing)
    onNextFrame(processFrame);
};
var getFrameData = () => frame;
var es_default = sync;

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/utils/elapsed.mjs
function loopElapsed(elapsed, duration, delay = 0) {
  return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/index.mjs
var framesync = (update) => {
  const passTimestamp = ({ delta }) => update(delta);
  return {
    start: () => es_default.update(passTimestamp, true),
    stop: () => cancelSync.update(passTimestamp)
  };
};
function animate(_a) {
  var _b, _c;
  var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
  let { to } = options;
  let driverControls;
  let repeatCount = 0;
  let computedDuration = options.duration;
  let latest;
  let isComplete = false;
  let isForwardPlayback = true;
  let interpolateFromNumber;
  const animator = detectAnimationFromOptions(options);
  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {
    interpolateFromNumber = interpolate([0, 100], [from, to], {
      clamp: false
    });
    from = 0;
    to = 100;
  }
  const animation = animator(Object.assign(Object.assign({}, options), { from, to }));
  function repeat() {
    repeatCount++;
    if (repeatType === "reverse") {
      isForwardPlayback = repeatCount % 2 === 0;
      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
    } else {
      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
      if (repeatType === "mirror")
        animation.flipTarget();
    }
    isComplete = false;
    onRepeat && onRepeat();
  }
  function complete() {
    driverControls.stop();
    onComplete && onComplete();
  }
  function update(delta) {
    if (!isForwardPlayback)
      delta = -delta;
    elapsed += delta;
    if (!isComplete) {
      const state = animation.next(Math.max(0, elapsed));
      latest = state.value;
      if (interpolateFromNumber)
        latest = interpolateFromNumber(latest);
      isComplete = isForwardPlayback ? state.done : elapsed <= 0;
    }
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
    if (isComplete) {
      if (repeatCount === 0)
        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
      if (repeatCount < repeatMax) {
        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
      } else {
        complete();
      }
    }
  }
  function play() {
    onPlay === null || onPlay === void 0 ? void 0 : onPlay();
    driverControls = driver(update);
    driverControls.start();
  }
  autoplay && play();
  return {
    stop: () => {
      onStop === null || onStop === void 0 ? void 0 : onStop();
      driverControls.stop();
    }
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/animations/inertia.mjs
function inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
  let currentAnimation;
  function isOutOfBounds(v6) {
    return min !== void 0 && v6 < min || max !== void 0 && v6 > max;
  }
  function boundaryNearest(v6) {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v6) < Math.abs(max - v6) ? min : max;
  }
  function startAnimation2(options) {
    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    currentAnimation = animate(Object.assign(Object.assign({}, options), {
      driver,
      onUpdate: (v6) => {
        var _a;
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v6);
        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v6);
      },
      onComplete,
      onStop
    }));
  }
  function startSpring(options) {
    startAnimation2(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
  }
  if (isOutOfBounds(from)) {
    startSpring({ from, velocity, to: boundaryNearest(from) });
  } else {
    let target = power * velocity + from;
    if (typeof modifyTarget !== "undefined")
      target = modifyTarget(target);
    const boundary = boundaryNearest(target);
    const heading = boundary === min ? -1 : 1;
    let prev;
    let current;
    const checkBoundary = (v6) => {
      prev = current;
      current = v6;
      velocity = velocityPerSecond(v6 - prev, getFrameData().delta);
      if (heading === 1 && v6 > boundary || heading === -1 && v6 < boundary) {
        startSpring({ from: v6, to: boundary, velocity });
      }
    };
    startAnimation2({
      type: "decay",
      from,
      velocity,
      timeConstant,
      power,
      restDelta,
      modifyTarget,
      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
    });
  }
  return {
    stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop()
  };
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/attract.mjs
var identity = (v6) => v6;
var createAttractor = (alterDisplacement = identity) => (constant, origin, v6) => {
  const displacement = origin - v6;
  const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
  return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;
};
var attract = createAttractor();
var attractExpo = createAttractor(Math.sqrt);

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/is-point.mjs
var isPoint = (point) => point.hasOwnProperty("x") && point.hasOwnProperty("y");

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/is-point-3d.mjs
var isPoint3D = (point) => isPoint(point) && point.hasOwnProperty("z");

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/utils/distance.mjs
var distance1D = (a11, b8) => Math.abs(a11 - b8);
function distance(a11, b8) {
  if (isNum(a11) && isNum(b8)) {
    return distance1D(a11, b8);
  } else if (isPoint(a11) && isPoint(b8)) {
    const xDelta = distance1D(a11.x, b8.x);
    const yDelta = distance1D(a11.y, b8.y);
    const zDelta = isPoint3D(a11) && isPoint3D(b8) ? distance1D(a11.z, b8.z) : 0;
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
  }
}

// node_modules/.pnpm/popmotion@11.0.3/node_modules/popmotion/dist/es/easing/cubic-bezier.mjs
var a = (a1, a22) => 1 - 3 * a22 + 3 * a1;
var b = (a1, a22) => 3 * a22 - 6 * a1;
var c = (a1) => 3 * a1;
var calcBezier = (t18, a1, a22) => ((a(a1, a22) * t18 + b(a1, a22)) * t18 + c(a1)) * t18;
var getSlope = (t18, a1, a22) => 3 * a(a1, a22) * t18 * t18 + 2 * b(a1, a22) * t18 + c(a1);
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
  let currentX;
  let currentT;
  let i8 = 0;
  do {
    currentT = aA + (aB - aA) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i8 < subdivisionMaxIterations);
  return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 1e-3;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (let i8 = 0; i8 < newtonIterations; ++i8) {
    const currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0) {
      return aGuessT;
    }
    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1 / (kSplineTableSize - 1);
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return linear;
  const sampleValues = new Float32Array(kSplineTableSize);
  for (let i8 = 0; i8 < kSplineTableSize; ++i8) {
    sampleValues[i8] = calcBezier(i8 * kSampleStepSize, mX1, mX2);
  }
  function getTForX(aX) {
    let intervalStart = 0;
    let currentSample = 1;
    const lastSample = kSplineTableSize - 1;
    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;
    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    const guessForT = intervalStart + dist * kSampleStepSize;
    const initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= newtonMinSlope) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }
  return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier(getTForX(t18), mY1, mY2);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
function useTapGesture(_a) {
  var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement2 = _a.visualElement;
  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
  var isPressing = (0, import_react23.useRef)(false);
  var cancelPointerEndListeners = (0, import_react23.useRef)(null);
  var eventOptions = {
    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)
  };
  function removePointerEndListener() {
    var _a2;
    (_a2 = cancelPointerEndListeners.current) === null || _a2 === void 0 ? void 0 : _a2.call(cancelPointerEndListeners);
    cancelPointerEndListeners.current = null;
  }
  function checkPointerEnd() {
    var _a2;
    removePointerEndListener();
    isPressing.current = false;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, false);
    return !isDragActive();
  }
  function onPointerUp(event, info) {
    if (!checkPointerEnd())
      return;
    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
  }
  function onPointerCancel(event, info) {
    if (!checkPointerEnd())
      return;
    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
  }
  function onPointerDown(event, info) {
    var _a2;
    removePointerEndListener();
    if (isPressing.current)
      return;
    isPressing.current = true;
    cancelPointerEndListeners.current = pipe(addPointerEvent(window, "pointerup", onPointerUp, eventOptions), addPointerEvent(window, "pointercancel", onPointerCancel, eventOptions));
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, true);
    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
  }
  usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0, eventOptions);
  useUnmountEffect(removePointerEndListener);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
var import_react24 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/warn-once.mjs
var warned = /* @__PURE__ */ new Set();
function warnOnce(condition, message, element) {
  if (condition || warned.has(message))
    return;
  console.warn(message);
  if (element)
    console.warn(element);
  warned.add(message);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap();
var observers = /* @__PURE__ */ new WeakMap();
var fireObserverCallback = function(entry) {
  var _a;
  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);
};
var fireAllObserverCallbacks = function(entries) {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver(_a) {
  var root = _a.root, options = __rest(_a, ["root"]);
  var lookupRoot = root || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  var rootObservers = observers.get(lookupRoot);
  var key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root }, options));
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  var rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return function() {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
function useViewport(_a) {
  var visualElement2 = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;
  var state = (0, import_react24.useRef)({
    hasEnteredView: false,
    isInView: false
  });
  var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
  if (viewport.once && state.current.hasEnteredView)
    shouldObserve = false;
  var useObserver = typeof IntersectionObserver === "undefined" ? useMissingIntersectionObserver : useIntersectionObserver;
  useObserver(shouldObserve, state.current, visualElement2, viewport);
}
var thresholdNames = {
  some: 0,
  all: 1
};
function useIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? "some" : _b, once = _a.once;
  (0, import_react24.useEffect)(function() {
    if (!shouldObserve)
      return;
    var options = {
      root: root === null || root === void 0 ? void 0 : root.current,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    var intersectionCallback = function(entry) {
      var _a2;
      var isIntersecting = entry.isIntersecting;
      if (state.isInView === isIntersecting)
        return;
      state.isInView = isIntersecting;
      if (once && !isIntersecting && state.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        state.hasEnteredView = true;
      }
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, isIntersecting);
      var props = visualElement2.getProps();
      var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;
      callback === null || callback === void 0 ? void 0 : callback(entry);
    };
    return observeIntersection(visualElement2.getInstance(), options, intersectionCallback);
  }, [shouldObserve, root, rootMargin, amount]);
}
function useMissingIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var _b = _a.fallback, fallback = _b === void 0 ? true : _b;
  (0, import_react24.useEffect)(function() {
    if (!shouldObserve || !fallback)
      return;
    if (env !== "production") {
      warnOnce(false, "IntersectionObserver not available on this device. whileInView animations will trigger on mount.");
    }
    requestAnimationFrame(function() {
      var _a2;
      state.hasEnteredView = true;
      var onViewportEnter = visualElement2.getProps().onViewportEnter;
      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, true);
    });
  }, [shouldObserve]);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs
var makeRenderlessComponent = function(hook) {
  return function(props) {
    hook(props);
    return null;
  };
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: makeRenderlessComponent(useViewport),
  tap: makeRenderlessComponent(useTapGesture),
  focus: makeRenderlessComponent(useFocusGesture),
  hover: makeRenderlessComponent(useHoverGesture)
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var import_react26 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react25 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-id.mjs
var counter = 0;
var incrementId = function() {
  return counter++;
};
var useId = function() {
  return useConstant(incrementId);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence() {
  var context = (0, import_react25.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
  var id2 = useId();
  (0, import_react25.useEffect)(function() {
    return register(id2);
  }, []);
  var safeToRemove = function() {
    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
  };
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  var prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (var i8 = 0; i8 < prevLength; i8++) {
    if (prev[i8] !== next[i8])
      return false;
  }
  return true;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = function(seconds) {
  return seconds * 1e3;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/easing.mjs
var easingLookup = {
  linear,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate,
  bounceIn,
  bounceInOut,
  bounceOut
};
var easingDefinitionToFunction = function(definition) {
  if (Array.isArray(definition)) {
    invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x22 = _a[2], y22 = _a[3];
    return cubicBezier(x1, y1, x22, y22);
  } else if (typeof definition === "string") {
    invariant(easingLookup[definition] !== void 0, "Invalid easing type '".concat(definition, "'"));
    return easingLookup[definition];
  }
  return definition;
};
var isEasingArray = function(ease) {
  return Array.isArray(ease) && typeof ease[0] !== "number";
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = function(key, value) {
  if (key === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && // It's animatable if we have a string
  complex.test(value) && // And it contains numbers and/or colors
  !value.startsWith("url(")) {
    return true;
  }
  return false;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = function() {
  return {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10
  };
};
var criticallyDampedSpring = function(to) {
  return {
    type: "spring",
    stiffness: 550,
    damping: to === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10
  };
};
var linearTween = function() {
  return {
    type: "keyframes",
    ease: "linear",
    duration: 0.3
  };
};
var keyframes2 = function(values) {
  return {
    type: "keyframes",
    duration: 0.8,
    values
  };
};
var defaultTransitions = {
  x: underDampedSpring,
  y: underDampedSpring,
  z: underDampedSpring,
  rotate: underDampedSpring,
  rotateX: underDampedSpring,
  rotateY: underDampedSpring,
  rotateZ: underDampedSpring,
  scaleX: criticallyDampedSpring,
  scaleY: criticallyDampedSpring,
  scale: criticallyDampedSpring,
  opacity: linearTween,
  backgroundColor: linearTween,
  color: linearTween,
  default: criticallyDampedSpring
};
var getDefaultTransition = function(valueKey, to) {
  var transitionFactory;
  if (isKeyframesTarget(to)) {
    transitionFactory = keyframes2;
  } else {
    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
  }
  return __assign({ to }, transitionFactory(to));
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = __assign(__assign({}, numberValueTypes), {
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
});
var getDefaultValueType = function(key) {
  return defaultValueTypes[key];
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  var _a;
  var defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: false
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined(_a) {
  _a.when;
  _a.delay;
  _a.delayChildren;
  _a.staggerChildren;
  _a.staggerDirection;
  _a.repeat;
  _a.repeatType;
  _a.repeatDelay;
  _a.from;
  var transition = __rest(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
  return !!Object.keys(transition).length;
}
var legacyRepeatWarning = false;
function convertTransitionToAnimationOptions(_a) {
  var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, ["ease", "times", "yoyo", "flip", "loop"]);
  var options = __assign({}, transition);
  if (times)
    options["offset"] = times;
  if (transition.duration)
    options["duration"] = secondsToMilliseconds(transition.duration);
  if (transition.repeatDelay)
    options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);
  if (ease) {
    options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
  }
  if (transition.type === "tween")
    options.type = "keyframes";
  if (yoyo || loop || flip) {
    warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
    legacyRepeatWarning = true;
    if (yoyo) {
      options.repeatType = "reverse";
    } else if (loop) {
      options.repeatType = "loop";
    } else if (flip) {
      options.repeatType = "mirror";
    }
    options.repeat = loop || yoyo || flip || transition.repeat;
  }
  if (transition.type !== "spring")
    options.type = "keyframes";
  return options;
}
function getDelayFromTransition(transition, key) {
  var _a, _b;
  var valueTransition = getValueTransition(transition, key) || {};
  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;
}
function hydrateKeyframes(options) {
  if (Array.isArray(options.to) && options.to[0] === null) {
    options.to = __spreadArray([], __read(options.to), false);
    options.to[0] = options.from;
  }
  return options;
}
function getPopmotionAnimationOptions(transition, options, key) {
  var _a;
  if (Array.isArray(options.to)) {
    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;
  }
  hydrateKeyframes(options);
  if (!isTransitionDefined(transition)) {
    transition = __assign(__assign({}, transition), getDefaultTransition(key, options.to));
  }
  return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition));
}
function getAnimation(key, value, target, transition, onComplete) {
  var _a;
  var valueTransition = getValueTransition(transition, key);
  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
  var isTargetAnimatable = isAnimatable(key, target);
  if (origin === "none" && isTargetAnimatable && typeof target === "string") {
    origin = getAnimatableNone2(key, target);
  } else if (isZero(origin) && typeof target === "string") {
    origin = getZeroUnit(target);
  } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
    target = getZeroUnit(origin);
  }
  var isOriginAnimatable = isAnimatable(key, origin);
  warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, ' from "').concat(origin, '" to "').concat(target, '". ').concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
  function start() {
    var options = {
      from: origin,
      to: target,
      velocity: value.getVelocity(),
      onComplete,
      onUpdate: function(v6) {
        return value.set(v6);
      }
    };
    return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign(__assign({}, options), valueTransition)) : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v6) {
      var _a2;
      options.onUpdate(v6);
      (_a2 = valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, v6);
    }, onComplete: function() {
      var _a2;
      options.onComplete();
      (_a2 = valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);
    } }));
  }
  function set() {
    var _a2, _b;
    var finalTarget = resolveFinalValueInKeyframes(target);
    value.set(finalTarget);
    onComplete();
    (_a2 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, finalTarget);
    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
    return { stop: function() {
    } };
  }
  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;
}
function isZero(value) {
  return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
}
function getZeroUnit(potentialUnitType) {
  return typeof potentialUnitType === "number" ? 0 : getAnimatableNone2("", potentialUnitType);
}
function getValueTransition(transition, key) {
  return transition[key] || transition["default"] || transition;
}
function startAnimation(key, value, target, transition) {
  if (transition === void 0) {
    transition = {};
  }
  if (instantAnimationState.current) {
    transition = { type: false };
  }
  return value.start(function(onComplete) {
    var delayTimer;
    var controls;
    var animation = getAnimation(key, value, target, transition, onComplete);
    var delay = getDelayFromTransition(transition, key);
    var start = function() {
      return controls = animation();
    };
    if (delay) {
      delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));
    } else {
      start();
    }
    return function() {
      clearTimeout(delayTimer);
      controls === null || controls === void 0 ? void 0 : controls.stop();
    };
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = function(v6) {
  return /^\-?\d*\.?\d+$/.test(v6);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = function(v6) {
  return /^0[^.\s]+$/.test(v6);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  var index = arr.indexOf(item);
  index > -1 && arr.splice(index, 1);
}
function moveItem(_a, fromIndex, toIndex) {
  var _b = __read(_a), arr = _b.slice(0);
  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < arr.length) {
    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
    var _c = __read(arr.splice(fromIndex, 1), 1), item = _c[0];
    arr.splice(endIndex, 0, item);
  }
  return arr;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = (
  /** @class */
  function() {
    function SubscriptionManager2() {
      this.subscriptions = [];
    }
    SubscriptionManager2.prototype.add = function(handler) {
      var _this = this;
      addUniqueItem(this.subscriptions, handler);
      return function() {
        return removeItem(_this.subscriptions, handler);
      };
    };
    SubscriptionManager2.prototype.notify = function(a11, b8, c16) {
      var numSubscriptions = this.subscriptions.length;
      if (!numSubscriptions)
        return;
      if (numSubscriptions === 1) {
        this.subscriptions[0](a11, b8, c16);
      } else {
        for (var i8 = 0; i8 < numSubscriptions; i8++) {
          var handler = this.subscriptions[i8];
          handler && handler(a11, b8, c16);
        }
      }
    };
    SubscriptionManager2.prototype.getSize = function() {
      return this.subscriptions.length;
    };
    SubscriptionManager2.prototype.clear = function() {
      this.subscriptions.length = 0;
    };
    return SubscriptionManager2;
  }()
);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = function(value) {
  return !isNaN(parseFloat(value));
};
var MotionValue = (
  /** @class */
  function() {
    function MotionValue3(init) {
      var _this = this;
      this.version = "6.5.1";
      this.timeDelta = 0;
      this.lastUpdated = 0;
      this.updateSubscribers = new SubscriptionManager();
      this.velocityUpdateSubscribers = new SubscriptionManager();
      this.renderSubscribers = new SubscriptionManager();
      this.canTrackVelocity = false;
      this.updateAndNotify = function(v6, render2) {
        if (render2 === void 0) {
          render2 = true;
        }
        _this.prev = _this.current;
        _this.current = v6;
        var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;
        if (_this.lastUpdated !== timestamp) {
          _this.timeDelta = delta;
          _this.lastUpdated = timestamp;
          es_default.postRender(_this.scheduleVelocityCheck);
        }
        if (_this.prev !== _this.current) {
          _this.updateSubscribers.notify(_this.current);
        }
        if (_this.velocityUpdateSubscribers.getSize()) {
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
        if (render2) {
          _this.renderSubscribers.notify(_this.current);
        }
      };
      this.scheduleVelocityCheck = function() {
        return es_default.postRender(_this.velocityCheck);
      };
      this.velocityCheck = function(_a) {
        var timestamp = _a.timestamp;
        if (timestamp !== _this.lastUpdated) {
          _this.prev = _this.current;
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
      };
      this.hasAnimated = false;
      this.prev = this.current = init;
      this.canTrackVelocity = isFloat(this.current);
    }
    MotionValue3.prototype.onChange = function(subscription) {
      return this.updateSubscribers.add(subscription);
    };
    MotionValue3.prototype.clearListeners = function() {
      this.updateSubscribers.clear();
    };
    MotionValue3.prototype.onRenderRequest = function(subscription) {
      subscription(this.get());
      return this.renderSubscribers.add(subscription);
    };
    MotionValue3.prototype.attach = function(passiveEffect) {
      this.passiveEffect = passiveEffect;
    };
    MotionValue3.prototype.set = function(v6, render2) {
      if (render2 === void 0) {
        render2 = true;
      }
      if (!render2 || !this.passiveEffect) {
        this.updateAndNotify(v6, render2);
      } else {
        this.passiveEffect(v6, this.updateAndNotify);
      }
    };
    MotionValue3.prototype.get = function() {
      return this.current;
    };
    MotionValue3.prototype.getPrevious = function() {
      return this.prev;
    };
    MotionValue3.prototype.getVelocity = function() {
      return this.canTrackVelocity ? (
        // These casts could be avoided if parseFloat would be typed better
        velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
      ) : 0;
    };
    MotionValue3.prototype.start = function(animation) {
      var _this = this;
      this.stop();
      return new Promise(function(resolve) {
        _this.hasAnimated = true;
        _this.stopAnimation = animation(resolve);
      }).then(function() {
        return _this.clearAnimation();
      });
    };
    MotionValue3.prototype.stop = function() {
      if (this.stopAnimation)
        this.stopAnimation();
      this.clearAnimation();
    };
    MotionValue3.prototype.isAnimating = function() {
      return !!this.stopAnimation;
    };
    MotionValue3.prototype.clearAnimation = function() {
      this.stopAnimation = null;
    };
    MotionValue3.prototype.destroy = function() {
      this.updateSubscribers.clear();
      this.renderSubscribers.clear();
      this.stop();
    };
    return MotionValue3;
  }()
);
function motionValue(init) {
  return new MotionValue(init);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = function(v6) {
  return function(type) {
    return type.test(v6);
  };
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: function(v6) {
    return v6 === "auto";
  },
  parse: function(v6) {
    return v6;
  }
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
var findDimensionValueType = function(v6) {
  return dimensionValueTypes.find(testValueType(v6));
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes), false), [color, complex], false);
var findValueType = function(v6) {
  return valueTypes.find(testValueType(v6));
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement2, key, value) {
  if (visualElement2.hasValue(key)) {
    visualElement2.getValue(key).set(value);
  } else {
    visualElement2.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement2, definition) {
  var resolved = resolveVariant(visualElement2, definition);
  var _a = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
  _a.transition;
  var target = __rest(_a, ["transitionEnd", "transition"]);
  target = __assign(__assign({}, target), transitionEnd);
  for (var key in target) {
    var value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement2, key, value);
  }
}
function checkTargetForNewValues(visualElement2, target, origin) {
  var _a, _b, _c;
  var _d;
  var newValueKeys = Object.keys(target).filter(function(key2) {
    return !visualElement2.hasValue(key2);
  });
  var numNewValues = newValueKeys.length;
  if (!numNewValues)
    return;
  for (var i8 = 0; i8 < numNewValues; i8++) {
    var key = newValueKeys[i8];
    var targetValue = target[key];
    var value = null;
    if (Array.isArray(targetValue)) {
      value = targetValue[0];
    }
    if (value === null) {
      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
    }
    if (value === void 0 || value === null)
      continue;
    if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
      value = parseFloat(value);
    } else if (!findValueType(value) && complex.test(targetValue)) {
      value = getAnimatableNone2(key, targetValue);
    }
    visualElement2.addValue(key, motionValue(value));
    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
    visualElement2.setBaseTarget(key, value);
  }
}
function getOriginFromTransition(key, transition) {
  if (!transition)
    return;
  var valueTransition = transition[key] || transition["default"] || transition;
  return valueTransition.from;
}
function getOrigin(target, transition, visualElement2) {
  var _a, _b;
  var origin = {};
  for (var key in target) {
    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
  }
  return origin;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation.mjs
function animateVisualElement(visualElement2, definition, options) {
  if (options === void 0) {
    options = {};
  }
  visualElement2.notifyAnimationStart(definition);
  var animation;
  if (Array.isArray(definition)) {
    var animations2 = definition.map(function(variant) {
      return animateVariant(visualElement2, variant, options);
    });
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement2, definition, options);
  } else {
    var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
    animation = animateTarget(visualElement2, resolvedDefinition, options);
  }
  return animation.then(function() {
    return visualElement2.notifyAnimationComplete(definition);
  });
}
function animateVariant(visualElement2, variant, options) {
  var _a;
  if (options === void 0) {
    options = {};
  }
  var resolved = resolveVariant(visualElement2, variant, options.custom);
  var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  var getAnimation2 = resolved ? function() {
    return animateTarget(visualElement2, resolved, options);
  } : function() {
    return Promise.resolve();
  };
  var getChildAnimations = ((_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function(forwardDelay) {
    if (forwardDelay === void 0) {
      forwardDelay = 0;
    }
    var _a2 = transition.delayChildren, delayChildren = _a2 === void 0 ? 0 : _a2, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : function() {
    return Promise.resolve();
  };
  var when = transition.when;
  if (when) {
    var _c = __read(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
    return first().then(last);
  } else {
    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
  }
}
function animateTarget(visualElement2, definition, _a) {
  var _b;
  var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
  var _e5 = visualElement2.makeTargetAnimatable(definition), _f = _e5.transition, transition = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e5.transitionEnd, target = __rest(_e5, ["transition", "transitionEnd"]);
  if (transitionOverride)
    transition = transitionOverride;
  var animations2 = [];
  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
  for (var key in target) {
    var value = visualElement2.getValue(key);
    var valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    var valueTransition = __assign({ delay }, transition);
    if (visualElement2.shouldReduceMotion && isTransformProp(key)) {
      valueTransition = __assign(__assign({}, valueTransition), { type: false, delay: 0 });
    }
    var animation = startAnimation(key, value, valueTarget, valueTransition);
    animations2.push(animation);
  }
  return Promise.all(animations2).then(function() {
    transitionEnd && setTarget(visualElement2, transitionEnd);
  });
}
function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
  if (delayChildren === void 0) {
    delayChildren = 0;
  }
  if (staggerChildren === void 0) {
    staggerChildren = 0;
  }
  if (staggerDirection === void 0) {
    staggerDirection = 1;
  }
  var animations2 = [];
  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
  var generateStaggerDuration = staggerDirection === 1 ? function(i8) {
    if (i8 === void 0) {
      i8 = 0;
    }
    return i8 * staggerChildren;
  } : function(i8) {
    if (i8 === void 0) {
      i8 = 0;
    }
    return maxStaggerDuration - i8 * staggerChildren;
  };
  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i8) {
    animations2.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i8) })).then(function() {
      return child.notifyAnimationComplete(variant);
    }));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a11, b8) {
  return a11.sortNodePosition(b8);
}
function shouldBlockAnimation(_a, key) {
  var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var variantPriorityOrder = [
  AnimationType.Animate,
  AnimationType.InView,
  AnimationType.Focus,
  AnimationType.Hover,
  AnimationType.Tap,
  AnimationType.Drag,
  AnimationType.Exit
];
var reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement2) {
  return function(animations2) {
    return Promise.all(animations2.map(function(_a) {
      var animation = _a.animation, options = _a.options;
      return animateVisualElement(visualElement2, animation, options);
    }));
  };
}
function createAnimationState(visualElement2) {
  var animate4 = animateList(visualElement2);
  var state = createState();
  var allAnimatedKeys = {};
  var isInitialRender = true;
  var buildResolvedTypeValues = function(acc, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    if (resolved) {
      resolved.transition;
      var transitionEnd = resolved.transitionEnd, target = __rest(resolved, ["transition", "transitionEnd"]);
      acc = __assign(__assign(__assign({}, acc), target), transitionEnd);
    }
    return acc;
  };
  function isAnimated(key) {
    return allAnimatedKeys[key] !== void 0;
  }
  function setAnimateFunction(makeAnimator) {
    animate4 = makeAnimator(visualElement2);
  }
  function animateChanges(options, changedActiveType) {
    var _a;
    var props = visualElement2.getProps();
    var context = visualElement2.getVariantContext(true) || {};
    var animations2 = [];
    var removedKeys = /* @__PURE__ */ new Set();
    var encounteredKeys = {};
    var removedVariantIndex = Infinity;
    var _loop_1 = function(i9) {
      var type = reversePriorityOrder[i9];
      var typeState = state[type];
      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
      var propIsVariant = isVariantLabel(prop);
      var activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i9;
      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = __assign({}, encounteredKeys);
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        return "continue";
      }
      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      var shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i9 > removedVariantIndex && propIsVariant;
      var definitionList = Array.isArray(prop) ? prop : [prop];
      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      if (activeDelta === false)
        resolvedValues = {};
      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
      var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);
      var markToAnimate = function(key2) {
        shouldAnimateType = true;
        removedKeys.delete(key2);
        typeState.needsAnimating[key2] = true;
      };
      for (var key in allKeys) {
        var next = resolvedValues[key];
        var prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        if (next !== prev) {
          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
            if (!shallowCompare(next, prev) || variantDidChange) {
              markToAnimate(key);
            } else {
              typeState.protectedKeys[key] = true;
            }
          } else if (next !== void 0) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);
      }
      if (isInitialRender && visualElement2.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      if (shouldAnimateType && !isInherited) {
        animations2.push.apply(animations2, __spreadArray([], __read(definitionList.map(function(animation) {
          return {
            animation,
            options: __assign({ type }, options)
          };
        })), false));
      }
    };
    for (var i8 = 0; i8 < numAnimationTypes; i8++) {
      _loop_1(i8);
    }
    allAnimatedKeys = __assign({}, encounteredKeys);
    if (removedKeys.size) {
      var fallbackAnimation_1 = {};
      removedKeys.forEach(function(key) {
        var fallbackTarget = visualElement2.getBaseTarget(key);
        if (fallbackTarget !== void 0) {
          fallbackAnimation_1[key] = fallbackTarget;
        }
      });
      animations2.push({ animation: fallbackAnimation_1 });
    }
    var shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate4(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);
    });
    state[type].isActive = isActive;
    var animations2 = animateChanges(options, type);
    for (var key in state) {
      state[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    isAnimated,
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: function() {
      return state;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (isVariantLabels(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive) {
  if (isActive === void 0) {
    isActive = false;
  }
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  var _a;
  return _a = {}, _a[AnimationType.Animate] = createTypeState(true), _a[AnimationType.InView] = createTypeState(), _a[AnimationType.Hover] = createTypeState(), _a[AnimationType.Tap] = createTypeState(), _a[AnimationType.Drag] = createTypeState(), _a[AnimationType.Focus] = createTypeState(), _a[AnimationType.Exit] = createTypeState(), _a;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: makeRenderlessComponent(function(_a) {
    var visualElement2 = _a.visualElement, animate4 = _a.animate;
    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
    if (isAnimationControls(animate4)) {
      (0, import_react26.useEffect)(function() {
        return animate4.subscribe(visualElement2);
      }, [animate4]);
    }
  }),
  exit: makeRenderlessComponent(function(props) {
    var custom = props.custom, visualElement2 = props.visualElement;
    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
    var presenceContext = (0, import_react26.useContext)(PresenceContext);
    (0, import_react26.useEffect)(function() {
      var _a2, _b;
      visualElement2.isPresent = isPresent;
      var animation = (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
    }, [isPresent]);
  })
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
var import_react27 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/PanSession.mjs
var PanSession = (
  /** @class */
  function() {
    function PanSession2(event, handlers, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;
      this.startEvent = null;
      this.lastMoveEvent = null;
      this.lastMoveEventInfo = null;
      this.handlers = {};
      this.updatePoint = function() {
        if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
          return;
        var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);
        var isPanStarted = _this.startEvent !== null;
        var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;
        if (!isPanStarted && !isDistancePastThreshold)
          return;
        var point2 = info2.point;
        var timestamp2 = getFrameData().timestamp;
        _this.history.push(__assign(__assign({}, point2), { timestamp: timestamp2 }));
        var _a2 = _this.handlers, onStart = _a2.onStart, onMove = _a2.onMove;
        if (!isPanStarted) {
          onStart && onStart(_this.lastMoveEvent, info2);
          _this.startEvent = _this.lastMoveEvent;
        }
        onMove && onMove(_this.lastMoveEvent, info2);
      };
      this.handlePointerMove = function(event2, info2) {
        _this.lastMoveEvent = event2;
        _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
        if (isMouseEvent(event2) && event2.buttons === 0) {
          _this.handlePointerUp(event2, info2);
          return;
        }
        es_default.update(_this.updatePoint, true);
      };
      this.handlePointerUp = function(event2, info2) {
        _this.end();
        var _a2 = _this.handlers, onEnd = _a2.onEnd, onSessionEnd = _a2.onSessionEnd;
        var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
        if (_this.startEvent && onEnd) {
          onEnd(event2, panInfo);
        }
        onSessionEnd && onSessionEnd(event2, panInfo);
      };
      if (isTouchEvent(event) && event.touches.length > 1)
        return;
      this.handlers = handlers;
      this.transformPagePoint = transformPagePoint;
      var info = extractEventInfo(event);
      var initialInfo = transformPoint(info, this.transformPagePoint);
      var point = initialInfo.point;
      var timestamp = getFrameData().timestamp;
      this.history = [__assign(__assign({}, point), { timestamp })];
      var onSessionStart = handlers.onSessionStart;
      onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
      this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
    }
    PanSession2.prototype.updateHandlers = function(handlers) {
      this.handlers = handlers;
    };
    PanSession2.prototype.end = function() {
      this.removeListeners && this.removeListeners();
      cancelSync.update(this.updatePoint);
    };
    return PanSession2;
  }()
);
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a11, b8) {
  return { x: a11.x - b8.x, y: a11.y - b8.y };
}
function getPanInfo(_a, history) {
  var point = _a.point;
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  var i8 = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint(history);
  while (i8 >= 0) {
    timestampedPoint = history[i8];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i8--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  var time2 = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time2 === 0) {
    return { x: 0, y: 0 };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time2,
    y: (lastPoint.y - timestampedPoint.y) / time2
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  if (target === void 0) {
    target = 0;
  }
  if (maxDistance === void 0) {
    maxDistance = 0.01;
  }
  return distance(value, target) < maxDistance;
}
function calcAxisDelta(delta, source, target, origin) {
  if (origin === void 0) {
    origin = 0.5;
  }
  delta.origin = origin;
  delta.originPoint = mix(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  if (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale))
    delta.scale = 1;
  delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint;
  if (isNear(delta.translate) || isNaN(delta.translate))
    delta.translate = 0;
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min;
  target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x);
  calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout, parent) {
  target.min = layout.min - parent.min;
  target.max = target.min + calcLength(layout);
}
function calcRelativePosition(target, layout, parent) {
  calcRelativeAxisPosition(target.x, layout.x, parent.x);
  calcRelativeAxisPosition(target.y, layout.y, parent.y);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, _a, elastic) {
  var min = _a.min, max = _a.max;
  if (min !== void 0 && point < min) {
    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);
  } else if (max !== void 0 && point > max) {
    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);
  }
  return point;
}
function calcRelativeAxisConstraints(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, _a) {
  var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  var _a;
  var min = constraintsAxis.min - layoutAxis.min;
  var max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    _a = __read([max, min], 2), min = _a[0], max = _a[1];
  }
  return { min, max };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  var origin = 0.5;
  var sourceLength = calcLength(source);
  var targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp2(0, 1, origin);
}
function rebaseAxisConstraints(layout, constraints) {
  var relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic) {
  if (dragElastic === void 0) {
    dragElastic = defaultElastic;
  }
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  var _a;
  return typeof dragElastic === "number" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = function() {
  return {
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0
  };
};
var createDelta = function() {
  return {
    x: createAxisDelta(),
    y: createAxisDelta()
  };
};
var createAxis = function() {
  return { min: 0, max: 0 };
};
var createBox = function() {
  return {
    x: createAxis(),
    y: createAxis()
  };
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox(_a) {
  var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox(_a) {
  var x4 = _a.x, y7 = _a.y;
  return { top: y7.min, right: x4.max, bottom: y7.max, left: x4.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  var topLeft = transformPoint2({ x: point.left, y: point.top });
  var bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale(_a) {
  var scale2 = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function hasTranslate(value) {
  return value && value !== "0%";
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  var distanceFromOrigin = point - originPoint;
  var scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, _a) {
  var x4 = _a.x, y7 = _a.y;
  applyAxisDelta(box.x, x4.translate, x4.scale, x4.originPoint);
  applyAxisDelta(box.y, y7.translate, y7.scale, y7.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
  var _a, _b;
  if (isSharedTransition === void 0) {
    isSharedTransition = false;
  }
  var treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  var node;
  var delta;
  for (var i8 = 0; i8 < treeLength; i8++) {
    node = treePath[i8];
    delta = node.projectionDelta;
    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
      continue;
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box, delta);
    }
    if (isSharedTransition && hasTransform(node.latestValues)) {
      transformBox(box, node.latestValues);
    }
  }
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2;
  axis.max = axis.max + distance2;
}
function transformAxis(axis, transforms2, _a) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  var axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5;
  var originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform2) {
  transformAxis(box.x, transform2, xKeys);
  transformAxis(box.y, transform2, yKeys);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  var viewportBox = measureViewportBox(element, transformPagePoint);
  var scroll2 = rootProjectionNode2.scroll;
  if (scroll2) {
    translateAxis(viewportBox.x, scroll2.x);
    translateAxis(viewportBox.y, scroll2.y);
  }
  return viewportBox;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap();
var VisualElementDragControls = (
  /** @class */
  function() {
    function VisualElementDragControls2(visualElement2) {
      this.openGlobalLock = null;
      this.isDragging = false;
      this.currentDirection = null;
      this.originPoint = { x: 0, y: 0 };
      this.constraints = false;
      this.hasMutatedConstraints = false;
      this.elastic = createBox();
      this.visualElement = visualElement2;
    }
    VisualElementDragControls2.prototype.start = function(originEvent, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
      if (this.visualElement.isPresent === false)
        return;
      var onSessionStart = function(event) {
        _this.stopAnimation();
        if (snapToCursor) {
          _this.snapToCursor(extractEventInfo(event, "page").point);
        }
      };
      var onStart = function(event, info) {
        var _a2;
        var _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
        if (drag2 && !dragPropagation) {
          if (_this.openGlobalLock)
            _this.openGlobalLock();
          _this.openGlobalLock = getGlobalLock(drag2);
          if (!_this.openGlobalLock)
            return;
        }
        _this.isDragging = true;
        _this.currentDirection = null;
        _this.resolveConstraints();
        if (_this.visualElement.projection) {
          _this.visualElement.projection.isAnimationBlocked = true;
          _this.visualElement.projection.target = void 0;
        }
        eachAxis(function(axis) {
          var _a3, _b3;
          var current = _this.getAxisMotionValue(axis).get() || 0;
          if (percent.test(current)) {
            var measuredAxis = (_b3 = (_a3 = _this.visualElement.projection) === null || _a3 === void 0 ? void 0 : _a3.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
            if (measuredAxis) {
              var length_1 = calcLength(measuredAxis);
              current = length_1 * (parseFloat(current) / 100);
            }
          }
          _this.originPoint[axis] = current;
        });
        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
        (_a2 = _this.visualElement.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Drag, true);
      };
      var onMove = function(event, info) {
        var _a2 = _this.getProps(), dragPropagation = _a2.dragPropagation, dragDirectionLock = _a2.dragDirectionLock, onDirectionLock = _a2.onDirectionLock, onDrag = _a2.onDrag;
        if (!dragPropagation && !_this.openGlobalLock)
          return;
        var offset = info.offset;
        if (dragDirectionLock && _this.currentDirection === null) {
          _this.currentDirection = getCurrentDirection(offset);
          if (_this.currentDirection !== null) {
            onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
          }
          return;
        }
        _this.updateAxis("x", info.point, offset);
        _this.updateAxis("y", info.point, offset);
        _this.visualElement.syncRender();
        onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
      };
      var onSessionEnd = function(event, info) {
        return _this.stop(event, info);
      };
      this.panSession = new PanSession(originEvent, {
        onSessionStart,
        onStart,
        onMove,
        onSessionEnd
      }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
    };
    VisualElementDragControls2.prototype.stop = function(event, info) {
      var isDragging = this.isDragging;
      this.cancel();
      if (!isDragging)
        return;
      var velocity = info.velocity;
      this.startAnimation(velocity);
      var onDragEnd = this.getProps().onDragEnd;
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls2.prototype.cancel = function() {
      var _a, _b;
      this.isDragging = false;
      if (this.visualElement.projection) {
        this.visualElement.projection.isAnimationBlocked = false;
      }
      (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
      this.panSession = void 0;
      var dragPropagation = this.getProps().dragPropagation;
      if (!dragPropagation && this.openGlobalLock) {
        this.openGlobalLock();
        this.openGlobalLock = null;
      }
      (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
    };
    VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset) {
      var drag2 = this.getProps().drag;
      if (!offset || !shouldDrag(axis, drag2, this.currentDirection))
        return;
      var axisValue = this.getAxisMotionValue(axis);
      var next = this.originPoint[axis] + offset[axis];
      if (this.constraints && this.constraints[axis]) {
        next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
      }
      axisValue.set(next);
    };
    VisualElementDragControls2.prototype.resolveConstraints = function() {
      var _this = this;
      var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
      var layout = (this.visualElement.projection || {}).layout;
      var prevConstraints = this.constraints;
      if (dragConstraints && isRefObject(dragConstraints)) {
        if (!this.constraints) {
          this.constraints = this.resolveRefConstraints();
        }
      } else {
        if (dragConstraints && layout) {
          this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);
        } else {
          this.constraints = false;
        }
      }
      this.elastic = resolveDragElastic(dragElastic);
      if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {
        eachAxis(function(axis) {
          if (_this.getAxisMotionValue(axis)) {
            _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);
          }
        });
      }
    };
    VisualElementDragControls2.prototype.resolveRefConstraints = function() {
      var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;
      if (!constraints || !isRefObject(constraints))
        return false;
      var constraintsElement = constraints.current;
      invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
      var projection = this.visualElement.projection;
      if (!projection || !projection.layout)
        return false;
      var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
      var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
      if (onMeasureDragConstraints) {
        var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
        this.hasMutatedConstraints = !!userConstraints;
        if (userConstraints) {
          measuredConstraints = convertBoundingBoxToBox(userConstraints);
        }
      }
      return measuredConstraints;
    };
    VisualElementDragControls2.prototype.startAnimation = function(velocity) {
      var _this = this;
      var _a = this.getProps(), drag2 = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;
      var constraints = this.constraints || {};
      var momentumAnimations = eachAxis(function(axis) {
        var _a2;
        if (!shouldDrag(axis, drag2, _this.currentDirection)) {
          return;
        }
        var transition = (_a2 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a2 !== void 0 ? _a2 : {};
        if (dragSnapToOrigin)
          transition = { min: 0, max: 0 };
        var bounceStiffness = dragElastic ? 200 : 1e6;
        var bounceDamping = dragElastic ? 40 : 1e7;
        var inertia2 = __assign(__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
        return _this.startAxisValueAnimation(axis, inertia2);
      });
      return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    };
    VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition) {
      var axisValue = this.getAxisMotionValue(axis);
      return startAnimation(axis, axisValue, 0, transition);
    };
    VisualElementDragControls2.prototype.stopAnimation = function() {
      var _this = this;
      eachAxis(function(axis) {
        return _this.getAxisMotionValue(axis).stop();
      });
    };
    VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
      var _a, _b;
      var dragKey = "_drag" + axis.toUpperCase();
      var externalMotionValue = this.visualElement.getProps()[dragKey];
      return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);
    };
    VisualElementDragControls2.prototype.snapToCursor = function(point) {
      var _this = this;
      eachAxis(function(axis) {
        var drag2 = _this.getProps().drag;
        if (!shouldDrag(axis, drag2, _this.currentDirection))
          return;
        var projection = _this.visualElement.projection;
        var axisValue = _this.getAxisMotionValue(axis);
        if (projection && projection.layout) {
          var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;
          axisValue.set(point[axis] - mix(min, max, 0.5));
        }
      });
    };
    VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
      var _this = this;
      var _a;
      var _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints;
      var projection = this.visualElement.projection;
      if (!isRefObject(dragConstraints) || !projection || !this.constraints)
        return;
      this.stopAnimation();
      var boxProgress = { x: 0, y: 0 };
      eachAxis(function(axis) {
        var axisValue = _this.getAxisMotionValue(axis);
        if (axisValue) {
          var latest = axisValue.get();
          boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, _this.constraints[axis]);
        }
      });
      var transformTemplate = this.visualElement.getProps().transformTemplate;
      this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, "") : "none";
      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
      projection.updateLayout();
      this.resolveConstraints();
      eachAxis(function(axis) {
        if (!shouldDrag(axis, drag2, null))
          return;
        var axisValue = _this.getAxisMotionValue(axis);
        var _a2 = _this.constraints[axis], min = _a2.min, max = _a2.max;
        axisValue.set(mix(min, max, boxProgress[axis]));
      });
    };
    VisualElementDragControls2.prototype.addListeners = function() {
      var _this = this;
      var _a;
      elementDragControls.set(this.visualElement, this);
      var element = this.visualElement.getInstance();
      var stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
        var _a2 = _this.getProps(), drag2 = _a2.drag, _b = _a2.dragListener, dragListener = _b === void 0 ? true : _b;
        drag2 && dragListener && _this.start(event);
      });
      var measureDragConstraints = function() {
        var dragConstraints = _this.getProps().dragConstraints;
        if (isRefObject(dragConstraints)) {
          _this.constraints = _this.resolveRefConstraints();
        }
      };
      var projection = this.visualElement.projection;
      var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
      if (projection && !projection.layout) {
        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
        projection.updateLayout();
      }
      measureDragConstraints();
      var stopResizeListener = addDomEvent(window, "resize", function() {
        return _this.scalePositionWithinConstraints();
      });
      projection.addEventListener("didUpdate", function(_a2) {
        var delta = _a2.delta, hasLayoutChanged = _a2.hasLayoutChanged;
        if (_this.isDragging && hasLayoutChanged) {
          eachAxis(function(axis) {
            var motionValue2 = _this.getAxisMotionValue(axis);
            if (!motionValue2)
              return;
            _this.originPoint[axis] += delta[axis].translate;
            motionValue2.set(motionValue2.get() + delta[axis].translate);
          });
          _this.visualElement.syncRender();
        }
      });
      return function() {
        stopResizeListener();
        stopPointerListener();
        stopMeasureLayoutListener();
      };
    };
    VisualElementDragControls2.prototype.getProps = function() {
      var props = this.visualElement.getProps();
      var _a = props.drag, drag2 = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e5 = props.dragElastic, dragElastic = _e5 === void 0 ? defaultElastic : _e5, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
      return __assign(__assign({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
    };
    return VisualElementDragControls2;
  }()
);
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset, lockThreshold) {
  if (lockThreshold === void 0) {
    lockThreshold = 10;
  }
  var direction = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
function useDrag(props) {
  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
  var dragControls = useConstant(function() {
    return new VisualElementDragControls(visualElement2);
  });
  (0, import_react27.useEffect)(function() {
    return groupDragControls && groupDragControls.subscribe(dragControls);
  }, [dragControls, groupDragControls]);
  (0, import_react27.useEffect)(function() {
    return dragControls.addListeners();
  }, [dragControls]);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs
var import_react28 = __toESM(require_react(), 1);
function usePanGesture(_a) {
  var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement2 = _a.visualElement;
  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
  var panSession = (0, import_react28.useRef)(null);
  var transformPagePoint = (0, import_react28.useContext)(MotionConfigContext).transformPagePoint;
  var handlers = {
    onSessionStart: onPanSessionStart,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function(event, info) {
      panSession.current = null;
      onPanEnd && onPanEnd(event, info);
    }
  };
  (0, import_react28.useEffect)(function() {
    if (panSession.current !== null) {
      panSession.current.updateHandlers(handlers);
    }
  });
  function onPointerDown(event) {
    panSession.current = new PanSession(event, handlers, {
      transformPagePoint
    });
  }
  usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
  useUnmountEffect(function() {
    return panSession.current && panSession.current.end();
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: makeRenderlessComponent(usePanGesture),
  drag: makeRenderlessComponent(useDrag)
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs
var names = [
  "LayoutMeasure",
  "BeforeLayoutMeasure",
  "LayoutUpdate",
  "ViewportBoxUpdate",
  "Update",
  "Render",
  "AnimationComplete",
  "LayoutAnimationComplete",
  "AnimationStart",
  "LayoutAnimationStart",
  "SetAxisTarget",
  "Unmount"
];
function createLifecycles() {
  var managers = names.map(function() {
    return new SubscriptionManager();
  });
  var propSubscriptions = {};
  var lifecycles = {
    clearAllListeners: function() {
      return managers.forEach(function(manager) {
        return manager.clear();
      });
    },
    updatePropListeners: function(props) {
      names.forEach(function(name) {
        var _a;
        var on = "on" + name;
        var propListener = props[on];
        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
        if (propListener) {
          propSubscriptions[name] = lifecycles[on](propListener);
        }
      });
    }
  };
  managers.forEach(function(manager, i8) {
    lifecycles["on" + names[i8]] = function(handler) {
      return manager.add(handler);
    };
    lifecycles["notify" + names[i8]] = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return manager.notify.apply(manager, __spreadArray([], __read(args), false));
    };
  });
  return lifecycles;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  var _a;
  for (var key in next) {
    var nextValue = next[key];
    var prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
      if (true) {
        warnOnce(nextValue.version === "6.5.1", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.5.1 may not work as expected."));
      }
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        var existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
      }
    }
  }
  for (var key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/index.mjs
var visualElement = function(_a) {
  var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox2 = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps;
  return function(_a2, options) {
    var parent = _a2.parent, props = _a2.props, presenceId = _a2.presenceId, blockInitialAnimation = _a2.blockInitialAnimation, visualState = _a2.visualState, shouldReduceMotion = _a2.shouldReduceMotion;
    if (options === void 0) {
      options = {};
    }
    var isMounted = false;
    var latestValues = visualState.latestValues, renderState = visualState.renderState;
    var instance;
    var lifecycles = createLifecycles();
    var values = /* @__PURE__ */ new Map();
    var valueSubscriptions = /* @__PURE__ */ new Map();
    var prevMotionValues = {};
    var baseTarget = __assign({}, latestValues);
    var removeFromVariantTree;
    function render2() {
      if (!instance || !isMounted)
        return;
      triggerBuild();
      renderInstance(instance, renderState, props.style, element.projection);
    }
    function triggerBuild() {
      build(element, renderState, latestValues, options, props);
    }
    function update() {
      lifecycles.notifyUpdate(latestValues);
    }
    function bindToMotionValue(key2, value2) {
      var removeOnChange = value2.onChange(function(latestValue) {
        latestValues[key2] = latestValue;
        props.onUpdate && es_default.update(update, false, true);
      });
      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
      valueSubscriptions.set(key2, function() {
        removeOnChange();
        removeOnRenderRequest();
      });
    }
    var initialMotionValues = scrapeMotionValuesFromProps3(props);
    for (var key in initialMotionValues) {
      var value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    var element = __assign(__assign({
      treeType,
      /**
       * This is a mirror of the internal instance prop, which keeps
       * VisualElement type-compatible with React's RefObject.
       */
      current: null,
      /**
       * The depth of this visual element within the visual element tree.
       */
      depth: parent ? parent.depth + 1 : 0,
      parent,
      children: /* @__PURE__ */ new Set(),
      /**
       *
       */
      presenceId,
      shouldReduceMotion,
      /**
       * If this component is part of the variant tree, it should track
       * any children that are also part of the tree. This is essentially
       * a shadow tree to simplify logic around how to stagger over children.
       */
      variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
      /**
       * Whether this instance is visible. This can be changed imperatively
       * by the projection tree, is analogous to CSS's visibility in that
       * hidden elements should take up layout, and needs enacting by the configured
       * render function.
       */
      isVisible: void 0,
      /**
       * Normally, if a component is controlled by a parent's variants, it can
       * rely on that ancestor to trigger animations further down the tree.
       * However, if a component is created after its parent is mounted, the parent
       * won't trigger that mount animation so the child needs to.
       *
       * TODO: This might be better replaced with a method isParentMounted
       */
      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
      /**
       * This can be set by AnimatePresence to force components that mount
       * at the same time as it to mount as if they have initial={false} set.
       */
      blockInitialAnimation,
      /**
       * Determine whether this component has mounted yet. This is mostly used
       * by variant children to determine whether they need to trigger their
       * own animations on mount.
       */
      isMounted: function() {
        return Boolean(instance);
      },
      mount: function(newInstance) {
        isMounted = true;
        instance = element.current = newInstance;
        if (element.projection) {
          element.projection.mount(newInstance);
        }
        if (isVariantNode && parent && !isControllingVariants) {
          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
        }
        values.forEach(function(value2, key2) {
          return bindToMotionValue(key2, value2);
        });
        parent === null || parent === void 0 ? void 0 : parent.children.add(element);
        element.setProps(props);
      },
      /**
       *
       */
      unmount: function() {
        var _a3;
        (_a3 = element.projection) === null || _a3 === void 0 ? void 0 : _a3.unmount();
        cancelSync.update(update);
        cancelSync.render(render2);
        valueSubscriptions.forEach(function(remove) {
          return remove();
        });
        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
        lifecycles.clearAllListeners();
        instance = void 0;
        isMounted = false;
      },
      /**
       * Add a child visual element to our set of children.
       */
      addVariantChild: function(child) {
        var _a3;
        var closestVariantNode = element.getClosestVariantNode();
        if (closestVariantNode) {
          (_a3 = closestVariantNode.variantChildren) === null || _a3 === void 0 ? void 0 : _a3.add(child);
          return function() {
            return closestVariantNode.variantChildren.delete(child);
          };
        }
      },
      sortNodePosition: function(other) {
        if (!sortNodePosition || treeType !== other.treeType)
          return 0;
        return sortNodePosition(element.getInstance(), other.getInstance());
      },
      /**
       * Returns the closest variant node in the tree starting from
       * this visual element.
       */
      getClosestVariantNode: function() {
        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
      },
      /**
       * Expose the latest layoutId prop.
       */
      getLayoutId: function() {
        return props.layoutId;
      },
      /**
       * Returns the current instance.
       */
      getInstance: function() {
        return instance;
      },
      /**
       * Get/set the latest static values.
       */
      getStaticValue: function(key2) {
        return latestValues[key2];
      },
      setStaticValue: function(key2, value2) {
        return latestValues[key2] = value2;
      },
      /**
       * Returns the latest motion value state. Currently only used to take
       * a snapshot of the visual element - perhaps this can return the whole
       * visual state
       */
      getLatestValues: function() {
        return latestValues;
      },
      /**
       * Set the visiblity of the visual element. If it's changed, schedule
       * a render to reflect these changes.
       */
      setVisibility: function(visibility) {
        if (element.isVisible === visibility)
          return;
        element.isVisible = visibility;
        element.scheduleRender();
      },
      /**
       * Make a target animatable by Popmotion. For instance, if we're
       * trying to animate width from 100px to 100vw we need to measure 100vw
       * in pixels to determine what we really need to animate to. This is also
       * pluggable to support Framer's custom value types like Color,
       * and CSS variables.
       */
      makeTargetAnimatable: function(target, canMutate) {
        if (canMutate === void 0) {
          canMutate = true;
        }
        return makeTargetAnimatable(element, target, props, canMutate);
      },
      /**
       * Measure the current viewport box with or without transforms.
       * Only measures axis-aligned boxes, rotate and skew must be manually
       * removed with a re-render to work.
       */
      measureViewportBox: function() {
        return measureViewportBox2(instance, props);
      },
      // Motion values ========================
      /**
       * Add a motion value and bind it to this visual element.
       */
      addValue: function(key2, value2) {
        if (element.hasValue(key2))
          element.removeValue(key2);
        values.set(key2, value2);
        latestValues[key2] = value2.get();
        bindToMotionValue(key2, value2);
      },
      /**
       * Remove a motion value and unbind any active subscriptions.
       */
      removeValue: function(key2) {
        var _a3;
        values.delete(key2);
        (_a3 = valueSubscriptions.get(key2)) === null || _a3 === void 0 ? void 0 : _a3();
        valueSubscriptions.delete(key2);
        delete latestValues[key2];
        removeValueFromRenderState(key2, renderState);
      },
      /**
       * Check whether we have a motion value for this key
       */
      hasValue: function(key2) {
        return values.has(key2);
      },
      /**
       * Get a motion value for this key. If called with a default
       * value, we'll create one if none exists.
       */
      getValue: function(key2, defaultValue) {
        var value2 = values.get(key2);
        if (value2 === void 0 && defaultValue !== void 0) {
          value2 = motionValue(defaultValue);
          element.addValue(key2, value2);
        }
        return value2;
      },
      /**
       * Iterate over our motion values.
       */
      forEachValue: function(callback) {
        return values.forEach(callback);
      },
      /**
       * If we're trying to animate to a previously unencountered value,
       * we need to check for it in our state and as a last resort read it
       * directly from the instance (which might have performance implications).
       */
      readValue: function(key2) {
        var _a3;
        return (_a3 = latestValues[key2]) !== null && _a3 !== void 0 ? _a3 : readValueFromInstance(instance, key2, options);
      },
      /**
       * Set the base target to later animate back to. This is currently
       * only hydrated on creation and when we first read a value.
       */
      setBaseTarget: function(key2, value2) {
        baseTarget[key2] = value2;
      },
      /**
       * Find the base target for a value thats been removed from all animation
       * props.
       */
      getBaseTarget: function(key2) {
        if (getBaseTarget) {
          var target = getBaseTarget(props, key2);
          if (target !== void 0 && !isMotionValue(target))
            return target;
        }
        return baseTarget[key2];
      }
    }, lifecycles), {
      /**
       * Build the renderer state based on the latest visual state.
       */
      build: function() {
        triggerBuild();
        return renderState;
      },
      /**
       * Schedule a render on the next animation frame.
       */
      scheduleRender: function() {
        es_default.render(render2, false, true);
      },
      /**
       * Synchronously fire render. It's prefered that we batch renders but
       * in many circumstances, like layout measurement, we need to run this
       * synchronously. However in those instances other measures should be taken
       * to batch reads/writes.
       */
      syncRender: render2,
      /**
       * Update the provided props. Ensure any newly-added motion values are
       * added to our map, old ones removed, and listeners updated.
       */
      setProps: function(newProps) {
        if (newProps.transformTemplate || props.transformTemplate) {
          element.scheduleRender();
        }
        props = newProps;
        lifecycles.updatePropListeners(newProps);
        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps3(props), prevMotionValues);
      },
      getProps: function() {
        return props;
      },
      // Variants ==============================
      /**
       * Returns the variant definition with a given name.
       */
      getVariant: function(name) {
        var _a3;
        return (_a3 = props.variants) === null || _a3 === void 0 ? void 0 : _a3[name];
      },
      /**
       * Returns the defined default transition on this component.
       */
      getDefaultTransition: function() {
        return props.transition;
      },
      getTransformPagePoint: function() {
        return props.transformPagePoint;
      },
      /**
       * Used by child variant nodes to get the closest ancestor variant props.
       */
      getVariantContext: function(startAtParent) {
        if (startAtParent === void 0) {
          startAtParent = false;
        }
        if (startAtParent)
          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
        if (!isControllingVariants) {
          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
          if (props.initial !== void 0) {
            context_1.initial = props.initial;
          }
          return context_1;
        }
        var context = {};
        for (var i8 = 0; i8 < numVariantProps; i8++) {
          var name_1 = variantProps[i8];
          var prop = props[name_1];
          if (isVariantLabel(prop) || prop === false) {
            context[name_1] = prop;
          }
        }
        return context;
      }
    });
    return element;
  };
};
var variantProps = __spreadArray(["initial"], __read(variantPriorityOrder), false);
var numVariantProps = variantProps.length;

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function isCSSVariable2(value) {
  return typeof value === "string" && value.startsWith("var(--");
}
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  var match = cssVariableRegex.exec(current);
  if (!match)
    return [,];
  var _a = __read(match, 3), token = _a[1], fallback = _a[2];
  return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
  if (depth === void 0) {
    depth = 1;
  }
  invariant(depth <= maxDepth, 'Max CSS variable fallback depth detected in property "'.concat(current, '". This may indicate a circular fallback dependency.'));
  var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];
  if (!token)
    return;
  var resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    return resolved.trim();
  } else if (isCSSVariable2(fallback)) {
    return getVariableValue(fallback, element, depth + 1);
  } else {
    return fallback;
  }
}
function resolveCSSVariables(visualElement2, _a, transitionEnd) {
  var _b;
  var target = __rest(_a, []);
  var element = visualElement2.getInstance();
  if (!(element instanceof Element))
    return { target, transitionEnd };
  if (transitionEnd) {
    transitionEnd = __assign({}, transitionEnd);
  }
  visualElement2.forEachValue(function(value) {
    var current2 = value.get();
    if (!isCSSVariable2(current2))
      return;
    var resolved2 = getVariableValue(current2, element);
    if (resolved2)
      value.set(resolved2);
  });
  for (var key in target) {
    var current = target[key];
    if (!isCSSVariable2(current))
      continue;
    var resolved = getVariableValue(current, element);
    if (!resolved)
      continue;
    target[key] = resolved;
    if (transitionEnd)
      (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;
  }
  return { target, transitionEnd };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y"
]);
var isPositionalKey = function(key) {
  return positionalKeys.has(key);
};
var hasPositionalKey = function(target) {
  return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function(value, to) {
  value.set(to, false);
  value.set(to);
};
var isNumOrPxType = function(v6) {
  return v6 === number || v6 === px;
};
var BoundingBoxDimension;
(function(BoundingBoxDimension2) {
  BoundingBoxDimension2["width"] = "width";
  BoundingBoxDimension2["height"] = "height";
  BoundingBoxDimension2["left"] = "left";
  BoundingBoxDimension2["right"] = "right";
  BoundingBoxDimension2["top"] = "top";
  BoundingBoxDimension2["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function(matrix, pos) {
  return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function(pos2, pos3) {
  return function(_bbox, _a) {
    var transform2 = _a.transform;
    if (transform2 === "none" || !transform2)
      return 0;
    var matrix3d = transform2.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
      return getPosFromMatrix(matrix3d[1], pos3);
    } else {
      var matrix = transform2.match(/^matrix\((.+)\)$/);
      if (matrix) {
        return getPosFromMatrix(matrix[1], pos2);
      } else {
        return 0;
      }
    }
  };
};
var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function(key) {
  return !transformKeys.has(key);
});
function removeNonTranslationalTransform(visualElement2) {
  var removedTransforms = [];
  nonTranslationalTransformKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  if (removedTransforms.length)
    visualElement2.syncRender();
  return removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: function(_a, _b) {
    var x4 = _a.x;
    var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
    return x4.max - x4.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
  },
  height: function(_a, _b) {
    var y7 = _a.y;
    var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
    return y7.max - y7.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
  },
  top: function(_bbox, _a) {
    var top = _a.top;
    return parseFloat(top);
  },
  left: function(_bbox, _a) {
    var left = _a.left;
    return parseFloat(left);
  },
  bottom: function(_a, _b) {
    var y7 = _a.y;
    var top = _b.top;
    return parseFloat(top) + (y7.max - y7.min);
  },
  right: function(_a, _b) {
    var x4 = _a.x;
    var left = _b.left;
    return parseFloat(left) + (x4.max - x4.min);
  },
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
  var originBbox = visualElement2.measureViewportBox();
  var element = visualElement2.getInstance();
  var elementComputedStyle = getComputedStyle(element);
  var display = elementComputedStyle.display;
  var origin = {};
  if (display === "none") {
    visualElement2.setStaticValue("display", target.display || "block");
  }
  changedKeys.forEach(function(key) {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  });
  visualElement2.syncRender();
  var targetBbox = visualElement2.measureViewportBox();
  changedKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    setAndResetVelocity(value, origin[key]);
    target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  });
  return target;
};
var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
  if (origin === void 0) {
    origin = {};
  }
  if (transitionEnd === void 0) {
    transitionEnd = {};
  }
  target = __assign({}, target);
  transitionEnd = __assign({}, transitionEnd);
  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
  var removedTransformValues = [];
  var hasAttemptedToRemoveTransformValues = false;
  var changedValueTypeKeys = [];
  targetPositionalKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (!visualElement2.hasValue(key))
      return;
    var from = origin[key];
    var fromType = findDimensionValueType(from);
    var to = target[key];
    var toType;
    if (isKeyframesTarget(to)) {
      var numKeyframes = to.length;
      var fromIndex = to[0] === null ? 1 : 0;
      from = to[fromIndex];
      fromType = findDimensionValueType(from);
      for (var i8 = fromIndex; i8 < numKeyframes; i8++) {
        if (!toType) {
          toType = findDimensionValueType(to[i8]);
          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value");
        } else {
          invariant(findDimensionValueType(to[i8]) === toType, "All keyframes must be of the same type");
        }
      }
    } else {
      toType = findDimensionValueType(to);
    }
    if (fromType !== toType) {
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        var current = value.get();
        if (typeof current === "string") {
          value.set(parseFloat(current));
        }
        if (typeof to === "string") {
          target[key] = parseFloat(to);
        } else if (Array.isArray(to) && toType === px) {
          target[key] = to.map(parseFloat);
        }
      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to === 0)) {
        if (from === 0) {
          value.set(toType.transform(from));
        } else {
          target[key] = fromType.transform(to);
        }
      } else {
        if (!hasAttemptedToRemoveTransformValues) {
          removedTransformValues = removeNonTranslationalTransform(visualElement2);
          hasAttemptedToRemoveTransformValues = true;
        }
        changedValueTypeKeys.push(key);
        transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key];
        setAndResetVelocity(value, to);
      }
    }
  });
  if (changedValueTypeKeys.length) {
    var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null;
    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
    if (removedTransformValues.length) {
      removedTransformValues.forEach(function(_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        visualElement2.getValue(key).set(value);
      });
    }
    visualElement2.syncRender();
    if (scrollY_1 !== null)
      window.scrollTo({ top: scrollY_1 });
    return { target: convertedTarget, transitionEnd };
  } else {
    return { target, transitionEnd };
  }
};
function unitConversion(visualElement2, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
  target = resolved.target;
  transitionEnd = resolved.transitionEnd;
  return unitConversion(visualElement2, target, origin, transitionEnd);
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/html/visual-element.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var htmlConfig = {
  treeType: "dom",
  readValueFromInstance: function(domElement, key) {
    if (isTransformProp(key)) {
      var defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      var computedStyle = getComputedStyle2(domElement);
      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
    }
  },
  sortNodePosition: function(a11, b8) {
    return a11.compareDocumentPosition(b8) & 2 ? 1 : -1;
  },
  getBaseTarget: function(props, key) {
    var _a;
    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
  },
  measureViewportBox: function(element, _a) {
    var transformPagePoint = _a.transformPagePoint;
    return measureViewportBox(element, transformPagePoint);
  },
  /**
   * Reset the transform on the current Element. This is called as part
   * of a batched process across the entire layout tree. To remove this write
   * cycle it'd be interesting to see if it's possible to "undo" all the current
   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
   * works
   */
  resetTransform: function(element, domElement, props) {
    var transformTemplate = props.transformTemplate;
    domElement.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
    element.scheduleRender();
  },
  restoreTransform: function(instance, mutableState) {
    instance.style.transform = mutableState.style.transform;
  },
  removeValueFromRenderState: function(key, _a) {
    var vars = _a.vars, style2 = _a.style;
    delete vars[key];
    delete style2[key];
  },
  /**
   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
   * can be animated by Motion.
   */
  makeTargetAnimatable: function(element, _a, _b, isMounted) {
    var transformValues = _b.transformValues;
    if (isMounted === void 0) {
      isMounted = true;
    }
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    if (transformValues) {
      if (transitionEnd)
        transitionEnd = transformValues(transitionEnd);
      if (target)
        target = transformValues(target);
      if (origin)
        origin = transformValues(origin);
    }
    if (isMounted) {
      checkTargetForNewValues(element, target, origin);
      var parsed = parseDomVariant(element, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd;
      target = parsed.target;
    }
    return __assign({ transition, transitionEnd }, target);
  },
  scrapeMotionValuesFromProps,
  build: function(element, renderState, latestValues, options, props) {
    if (element.isVisible !== void 0) {
      renderState.style.visibility = element.isVisible ? "visible" : "hidden";
    }
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  },
  render: renderHTML
};
var htmlVisualElement = visualElement(htmlConfig);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/svg/visual-element.mjs
var svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function(props, key) {
  return props[key];
}, readValueFromInstance: function(domElement, key) {
  var _a;
  if (isTransformProp(key)) {
    return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
  }
  key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
  return domElement.getAttribute(key);
}, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2, build: function(_element, renderState, latestValues, options, props) {
  buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
}, render: renderSVG }));

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = function(Component, options) {
  return isSVGComponent(Component) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react29 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: function(latest, node) {
    if (!node.target)
      return latest;
    if (typeof latest === "string") {
      if (px.test(latest)) {
        latest = parseFloat(latest);
      } else {
        return latest;
      }
    }
    var x4 = pixelsToPercent(latest, node.target.x);
    var y7 = pixelsToPercent(latest, node.target.y);
    return "".concat(x4, "% ").concat(y7, "%");
  }
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var varToken = "_$css";
var correctBoxShadow = {
  correct: function(latest, _a) {
    var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;
    var original = latest;
    var containsCSSVariables = latest.includes("var(");
    var cssVariables = [];
    if (containsCSSVariables) {
      latest = latest.replace(cssVariableRegex, function(match) {
        cssVariables.push(match);
        return varToken;
      });
    }
    var shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    var template = complex.createTransformer(latest);
    var offset = typeof shadow[0] !== "number" ? 1 : 0;
    var xScale = projectionDelta.x.scale * treeScale.x;
    var yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset] /= xScale;
    shadow[1 + offset] /= yScale;
    var averageScale = mix(xScale, yScale, 0.5);
    if (typeof shadow[2 + offset] === "number")
      shadow[2 + offset] /= averageScale;
    if (typeof shadow[3 + offset] === "number")
      shadow[3 + offset] /= averageScale;
    var output = template(shadow);
    if (containsCSSVariables) {
      var i_1 = 0;
      output = output.replace(varToken, function() {
        var cssVariable = cssVariables[i_1];
        i_1++;
        return cssVariable;
      });
    }
    return output;
  }
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = (
  /** @class */
  function(_super) {
    __extends(MeasureLayoutWithContext2, _super);
    function MeasureLayoutWithContext2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureLayoutWithContext2.prototype.componentDidMount = function() {
      var _this = this;
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;
      var projection = visualElement2.projection;
      addScaleCorrector(defaultScaleCorrectors);
      if (projection) {
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.add(projection);
        if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
          switchLayoutGroup.register(projection);
        }
        projection.root.didUpdate();
        projection.addEventListener("animationComplete", function() {
          _this.safeToRemove();
        });
        projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function() {
          return _this.safeToRemove();
        } }));
      }
      globalProjectionState.hasEverUpdated = true;
    };
    MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
      var _this = this;
      var _a = this.props, layoutDependency = _a.layoutDependency, visualElement2 = _a.visualElement, drag2 = _a.drag, isPresent = _a.isPresent;
      var projection = visualElement2.projection;
      if (!projection)
        return null;
      projection.isPresent = isPresent;
      if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0) {
        projection.willUpdate();
      } else {
        this.safeToRemove();
      }
      if (prevProps.isPresent !== isPresent) {
        if (isPresent) {
          projection.promote();
        } else if (!projection.relegate()) {
          es_default.postRender(function() {
            var _a2;
            if (!((_a2 = projection.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length)) {
              _this.safeToRemove();
            }
          });
        }
      }
      return null;
    };
    MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
      var projection = this.props.visualElement.projection;
      if (projection) {
        projection.root.didUpdate();
        if (!projection.currentAnimation && projection.isLead()) {
          this.safeToRemove();
        }
      }
    };
    MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;
      var projection = visualElement2.projection;
      if (projection) {
        projection.scheduleCheckAfterUnmount();
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.remove(projection);
        if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
          promoteContext.deregister(projection);
      }
    };
    MeasureLayoutWithContext2.prototype.safeToRemove = function() {
      var safeToRemove = this.props.safeToRemove;
      safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
    };
    MeasureLayoutWithContext2.prototype.render = function() {
      return null;
    };
    return MeasureLayoutWithContext2;
  }(import_react29.default.Component)
);
function MeasureLayout(props) {
  var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
  var layoutGroup = (0, import_react29.useContext)(LayoutGroupContext);
  return import_react29.default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup, switchLayoutGroup: (0, import_react29.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove }));
}
var defaultScaleCorrectors = {
  borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderBottomLeftRadius",
    "borderBottomRightRadius"
  ] }),
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/motion/features/layout/index.mjs
var layoutFeatures = {
  measureLayout: MeasureLayout
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/animate.mjs
function animate2(from, to, transition) {
  if (transition === void 0) {
    transition = {};
  }
  var value = isMotionValue(from) ? from : motionValue(from);
  startAnimation("", value, to, transition);
  return {
    stop: function() {
      return value.stop();
    },
    isAnimating: function() {
      return value.isAnimating();
    }
  };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
var asNumber = function(value) {
  return typeof value === "string" ? parseFloat(value) : value;
};
var isPx = function(value) {
  return typeof value === "number" || px.test(value);
};
function mixValues(target, follow, lead, progress3, shouldCrossfadeOpacity, isOnlyMember) {
  var _a, _b, _c, _d;
  if (shouldCrossfadeOpacity) {
    target.opacity = mix(
      0,
      // (follow?.opacity as number) ?? 0,
      // TODO Reinstate this if only child
      (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1,
      easeCrossfadeIn(progress3)
    );
    target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress3));
  } else if (isOnlyMember) {
    target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress3);
  }
  for (var i8 = 0; i8 < numBorders; i8++) {
    var borderLabel = "border".concat(borders[i8], "Radius");
    var followRadius = getRadius(follow, borderLabel);
    var leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress3), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress3);
  }
}
function getRadius(values, radiusName) {
  var _a;
  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut);
var easeCrossfadeOut = compress(0.5, 0.95, linear);
function compress(min, max, easing) {
  return function(p7) {
    if (p7 < min)
      return 0;
    if (p7 > max)
      return 1;
    return easing(progress(min, max, p7));
  };
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x);
  copyAxisInto(box.y, originBox.y);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale2, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate, scale2, origin, boxScale, originAxis, sourceAxis) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  if (origin === void 0) {
    origin = 0.5;
  }
  if (originAxis === void 0) {
    originAxis = axis;
  }
  if (sourceAxis === void 0) {
    sourceAxis = axis;
  }
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  var originPoint = mix(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms2, _a, origin, sourceAxis) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"];
var yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms2, xKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
  removeAxisTransforms(box.y, transforms2, yKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a11, b8) {
  return a11.x.min === b8.x.min && a11.x.max === b8.x.max && a11.y.min === b8.y.min && a11.y.max === b8.y.max;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = (
  /** @class */
  function() {
    function NodeStack2() {
      this.members = [];
    }
    NodeStack2.prototype.add = function(node) {
      addUniqueItem(this.members, node);
      node.scheduleRender();
    };
    NodeStack2.prototype.remove = function(node) {
      removeItem(this.members, node);
      if (node === this.prevLead) {
        this.prevLead = void 0;
      }
      if (node === this.lead) {
        var prevLead = this.members[this.members.length - 1];
        if (prevLead) {
          this.promote(prevLead);
        }
      }
    };
    NodeStack2.prototype.relegate = function(node) {
      var indexOfNode = this.members.findIndex(function(member2) {
        return node === member2;
      });
      if (indexOfNode === 0)
        return false;
      var prevLead;
      for (var i8 = indexOfNode; i8 >= 0; i8--) {
        var member = this.members[i8];
        if (member.isPresent !== false) {
          prevLead = member;
          break;
        }
      }
      if (prevLead) {
        this.promote(prevLead);
        return true;
      } else {
        return false;
      }
    };
    NodeStack2.prototype.promote = function(node, preserveFollowOpacity) {
      var _a;
      var prevLead = this.lead;
      if (node === prevLead)
        return;
      this.prevLead = prevLead;
      this.lead = node;
      node.show();
      if (prevLead) {
        prevLead.instance && prevLead.scheduleRender();
        node.scheduleRender();
        node.resumeFrom = prevLead;
        if (preserveFollowOpacity) {
          node.resumeFrom.preserveOpacity = true;
        }
        if (prevLead.snapshot) {
          node.snapshot = prevLead.snapshot;
          node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          node.snapshot.isShared = true;
        }
        if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {
          node.isLayoutDirty = true;
        }
        var crossfade = node.options.crossfade;
        if (crossfade === false) {
          prevLead.hide();
        }
      }
    };
    NodeStack2.prototype.exitAnimationComplete = function() {
      this.members.forEach(function(node) {
        var _a, _b, _c, _d, _e5;
        (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
        (_e5 = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e5 === void 0 ? void 0 : _e5.call(_d);
      });
    };
    NodeStack2.prototype.scheduleRender = function() {
      this.members.forEach(function(node) {
        node.instance && node.scheduleRender(false);
      });
    };
    NodeStack2.prototype.removeLeadSnapshot = function() {
      if (this.lead && this.lead.snapshot) {
        this.lead.snapshot = void 0;
      }
    };
    return NodeStack2;
  }()
);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/styles/transform.mjs
var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
function buildProjectionTransform(delta, treeScale, latestTransform) {
  var xTranslate = delta.x.translate / treeScale.x;
  var yTranslate = delta.y.translate / treeScale.y;
  var transform2 = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
  transform2 += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") ");
  if (latestTransform) {
    var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
    if (rotate)
      transform2 += "rotate(".concat(rotate, "deg) ");
    if (rotateX)
      transform2 += "rotateX(".concat(rotateX, "deg) ");
    if (rotateY)
      transform2 += "rotateY(".concat(rotateY, "deg) ");
  }
  var elementScaleX = delta.x.scale * treeScale.x;
  var elementScaleY = delta.y.scale * treeScale.y;
  transform2 += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")");
  return transform2 === identityProjection ? "none" : transform2;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = function(a11, b8) {
  return a11.depth - b8.depth;
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = (
  /** @class */
  function() {
    function FlatTree2() {
      this.children = [];
      this.isDirty = false;
    }
    FlatTree2.prototype.add = function(child) {
      addUniqueItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.remove = function(child) {
      removeItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.forEach = function(callback) {
      this.isDirty && this.children.sort(compareByDepth);
      this.isDirty = false;
      this.children.forEach(callback);
    };
    return FlatTree2;
  }()
);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var animationTarget = 1e3;
function createProjectionNode(_a) {
  var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;
  return (
    /** @class */
    function() {
      function ProjectionNode(id2, latestValues, parent) {
        var _this = this;
        if (latestValues === void 0) {
          latestValues = {};
        }
        if (parent === void 0) {
          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();
        }
        this.children = /* @__PURE__ */ new Set();
        this.options = {};
        this.isTreeAnimating = false;
        this.isAnimationBlocked = false;
        this.isLayoutDirty = false;
        this.updateManuallyBlocked = false;
        this.updateBlockedByResize = false;
        this.isUpdating = false;
        this.isSVG = false;
        this.needsReset = false;
        this.shouldResetTransform = false;
        this.treeScale = { x: 1, y: 1 };
        this.eventHandlers = /* @__PURE__ */ new Map();
        this.potentialNodes = /* @__PURE__ */ new Map();
        this.checkUpdateFailed = function() {
          if (_this.isUpdating) {
            _this.isUpdating = false;
            _this.clearAllSnapshots();
          }
        };
        this.updateProjection = function() {
          _this.nodes.forEach(resolveTargetDelta);
          _this.nodes.forEach(calcProjection);
        };
        this.hasProjected = false;
        this.isVisible = true;
        this.animationProgress = 0;
        this.sharedNodes = /* @__PURE__ */ new Map();
        this.id = id2;
        this.latestValues = latestValues;
        this.root = parent ? parent.root || parent : this;
        this.path = parent ? __spreadArray(__spreadArray([], __read(parent.path), false), [parent], false) : [];
        this.parent = parent;
        this.depth = parent ? parent.depth + 1 : 0;
        id2 && this.root.registerPotentialNode(id2, this);
        for (var i8 = 0; i8 < this.path.length; i8++) {
          this.path[i8].shouldResetTransform = true;
        }
        if (this.root === this)
          this.nodes = new FlatTree();
      }
      ProjectionNode.prototype.addEventListener = function(name, handler) {
        if (!this.eventHandlers.has(name)) {
          this.eventHandlers.set(name, new SubscriptionManager());
        }
        return this.eventHandlers.get(name).add(handler);
      };
      ProjectionNode.prototype.notifyListeners = function(name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        var subscriptionManager = this.eventHandlers.get(name);
        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray([], __read(args), false));
      };
      ProjectionNode.prototype.hasListeners = function(name) {
        return this.eventHandlers.has(name);
      };
      ProjectionNode.prototype.registerPotentialNode = function(id2, node) {
        this.potentialNodes.set(id2, node);
      };
      ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
        var _this = this;
        var _a2;
        if (isLayoutDirty === void 0) {
          isLayoutDirty = false;
        }
        if (this.instance)
          return;
        this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg";
        this.instance = instance;
        var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement2 = _b.visualElement;
        if (visualElement2 && !visualElement2.getInstance()) {
          visualElement2.mount(instance);
        }
        this.root.nodes.add(this);
        (_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.children.add(this);
        this.id && this.root.potentialNodes.delete(this.id);
        if (isLayoutDirty && (layout || layoutId)) {
          this.isLayoutDirty = true;
        }
        if (attachResizeListener) {
          var unblockTimeout_1;
          var resizeUnblockUpdate_1 = function() {
            return _this.root.updateBlockedByResize = false;
          };
          attachResizeListener(instance, function() {
            _this.root.updateBlockedByResize = true;
            clearTimeout(unblockTimeout_1);
            unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);
            if (globalProjectionState.hasAnimatedSinceResize) {
              globalProjectionState.hasAnimatedSinceResize = false;
              _this.nodes.forEach(finishAnimation);
            }
          });
        }
        if (layoutId) {
          this.root.registerSharedNode(layoutId, this);
        }
        if (this.options.animate !== false && visualElement2 && (layoutId || layout)) {
          this.addEventListener("didUpdate", function(_a3) {
            var _b2, _c, _d, _e5, _f;
            var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged, hasRelativeTargetChanged = _a3.hasRelativeTargetChanged, newLayout = _a3.layout;
            if (_this.isTreeAnimationBlocked()) {
              _this.target = void 0;
              _this.relativeTarget = void 0;
              return;
            }
            var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
            var _g = visualElement2.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;
            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;
            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
              if (_this.resumeFrom) {
                _this.resumingFrom = _this.resumeFrom;
                _this.resumingFrom.resumingFrom = void 0;
              }
              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
              var animationOptions = __assign(__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
              if (visualElement2.shouldReduceMotion) {
                animationOptions.delay = 0;
                animationOptions.type = false;
              }
              _this.startAnimation(animationOptions);
            } else {
              if (!hasLayoutChanged && _this.animationProgress === 0) {
                _this.finishAnimation();
              }
              _this.isLead() && ((_f = (_e5 = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e5));
            }
            _this.targetLayout = newLayout;
          });
        }
      };
      ProjectionNode.prototype.unmount = function() {
        var _a2, _b;
        this.options.layoutId && this.willUpdate();
        this.root.nodes.remove(this);
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.remove(this);
        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
        this.instance = void 0;
        cancelSync.preRender(this.updateProjection);
      };
      ProjectionNode.prototype.blockUpdate = function() {
        this.updateManuallyBlocked = true;
      };
      ProjectionNode.prototype.unblockUpdate = function() {
        this.updateManuallyBlocked = false;
      };
      ProjectionNode.prototype.isUpdateBlocked = function() {
        return this.updateManuallyBlocked || this.updateBlockedByResize;
      };
      ProjectionNode.prototype.isTreeAnimationBlocked = function() {
        var _a2;
        return this.isAnimationBlocked || ((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimationBlocked()) || false;
      };
      ProjectionNode.prototype.startUpdate = function() {
        var _a2;
        if (this.isUpdateBlocked())
          return;
        this.isUpdating = true;
        (_a2 = this.nodes) === null || _a2 === void 0 ? void 0 : _a2.forEach(resetRotation);
      };
      ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
        var _a2, _b, _c;
        if (shouldNotifyListeners === void 0) {
          shouldNotifyListeners = true;
        }
        if (this.root.isUpdateBlocked()) {
          (_b = (_a2 = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a2);
          return;
        }
        !this.root.isUpdating && this.root.startUpdate();
        if (this.isLayoutDirty)
          return;
        this.isLayoutDirty = true;
        for (var i8 = 0; i8 < this.path.length; i8++) {
          var node = this.path[i8];
          node.shouldResetTransform = true;
          node.updateScroll();
        }
        var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
        if (layoutId === void 0 && !layout)
          return;
        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        this.updateSnapshot();
        shouldNotifyListeners && this.notifyListeners("willUpdate");
      };
      ProjectionNode.prototype.didUpdate = function() {
        var updateWasBlocked = this.isUpdateBlocked();
        if (updateWasBlocked) {
          this.unblockUpdate();
          this.clearAllSnapshots();
          this.nodes.forEach(clearMeasurements);
          return;
        }
        if (!this.isUpdating)
          return;
        this.isUpdating = false;
        if (this.potentialNodes.size) {
          this.potentialNodes.forEach(mountNodeEarly);
          this.potentialNodes.clear();
        }
        this.nodes.forEach(resetTransformStyle);
        this.nodes.forEach(updateLayout);
        this.nodes.forEach(notifyLayoutUpdate);
        this.clearAllSnapshots();
        flushSync.update();
        flushSync.preRender();
        flushSync.render();
      };
      ProjectionNode.prototype.clearAllSnapshots = function() {
        this.nodes.forEach(clearSnapshot);
        this.sharedNodes.forEach(removeLeadSnapshots);
      };
      ProjectionNode.prototype.scheduleUpdateProjection = function() {
        es_default.preRender(this.updateProjection, false, true);
      };
      ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
        var _this = this;
        es_default.postRender(function() {
          if (_this.isLayoutDirty) {
            _this.root.didUpdate();
          } else {
            _this.root.checkUpdateFailed();
          }
        });
      };
      ProjectionNode.prototype.updateSnapshot = function() {
        if (this.snapshot || !this.instance)
          return;
        var measured = this.measure();
        var layout = this.removeTransform(this.removeElementScroll(measured));
        roundBox(layout);
        this.snapshot = {
          measured,
          layout,
          latestValues: {}
        };
      };
      ProjectionNode.prototype.updateLayout = function() {
        var _a2;
        if (!this.instance)
          return;
        this.updateScroll();
        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
          return;
        }
        if (this.resumeFrom && !this.resumeFrom.instance) {
          for (var i8 = 0; i8 < this.path.length; i8++) {
            var node = this.path[i8];
            node.updateScroll();
          }
        }
        var measured = this.measure();
        roundBox(measured);
        var prevLayout = this.layout;
        this.layout = {
          measured,
          actual: this.removeElementScroll(measured)
        };
        this.layoutCorrected = createBox();
        this.isLayoutDirty = false;
        this.projectionDelta = void 0;
        this.notifyListeners("measure", this.layout.actual);
        (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
      };
      ProjectionNode.prototype.updateScroll = function() {
        if (this.options.layoutScroll && this.instance) {
          this.isScrollRoot = checkIsScrollRoot(this.instance);
          this.scroll = measureScroll(this.instance);
        }
      };
      ProjectionNode.prototype.resetTransform = function() {
        var _a2;
        if (!resetTransform)
          return;
        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
          resetTransform(this.instance, transformTemplateValue);
          this.shouldResetTransform = false;
          this.scheduleRender();
        }
      };
      ProjectionNode.prototype.measure = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return createBox();
        var box = visualElement2.measureViewportBox();
        var scroll2 = this.root.scroll;
        if (scroll2) {
          translateAxis(box.x, scroll2.x);
          translateAxis(box.y, scroll2.y);
        }
        return box;
      };
      ProjectionNode.prototype.removeElementScroll = function(box) {
        var boxWithoutScroll = createBox();
        copyBoxInto(boxWithoutScroll, box);
        for (var i8 = 0; i8 < this.path.length; i8++) {
          var node = this.path[i8];
          var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;
          if (node !== this.root && scroll_1 && options.layoutScroll) {
            if (isScrollRoot) {
              copyBoxInto(boxWithoutScroll, box);
              var rootScroll = this.root.scroll;
              if (rootScroll) {
                translateAxis(boxWithoutScroll.x, -rootScroll.x);
                translateAxis(boxWithoutScroll.y, -rootScroll.y);
              }
            }
            translateAxis(boxWithoutScroll.x, scroll_1.x);
            translateAxis(boxWithoutScroll.y, scroll_1.y);
          }
        }
        return boxWithoutScroll;
      };
      ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
        if (transformOnly === void 0) {
          transformOnly = false;
        }
        var withTransforms = createBox();
        copyBoxInto(withTransforms, box);
        for (var i8 = 0; i8 < this.path.length; i8++) {
          var node = this.path[i8];
          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
            transformBox(withTransforms, {
              x: -node.scroll.x,
              y: -node.scroll.y
            });
          }
          if (!hasTransform(node.latestValues))
            continue;
          transformBox(withTransforms, node.latestValues);
        }
        if (hasTransform(this.latestValues)) {
          transformBox(withTransforms, this.latestValues);
        }
        return withTransforms;
      };
      ProjectionNode.prototype.removeTransform = function(box) {
        var _a2;
        var boxWithoutTransform = createBox();
        copyBoxInto(boxWithoutTransform, box);
        for (var i8 = 0; i8 < this.path.length; i8++) {
          var node = this.path[i8];
          if (!node.instance)
            continue;
          if (!hasTransform(node.latestValues))
            continue;
          hasScale(node.latestValues) && node.updateSnapshot();
          var sourceBox = createBox();
          var nodeBox = node.measure();
          copyBoxInto(sourceBox, nodeBox);
          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a2 = node.snapshot) === null || _a2 === void 0 ? void 0 : _a2.layout, sourceBox);
        }
        if (hasTransform(this.latestValues)) {
          removeBoxTransforms(boxWithoutTransform, this.latestValues);
        }
        return boxWithoutTransform;
      };
      ProjectionNode.prototype.setTargetDelta = function(delta) {
        this.targetDelta = delta;
        this.root.scheduleUpdateProjection();
      };
      ProjectionNode.prototype.setOptions = function(options) {
        var _a2;
        this.options = __assign(__assign(__assign({}, this.options), options), { crossfade: (_a2 = options.crossfade) !== null && _a2 !== void 0 ? _a2 : true });
      };
      ProjectionNode.prototype.clearMeasurements = function() {
        this.scroll = void 0;
        this.layout = void 0;
        this.snapshot = void 0;
        this.prevTransformTemplateValue = void 0;
        this.targetDelta = void 0;
        this.target = void 0;
        this.isLayoutDirty = false;
      };
      ProjectionNode.prototype.resolveTargetDelta = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        if (!this.layout || !(layout || layoutId))
          return;
        if (!this.targetDelta && !this.relativeTarget) {
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && this.relativeParent.layout) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
        if (!this.relativeTarget && !this.targetDelta)
          return;
        if (!this.target) {
          this.target = createBox();
          this.targetWithTransforms = createBox();
        }
        if (this.relativeTarget && this.relativeTargetOrigin && ((_a2 = this.relativeParent) === null || _a2 === void 0 ? void 0 : _a2.target)) {
          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
        } else if (this.targetDelta) {
          if (Boolean(this.resumingFrom)) {
            this.target = this.applyTransform(this.layout.actual);
          } else {
            copyBoxInto(this.target, this.layout.actual);
          }
          applyBoxDelta(this.target, this.targetDelta);
        } else {
          copyBoxInto(this.target, this.layout.actual);
        }
        if (this.attemptToResolveRelativeTarget) {
          this.attemptToResolveRelativeTarget = false;
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
      };
      ProjectionNode.prototype.getClosestProjectingParent = function() {
        if (!this.parent || hasTransform(this.parent.latestValues))
          return void 0;
        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {
          return this.parent;
        } else {
          return this.parent.getClosestProjectingParent();
        }
      };
      ProjectionNode.prototype.calcProjection = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        this.isTreeAnimating = Boolean(((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);
        if (!this.isTreeAnimating) {
          this.targetDelta = this.relativeTarget = void 0;
        }
        if (!this.layout || !(layout || layoutId))
          return;
        var lead = this.getLead();
        copyBoxInto(this.layoutCorrected, this.layout.actual);
        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
        var target = lead.target;
        if (!target)
          return;
        if (!this.projectionDelta) {
          this.projectionDelta = createDelta();
          this.projectionDeltaWithTransform = createDelta();
        }
        var prevTreeScaleX = this.treeScale.x;
        var prevTreeScaleY = this.treeScale.y;
        var prevProjectionTransform = this.projectionTransform;
        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {
          this.hasProjected = true;
          this.scheduleRender();
          this.notifyListeners("projectionUpdate", target);
        }
      };
      ProjectionNode.prototype.hide = function() {
        this.isVisible = false;
      };
      ProjectionNode.prototype.show = function() {
        this.isVisible = true;
      };
      ProjectionNode.prototype.scheduleRender = function(notifyAll) {
        var _a2, _b, _c;
        if (notifyAll === void 0) {
          notifyAll = true;
        }
        (_b = (_a2 = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a2);
        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
        if (this.resumingFrom && !this.resumingFrom.instance) {
          this.resumingFrom = void 0;
        }
      };
      ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
        var _this = this;
        var _a2;
        if (hasOnlyRelativeTargetChanged === void 0) {
          hasOnlyRelativeTargetChanged = false;
        }
        var snapshot = this.snapshot;
        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
        var mixedValues = __assign({}, this.latestValues);
        var targetDelta = createDelta();
        this.relativeTarget = this.relativeTargetOrigin = void 0;
        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
        var relativeLayout = createBox();
        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
        var isOnlyMember = (((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length) || 0) <= 1;
        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
        this.animationProgress = 0;
        this.mixTargetDelta = function(latest) {
          var _a3;
          var progress3 = latest / 1e3;
          mixAxisDelta(targetDelta.x, delta.x, progress3);
          mixAxisDelta(targetDelta.y, delta.y, progress3);
          _this.setTargetDelta(targetDelta);
          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a3 = _this.relativeParent) === null || _a3 === void 0 ? void 0 : _a3.layout)) {
            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress3);
          }
          if (isSharedLayoutAnimation) {
            _this.animationValues = mixedValues;
            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress3, shouldCrossfadeOpacity, isOnlyMember);
          }
          _this.root.scheduleUpdateProjection();
          _this.scheduleRender();
          _this.animationProgress = progress3;
        };
        this.mixTargetDelta(0);
      };
      ProjectionNode.prototype.startAnimation = function(options) {
        var _this = this;
        var _a2, _b;
        this.notifyListeners("animationStart");
        (_a2 = this.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        if (this.resumingFrom) {
          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
        }
        if (this.pendingAnimation) {
          cancelSync.update(this.pendingAnimation);
          this.pendingAnimation = void 0;
        }
        this.pendingAnimation = es_default.update(function() {
          globalProjectionState.hasAnimatedSinceResize = true;
          _this.currentAnimation = animate2(0, animationTarget, __assign(__assign({}, options), { onUpdate: function(latest) {
            var _a3;
            _this.mixTargetDelta(latest);
            (_a3 = options.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(options, latest);
          }, onComplete: function() {
            var _a3;
            (_a3 = options.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(options);
            _this.completeAnimation();
          } }));
          if (_this.resumingFrom) {
            _this.resumingFrom.currentAnimation = _this.currentAnimation;
          }
          _this.pendingAnimation = void 0;
        });
      };
      ProjectionNode.prototype.completeAnimation = function() {
        var _a2;
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = void 0;
          this.resumingFrom.preserveOpacity = void 0;
        }
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.exitAnimationComplete();
        this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
        this.notifyListeners("animationComplete");
      };
      ProjectionNode.prototype.finishAnimation = function() {
        var _a2;
        if (this.currentAnimation) {
          (_a2 = this.mixTargetDelta) === null || _a2 === void 0 ? void 0 : _a2.call(this, animationTarget);
          this.currentAnimation.stop();
        }
        this.completeAnimation();
      };
      ProjectionNode.prototype.applyTransformsToTarget = function() {
        var _a2 = this.getLead(), targetWithTransforms = _a2.targetWithTransforms, target = _a2.target, layout = _a2.layout, latestValues = _a2.latestValues;
        if (!targetWithTransforms || !target || !layout)
          return;
        copyBoxInto(targetWithTransforms, target);
        transformBox(targetWithTransforms, latestValues);
        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      };
      ProjectionNode.prototype.registerSharedNode = function(layoutId, node) {
        var _a2, _b, _c;
        if (!this.sharedNodes.has(layoutId)) {
          this.sharedNodes.set(layoutId, new NodeStack());
        }
        var stack = this.sharedNodes.get(layoutId);
        stack.add(node);
        node.promote({
          transition: (_a2 = node.options.initialPromotionConfig) === null || _a2 === void 0 ? void 0 : _a2.transition,
          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)
        });
      };
      ProjectionNode.prototype.isLead = function() {
        var stack = this.getStack();
        return stack ? stack.lead === this : true;
      };
      ProjectionNode.prototype.getLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? ((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.lead) || this : this;
      };
      ProjectionNode.prototype.getPrevLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.prevLead : void 0;
      };
      ProjectionNode.prototype.getStack = function() {
        var layoutId = this.options.layoutId;
        if (layoutId)
          return this.root.sharedNodes.get(layoutId);
      };
      ProjectionNode.prototype.promote = function(_a2) {
        var _b = _a2 === void 0 ? {} : _a2, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
        var stack = this.getStack();
        if (stack)
          stack.promote(this, preserveFollowOpacity);
        if (needsReset) {
          this.projectionDelta = void 0;
          this.needsReset = true;
        }
        if (transition)
          this.setOptions({ transition });
      };
      ProjectionNode.prototype.relegate = function() {
        var stack = this.getStack();
        if (stack) {
          return stack.relegate(this);
        } else {
          return false;
        }
      };
      ProjectionNode.prototype.resetRotation = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return;
        var hasRotate = false;
        var resetValues = {};
        for (var i8 = 0; i8 < transformAxes.length; i8++) {
          var axis = transformAxes[i8];
          var key = "rotate" + axis;
          if (!visualElement2.getStaticValue(key)) {
            continue;
          }
          hasRotate = true;
          resetValues[key] = visualElement2.getStaticValue(key);
          visualElement2.setStaticValue(key, 0);
        }
        if (!hasRotate)
          return;
        visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
        for (var key in resetValues) {
          visualElement2.setStaticValue(key, resetValues[key]);
        }
        visualElement2.scheduleRender();
      };
      ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
        var _a2, _b, _c, _d, _e5, _f;
        if (styleProp === void 0) {
          styleProp = {};
        }
        var styles = {};
        if (!this.instance || this.isSVG)
          return styles;
        if (!this.isVisible) {
          return { visibility: "hidden" };
        } else {
          styles.visibility = "";
        }
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        if (this.needsReset) {
          this.needsReset = false;
          styles.opacity = "";
          styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
          return styles;
        }
        var lead = this.getLead();
        if (!this.projectionDelta || !this.layout || !lead.target) {
          var emptyStyles = {};
          if (this.options.layoutId) {
            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          }
          if (this.hasProjected && !hasTransform(this.latestValues)) {
            emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
            this.hasProjected = false;
          }
          return emptyStyles;
        }
        var valuesToRender = lead.animationValues || lead.latestValues;
        this.applyTransformsToTarget();
        styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
        if (transformTemplate) {
          styles.transform = transformTemplate(valuesToRender, styles.transform);
        }
        var _g = this.projectionDelta, x4 = _g.x, y7 = _g.y;
        styles.transformOrigin = "".concat(x4.origin * 100, "% ").concat(y7.origin * 100, "% 0");
        if (lead.animationValues) {
          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
        } else {
          styles.opacity = lead === this ? (_e5 = valuesToRender.opacity) !== null && _e5 !== void 0 ? _e5 : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
        }
        for (var key in scaleCorrectors) {
          if (valuesToRender[key] === void 0)
            continue;
          var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
          var corrected = correct(valuesToRender[key], lead);
          if (applyTo) {
            var num = applyTo.length;
            for (var i8 = 0; i8 < num; i8++) {
              styles[applyTo[i8]] = corrected;
            }
          } else {
            styles[key] = corrected;
          }
        }
        if (this.options.layoutId) {
          styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none";
        }
        return styles;
      };
      ProjectionNode.prototype.clearSnapshot = function() {
        this.resumeFrom = this.snapshot = void 0;
      };
      ProjectionNode.prototype.resetTree = function() {
        this.root.nodes.forEach(function(node) {
          var _a2;
          return (_a2 = node.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        });
        this.root.nodes.forEach(clearMeasurements);
        this.root.sharedNodes.clear();
      };
      return ProjectionNode;
    }()
  );
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a, _b, _c, _d;
  var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    var _e5 = node.layout, layout_1 = _e5.actual, measuredLayout = _e5.measured;
    if (node.options.animationType === "size") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(axisSnapshot);
        axisSnapshot.min = layout_1[axis].min;
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    } else if (node.options.animationType === "position") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(layout_1[axis]);
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    }
    var layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
    var visualDelta = createDelta();
    if (snapshot.isShared) {
      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);
    } else {
      calcBoxDelta(visualDelta, layout_1, snapshot.layout);
    }
    var hasLayoutChanged = !isDeltaZero(layoutDelta);
    var hasRelativeTargetChanged = false;
    if (!node.resumeFrom) {
      node.relativeParent = node.getClosestProjectingParent();
      if (node.relativeParent && !node.relativeParent.resumeFrom) {
        var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
        if (parentSnapshot && parentLayout) {
          var relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
          var relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
          if (!boxEquals(relativeSnapshot, relativeLayout)) {
            hasRelativeTargetChanged = true;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout_1,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node.isLead()) {
    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
  }
  node.options.transition = void 0;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function resetTransformStyle(node) {
  var visualElement2 = node.options.visualElement;
  if (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.getProps().onBeforeLayoutMeasure) {
    visualElement2.notifyBeforeLayoutMeasure();
  }
  node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetRotation(node) {
  node.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p7) {
  output.translate = mix(delta.translate, 0, p7);
  output.scale = mix(delta.scale, 1, p7);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p7) {
  output.min = mix(from.min, to.min, p7);
  output.max = mix(from.max, to.max, p7);
}
function mixBox(output, from, to, p7) {
  mixAxis(output.x, from.x, to.x, p7);
  mixAxis(output.y, from.y, to.y, p7);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function mountNodeEarly(node, id2) {
  var searchNode = node.root;
  for (var i8 = node.path.length - 1; i8 >= 0; i8--) {
    if (Boolean(node.path[i8].instance)) {
      searchNode = node.path[i8];
      break;
    }
  }
  var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;
  var element = searchElement.querySelector('[data-projection-id="'.concat(id2, '"]'));
  if (element)
    node.mount(element, true);
}
function roundAxis(axis) {
  axis.min = Math.round(axis.min);
  axis.max = Math.round(axis.max);
}
function roundBox(box) {
  roundAxis(box.x);
  roundAxis(box.y);
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: function(ref, notify) {
    return addDomEvent(ref, "resize", notify);
  },
  measureScroll: function() {
    return {
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop
    };
  },
  checkIsScrollRoot: function() {
    return true;
  }
});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
};
var HTMLProjectionNode = createProjectionNode({
  measureScroll: function(instance) {
    return {
      x: instance.scrollLeft,
      y: instance.scrollTop
    };
  },
  defaultParent: function() {
    if (!rootProjectionNode.current) {
      var documentNode = new DocumentProjectionNode(0, {});
      documentNode.mount(window);
      documentNode.setOptions({ layoutScroll: true });
      rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: function(instance, value) {
    instance.style.transform = value !== null && value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: function(instance) {
    return Boolean(window.getComputedStyle(instance).position === "fixed");
  }
});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion.mjs
var featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutFeatures);
var motion = createMotionProxy(function(Component, config) {
  return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);
});

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs
var m = createMotionProxy(createDomMotionConfig);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var React4 = __toESM(require_react(), 1);
var import_react33 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react31 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react30 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var React3 = __toESM(require_react(), 1);
var import_react32 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs
var React6 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var React5 = __toESM(require_react(), 1);
var import_react35 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react34 = __toESM(require_react(), 1);
var DeprecatedLayoutGroupContext = (0, import_react34.createContext)(null);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs
var React7 = __toESM(require_react(), 1);
var import_react36 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs
var React8 = __toESM(require_react(), 1);
var import_react37 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
var React9 = __toESM(require_react(), 1);
var import_react39 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/context/ReorderContext.mjs
var import_react38 = __toESM(require_react(), 1);
var ReorderContext = (0, import_react38.createContext)(null);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs
function checkReorder(order3, value, offset, velocity) {
  if (!velocity)
    return order3;
  var index = order3.findIndex(function(item2) {
    return item2.value === value;
  });
  if (index === -1)
    return order3;
  var nextOffset = velocity > 0 ? 1 : -1;
  var nextItem = order3[index + nextOffset];
  if (!nextItem)
    return order3;
  var item = order3[index];
  var nextLayout = nextItem.layout;
  var nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);
  if (nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter) {
    return moveItem(order3, index, index + nextOffset);
  }
  return order3;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
function ReorderGroup(_a, externalRef) {
  var children = _a.children, _b = _a.as, as = _b === void 0 ? "ul" : _b, _c = _a.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, ["children", "as", "axis", "onReorder", "values"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var order3 = [];
  var isReordering = (0, import_react39.useRef)(false);
  invariant(Boolean(values), "Reorder.Group must be provided a values prop");
  var context = {
    axis,
    registerItem: function(value, layout) {
      if (layout && order3.findIndex(function(entry) {
        return value === entry.value;
      }) === -1) {
        order3.push({ value, layout: layout[axis] });
        order3.sort(compareMin);
      }
    },
    updateOrder: function(id2, offset, velocity) {
      if (isReordering.current)
        return;
      var newOrder = checkReorder(order3, id2, offset, velocity);
      if (order3 !== newOrder) {
        isReordering.current = true;
        onReorder(newOrder.map(getValue).filter(function(value) {
          return values.indexOf(value) !== -1;
        }));
      }
    }
  };
  (0, import_react39.useEffect)(function() {
    isReordering.current = false;
  });
  return React9.createElement(
    Component,
    __assign({}, props, { ref: externalRef }),
    React9.createElement(ReorderContext.Provider, { value: context }, children)
  );
}
var Group = (0, import_react39.forwardRef)(ReorderGroup);
function getValue(item) {
  return item.value;
}
function compareMin(a11, b8) {
  return a11.layout.min - b8.layout.min;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
var React10 = __toESM(require_react(), 1);
var import_react41 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-motion-value.mjs
var import_react40 = __toESM(require_react(), 1);
function useMotionValue(initial) {
  var value = useConstant(function() {
    return motionValue(initial);
  });
  var isStatic = (0, import_react40.useContext)(MotionConfigContext).isStatic;
  if (isStatic) {
    var _a = __read((0, import_react40.useState)(initial), 2), setLatest_1 = _a[1];
    (0, import_react40.useEffect)(function() {
      return value.onChange(setLatest_1);
    }, []);
  }
  return value;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/transform.mjs
var isCustomValueType = function(v6) {
  return typeof v6 === "object" && v6.mix;
};
var getMixer2 = function(v6) {
  return isCustomValueType(v6) ? v6.mix : void 0;
};
function transform() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var useImmediate = !Array.isArray(args[0]);
  var argOffset = useImmediate ? 0 : -1;
  var inputValue = args[0 + argOffset];
  var inputRange = args[1 + argOffset];
  var outputRange = args[2 + argOffset];
  var options = args[3 + argOffset];
  var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer2(outputRange[0]) }, options));
  return useImmediate ? interpolator(inputValue) : interpolator;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-on-change.mjs
function useMultiOnChange(values, handler) {
  useIsomorphicLayoutEffect(function() {
    var subscriptions = values.map(function(value) {
      return value.onChange(handler);
    });
    return function() {
      return subscriptions.forEach(function(unsubscribe) {
        return unsubscribe();
      });
    };
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-combine-values.mjs
function useCombineMotionValues(values, combineValues) {
  var value = useMotionValue(combineValues());
  var updateValue = function() {
    return value.set(combineValues());
  };
  updateValue();
  useMultiOnChange(values, function() {
    return es_default.update(updateValue, false, true);
  });
  return value;
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-transform.mjs
function useTransform(input, inputRangeOrTransformer, outputRange, options) {
  var transformer = typeof inputRangeOrTransformer === "function" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);
  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a) {
    var _b = __read(_a, 1), latest = _b[0];
    return transformer(latest);
  });
}
function useListTransform(values, transformer) {
  var latest = useConstant(function() {
    return [];
  });
  return useCombineMotionValues(values, function() {
    latest.length = 0;
    var numValues = values.length;
    for (var i8 = 0; i8 < numValues; i8++) {
      latest[i8] = values[i8].get();
    }
    return transformer(latest);
  });
}

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
function useDefaultMotionValue(value, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = 0;
  }
  return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItem(_a, externalRef) {
  var children = _a.children, style2 = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? "li" : _b, onDrag = _a.onDrag, _c = _a.layout, layout = _c === void 0 ? true : _c, props = __rest(_a, ["children", "style", "value", "as", "onDrag", "layout"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var context = (0, import_react41.useContext)(ReorderContext);
  var point = {
    x: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.x),
    y: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.y)
  };
  var zIndex = useTransform([point.x, point.y], function(_a2) {
    var _b2 = __read(_a2, 2), latestX = _b2[0], latestY = _b2[1];
    return latestX || latestY ? 1 : "unset";
  });
  var measuredLayout = (0, import_react41.useRef)(null);
  invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
  var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
  (0, import_react41.useEffect)(function() {
    registerItem(value, measuredLayout.current);
  }, [context]);
  return React10.createElement(Component, __assign({ drag: axis }, props, { dragSnapToOrigin: true, style: __assign(__assign({}, style2), { x: point.x, y: point.y, zIndex }), layout, onDrag: function(event, gesturePoint) {
    var velocity = gesturePoint.velocity;
    velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);
    onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);
  }, onLayoutMeasure: function(measured) {
    measuredLayout.current = measured;
  }, ref: externalRef }), children);
}
var Item = (0, import_react41.forwardRef)(ReorderItem);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/components/Reorder/index.mjs
var Reorder = {
  Group,
  Item
};

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/features-animation.mjs
var domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/render/dom/features-max.mjs
var domMax = __assign(__assign(__assign(__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-spring.mjs
var import_react42 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/value/use-velocity.mjs
var import_react43 = __toESM(require_react(), 1);

// node_modules/.pnpm/@motionone+utils@10.18.0/node_modules/@motionone/utils/dist/noop.es.js
var noopReturn = (v6) => v6;

// node_modules/.pnpm/@motionone+utils@10.18.0/node_modules/@motionone/utils/dist/time.es.js
var time = {
  ms: (seconds) => seconds * 1e3,
  s: (milliseconds) => milliseconds / 1e3
};

// node_modules/.pnpm/@motionone+utils@10.18.0/node_modules/@motionone/utils/dist/velocity.es.js
function velocityPerSecond2(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/animate/utils/transforms.es.js
var axes = ["", "X", "Y", "Z"];
var order2 = ["translate", "scale", "rotate", "skew"];
var rotation = {
  syntax: "<angle>",
  initialValue: "0deg",
  toDefaultUnit: (v6) => v6 + "deg"
};
var baseTransformProperties = {
  translate: {
    syntax: "<length-percentage>",
    initialValue: "0px",
    toDefaultUnit: (v6) => v6 + "px"
  },
  rotate: rotation,
  scale: {
    syntax: "<number>",
    initialValue: 1,
    toDefaultUnit: noopReturn
  },
  skew: rotation
};
var transformDefinitions = /* @__PURE__ */ new Map();
var asTransformCssVar = (name) => `--motion-${name}`;
var transforms = ["x", "y", "z"];
order2.forEach((name) => {
  axes.forEach((axis) => {
    transforms.push(name + axis);
    transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);
  });
});
var transformLookup = new Set(transforms);

// node_modules/.pnpm/@motionone+easing@10.18.0/node_modules/@motionone/easing/dist/cubic-bezier.es.js
var calcBezier2 = (t18, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t18 + (3 * a22 - 6 * a1)) * t18 + 3 * a1) * t18;
var subdivisionPrecision2 = 1e-7;
var subdivisionMaxIterations2 = 12;
function binarySubdivide2(x4, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i8 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier2(currentT, mX1, mX2) - x4;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision2 && ++i8 < subdivisionMaxIterations2);
  return currentT;
}
function cubicBezier2(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noopReturn;
  const getTForX = (aX) => binarySubdivide2(aX, 0, 1, mX1, mX2);
  return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier2(getTForX(t18), mY1, mY2);
}

// node_modules/.pnpm/@motionone+animation@10.18.0/node_modules/@motionone/animation/dist/utils/easing.es.js
var namedEasings = {
  ease: cubicBezier2(0.25, 0.1, 0.25, 1),
  "ease-in": cubicBezier2(0.42, 0, 1, 1),
  "ease-in-out": cubicBezier2(0.42, 0, 0.58, 1),
  "ease-out": cubicBezier2(0, 0, 0.58, 1)
};

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js
var testAnimation = (keyframes3) => document.createElement("div").animate(keyframes3, { duration: 1e-3 });
var featureTests = {
  cssRegisterProperty: () => typeof CSS !== "undefined" && Object.hasOwnProperty.call(CSS, "registerProperty"),
  waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate"),
  partialKeyframes: () => {
    try {
      testAnimation({ opacity: [1] });
    } catch (e4) {
      return false;
    }
    return true;
  },
  finished: () => Boolean(testAnimation({ opacity: [0, 1] }).finished)
};
var results = {};
var supports = {};
for (const key in featureTests) {
  supports[key] = () => {
    if (results[key] === void 0)
      results[key] = featureTests[key]();
    return results[key];
  };
}

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/utils/resolve-elements.es.js
function resolveElements(elements, selectorCache) {
  var _a;
  if (typeof elements === "string") {
    if (selectorCache) {
      (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : selectorCache[elements] = document.querySelectorAll(elements);
      elements = selectorCache[elements];
    } else {
      elements = document.querySelectorAll(elements);
    }
  } else if (elements instanceof Element) {
    elements = [elements];
  }
  return Array.from(elements || []);
}

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/utils/velocity.es.js
var sampleT = 5;
function calcGeneratorVelocity(resolveValue, t18, current) {
  const prevT = Math.max(t18 - sampleT, 0);
  return velocityPerSecond2(current - resolveValue(prevT), t18 - prevT);
}

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/spring/defaults.es.js
var defaults2 = {
  stiffness: 100,
  damping: 10,
  mass: 1
};

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/spring/utils.es.js
var calcDampingRatio = (stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass) => damping / (2 * Math.sqrt(stiffness * mass));

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/utils/has-reached-target.es.js
function hasReachedTarget(origin, target, current) {
  return origin < target && current >= target || origin > target && current <= target;
}

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/spring/index.es.js
var spring2 = ({ stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass, from = 0, to = 1, velocity = 0, restSpeed, restDistance } = {}) => {
  velocity = velocity ? time.s(velocity) : 0;
  const state = {
    done: false,
    hasReachedTarget: false,
    current: from,
    target: to
  };
  const initialDelta = to - from;
  const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
  const dampingRatio = calcDampingRatio(stiffness, damping, mass);
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);
  restDistance || (restDistance = isGranularScale ? 5e-3 : 0.5);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
    resolveSpring = (t18) => to - Math.exp(-dampingRatio * undampedAngularFreq * t18) * ((-velocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
  } else {
    resolveSpring = (t18) => {
      return to - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t18);
    };
  }
  return (t18) => {
    state.current = resolveSpring(t18);
    const currentVelocity = t18 === 0 ? velocity : calcGeneratorVelocity(resolveSpring, t18, state.current);
    const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
    const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;
    state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
    state.hasReachedTarget = hasReachedTarget(from, to, state.current);
    return state;
  };
};

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/glide/index.es.js
var glide = ({ from = 0, velocity = 0, power = 0.8, decay: decay2 = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed }) => {
  decay2 = time.ms(decay2);
  const state = {
    hasReachedTarget: false,
    done: false,
    current: from,
    target: from
  };
  const isOutOfBounds = (v6) => min !== void 0 && v6 < min || max !== void 0 && v6 > max;
  const nearestBoundary = (v6) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v6) < Math.abs(max - v6) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = changeTarget === void 0 ? ideal : changeTarget(ideal);
  state.target = target;
  if (target !== ideal)
    amplitude = target - from;
  const calcDelta = (t18) => -amplitude * Math.exp(-t18 / decay2);
  const calcLatest = (t18) => target + calcDelta(t18);
  const applyFriction = (t18) => {
    const delta = calcDelta(t18);
    const latest = calcLatest(t18);
    state.done = Math.abs(delta) <= restDistance;
    state.current = state.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t18) => {
    if (!isOutOfBounds(state.current))
      return;
    timeReachedBoundary = t18;
    spring$1 = spring2({
      from: state.current,
      to: nearestBoundary(state.current),
      velocity: calcGeneratorVelocity(calcLatest, t18, state.current),
      // TODO: This should be passing * 1000
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDistance,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return (t18) => {
    let hasUpdatedFrame = false;
    if (!spring$1 && timeReachedBoundary === void 0) {
      hasUpdatedFrame = true;
      applyFriction(t18);
      checkCatchBoundary(t18);
    }
    if (timeReachedBoundary !== void 0 && t18 > timeReachedBoundary) {
      state.hasReachedTarget = true;
      return spring$1(t18 - timeReachedBoundary);
    } else {
      state.hasReachedTarget = false;
      !hasUpdatedFrame && applyFriction(t18);
      return state;
    }
  };
};

// node_modules/.pnpm/@motionone+generators@10.18.0/node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js
var timeStep = 10;
var maxDuration2 = 1e4;
function pregenerateKeyframes(generator, toUnit = noopReturn) {
  let overshootDuration = void 0;
  let timestamp = timeStep;
  let state = generator(0);
  const keyframes3 = [toUnit(state.current)];
  while (!state.done && timestamp < maxDuration2) {
    state = generator(timestamp);
    keyframes3.push(toUnit(state.done ? state.target : state.current));
    if (overshootDuration === void 0 && state.hasReachedTarget) {
      overshootDuration = timestamp;
    }
    timestamp += timeStep;
  }
  const duration = timestamp - timeStep;
  if (keyframes3.length === 1)
    keyframes3.push(state.current);
  return {
    keyframes: keyframes3,
    duration: duration / 1e3,
    overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1e3
  };
}

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js
function createGeneratorEasing(createGenerator) {
  const keyframesCache = /* @__PURE__ */ new WeakMap();
  return (options = {}) => {
    const generatorCache = /* @__PURE__ */ new Map();
    const getGenerator = (from = 0, to = 100, velocity = 0, isScale = false) => {
      const key = `${from}-${to}-${velocity}-${isScale}`;
      if (!generatorCache.has(key)) {
        generatorCache.set(key, createGenerator(Object.assign({
          from,
          to,
          velocity,
          restSpeed: isScale ? 0.05 : 2,
          restDistance: isScale ? 0.01 : 0.5
        }, options)));
      }
      return generatorCache.get(key);
    };
    const getKeyframes = (generator) => {
      if (!keyframesCache.has(generator)) {
        keyframesCache.set(generator, pregenerateKeyframes(generator));
      }
      return keyframesCache.get(generator);
    };
    return {
      createAnimation: (keyframes3, getOrigin2, canUseGenerator, name, motionValue2) => {
        var _a, _b;
        let settings;
        const numKeyframes = keyframes3.length;
        let shouldUseGenerator = canUseGenerator && numKeyframes <= 2 && keyframes3.every(isNumberOrNull);
        if (shouldUseGenerator) {
          const target = keyframes3[numKeyframes - 1];
          const unresolvedOrigin = numKeyframes === 1 ? null : keyframes3[0];
          let velocity = 0;
          let origin = 0;
          const prevGenerator = motionValue2 === null || motionValue2 === void 0 ? void 0 : motionValue2.generator;
          if (prevGenerator) {
            const { animation, generatorStartTime } = motionValue2;
            const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;
            const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;
            const prevGeneratorCurrent = prevGenerator(currentTime).current;
            origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;
            if (numKeyframes === 1 || numKeyframes === 2 && keyframes3[0] === null) {
              velocity = calcGeneratorVelocity((t18) => prevGenerator(t18).current, currentTime, prevGeneratorCurrent);
            }
          } else {
            origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin2());
          }
          const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes("scale"));
          const keyframesMetadata = getKeyframes(generator);
          settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: "linear" });
          if (motionValue2) {
            motionValue2.generator = generator;
            motionValue2.generatorStartTime = performance.now();
          }
        } else {
          const keyframesMetadata = getKeyframes(getGenerator(0, 100));
          settings = {
            easing: "ease",
            duration: keyframesMetadata.overshootDuration
          };
        }
        return settings;
      }
    };
  };
}
var isNumberOrNull = (value) => typeof value !== "string";

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/easing/spring/index.es.js
var spring3 = createGeneratorEasing(spring2);

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/easing/glide/index.es.js
var glide2 = createGeneratorEasing(glide);

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/gestures/in-view.es.js
var thresholds = {
  any: 0,
  all: 1
};
function inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = "any" } = {}) {
  if (typeof IntersectionObserver === "undefined") {
    return () => {
    };
  }
  const elements = resolveElements(elementOrSelector);
  const activeIntersections = /* @__PURE__ */ new WeakMap();
  const onIntersectionChange = (entries) => {
    entries.forEach((entry) => {
      const onEnd = activeIntersections.get(entry.target);
      if (entry.isIntersecting === Boolean(onEnd))
        return;
      if (entry.isIntersecting) {
        const newOnEnd = onStart(entry);
        if (typeof newOnEnd === "function") {
          activeIntersections.set(entry.target, newOnEnd);
        } else {
          observer.unobserve(entry.target);
        }
      } else if (onEnd) {
        onEnd(entry);
        activeIntersections.delete(entry.target);
      }
    });
  };
  const observer = new IntersectionObserver(onIntersectionChange, {
    root,
    rootMargin,
    threshold: typeof amount === "number" ? amount : thresholds[amount]
  });
  elements.forEach((element) => observer.observe(element));
  return () => observer.disconnect();
}

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/state/utils/events.es.js
function dispatchPointerEvent(element, name, event) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));
}
function dispatchViewEvent(element, name, entry) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));
}

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/state/gestures/in-view.es.js
var inView2 = {
  isActive: (options) => Boolean(options.inView),
  subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {
    const { once } = inViewOptions, viewOptions = __rest(inViewOptions, ["once"]);
    return inView(element, (enterEntry) => {
      enable();
      dispatchViewEvent(element, "viewenter", enterEntry);
      if (!once) {
        return (leaveEntry) => {
          disable();
          dispatchViewEvent(element, "viewleave", leaveEntry);
        };
      }
    }, viewOptions);
  }
};

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/state/gestures/hover.es.js
var mouseEvent = (element, name, action) => (event) => {
  if (event.pointerType && event.pointerType !== "mouse")
    return;
  action();
  dispatchPointerEvent(element, name, event);
};
var hover = {
  isActive: (options) => Boolean(options.hover),
  subscribe: (element, { enable, disable }) => {
    const onEnter = mouseEvent(element, "hoverstart", enable);
    const onLeave = mouseEvent(element, "hoverend", disable);
    element.addEventListener("pointerenter", onEnter);
    element.addEventListener("pointerleave", onLeave);
    return () => {
      element.removeEventListener("pointerenter", onEnter);
      element.removeEventListener("pointerleave", onLeave);
    };
  }
};

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/state/gestures/press.es.js
var press = {
  isActive: (options) => Boolean(options.press),
  subscribe: (element, { enable, disable }) => {
    const onPointerUp = (event) => {
      disable();
      dispatchPointerEvent(element, "pressend", event);
      window.removeEventListener("pointerup", onPointerUp);
    };
    const onPointerDown = (event) => {
      enable();
      dispatchPointerEvent(element, "pressstart", event);
      window.addEventListener("pointerup", onPointerUp);
    };
    element.addEventListener("pointerdown", onPointerDown);
    return () => {
      element.removeEventListener("pointerdown", onPointerDown);
      window.removeEventListener("pointerup", onPointerUp);
    };
  }
};

// node_modules/.pnpm/@motionone+dom@10.12.0/node_modules/@motionone/dom/dist/state/index.es.js
var gestures = { inView: inView2, hover, press };
var stateTypes = ["initial", "animate", ...Object.keys(gestures), "exit"];

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs
var import_react44 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/use-animation.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-cycle.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-in-view.mjs
var import_react47 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs
var DragControls = (
  /** @class */
  function() {
    function DragControls2() {
      this.componentControls = /* @__PURE__ */ new Set();
    }
    DragControls2.prototype.subscribe = function(controls) {
      var _this = this;
      this.componentControls.add(controls);
      return function() {
        return _this.componentControls.delete(controls);
      };
    };
    DragControls2.prototype.start = function(event, options) {
      this.componentControls.forEach(function(controls) {
        controls.start(event.nativeEvent || event, options);
      });
    };
    return DragControls2;
  }()
);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs
var import_react48 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs
var React11 = __toESM(require_react(), 1);

// node_modules/.pnpm/framer-motion@6.5.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/animation/use-animated-state.mjs
var import_react49 = __toESM(require_react(), 1);
var createObject = function() {
  return {};
};
var stateVisualElement = visualElement({
  build: function() {
  },
  measureViewportBox: createBox,
  resetTransform: function() {
  },
  restoreTransform: function() {
  },
  removeValueFromRenderState: function() {
  },
  render: function() {
  },
  scrapeMotionValuesFromProps: createObject,
  readValueFromInstance: function(_state, key, options) {
    return options.initialState[key] || 0;
  },
  makeTargetAnimatable: function(element, _a) {
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    checkTargetForNewValues(element, target, origin);
    return __assign({ transition, transitionEnd }, target);
  }
});
var useVisualState = makeUseVisualState({
  scrapeMotionValuesFromProps: createObject,
  createRenderState: createObject
});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var import_react68 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-computed.js
var import_react52 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var import_react50 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/env.js
var i = Object.defineProperty;
var d = (t18, e4, n7) => e4 in t18 ? i(t18, e4, { enumerable: true, configurable: true, writable: true, value: n7 }) : t18[e4] = n7;
var r = (t18, e4, n7) => (d(t18, typeof e4 != "symbol" ? e4 + "" : e4, n7), n7);
var o = class {
  constructor() {
    r(this, "current", this.detect());
    r(this, "handoffState", "pending");
    r(this, "currentId", 0);
  }
  set(e4) {
    this.current !== e4 && (this.handoffState = "pending", this.currentId = 0, this.current = e4);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window == "undefined" || typeof document == "undefined" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
};
var s = new o();

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var l = (e4, f14) => {
  s.isServer ? (0, import_react50.useEffect)(e4, f14) : (0, import_react50.useLayoutEffect)(e4, f14);
};

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-latest-value.js
var import_react51 = __toESM(require_react(), 1);
function s2(e4) {
  let r9 = (0, import_react51.useRef)(e4);
  return l(() => {
    r9.current = e4;
  }, [e4]), r9;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-computed.js
function i2(e4, o13) {
  let [u13, t18] = (0, import_react52.useState)(e4), r9 = s2(e4);
  return l(() => t18(r9.current), [r9, t18, ...o13]), u13;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-controllable.js
var import_react54 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-event.js
var import_react53 = __toESM(require_react(), 1);
var o2 = function(t18) {
  let e4 = s2(t18);
  return import_react53.default.useCallback((...r9) => e4.current(...r9), [e4]);
};

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-controllable.js
function T(l13, r9, c16) {
  let [i8, s17] = (0, import_react54.useState)(c16), e4 = l13 !== void 0, t18 = (0, import_react54.useRef)(e4), u13 = (0, import_react54.useRef)(false), d16 = (0, import_react54.useRef)(false);
  return e4 && !t18.current && !u13.current ? (u13.current = true, t18.current = e4, console.error("A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen.")) : !e4 && t18.current && !d16.current && (d16.current = true, t18.current = e4, console.error("A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen.")), [e4 ? l13 : i8, o2((n7) => (e4 || s17(n7), r9 == null ? void 0 : r9(n7)))];
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-disposables.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/micro-task.js
function t3(e4) {
  typeof queueMicrotask == "function" ? queueMicrotask(e4) : Promise.resolve().then(e4).catch((o13) => setTimeout(() => {
    throw o13;
  }));
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/disposables.js
function o4() {
  let n7 = [], r9 = { addEventListener(e4, t18, s17, a11) {
    return e4.addEventListener(t18, s17, a11), r9.add(() => e4.removeEventListener(t18, s17, a11));
  }, requestAnimationFrame(...e4) {
    let t18 = requestAnimationFrame(...e4);
    return r9.add(() => cancelAnimationFrame(t18));
  }, nextFrame(...e4) {
    return r9.requestAnimationFrame(() => r9.requestAnimationFrame(...e4));
  }, setTimeout(...e4) {
    let t18 = setTimeout(...e4);
    return r9.add(() => clearTimeout(t18));
  }, microTask(...e4) {
    let t18 = { current: true };
    return t3(() => {
      t18.current && e4[0]();
    }), r9.add(() => {
      t18.current = false;
    });
  }, style(e4, t18, s17) {
    let a11 = e4.style.getPropertyValue(t18);
    return Object.assign(e4.style, { [t18]: s17 }), this.add(() => {
      Object.assign(e4.style, { [t18]: a11 });
    });
  }, group(e4) {
    let t18 = o4();
    return e4(t18), this.add(() => t18.dispose());
  }, add(e4) {
    return n7.push(e4), () => {
      let t18 = n7.indexOf(e4);
      if (t18 >= 0) for (let s17 of n7.splice(t18, 1)) s17();
    };
  }, dispose() {
    for (let e4 of n7.splice(0)) e4();
  } };
  return r9;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p() {
  let [e4] = (0, import_react55.useState)(o4);
  return (0, import_react55.useEffect)(() => () => e4.dispose(), [e4]), e4;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-id.js
var import_react56 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
var t4 = __toESM(require_react(), 1);
function s5() {
  let r9 = typeof document == "undefined";
  return "useSyncExternalStore" in t4 ? ((o13) => o13.useSyncExternalStore)(t4)(() => () => {
  }, () => false, () => !r9) : false;
}
function l2() {
  let r9 = s5(), [e4, n7] = t4.useState(s.isHandoffComplete);
  return e4 && s.isHandoffComplete === false && n7(false), t4.useEffect(() => {
    e4 !== true && n7(true);
  }, [e4]), t4.useEffect(() => s.handoff(), []), r9 ? false : e4;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-id.js
var o6;
var I = (o6 = import_react56.default.useId) != null ? o6 : function() {
  let n7 = l2(), [e4, u13] = import_react56.default.useState(n7 ? () => s.nextId() : null);
  return l(() => {
    e4 === null && u13(s.nextId());
  }, [e4]), e4 != null ? "" + e4 : void 0;
};

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var import_react59 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/match.js
function u(r9, n7, ...a11) {
  if (r9 in n7) {
    let e4 = n7[r9];
    return typeof e4 == "function" ? e4(...a11) : e4;
  }
  let t18 = new Error(`Tried to handle "${r9}" but there is no handler defined. Only defined handlers are: ${Object.keys(n7).map((e4) => `"${e4}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t18, u), t18;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/owner.js
function o7(r9) {
  return s.isServer ? null : r9 instanceof Node ? r9.ownerDocument : r9 != null && r9.hasOwnProperty("current") && r9.current instanceof Node ? r9.current.ownerDocument : document;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/focus-management.js
var c3 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e4) => `${e4}:not([tabindex='-1'])`).join(",");
var M = ((n7) => (n7[n7.First = 1] = "First", n7[n7.Previous = 2] = "Previous", n7[n7.Next = 4] = "Next", n7[n7.Last = 8] = "Last", n7[n7.WrapAround = 16] = "WrapAround", n7[n7.NoScroll = 32] = "NoScroll", n7))(M || {});
var N = ((o13) => (o13[o13.Error = 0] = "Error", o13[o13.Overflow = 1] = "Overflow", o13[o13.Success = 2] = "Success", o13[o13.Underflow = 3] = "Underflow", o13))(N || {});
var F = ((t18) => (t18[t18.Previous = -1] = "Previous", t18[t18.Next = 1] = "Next", t18))(F || {});
function f2(e4 = document.body) {
  return e4 == null ? [] : Array.from(e4.querySelectorAll(c3)).sort((r9, t18) => Math.sign((r9.tabIndex || Number.MAX_SAFE_INTEGER) - (t18.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T2 = ((t18) => (t18[t18.Strict = 0] = "Strict", t18[t18.Loose = 1] = "Loose", t18))(T2 || {});
function h(e4, r9 = 0) {
  var t18;
  return e4 === ((t18 = o7(e4)) == null ? void 0 : t18.body) ? false : u(r9, { [0]() {
    return e4.matches(c3);
  }, [1]() {
    let l13 = e4;
    for (; l13 !== null; ) {
      if (l13.matches(c3)) return true;
      l13 = l13.parentElement;
    }
    return false;
  } });
}
function D(e4) {
  let r9 = o7(e4);
  o4().nextFrame(() => {
    r9 && !h(r9.activeElement, 0) && y(e4);
  });
}
var w = ((t18) => (t18[t18.Keyboard = 0] = "Keyboard", t18[t18.Mouse = 1] = "Mouse", t18))(w || {});
typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("keydown", (e4) => {
  e4.metaKey || e4.altKey || e4.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true), document.addEventListener("click", (e4) => {
  e4.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e4.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true));
function y(e4) {
  e4 == null || e4.focus({ preventScroll: true });
}
var S = ["textarea", "input"].join(",");
function H(e4) {
  var r9, t18;
  return (t18 = (r9 = e4 == null ? void 0 : e4.matches) == null ? void 0 : r9.call(e4, S)) != null ? t18 : false;
}
function I2(e4, r9 = (t18) => t18) {
  return e4.slice().sort((t18, l13) => {
    let o13 = r9(t18), i8 = r9(l13);
    if (o13 === null || i8 === null) return 0;
    let n7 = o13.compareDocumentPosition(i8);
    return n7 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n7 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _(e4, r9) {
  return O(f2(), r9, { relativeTo: e4 });
}
function O(e4, r9, { sorted: t18 = true, relativeTo: l13 = null, skipElements: o13 = [] } = {}) {
  let i8 = Array.isArray(e4) ? e4.length > 0 ? e4[0].ownerDocument : document : e4.ownerDocument, n7 = Array.isArray(e4) ? t18 ? I2(e4) : e4 : f2(e4);
  o13.length > 0 && n7.length > 1 && (n7 = n7.filter((s17) => !o13.includes(s17))), l13 = l13 != null ? l13 : i8.activeElement;
  let E8 = (() => {
    if (r9 & 5) return 1;
    if (r9 & 10) return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x4 = (() => {
    if (r9 & 1) return 0;
    if (r9 & 2) return Math.max(0, n7.indexOf(l13)) - 1;
    if (r9 & 4) return Math.max(0, n7.indexOf(l13)) + 1;
    if (r9 & 8) return n7.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), p7 = r9 & 32 ? { preventScroll: true } : {}, d16 = 0, a11 = n7.length, u13;
  do {
    if (d16 >= a11 || d16 + a11 <= 0) return 0;
    let s17 = x4 + d16;
    if (r9 & 16) s17 = (s17 + a11) % a11;
    else {
      if (s17 < 0) return 3;
      if (s17 >= a11) return 1;
    }
    u13 = n7[s17], u13 == null || u13.focus(p7), d16 += E8;
  } while (u13 !== i8.activeElement);
  return r9 & 6 && H(u13) && u13.select(), 2;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/platform.js
function t6() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i3() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n() {
  return t6() || i3();
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-document-event.js
var import_react57 = __toESM(require_react(), 1);
function d2(e4, r9, n7) {
  let o13 = s2(r9);
  (0, import_react57.useEffect)(() => {
    function t18(u13) {
      o13.current(u13);
    }
    return document.addEventListener(e4, t18, n7), () => document.removeEventListener(e4, t18, n7);
  }, [e4, n7]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-window-event.js
var import_react58 = __toESM(require_react(), 1);
function s6(e4, r9, n7) {
  let o13 = s2(r9);
  (0, import_react58.useEffect)(() => {
    function t18(i8) {
      o13.current(i8);
    }
    return window.addEventListener(e4, t18, n7), () => window.removeEventListener(e4, t18, n7);
  }, [e4, n7]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
function y2(s17, m13, a11 = true) {
  let i8 = (0, import_react59.useRef)(false);
  (0, import_react59.useEffect)(() => {
    requestAnimationFrame(() => {
      i8.current = a11;
    });
  }, [a11]);
  function c16(e4, r9) {
    if (!i8.current || e4.defaultPrevented) return;
    let t18 = r9(e4);
    if (t18 === null || !t18.getRootNode().contains(t18) || !t18.isConnected) return;
    let E8 = function u13(n7) {
      return typeof n7 == "function" ? u13(n7()) : Array.isArray(n7) || n7 instanceof Set ? n7 : [n7];
    }(s17);
    for (let u13 of E8) {
      if (u13 === null) continue;
      let n7 = u13 instanceof HTMLElement ? u13 : u13.current;
      if (n7 != null && n7.contains(t18) || e4.composed && e4.composedPath().includes(n7)) return;
    }
    return !h(t18, T2.Loose) && t18.tabIndex !== -1 && e4.preventDefault(), m13(e4, t18);
  }
  let o13 = (0, import_react59.useRef)(null);
  d2("pointerdown", (e4) => {
    var r9, t18;
    i8.current && (o13.current = ((t18 = (r9 = e4.composedPath) == null ? void 0 : r9.call(e4)) == null ? void 0 : t18[0]) || e4.target);
  }, true), d2("mousedown", (e4) => {
    var r9, t18;
    i8.current && (o13.current = ((t18 = (r9 = e4.composedPath) == null ? void 0 : r9.call(e4)) == null ? void 0 : t18[0]) || e4.target);
  }, true), d2("click", (e4) => {
    n() || o13.current && (c16(e4, () => o13.current), o13.current = null);
  }, true), d2("touchend", (e4) => c16(e4, () => e4.target instanceof HTMLElement ? e4.target : null), true), s6("blur", (e4) => c16(e4, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), true);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-owner.js
var import_react60 = __toESM(require_react(), 1);
function n2(...e4) {
  return (0, import_react60.useMemo)(() => o7(...e4), [...e4]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
var import_react61 = __toESM(require_react(), 1);
function i4(t18) {
  var n7;
  if (t18.type) return t18.type;
  let e4 = (n7 = t18.as) != null ? n7 : "button";
  if (typeof e4 == "string" && e4.toLowerCase() === "button") return "button";
}
function T3(t18, e4) {
  let [n7, u13] = (0, import_react61.useState)(() => i4(t18));
  return l(() => {
    u13(i4(t18));
  }, [t18.type, t18.as]), l(() => {
    n7 || e4.current && e4.current instanceof HTMLButtonElement && !e4.current.hasAttribute("type") && u13("button");
  }, [n7, e4]), n7;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
var import_react62 = __toESM(require_react(), 1);
var u2 = Symbol();
function T4(t18, n7 = true) {
  return Object.assign(t18, { [u2]: n7 });
}
function y3(...t18) {
  let n7 = (0, import_react62.useRef)(t18);
  (0, import_react62.useEffect)(() => {
    n7.current = t18;
  }, [t18]);
  let c16 = o2((e4) => {
    for (let o13 of n7.current) o13 != null && (typeof o13 == "function" ? o13(e4) : o13.current = e4);
  });
  return t18.every((e4) => e4 == null || (e4 == null ? void 0 : e4[u2])) ? void 0 : c16;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
var import_react63 = __toESM(require_react(), 1);
function t8(e4) {
  return [e4.screenX, e4.screenY];
}
function u3() {
  let e4 = (0, import_react63.useRef)([-1, -1]);
  return { wasMoved(r9) {
    let n7 = t8(r9);
    return e4.current[0] === n7[0] && e4.current[1] === n7[1] ? false : (e4.current = n7, true);
  }, update(r9) {
    e4.current = t8(r9);
  } };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
var import_react64 = __toESM(require_react(), 1);
function F2({ container: e4, accept: t18, walk: r9, enabled: c16 = true }) {
  let o13 = (0, import_react64.useRef)(t18), l13 = (0, import_react64.useRef)(r9);
  (0, import_react64.useEffect)(() => {
    o13.current = t18, l13.current = r9;
  }, [t18, r9]), l(() => {
    if (!e4 || !c16) return;
    let n7 = o7(e4);
    if (!n7) return;
    let f14 = o13.current, p7 = l13.current, d16 = Object.assign((i8) => f14(i8), { acceptNode: f14 }), u13 = n7.createTreeWalker(e4, NodeFilter.SHOW_ELEMENT, d16, false);
    for (; u13.nextNode(); ) p7(u13.currentNode);
  }, [e4, c16, o13, l13]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-watch.js
var import_react65 = __toESM(require_react(), 1);
function m4(u13, t18) {
  let e4 = (0, import_react65.useRef)([]), r9 = o2(u13);
  (0, import_react65.useEffect)(() => {
    let o13 = [...e4.current];
    for (let [n7, a11] of t18.entries()) if (e4.current[n7] !== a11) {
      let l13 = r9(t18, o13);
      return e4.current = t18, l13;
    }
  }, [r9, ...t18]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/render.js
var import_react66 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/class-names.js
function t9(...r9) {
  return Array.from(new Set(r9.flatMap((n7) => typeof n7 == "string" ? n7.split(" ") : []))).filter(Boolean).join(" ");
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/render.js
var O2 = ((n7) => (n7[n7.None = 0] = "None", n7[n7.RenderStrategy = 1] = "RenderStrategy", n7[n7.Static = 2] = "Static", n7))(O2 || {});
var v = ((e4) => (e4[e4.Unmount = 0] = "Unmount", e4[e4.Hidden = 1] = "Hidden", e4))(v || {});
function C({ ourProps: r9, theirProps: t18, slot: e4, defaultTag: n7, features: o13, visible: a11 = true, name: f14, mergeRefs: l13 }) {
  l13 = l13 != null ? l13 : k;
  let s17 = R(t18, r9);
  if (a11) return m5(s17, e4, n7, f14, l13);
  let y7 = o13 != null ? o13 : 0;
  if (y7 & 2) {
    let { static: u13 = false, ...d16 } = s17;
    if (u13) return m5(d16, e4, n7, f14, l13);
  }
  if (y7 & 1) {
    let { unmount: u13 = true, ...d16 } = s17;
    return u(u13 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return m5({ ...d16, hidden: true, style: { display: "none" } }, e4, n7, f14, l13);
    } });
  }
  return m5(s17, e4, n7, f14, l13);
}
function m5(r9, t18 = {}, e4, n7, o13) {
  let { as: a11 = e4, children: f14, refName: l13 = "ref", ...s17 } = F3(r9, ["unmount", "static"]), y7 = r9.ref !== void 0 ? { [l13]: r9.ref } : {}, u13 = typeof f14 == "function" ? f14(t18) : f14;
  "className" in s17 && s17.className && typeof s17.className == "function" && (s17.className = s17.className(t18));
  let d16 = {};
  if (t18) {
    let i8 = false, c16 = [];
    for (let [T7, p7] of Object.entries(t18)) typeof p7 == "boolean" && (i8 = true), p7 === true && c16.push(T7);
    i8 && (d16["data-headlessui-state"] = c16.join(" "));
  }
  if (a11 === import_react66.Fragment && Object.keys(x(s17)).length > 0) {
    if (!(0, import_react66.isValidElement)(u13) || Array.isArray(u13) && u13.length > 1) throw new Error(['Passing props on "Fragment"!', "", `The current component <${n7} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(s17).map((p7) => `  - ${p7}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p7) => `  - ${p7}`).join(`
`)].join(`
`));
    let i8 = u13.props, c16 = typeof (i8 == null ? void 0 : i8.className) == "function" ? (...p7) => t9(i8 == null ? void 0 : i8.className(...p7), s17.className) : t9(i8 == null ? void 0 : i8.className, s17.className), T7 = c16 ? { className: c16 } : {};
    return (0, import_react66.cloneElement)(u13, Object.assign({}, R(u13.props, x(F3(s17, ["ref"]))), d16, y7, { ref: o13(u13.ref, y7.ref) }, T7));
  }
  return (0, import_react66.createElement)(a11, Object.assign({}, F3(s17, ["ref"]), a11 !== import_react66.Fragment && y7, a11 !== import_react66.Fragment && d16), u13);
}
function I3() {
  let r9 = (0, import_react66.useRef)([]), t18 = (0, import_react66.useCallback)((e4) => {
    for (let n7 of r9.current) n7 != null && (typeof n7 == "function" ? n7(e4) : n7.current = e4);
  }, []);
  return (...e4) => {
    if (!e4.every((n7) => n7 == null)) return r9.current = e4, t18;
  };
}
function k(...r9) {
  return r9.every((t18) => t18 == null) ? void 0 : (t18) => {
    for (let e4 of r9) e4 != null && (typeof e4 == "function" ? e4(t18) : e4.current = t18);
  };
}
function R(...r9) {
  var n7;
  if (r9.length === 0) return {};
  if (r9.length === 1) return r9[0];
  let t18 = {}, e4 = {};
  for (let o13 of r9) for (let a11 in o13) a11.startsWith("on") && typeof o13[a11] == "function" ? ((n7 = e4[a11]) != null || (e4[a11] = []), e4[a11].push(o13[a11])) : t18[a11] = o13[a11];
  if (t18.disabled || t18["aria-disabled"]) return Object.assign(t18, Object.fromEntries(Object.keys(e4).map((o13) => [o13, void 0])));
  for (let o13 in e4) Object.assign(t18, { [o13](a11, ...f14) {
    let l13 = e4[o13];
    for (let s17 of l13) {
      if ((a11 instanceof Event || (a11 == null ? void 0 : a11.nativeEvent) instanceof Event) && a11.defaultPrevented) return;
      s17(a11, ...f14);
    }
  } });
  return t18;
}
function U(r9) {
  var t18;
  return Object.assign((0, import_react66.forwardRef)(r9), { displayName: (t18 = r9.displayName) != null ? t18 : r9.name });
}
function x(r9) {
  let t18 = Object.assign({}, r9);
  for (let e4 in t18) t18[e4] === void 0 && delete t18[e4];
  return t18;
}
function F3(r9, t18 = []) {
  let e4 = Object.assign({}, r9);
  for (let n7 of t18) n7 in e4 && delete e4[n7];
  return e4;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/hidden.js
var p2 = "div";
var s8 = ((e4) => (e4[e4.None = 1] = "None", e4[e4.Focusable = 2] = "Focusable", e4[e4.Hidden = 4] = "Hidden", e4))(s8 || {});
function l4(d16, o13) {
  var n7;
  let { features: t18 = 1, ...e4 } = d16, r9 = { ref: o13, "aria-hidden": (t18 & 2) === 2 ? true : (n7 = e4["aria-hidden"]) != null ? n7 : void 0, hidden: (t18 & 4) === 4 ? true : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(t18 & 4) === 4 && (t18 & 2) !== 2 && { display: "none" } } };
  return C({ ourProps: r9, theirProps: e4, slot: {}, defaultTag: p2, name: "Hidden" });
}
var u4 = U(l4);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/open-closed.js
var import_react67 = __toESM(require_react(), 1);
var n3 = (0, import_react67.createContext)(null);
n3.displayName = "OpenClosedContext";
var d5 = ((e4) => (e4[e4.Open = 1] = "Open", e4[e4.Closed = 2] = "Closed", e4[e4.Closing = 4] = "Closing", e4[e4.Opening = 8] = "Opening", e4))(d5 || {});
function u5() {
  return (0, import_react67.useContext)(n3);
}
function s9({ value: o13, children: r9 }) {
  return import_react67.default.createElement(n3.Provider, { value: o13 }, r9);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/document-ready.js
function t11(n7) {
  function e4() {
    document.readyState !== "loading" && (n7(), document.removeEventListener("DOMContentLoaded", e4));
  }
  typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("DOMContentLoaded", e4), e4());
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/active-element-history.js
var t12 = [];
t11(() => {
  function e4(n7) {
    n7.target instanceof HTMLElement && n7.target !== document.body && t12[0] !== n7.target && (t12.unshift(n7.target), t12 = t12.filter((r9) => r9 != null && r9.isConnected), t12.splice(10));
  }
  window.addEventListener("click", e4, { capture: true }), window.addEventListener("mousedown", e4, { capture: true }), window.addEventListener("focus", e4, { capture: true }), document.body.addEventListener("click", e4, { capture: true }), document.body.addEventListener("mousedown", e4, { capture: true }), document.body.addEventListener("focus", e4, { capture: true });
});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/bugs.js
function r2(n7) {
  let e4 = n7.parentElement, l13 = null;
  for (; e4 && !(e4 instanceof HTMLFieldSetElement); ) e4 instanceof HTMLLegendElement && (l13 = e4), e4 = e4.parentElement;
  let t18 = (e4 == null ? void 0 : e4.getAttribute("disabled")) === "";
  return t18 && i6(l13) ? false : t18;
}
function i6(n7) {
  if (!n7) return false;
  let e4 = n7.previousElementSibling;
  for (; e4 !== null; ) {
    if (e4 instanceof HTMLLegendElement) return false;
    e4 = e4.previousElementSibling;
  }
  return true;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function u6(l13) {
  throw new Error("Unexpected object: " + l13);
}
var c4 = ((i8) => (i8[i8.First = 0] = "First", i8[i8.Previous = 1] = "Previous", i8[i8.Next = 2] = "Next", i8[i8.Last = 3] = "Last", i8[i8.Specific = 4] = "Specific", i8[i8.Nothing = 5] = "Nothing", i8))(c4 || {});
function f5(l13, n7) {
  let t18 = n7.resolveItems();
  if (t18.length <= 0) return null;
  let r9 = n7.resolveActiveIndex(), s17 = r9 != null ? r9 : -1;
  switch (l13.focus) {
    case 0: {
      for (let e4 = 0; e4 < t18.length; ++e4) if (!n7.resolveDisabled(t18[e4], e4, t18)) return e4;
      return r9;
    }
    case 1: {
      for (let e4 = s17 - 1; e4 >= 0; --e4) if (!n7.resolveDisabled(t18[e4], e4, t18)) return e4;
      return r9;
    }
    case 2: {
      for (let e4 = s17 + 1; e4 < t18.length; ++e4) if (!n7.resolveDisabled(t18[e4], e4, t18)) return e4;
      return r9;
    }
    case 3: {
      for (let e4 = t18.length - 1; e4 >= 0; --e4) if (!n7.resolveDisabled(t18[e4], e4, t18)) return e4;
      return r9;
    }
    case 4: {
      for (let e4 = 0; e4 < t18.length; ++e4) if (n7.resolveId(t18[e4], e4, t18) === l13.id) return e4;
      return r9;
    }
    case 5:
      return null;
    default:
      u6(l13);
  }
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/form.js
function e(i8 = {}, s17 = null, t18 = []) {
  for (let [r9, n7] of Object.entries(i8)) o10(t18, f6(s17, r9), n7);
  return t18;
}
function f6(i8, s17) {
  return i8 ? i8 + "[" + s17 + "]" : s17;
}
function o10(i8, s17, t18) {
  if (Array.isArray(t18)) for (let [r9, n7] of t18.entries()) o10(i8, f6(s17, r9.toString()), n7);
  else t18 instanceof Date ? i8.push([s17, t18.toISOString()]) : typeof t18 == "boolean" ? i8.push([s17, t18 ? "1" : "0"]) : typeof t18 == "string" ? i8.push([s17, t18]) : typeof t18 == "number" ? i8.push([s17, `${t18}`]) : t18 == null ? i8.push([s17, ""]) : e(t18, s17, i8);
}
function p4(i8) {
  var t18, r9;
  let s17 = (t18 = i8 == null ? void 0 : i8.form) != null ? t18 : i8.closest("form");
  if (s17) {
    for (let n7 of s17.elements) if (n7 !== i8 && (n7.tagName === "INPUT" && n7.type === "submit" || n7.tagName === "BUTTON" && n7.type === "submit" || n7.nodeName === "INPUT" && n7.type === "image")) {
      n7.click();
      return;
    }
    (r9 = s17.requestSubmit) == null || r9.call(s17);
  }
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/keyboard.js
var o11 = ((r9) => (r9.Space = " ", r9.Enter = "Enter", r9.Escape = "Escape", r9.Backspace = "Backspace", r9.Delete = "Delete", r9.ArrowLeft = "ArrowLeft", r9.ArrowUp = "ArrowUp", r9.ArrowRight = "ArrowRight", r9.ArrowDown = "ArrowDown", r9.Home = "Home", r9.End = "End", r9.PageUp = "PageUp", r9.PageDown = "PageDown", r9.Tab = "Tab", r9))(o11 || {});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var $e = ((o13) => (o13[o13.Open = 0] = "Open", o13[o13.Closed = 1] = "Closed", o13))($e || {});
var qe = ((o13) => (o13[o13.Single = 0] = "Single", o13[o13.Multi = 1] = "Multi", o13))(qe || {});
var ze = ((a11) => (a11[a11.Pointer = 0] = "Pointer", a11[a11.Focus = 1] = "Focus", a11[a11.Other = 2] = "Other", a11))(ze || {});
var Ye = ((e4) => (e4[e4.OpenCombobox = 0] = "OpenCombobox", e4[e4.CloseCombobox = 1] = "CloseCombobox", e4[e4.GoToOption = 2] = "GoToOption", e4[e4.RegisterOption = 3] = "RegisterOption", e4[e4.UnregisterOption = 4] = "UnregisterOption", e4[e4.RegisterLabel = 5] = "RegisterLabel", e4[e4.SetActivationTrigger = 6] = "SetActivationTrigger", e4[e4.UpdateVirtualOptions = 7] = "UpdateVirtualOptions", e4))(Ye || {});
function de(t18, r9 = (o13) => o13) {
  let o13 = t18.activeOptionIndex !== null ? t18.options[t18.activeOptionIndex] : null, a11 = r9(t18.options.slice()), i8 = a11.length > 0 && a11[0].dataRef.current.order !== null ? a11.sort((p7, c16) => p7.dataRef.current.order - c16.dataRef.current.order) : I2(a11, (p7) => p7.dataRef.current.domRef.current), u13 = o13 ? i8.indexOf(o13) : null;
  return u13 === -1 && (u13 = null), { options: i8, activeOptionIndex: u13 };
}
var Qe = { [1](t18) {
  var r9;
  return (r9 = t18.dataRef.current) != null && r9.disabled || t18.comboboxState === 1 ? t18 : { ...t18, activeOptionIndex: null, comboboxState: 1 };
}, [0](t18) {
  var r9, o13;
  if ((r9 = t18.dataRef.current) != null && r9.disabled || t18.comboboxState === 0) return t18;
  if ((o13 = t18.dataRef.current) != null && o13.value) {
    let a11 = t18.dataRef.current.calculateIndex(t18.dataRef.current.value);
    if (a11 !== -1) return { ...t18, activeOptionIndex: a11, comboboxState: 0 };
  }
  return { ...t18, comboboxState: 0 };
}, [2](t18, r9) {
  var u13, p7, c16, e4, l13;
  if ((u13 = t18.dataRef.current) != null && u13.disabled || (p7 = t18.dataRef.current) != null && p7.optionsRef.current && !((c16 = t18.dataRef.current) != null && c16.optionsPropsRef.current.static) && t18.comboboxState === 1) return t18;
  if (t18.virtual) {
    let T7 = r9.focus === c4.Specific ? r9.idx : f5(r9, { resolveItems: () => t18.virtual.options, resolveActiveIndex: () => {
      var f14, v6;
      return (v6 = (f14 = t18.activeOptionIndex) != null ? f14 : t18.virtual.options.findIndex((S10) => !t18.virtual.disabled(S10))) != null ? v6 : null;
    }, resolveDisabled: t18.virtual.disabled, resolveId() {
      throw new Error("Function not implemented.");
    } }), g5 = (e4 = r9.trigger) != null ? e4 : 2;
    return t18.activeOptionIndex === T7 && t18.activationTrigger === g5 ? t18 : { ...t18, activeOptionIndex: T7, activationTrigger: g5 };
  }
  let o13 = de(t18);
  if (o13.activeOptionIndex === null) {
    let T7 = o13.options.findIndex((g5) => !g5.dataRef.current.disabled);
    T7 !== -1 && (o13.activeOptionIndex = T7);
  }
  let a11 = r9.focus === c4.Specific ? r9.idx : f5(r9, { resolveItems: () => o13.options, resolveActiveIndex: () => o13.activeOptionIndex, resolveId: (T7) => T7.id, resolveDisabled: (T7) => T7.dataRef.current.disabled }), i8 = (l13 = r9.trigger) != null ? l13 : 2;
  return t18.activeOptionIndex === a11 && t18.activationTrigger === i8 ? t18 : { ...t18, ...o13, activeOptionIndex: a11, activationTrigger: i8 };
}, [3]: (t18, r9) => {
  var u13, p7, c16;
  if ((u13 = t18.dataRef.current) != null && u13.virtual) return { ...t18, options: [...t18.options, r9.payload] };
  let o13 = r9.payload, a11 = de(t18, (e4) => (e4.push(o13), e4));
  t18.activeOptionIndex === null && (p7 = t18.dataRef.current) != null && p7.isSelected(r9.payload.dataRef.current.value) && (a11.activeOptionIndex = a11.options.indexOf(o13));
  let i8 = { ...t18, ...a11, activationTrigger: 2 };
  return (c16 = t18.dataRef.current) != null && c16.__demoMode && t18.dataRef.current.value === void 0 && (i8.activeOptionIndex = 0), i8;
}, [4]: (t18, r9) => {
  var a11;
  if ((a11 = t18.dataRef.current) != null && a11.virtual) return { ...t18, options: t18.options.filter((i8) => i8.id !== r9.id) };
  let o13 = de(t18, (i8) => {
    let u13 = i8.findIndex((p7) => p7.id === r9.id);
    return u13 !== -1 && i8.splice(u13, 1), i8;
  });
  return { ...t18, ...o13, activationTrigger: 2 };
}, [5]: (t18, r9) => t18.labelId === r9.id ? t18 : { ...t18, labelId: r9.id }, [6]: (t18, r9) => t18.activationTrigger === r9.trigger ? t18 : { ...t18, activationTrigger: r9.trigger }, [7]: (t18, r9) => {
  var a11;
  if (((a11 = t18.virtual) == null ? void 0 : a11.options) === r9.options) return t18;
  let o13 = t18.activeOptionIndex;
  if (t18.activeOptionIndex !== null) {
    let i8 = r9.options.indexOf(t18.virtual.options[t18.activeOptionIndex]);
    i8 !== -1 ? o13 = i8 : o13 = null;
  }
  return { ...t18, activeOptionIndex: o13, virtual: Object.assign({}, t18.virtual, { options: r9.options }) };
} };
var be = (0, import_react68.createContext)(null);
be.displayName = "ComboboxActionsContext";
function ee(t18) {
  let r9 = (0, import_react68.useContext)(be);
  if (r9 === null) {
    let o13 = new Error(`<${t18} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, ee), o13;
  }
  return r9;
}
var Ce = (0, import_react68.createContext)(null);
function Ze(t18) {
  var c16;
  let r9 = j2("VirtualProvider"), [o13, a11] = (0, import_react68.useMemo)(() => {
    let e4 = r9.optionsRef.current;
    if (!e4) return [0, 0];
    let l13 = window.getComputedStyle(e4);
    return [parseFloat(l13.paddingBlockStart || l13.paddingTop), parseFloat(l13.paddingBlockEnd || l13.paddingBottom)];
  }, [r9.optionsRef.current]), i8 = useVirtualizer({ scrollPaddingStart: o13, scrollPaddingEnd: a11, count: r9.virtual.options.length, estimateSize() {
    return 40;
  }, getScrollElement() {
    var e4;
    return (e4 = r9.optionsRef.current) != null ? e4 : null;
  }, overscan: 12 }), [u13, p7] = (0, import_react68.useState)(0);
  return l(() => {
    p7((e4) => e4 + 1);
  }, [(c16 = r9.virtual) == null ? void 0 : c16.options]), import_react68.default.createElement(Ce.Provider, { value: i8 }, import_react68.default.createElement("div", { style: { position: "relative", width: "100%", height: `${i8.getTotalSize()}px` }, ref: (e4) => {
    if (e4) {
      if (typeof process != "undefined" && process.env.JEST_WORKER_ID !== void 0 || r9.activationTrigger === 0) return;
      r9.activeOptionIndex !== null && r9.virtual.options.length > r9.activeOptionIndex && i8.scrollToIndex(r9.activeOptionIndex);
    }
  } }, i8.getVirtualItems().map((e4) => {
    var l13;
    return import_react68.default.createElement(import_react68.Fragment, { key: e4.key }, import_react68.default.cloneElement((l13 = t18.children) == null ? void 0 : l13.call(t18, { option: r9.virtual.options[e4.index], open: r9.comboboxState === 0 }), { key: `${u13}-${e4.key}`, "data-index": e4.index, "aria-setsize": r9.virtual.options.length, "aria-posinset": e4.index + 1, style: { position: "absolute", top: 0, left: 0, transform: `translateY(${e4.start}px)`, overflowAnchor: "none" } }));
  })));
}
var ce = (0, import_react68.createContext)(null);
ce.displayName = "ComboboxDataContext";
function j2(t18) {
  let r9 = (0, import_react68.useContext)(ce);
  if (r9 === null) {
    let o13 = new Error(`<${t18} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, j2), o13;
  }
  return r9;
}
function et(t18, r9) {
  return u(r9.type, Qe, t18, r9);
}
var tt = import_react68.Fragment;
function ot(t18, r9) {
  var fe4;
  let { value: o13, defaultValue: a11, onChange: i8, form: u13, name: p7, by: c16 = null, disabled: e4 = false, __demoMode: l13 = false, nullable: T7 = false, multiple: g5 = false, immediate: f14 = false, virtual: v6 = null, ...S10 } = t18, R4 = false, s17 = null, [I11 = g5 ? [] : void 0, V5] = T(o13, i8, a11), [_5, E8] = (0, import_react68.useReducer)(et, { dataRef: (0, import_react68.createRef)(), comboboxState: l13 ? 0 : 1, options: [], virtual: s17 ? { options: s17.options, disabled: (fe4 = s17.disabled) != null ? fe4 : () => false } : null, activeOptionIndex: null, activationTrigger: 2, labelId: null }), k3 = (0, import_react68.useRef)(false), J6 = (0, import_react68.useRef)({ static: false, hold: false }), K4 = (0, import_react68.useRef)(null), z4 = (0, import_react68.useRef)(null), te5 = (0, import_react68.useRef)(null), X5 = (0, import_react68.useRef)(null), x4 = o2(typeof c16 == "string" ? (d16, b8) => {
    let P5 = c16;
    return (d16 == null ? void 0 : d16[P5]) === (b8 == null ? void 0 : b8[P5]);
  } : c16 != null ? c16 : (d16, b8) => d16 === b8), O4 = o2((d16) => s17 ? c16 === null ? s17.options.indexOf(d16) : s17.options.findIndex((b8) => x4(b8, d16)) : _5.options.findIndex((b8) => x4(b8.dataRef.current.value, d16))), L2 = (0, import_react68.useCallback)((d16) => u(n7.mode, { [1]: () => I11.some((b8) => x4(b8, d16)), [0]: () => x4(I11, d16) }), [I11]), oe5 = o2((d16) => _5.activeOptionIndex === O4(d16)), n7 = (0, import_react68.useMemo)(() => ({ ..._5, immediate: R4, optionsPropsRef: J6, labelRef: K4, inputRef: z4, buttonRef: te5, optionsRef: X5, value: I11, defaultValue: a11, disabled: e4, mode: g5 ? 1 : 0, virtual: _5.virtual, get activeOptionIndex() {
    if (k3.current && _5.activeOptionIndex === null && (s17 ? s17.options.length > 0 : _5.options.length > 0)) {
      if (s17) {
        let b8 = s17.options.findIndex((P5) => {
          var G4, Y3;
          return !((Y3 = (G4 = s17 == null ? void 0 : s17.disabled) == null ? void 0 : G4.call(s17, P5)) != null && Y3);
        });
        if (b8 !== -1) return b8;
      }
      let d16 = _5.options.findIndex((b8) => !b8.dataRef.current.disabled);
      if (d16 !== -1) return d16;
    }
    return _5.activeOptionIndex;
  }, calculateIndex: O4, compare: x4, isSelected: L2, isActive: oe5, nullable: T7, __demoMode: l13 }), [I11, a11, e4, g5, T7, l13, _5, s17]);
  l(() => {
    s17 && E8({ type: 7, options: s17.options });
  }, [s17, s17 == null ? void 0 : s17.options]), l(() => {
    _5.dataRef.current = n7;
  }, [n7]), y2([n7.buttonRef, n7.inputRef, n7.optionsRef], () => le3.closeCombobox(), n7.comboboxState === 0);
  let F10 = (0, import_react68.useMemo)(() => {
    var d16, b8, P5;
    return { open: n7.comboboxState === 0, disabled: e4, activeIndex: n7.activeOptionIndex, activeOption: n7.activeOptionIndex === null ? null : n7.virtual ? n7.virtual.options[(d16 = n7.activeOptionIndex) != null ? d16 : 0] : (P5 = (b8 = n7.options[n7.activeOptionIndex]) == null ? void 0 : b8.dataRef.current.value) != null ? P5 : null, value: I11 };
  }, [n7, e4, I11]), A3 = o2(() => {
    if (n7.activeOptionIndex !== null) {
      if (n7.virtual) ae3(n7.virtual.options[n7.activeOptionIndex]);
      else {
        let { dataRef: d16 } = n7.options[n7.activeOptionIndex];
        ae3(d16.current.value);
      }
      le3.goToOption(c4.Specific, n7.activeOptionIndex);
    }
  }), h9 = o2(() => {
    E8({ type: 0 }), k3.current = true;
  }), C7 = o2(() => {
    E8({ type: 1 }), k3.current = false;
  }), D7 = o2((d16, b8, P5) => (k3.current = false, d16 === c4.Specific ? E8({ type: 2, focus: c4.Specific, idx: b8, trigger: P5 }) : E8({ type: 2, focus: d16, trigger: P5 }))), N7 = o2((d16, b8) => (E8({ type: 3, payload: { id: d16, dataRef: b8 } }), () => {
    n7.isActive(b8.current.value) && (k3.current = true), E8({ type: 4, id: d16 });
  })), ye6 = o2((d16) => (E8({ type: 5, id: d16 }), () => E8({ type: 5, id: null }))), ae3 = o2((d16) => u(n7.mode, { [0]() {
    return V5 == null ? void 0 : V5(d16);
  }, [1]() {
    let b8 = n7.value.slice(), P5 = b8.findIndex((G4) => x4(G4, d16));
    return P5 === -1 ? b8.push(d16) : b8.splice(P5, 1), V5 == null ? void 0 : V5(b8);
  } })), Re4 = o2((d16) => {
    E8({ type: 6, trigger: d16 });
  }), le3 = (0, import_react68.useMemo)(() => ({ onChange: ae3, registerOption: N7, registerLabel: ye6, goToOption: D7, closeCombobox: C7, openCombobox: h9, setActivationTrigger: Re4, selectActiveOption: A3 }), []), Ae5 = r9 === null ? {} : { ref: r9 }, ne5 = (0, import_react68.useRef)(null), Se5 = p();
  return (0, import_react68.useEffect)(() => {
    ne5.current && a11 !== void 0 && Se5.addEventListener(ne5.current, "reset", () => {
      V5 == null || V5(a11);
    });
  }, [ne5, V5]), import_react68.default.createElement(be.Provider, { value: le3 }, import_react68.default.createElement(ce.Provider, { value: n7 }, import_react68.default.createElement(s9, { value: u(n7.comboboxState, { [0]: d5.Open, [1]: d5.Closed }) }, p7 != null && I11 != null && e({ [p7]: I11 }).map(([d16, b8], P5) => import_react68.default.createElement(u4, { features: s8.Hidden, ref: P5 === 0 ? (G4) => {
    var Y3;
    ne5.current = (Y3 = G4 == null ? void 0 : G4.closest("form")) != null ? Y3 : null;
  } : void 0, ...x({ key: d16, as: "input", type: "hidden", hidden: true, readOnly: true, form: u13, disabled: e4, name: d16, value: b8 }) })), C({ ourProps: Ae5, theirProps: S10, slot: F10, defaultTag: tt, name: "Combobox" }))));
}
var nt = "input";
function rt(t18, r9) {
  var X5, x4, O4, L2, oe5;
  let o13 = I(), { id: a11 = `headlessui-combobox-input-${o13}`, onChange: i8, displayValue: u13, type: p7 = "text", ...c16 } = t18, e4 = j2("Combobox.Input"), l13 = ee("Combobox.Input"), T7 = y3(e4.inputRef, r9), g5 = n2(e4.inputRef), f14 = (0, import_react68.useRef)(false), v6 = p(), S10 = o2(() => {
    l13.onChange(null), e4.optionsRef.current && (e4.optionsRef.current.scrollTop = 0), l13.goToOption(c4.Nothing);
  }), R4 = function() {
    var n7;
    return typeof u13 == "function" && e4.value !== void 0 ? (n7 = u13(e4.value)) != null ? n7 : "" : typeof e4.value == "string" ? e4.value : "";
  }();
  m4(([n7, F10], [A3, h9]) => {
    if (f14.current) return;
    let C7 = e4.inputRef.current;
    C7 && ((h9 === 0 && F10 === 1 || n7 !== A3) && (C7.value = n7), requestAnimationFrame(() => {
      if (f14.current || !C7 || (g5 == null ? void 0 : g5.activeElement) !== C7) return;
      let { selectionStart: D7, selectionEnd: N7 } = C7;
      Math.abs((N7 != null ? N7 : 0) - (D7 != null ? D7 : 0)) === 0 && D7 === 0 && C7.setSelectionRange(C7.value.length, C7.value.length);
    }));
  }, [R4, e4.comboboxState, g5]), m4(([n7], [F10]) => {
    if (n7 === 0 && F10 === 1) {
      if (f14.current) return;
      let A3 = e4.inputRef.current;
      if (!A3) return;
      let h9 = A3.value, { selectionStart: C7, selectionEnd: D7, selectionDirection: N7 } = A3;
      A3.value = "", A3.value = h9, N7 !== null ? A3.setSelectionRange(C7, D7, N7) : A3.setSelectionRange(C7, D7);
    }
  }, [e4.comboboxState]);
  let s17 = (0, import_react68.useRef)(false), I11 = o2(() => {
    s17.current = true;
  }), V5 = o2(() => {
    v6.nextFrame(() => {
      s17.current = false;
    });
  }), _5 = o2((n7) => {
    switch (f14.current = true, n7.key) {
      case o11.Enter:
        if (f14.current = false, e4.comboboxState !== 0 || s17.current) return;
        if (n7.preventDefault(), n7.stopPropagation(), e4.activeOptionIndex === null) {
          l13.closeCombobox();
          return;
        }
        l13.selectActiveOption(), e4.mode === 0 && l13.closeCombobox();
        break;
      case o11.ArrowDown:
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), u(e4.comboboxState, { [0]: () => l13.goToOption(c4.Next), [1]: () => l13.openCombobox() });
      case o11.ArrowUp:
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), u(e4.comboboxState, { [0]: () => l13.goToOption(c4.Previous), [1]: () => {
          l13.openCombobox(), v6.nextFrame(() => {
            e4.value || l13.goToOption(c4.Last);
          });
        } });
      case o11.Home:
        if (n7.shiftKey) break;
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), l13.goToOption(c4.First);
      case o11.PageUp:
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), l13.goToOption(c4.First);
      case o11.End:
        if (n7.shiftKey) break;
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), l13.goToOption(c4.Last);
      case o11.PageDown:
        return f14.current = false, n7.preventDefault(), n7.stopPropagation(), l13.goToOption(c4.Last);
      case o11.Escape:
        return f14.current = false, e4.comboboxState !== 0 ? void 0 : (n7.preventDefault(), e4.optionsRef.current && !e4.optionsPropsRef.current.static && n7.stopPropagation(), e4.nullable && e4.mode === 0 && e4.value === null && S10(), l13.closeCombobox());
      case o11.Tab:
        if (f14.current = false, e4.comboboxState !== 0) return;
        e4.mode === 0 && e4.activationTrigger !== 1 && l13.selectActiveOption(), l13.closeCombobox();
        break;
    }
  }), E8 = o2((n7) => {
    i8 == null || i8(n7), e4.nullable && e4.mode === 0 && n7.target.value === "" && S10(), l13.openCombobox();
  }), k3 = o2((n7) => {
    var A3, h9, C7;
    let F10 = (A3 = n7.relatedTarget) != null ? A3 : t12.find((D7) => D7 !== n7.currentTarget);
    if (f14.current = false, !((h9 = e4.optionsRef.current) != null && h9.contains(F10)) && !((C7 = e4.buttonRef.current) != null && C7.contains(F10)) && e4.comboboxState === 0) return n7.preventDefault(), e4.mode === 0 && (e4.nullable && e4.value === null ? S10() : e4.activationTrigger !== 1 && l13.selectActiveOption()), l13.closeCombobox();
  }), J6 = o2((n7) => {
    var A3, h9, C7;
    let F10 = (A3 = n7.relatedTarget) != null ? A3 : t12.find((D7) => D7 !== n7.currentTarget);
    (h9 = e4.buttonRef.current) != null && h9.contains(F10) || (C7 = e4.optionsRef.current) != null && C7.contains(F10) || e4.disabled || e4.immediate && e4.comboboxState !== 0 && (l13.openCombobox(), v6.nextFrame(() => {
      l13.setActivationTrigger(1);
    }));
  }), K4 = i2(() => {
    if (e4.labelId) return [e4.labelId].join(" ");
  }, [e4.labelId]), z4 = (0, import_react68.useMemo)(() => ({ open: e4.comboboxState === 0, disabled: e4.disabled }), [e4]), te5 = { ref: T7, id: a11, role: "combobox", type: p7, "aria-controls": (X5 = e4.optionsRef.current) == null ? void 0 : X5.id, "aria-expanded": e4.comboboxState === 0, "aria-activedescendant": e4.activeOptionIndex === null ? void 0 : e4.virtual ? (x4 = e4.options.find((n7) => {
    var F10;
    return !((F10 = e4.virtual) != null && F10.disabled(n7.dataRef.current.value)) && e4.compare(n7.dataRef.current.value, e4.virtual.options[e4.activeOptionIndex]);
  })) == null ? void 0 : x4.id : (O4 = e4.options[e4.activeOptionIndex]) == null ? void 0 : O4.id, "aria-labelledby": K4, "aria-autocomplete": "list", defaultValue: (oe5 = (L2 = t18.defaultValue) != null ? L2 : e4.defaultValue !== void 0 ? u13 == null ? void 0 : u13(e4.defaultValue) : null) != null ? oe5 : e4.defaultValue, disabled: e4.disabled, onCompositionStart: I11, onCompositionEnd: V5, onKeyDown: _5, onChange: E8, onFocus: J6, onBlur: k3 };
  return C({ ourProps: te5, theirProps: c16, slot: z4, defaultTag: nt, name: "Combobox.Input" });
}
var at = "button";
function lt(t18, r9) {
  var S10;
  let o13 = j2("Combobox.Button"), a11 = ee("Combobox.Button"), i8 = y3(o13.buttonRef, r9), u13 = I(), { id: p7 = `headlessui-combobox-button-${u13}`, ...c16 } = t18, e4 = p(), l13 = o2((R4) => {
    switch (R4.key) {
      case o11.ArrowDown:
        return R4.preventDefault(), R4.stopPropagation(), o13.comboboxState === 1 && a11.openCombobox(), e4.nextFrame(() => {
          var s17;
          return (s17 = o13.inputRef.current) == null ? void 0 : s17.focus({ preventScroll: true });
        });
      case o11.ArrowUp:
        return R4.preventDefault(), R4.stopPropagation(), o13.comboboxState === 1 && (a11.openCombobox(), e4.nextFrame(() => {
          o13.value || a11.goToOption(c4.Last);
        })), e4.nextFrame(() => {
          var s17;
          return (s17 = o13.inputRef.current) == null ? void 0 : s17.focus({ preventScroll: true });
        });
      case o11.Escape:
        return o13.comboboxState !== 0 ? void 0 : (R4.preventDefault(), o13.optionsRef.current && !o13.optionsPropsRef.current.static && R4.stopPropagation(), a11.closeCombobox(), e4.nextFrame(() => {
          var s17;
          return (s17 = o13.inputRef.current) == null ? void 0 : s17.focus({ preventScroll: true });
        }));
      default:
        return;
    }
  }), T7 = o2((R4) => {
    if (r2(R4.currentTarget)) return R4.preventDefault();
    o13.comboboxState === 0 ? a11.closeCombobox() : (R4.preventDefault(), a11.openCombobox()), e4.nextFrame(() => {
      var s17;
      return (s17 = o13.inputRef.current) == null ? void 0 : s17.focus({ preventScroll: true });
    });
  }), g5 = i2(() => {
    if (o13.labelId) return [o13.labelId, p7].join(" ");
  }, [o13.labelId, p7]), f14 = (0, import_react68.useMemo)(() => ({ open: o13.comboboxState === 0, disabled: o13.disabled, value: o13.value }), [o13]), v6 = { ref: i8, id: p7, type: T3(t18, o13.buttonRef), tabIndex: -1, "aria-haspopup": "listbox", "aria-controls": (S10 = o13.optionsRef.current) == null ? void 0 : S10.id, "aria-expanded": o13.comboboxState === 0, "aria-labelledby": g5, disabled: o13.disabled, onClick: T7, onKeyDown: l13 };
  return C({ ourProps: v6, theirProps: c16, slot: f14, defaultTag: at, name: "Combobox.Button" });
}
var it = "label";
function ut(t18, r9) {
  let o13 = I(), { id: a11 = `headlessui-combobox-label-${o13}`, ...i8 } = t18, u13 = j2("Combobox.Label"), p7 = ee("Combobox.Label"), c16 = y3(u13.labelRef, r9);
  l(() => p7.registerLabel(a11), [a11]);
  let e4 = o2(() => {
    var g5;
    return (g5 = u13.inputRef.current) == null ? void 0 : g5.focus({ preventScroll: true });
  }), l13 = (0, import_react68.useMemo)(() => ({ open: u13.comboboxState === 0, disabled: u13.disabled }), [u13]);
  return C({ ourProps: { ref: c16, id: a11, onClick: e4 }, theirProps: i8, slot: l13, defaultTag: it, name: "Combobox.Label" });
}
var pt = "ul";
var st = O2.RenderStrategy | O2.Static;
function dt(t18, r9) {
  let o13 = I(), { id: a11 = `headlessui-combobox-options-${o13}`, hold: i8 = false, ...u13 } = t18, p7 = j2("Combobox.Options"), c16 = y3(p7.optionsRef, r9), e4 = u5(), l13 = (() => e4 !== null ? (e4 & d5.Open) === d5.Open : p7.comboboxState === 0)();
  l(() => {
    var v6;
    p7.optionsPropsRef.current.static = (v6 = t18.static) != null ? v6 : false;
  }, [p7.optionsPropsRef, t18.static]), l(() => {
    p7.optionsPropsRef.current.hold = i8;
  }, [p7.optionsPropsRef, i8]), F2({ container: p7.optionsRef.current, enabled: p7.comboboxState === 0, accept(v6) {
    return v6.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : v6.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(v6) {
    v6.setAttribute("role", "none");
  } });
  let T7 = i2(() => {
    var v6, S10;
    return (S10 = p7.labelId) != null ? S10 : (v6 = p7.buttonRef.current) == null ? void 0 : v6.id;
  }, [p7.labelId, p7.buttonRef.current]), g5 = (0, import_react68.useMemo)(() => ({ open: p7.comboboxState === 0, option: void 0 }), [p7]), f14 = { "aria-labelledby": T7, role: "listbox", "aria-multiselectable": p7.mode === 1 ? true : void 0, id: a11, ref: c16 };
  return p7.virtual && p7.comboboxState === 0 && Object.assign(u13, { children: import_react68.default.createElement(Ze, null, u13.children) }), C({ ourProps: f14, theirProps: u13, slot: g5, defaultTag: pt, features: st, visible: l13, name: "Combobox.Options" });
}
var bt = "li";
function ct(t18, r9) {
  var X5;
  let o13 = I(), { id: a11 = `headlessui-combobox-option-${o13}`, disabled: i8 = false, value: u13, order: p7 = null, ...c16 } = t18, e4 = j2("Combobox.Option"), l13 = ee("Combobox.Option"), T7 = e4.virtual ? e4.activeOptionIndex === e4.calculateIndex(u13) : e4.activeOptionIndex === null ? false : ((X5 = e4.options[e4.activeOptionIndex]) == null ? void 0 : X5.id) === a11, g5 = e4.isSelected(u13), f14 = (0, import_react68.useRef)(null), v6 = s2({ disabled: i8, value: u13, domRef: f14, order: p7 }), S10 = (0, import_react68.useContext)(Ce), R4 = y3(r9, f14, S10 ? S10.measureElement : null), s17 = o2(() => l13.onChange(u13));
  l(() => l13.registerOption(a11, v6), [v6, a11]);
  let I11 = (0, import_react68.useRef)(!(e4.virtual || e4.__demoMode));
  l(() => {
    if (!e4.virtual || !e4.__demoMode) return;
    let x4 = o4();
    return x4.requestAnimationFrame(() => {
      I11.current = true;
    }), x4.dispose;
  }, [e4.virtual, e4.__demoMode]), l(() => {
    if (!I11.current || e4.comboboxState !== 0 || !T7 || e4.activationTrigger === 0) return;
    let x4 = o4();
    return x4.requestAnimationFrame(() => {
      var O4, L2;
      (L2 = (O4 = f14.current) == null ? void 0 : O4.scrollIntoView) == null || L2.call(O4, { block: "nearest" });
    }), x4.dispose;
  }, [f14, T7, e4.comboboxState, e4.activationTrigger, e4.activeOptionIndex]);
  let V5 = o2((x4) => {
    var O4;
    if (i8 || (O4 = e4.virtual) != null && O4.disabled(u13)) return x4.preventDefault();
    s17(), n() || requestAnimationFrame(() => {
      var L2;
      return (L2 = e4.inputRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
    }), e4.mode === 0 && requestAnimationFrame(() => l13.closeCombobox());
  }), _5 = o2(() => {
    var O4;
    if (i8 || (O4 = e4.virtual) != null && O4.disabled(u13)) return l13.goToOption(c4.Nothing);
    let x4 = e4.calculateIndex(u13);
    l13.goToOption(c4.Specific, x4);
  }), E8 = u3(), k3 = o2((x4) => E8.update(x4)), J6 = o2((x4) => {
    var L2;
    if (!E8.wasMoved(x4) || i8 || (L2 = e4.virtual) != null && L2.disabled(u13) || T7) return;
    let O4 = e4.calculateIndex(u13);
    l13.goToOption(c4.Specific, O4, 0);
  }), K4 = o2((x4) => {
    var O4;
    E8.wasMoved(x4) && (i8 || (O4 = e4.virtual) != null && O4.disabled(u13) || T7 && (e4.optionsPropsRef.current.hold || l13.goToOption(c4.Nothing)));
  }), z4 = (0, import_react68.useMemo)(() => ({ active: T7, selected: g5, disabled: i8 }), [T7, g5, i8]);
  return C({ ourProps: { id: a11, ref: R4, role: "option", tabIndex: i8 === true ? void 0 : -1, "aria-disabled": i8 === true ? true : void 0, "aria-selected": g5, disabled: void 0, onClick: V5, onFocus: _5, onPointerEnter: k3, onMouseEnter: k3, onPointerMove: J6, onMouseMove: J6, onPointerLeave: K4, onMouseLeave: K4 }, theirProps: c16, slot: z4, defaultTag: bt, name: "Combobox.Option" });
}
var ft = U(ot);
var mt = U(lt);
var Tt = U(rt);
var xt = U(ut);
var gt = U(dt);
var vt = U(ct);
var qt = Object.assign(ft, { Input: Tt, Button: mt, Label: xt, Options: gt, Option: vt });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var import_react79 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
var import_react73 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-event-listener.js
var import_react69 = __toESM(require_react(), 1);
function E3(n7, e4, a11, t18) {
  let i8 = s2(a11);
  (0, import_react69.useEffect)(() => {
    n7 = n7 != null ? n7 : window;
    function r9(o13) {
      i8.current(o13);
    }
    return n7.addEventListener(e4, r9, t18), () => n7.removeEventListener(e4, r9, t18);
  }, [n7, e4, t18]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
var import_react70 = __toESM(require_react(), 1);
function f7() {
  let e4 = (0, import_react70.useRef)(false);
  return l(() => (e4.current = true, () => {
    e4.current = false;
  }), []), e4;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-on-unmount.js
var import_react71 = __toESM(require_react(), 1);
function c5(t18) {
  let r9 = o2(t18), e4 = (0, import_react71.useRef)(false);
  (0, import_react71.useEffect)(() => (e4.current = false, () => {
    e4.current = true, t3(() => {
      e4.current && r9();
    });
  }), [r9]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var import_react72 = __toESM(require_react(), 1);
var s10 = ((r9) => (r9[r9.Forwards = 0] = "Forwards", r9[r9.Backwards = 1] = "Backwards", r9))(s10 || {});
function n5() {
  let e4 = (0, import_react72.useRef)(0);
  return s6("keydown", (o13) => {
    o13.key === "Tab" && (e4.current = o13.shiftKey ? 1 : 0);
  }, true), e4;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function P2(t18) {
  if (!t18) return /* @__PURE__ */ new Set();
  if (typeof t18 == "function") return new Set(t18());
  let n7 = /* @__PURE__ */ new Set();
  for (let e4 of t18.current) e4.current instanceof HTMLElement && n7.add(e4.current);
  return n7;
}
var X = "div";
var _2 = ((r9) => (r9[r9.None = 1] = "None", r9[r9.InitialFocus = 2] = "InitialFocus", r9[r9.TabLock = 4] = "TabLock", r9[r9.FocusLock = 8] = "FocusLock", r9[r9.RestoreFocus = 16] = "RestoreFocus", r9[r9.All = 30] = "All", r9))(_2 || {});
function z(t18, n7) {
  let e4 = (0, import_react73.useRef)(null), o13 = y3(e4, n7), { initialFocus: l13, containers: c16, features: r9 = 30, ...s17 } = t18;
  l2() || (r9 = 1);
  let i8 = n2(e4);
  Y({ ownerDocument: i8 }, Boolean(r9 & 16));
  let u13 = Z({ ownerDocument: i8, container: e4, initialFocus: l13 }, Boolean(r9 & 2));
  $({ ownerDocument: i8, container: e4, containers: c16, previousActiveElement: u13 }, Boolean(r9 & 8));
  let y7 = n5(), R4 = o2((a11) => {
    let m13 = e4.current;
    if (!m13) return;
    ((B4) => B4())(() => {
      u(y7.current, { [s10.Forwards]: () => {
        O(m13, M.First, { skipElements: [a11.relatedTarget] });
      }, [s10.Backwards]: () => {
        O(m13, M.Last, { skipElements: [a11.relatedTarget] });
      } });
    });
  }), h9 = p(), H6 = (0, import_react73.useRef)(false), j5 = { ref: o13, onKeyDown(a11) {
    a11.key == "Tab" && (H6.current = true, h9.requestAnimationFrame(() => {
      H6.current = false;
    }));
  }, onBlur(a11) {
    let m13 = P2(c16);
    e4.current instanceof HTMLElement && m13.add(e4.current);
    let T7 = a11.relatedTarget;
    T7 instanceof HTMLElement && T7.dataset.headlessuiFocusGuard !== "true" && (S3(m13, T7) || (H6.current ? O(e4.current, u(y7.current, { [s10.Forwards]: () => M.Next, [s10.Backwards]: () => M.Previous }) | M.WrapAround, { relativeTo: a11.target }) : a11.target instanceof HTMLElement && y(a11.target)));
  } };
  return import_react73.default.createElement(import_react73.default.Fragment, null, Boolean(r9 & 4) && import_react73.default.createElement(u4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R4, features: s8.Focusable }), C({ ourProps: j5, theirProps: s17, defaultTag: X, name: "FocusTrap" }), Boolean(r9 & 4) && import_react73.default.createElement(u4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R4, features: s8.Focusable }));
}
var D2 = U(z);
var de2 = Object.assign(D2, { features: _2 });
function Q(t18 = true) {
  let n7 = (0, import_react73.useRef)(t12.slice());
  return m4(([e4], [o13]) => {
    o13 === true && e4 === false && t3(() => {
      n7.current.splice(0);
    }), o13 === false && e4 === true && (n7.current = t12.slice());
  }, [t18, t12, n7]), o2(() => {
    var e4;
    return (e4 = n7.current.find((o13) => o13 != null && o13.isConnected)) != null ? e4 : null;
  });
}
function Y({ ownerDocument: t18 }, n7) {
  let e4 = Q(n7);
  m4(() => {
    n7 || (t18 == null ? void 0 : t18.activeElement) === (t18 == null ? void 0 : t18.body) && y(e4());
  }, [n7]), c5(() => {
    n7 && y(e4());
  });
}
function Z({ ownerDocument: t18, container: n7, initialFocus: e4 }, o13) {
  let l13 = (0, import_react73.useRef)(null), c16 = f7();
  return m4(() => {
    if (!o13) return;
    let r9 = n7.current;
    r9 && t3(() => {
      if (!c16.current) return;
      let s17 = t18 == null ? void 0 : t18.activeElement;
      if (e4 != null && e4.current) {
        if ((e4 == null ? void 0 : e4.current) === s17) {
          l13.current = s17;
          return;
        }
      } else if (r9.contains(s17)) {
        l13.current = s17;
        return;
      }
      e4 != null && e4.current ? y(e4.current) : O(r9, M.First) === N.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), l13.current = t18 == null ? void 0 : t18.activeElement;
    });
  }, [o13]), l13;
}
function $({ ownerDocument: t18, container: n7, containers: e4, previousActiveElement: o13 }, l13) {
  let c16 = f7();
  E3(t18 == null ? void 0 : t18.defaultView, "focus", (r9) => {
    if (!l13 || !c16.current) return;
    let s17 = P2(e4);
    n7.current instanceof HTMLElement && s17.add(n7.current);
    let i8 = o13.current;
    if (!i8) return;
    let u13 = r9.target;
    u13 && u13 instanceof HTMLElement ? S3(s17, u13) ? (o13.current = u13, y(u13)) : (r9.preventDefault(), r9.stopPropagation(), y(i8)) : y(o13.current);
  }, true);
}
function S3(t18, n7) {
  for (let e4 of t18) if (e4.contains(n7)) return true;
  return false;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/portal/portal.js
var import_react75 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/portal-force-root.js
var import_react74 = __toESM(require_react(), 1);
var e2 = (0, import_react74.createContext)(false);
function a3() {
  return (0, import_react74.useContext)(e2);
}
function l6(o13) {
  return import_react74.default.createElement(e2.Provider, { value: o13.force }, o13.children);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/portal/portal.js
function F4(p7) {
  let n7 = a3(), l13 = (0, import_react75.useContext)(_3), e4 = n2(p7), [a11, o13] = (0, import_react75.useState)(() => {
    if (!n7 && l13 !== null || s.isServer) return null;
    let t18 = e4 == null ? void 0 : e4.getElementById("headlessui-portal-root");
    if (t18) return t18;
    if (e4 === null) return null;
    let r9 = e4.createElement("div");
    return r9.setAttribute("id", "headlessui-portal-root"), e4.body.appendChild(r9);
  });
  return (0, import_react75.useEffect)(() => {
    a11 !== null && (e4 != null && e4.body.contains(a11) || e4 == null || e4.body.appendChild(a11));
  }, [a11, e4]), (0, import_react75.useEffect)(() => {
    n7 || l13 !== null && o13(l13.current);
  }, [l13, o13, n7]), a11;
}
var U3 = import_react75.Fragment;
function N3(p7, n7) {
  let l13 = p7, e4 = (0, import_react75.useRef)(null), a11 = y3(T4((u13) => {
    e4.current = u13;
  }), n7), o13 = n2(e4), t18 = F4(e4), [r9] = (0, import_react75.useState)(() => {
    var u13;
    return s.isServer ? null : (u13 = o13 == null ? void 0 : o13.createElement("div")) != null ? u13 : null;
  }), i8 = (0, import_react75.useContext)(f8), v6 = l2();
  return l(() => {
    !t18 || !r9 || t18.contains(r9) || (r9.setAttribute("data-headlessui-portal", ""), t18.appendChild(r9));
  }, [t18, r9]), l(() => {
    if (r9 && i8) return i8.register(r9);
  }, [i8, r9]), c5(() => {
    var u13;
    !t18 || !r9 || (r9 instanceof Node && t18.contains(r9) && t18.removeChild(r9), t18.childNodes.length <= 0 && ((u13 = t18.parentElement) == null || u13.removeChild(t18)));
  }), v6 ? !t18 || !r9 ? null : (0, import_react_dom.createPortal)(C({ ourProps: { ref: a11 }, theirProps: l13, defaultTag: U3, name: "Portal" }), r9) : null;
}
var S4 = import_react75.Fragment;
var _3 = (0, import_react75.createContext)(null);
function j3(p7, n7) {
  let { target: l13, ...e4 } = p7, o13 = { ref: y3(n7) };
  return import_react75.default.createElement(_3.Provider, { value: l13 }, C({ ourProps: o13, theirProps: e4, defaultTag: S4, name: "Popover.Group" }));
}
var f8 = (0, import_react75.createContext)(null);
function ee2() {
  let p7 = (0, import_react75.useContext)(f8), n7 = (0, import_react75.useRef)([]), l13 = o2((o13) => (n7.current.push(o13), p7 && p7.register(o13), () => e4(o13))), e4 = o2((o13) => {
    let t18 = n7.current.indexOf(o13);
    t18 !== -1 && n7.current.splice(t18, 1), p7 && p7.unregister(o13);
  }), a11 = (0, import_react75.useMemo)(() => ({ register: l13, unregister: e4, portals: n7 }), [l13, e4, n7]);
  return [n7, (0, import_react75.useMemo)(() => function({ children: t18 }) {
    return import_react75.default.createElement(f8.Provider, { value: a11 }, t18);
  }, [a11])];
}
var D3 = U(N3);
var I4 = U(j3);
var te = Object.assign(D3, { Group: I4 });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var e3 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimClient.js
var l7 = __toESM(require_react(), 1);
function i7(e4, t18) {
  return e4 === t18 && (e4 !== 0 || 1 / e4 === 1 / t18) || e4 !== e4 && t18 !== t18;
}
var d9 = typeof Object.is == "function" ? Object.is : i7;
var { useState: u8, useEffect: h3, useLayoutEffect: f9, useDebugValue: p5 } = l7;
function y4(e4, t18, c16) {
  const a11 = t18(), [{ inst: n7 }, o13] = u8({ inst: { value: a11, getSnapshot: t18 } });
  return f9(() => {
    n7.value = a11, n7.getSnapshot = t18, r5(n7) && o13({ inst: n7 });
  }, [e4, a11, t18]), h3(() => (r5(n7) && o13({ inst: n7 }), e4(() => {
    r5(n7) && o13({ inst: n7 });
  })), [e4]), p5(a11), a11;
}
function r5(e4) {
  const t18 = e4.getSnapshot, c16 = e4.value;
  try {
    const a11 = t18();
    return !d9(c16, a11);
  } catch {
    return true;
  }
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimServer.js
function t15(r9, e4, n7) {
  return e4();
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var r6 = typeof window != "undefined" && typeof window.document != "undefined" && typeof window.document.createElement != "undefined";
var s12 = !r6;
var c7 = s12 ? t15 : y4;
var a4 = "useSyncExternalStore" in e3 ? ((n7) => n7.useSyncExternalStore)(e3) : c7;

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-store.js
function S5(t18) {
  return a4(t18.subscribe, t18.getSnapshot, t18.getSnapshot);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/store.js
function a5(o13, r9) {
  let t18 = o13(), n7 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t18;
  }, subscribe(e4) {
    return n7.add(e4), () => n7.delete(e4);
  }, dispatch(e4, ...s17) {
    let i8 = r9[e4].call(t18, ...s17);
    i8 && (t18 = i8, n7.forEach((c16) => c16()));
  } };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function c8() {
  let o13;
  return { before({ doc: e4 }) {
    var l13;
    let n7 = e4.documentElement;
    o13 = ((l13 = e4.defaultView) != null ? l13 : window).innerWidth - n7.clientWidth;
  }, after({ doc: e4, d: n7 }) {
    let t18 = e4.documentElement, l13 = t18.clientWidth - t18.offsetWidth, r9 = o13 - l13;
    n7.style(t18, "paddingRight", `${r9}px`);
  } };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function d10() {
  return t6() ? { before({ doc: r9, d: l13, meta: c16 }) {
    function o13(a11) {
      return c16.containers.flatMap((n7) => n7()).some((n7) => n7.contains(a11));
    }
    l13.microTask(() => {
      var s17;
      if (window.getComputedStyle(r9.documentElement).scrollBehavior !== "auto") {
        let t18 = o4();
        t18.style(r9.documentElement, "scrollBehavior", "auto"), l13.add(() => l13.microTask(() => t18.dispose()));
      }
      let a11 = (s17 = window.scrollY) != null ? s17 : window.pageYOffset, n7 = null;
      l13.addEventListener(r9, "click", (t18) => {
        if (t18.target instanceof HTMLElement) try {
          let e4 = t18.target.closest("a");
          if (!e4) return;
          let { hash: f14 } = new URL(e4.href), i8 = r9.querySelector(f14);
          i8 && !o13(i8) && (n7 = i8);
        } catch {
        }
      }, true), l13.addEventListener(r9, "touchstart", (t18) => {
        if (t18.target instanceof HTMLElement) if (o13(t18.target)) {
          let e4 = t18.target;
          for (; e4.parentElement && o13(e4.parentElement); ) e4 = e4.parentElement;
          l13.style(e4, "overscrollBehavior", "contain");
        } else l13.style(t18.target, "touchAction", "none");
      }), l13.addEventListener(r9, "touchmove", (t18) => {
        if (t18.target instanceof HTMLElement) if (o13(t18.target)) {
          let e4 = t18.target;
          for (; e4.parentElement && e4.dataset.headlessuiPortal !== "" && !(e4.scrollHeight > e4.clientHeight || e4.scrollWidth > e4.clientWidth); ) e4 = e4.parentElement;
          e4.dataset.headlessuiPortal === "" && t18.preventDefault();
        } else t18.preventDefault();
      }, { passive: false }), l13.add(() => {
        var e4;
        let t18 = (e4 = window.scrollY) != null ? e4 : window.pageYOffset;
        a11 !== t18 && window.scrollTo(0, a11), n7 && n7.isConnected && (n7.scrollIntoView({ block: "nearest" }), n7 = null);
      });
    });
  } } : {};
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function l8() {
  return { before({ doc: e4, d: o13 }) {
    o13.style(e4.documentElement, "overflow", "hidden");
  } };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m7(e4) {
  let n7 = {};
  for (let t18 of e4) Object.assign(n7, t18(n7));
  return n7;
}
var a6 = a5(() => /* @__PURE__ */ new Map(), { PUSH(e4, n7) {
  var o13;
  let t18 = (o13 = this.get(e4)) != null ? o13 : { doc: e4, count: 0, d: o4(), meta: /* @__PURE__ */ new Set() };
  return t18.count++, t18.meta.add(n7), this.set(e4, t18), this;
}, POP(e4, n7) {
  let t18 = this.get(e4);
  return t18 && (t18.count--, t18.meta.delete(n7)), this;
}, SCROLL_PREVENT({ doc: e4, d: n7, meta: t18 }) {
  let o13 = { doc: e4, d: n7, meta: m7(t18) }, c16 = [d10(), c8(), l8()];
  c16.forEach(({ before: r9 }) => r9 == null ? void 0 : r9(o13)), c16.forEach(({ after: r9 }) => r9 == null ? void 0 : r9(o13));
}, SCROLL_ALLOW({ d: e4 }) {
  e4.dispose();
}, TEARDOWN({ doc: e4 }) {
  this.delete(e4);
} });
a6.subscribe(() => {
  let e4 = a6.getSnapshot(), n7 = /* @__PURE__ */ new Map();
  for (let [t18] of e4) n7.set(t18, t18.documentElement.style.overflow);
  for (let t18 of e4.values()) {
    let o13 = n7.get(t18.doc) === "hidden", c16 = t18.count !== 0;
    (c16 && !o13 || !c16 && o13) && a6.dispatch(t18.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t18), t18.count === 0 && a6.dispatch("TEARDOWN", t18);
  }
});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function p6(e4, r9, n7) {
  let f14 = S5(a6), o13 = e4 ? f14.get(e4) : void 0, i8 = o13 ? o13.count > 0 : false;
  return l(() => {
    if (!(!e4 || !r9)) return a6.dispatch("PUSH", e4, n7), () => a6.dispatch("POP", e4, n7);
  }, [r9, e4]), i8;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-inert.js
var u9 = /* @__PURE__ */ new Map();
var t16 = /* @__PURE__ */ new Map();
function b2(r9, l13 = true) {
  l(() => {
    var o13;
    if (!l13) return;
    let e4 = typeof r9 == "function" ? r9() : r9.current;
    if (!e4) return;
    function a11() {
      var d16;
      if (!e4) return;
      let i8 = (d16 = t16.get(e4)) != null ? d16 : 1;
      if (i8 === 1 ? t16.delete(e4) : t16.set(e4, i8 - 1), i8 !== 1) return;
      let n7 = u9.get(e4);
      n7 && (n7["aria-hidden"] === null ? e4.removeAttribute("aria-hidden") : e4.setAttribute("aria-hidden", n7["aria-hidden"]), e4.inert = n7.inert, u9.delete(e4));
    }
    let f14 = (o13 = t16.get(e4)) != null ? o13 : 0;
    return t16.set(e4, f14 + 1), f14 !== 0 || (u9.set(e4, { "aria-hidden": e4.getAttribute("aria-hidden"), inert: e4.inert }), e4.setAttribute("aria-hidden", "true"), e4.inert = true), a11;
  }, [r9, l13]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-root-containers.js
var import_react76 = __toESM(require_react(), 1);
function N4({ defaultContainers: o13 = [], portals: r9, mainTreeNodeRef: u13 } = {}) {
  var f14;
  let t18 = (0, import_react76.useRef)((f14 = u13 == null ? void 0 : u13.current) != null ? f14 : null), l13 = n2(t18), c16 = o2(() => {
    var i8, s17, a11;
    let n7 = [];
    for (let e4 of o13) e4 !== null && (e4 instanceof HTMLElement ? n7.push(e4) : "current" in e4 && e4.current instanceof HTMLElement && n7.push(e4.current));
    if (r9 != null && r9.current) for (let e4 of r9.current) n7.push(e4);
    for (let e4 of (i8 = l13 == null ? void 0 : l13.querySelectorAll("html > *, body > *")) != null ? i8 : []) e4 !== document.body && e4 !== document.head && e4 instanceof HTMLElement && e4.id !== "headlessui-portal-root" && (e4.contains(t18.current) || e4.contains((a11 = (s17 = t18.current) == null ? void 0 : s17.getRootNode()) == null ? void 0 : a11.host) || n7.some((L2) => e4.contains(L2)) || n7.push(e4));
    return n7;
  });
  return { resolveContainers: c16, contains: o2((n7) => c16().some((i8) => i8.contains(n7))), mainTreeNodeRef: t18, MainTreeNode: (0, import_react76.useMemo)(() => function() {
    return u13 != null ? null : import_react76.default.createElement(u4, { features: s8.Hidden, ref: t18 });
  }, [t18, u13]) };
}
function y5() {
  let o13 = (0, import_react76.useRef)(null);
  return { mainTreeNodeRef: o13, MainTreeNode: (0, import_react76.useMemo)(() => function() {
    return import_react76.default.createElement(u4, { features: s8.Hidden, ref: o13 });
  }, [o13]) };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/stack-context.js
var import_react77 = __toESM(require_react(), 1);
var a7 = (0, import_react77.createContext)(() => {
});
a7.displayName = "StackContext";
var s13 = ((e4) => (e4[e4.Add = 0] = "Add", e4[e4.Remove = 1] = "Remove", e4))(s13 || {});
function x2() {
  return (0, import_react77.useContext)(a7);
}
function b3({ children: i8, onUpdate: r9, type: e4, element: n7, enabled: u13 }) {
  let l13 = x2(), o13 = o2((...t18) => {
    r9 == null || r9(...t18), l13(...t18);
  });
  return l(() => {
    let t18 = u13 === void 0 || u13 === true;
    return t18 && o13(0, e4, n7), () => {
      t18 && o13(1, e4, n7);
    };
  }, [o13, e4, n7, u13]), import_react77.default.createElement(a7.Provider, { value: o13 }, i8);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/description/description.js
var import_react78 = __toESM(require_react(), 1);
var d13 = (0, import_react78.createContext)(null);
function f10() {
  let r9 = (0, import_react78.useContext)(d13);
  if (r9 === null) {
    let t18 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t18, f10), t18;
  }
  return r9;
}
function w3() {
  let [r9, t18] = (0, import_react78.useState)([]);
  return [r9.length > 0 ? r9.join(" ") : void 0, (0, import_react78.useMemo)(() => function(e4) {
    let i8 = o2((s17) => (t18((o13) => [...o13, s17]), () => t18((o13) => {
      let p7 = o13.slice(), c16 = p7.indexOf(s17);
      return c16 !== -1 && p7.splice(c16, 1), p7;
    }))), n7 = (0, import_react78.useMemo)(() => ({ register: i8, slot: e4.slot, name: e4.name, props: e4.props }), [i8, e4.slot, e4.name, e4.props]);
    return import_react78.default.createElement(d13.Provider, { value: n7 }, e4.children);
  }, [t18])];
}
var I5 = "p";
function S6(r9, t18) {
  let a11 = I(), { id: e4 = `headlessui-description-${a11}`, ...i8 } = r9, n7 = f10(), s17 = y3(t18);
  l(() => n7.register(e4), [e4, n7.register]);
  let o13 = { ref: s17, ...n7.props, id: e4 };
  return C({ ourProps: o13, theirProps: i8, slot: n7.slot || {}, defaultTag: I5, name: n7.name || "Description" });
}
var h4 = U(S6);
var G = Object.assign(h4, {});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var Me = ((r9) => (r9[r9.Open = 0] = "Open", r9[r9.Closed = 1] = "Closed", r9))(Me || {});
var we = ((e4) => (e4[e4.SetTitleId = 0] = "SetTitleId", e4))(we || {});
var He = { [0](o13, e4) {
  return o13.titleId === e4.id ? o13 : { ...o13, titleId: e4.id };
} };
var I6 = (0, import_react79.createContext)(null);
I6.displayName = "DialogContext";
function b4(o13) {
  let e4 = (0, import_react79.useContext)(I6);
  if (e4 === null) {
    let r9 = new Error(`<${o13} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r9, b4), r9;
  }
  return e4;
}
function Be(o13, e4, r9 = () => [document.body]) {
  p6(o13, e4, (i8) => {
    var n7;
    return { containers: [...(n7 = i8.containers) != null ? n7 : [], r9] };
  });
}
function Ge(o13, e4) {
  return u(e4.type, He, o13, e4);
}
var Ne = "div";
var Ue = O2.RenderStrategy | O2.Static;
function We(o13, e4) {
  let r9 = I(), { id: i8 = `headlessui-dialog-${r9}`, open: n7, onClose: l13, initialFocus: s17, role: a11 = "dialog", __demoMode: T7 = false, ...m13 } = o13, [M7, f14] = (0, import_react79.useState)(0), U7 = (0, import_react79.useRef)(false);
  a11 = function() {
    return a11 === "dialog" || a11 === "alertdialog" ? a11 : (U7.current || (U7.current = true, console.warn(`Invalid role [${a11}] passed to <Dialog />. Only \`dialog\` and and \`alertdialog\` are supported. Using \`dialog\` instead.`)), "dialog");
  }();
  let E8 = u5();
  n7 === void 0 && E8 !== null && (n7 = (E8 & d5.Open) === d5.Open);
  let D7 = (0, import_react79.useRef)(null), ee8 = y3(D7, e4), g5 = n2(D7), W = o13.hasOwnProperty("open") || E8 !== null, $6 = o13.hasOwnProperty("onClose");
  if (!W && !$6) throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!W) throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!$6) throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof n7 != "boolean") throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${n7}`);
  if (typeof l13 != "function") throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${l13}`);
  let p7 = n7 ? 0 : 1, [h9, te5] = (0, import_react79.useReducer)(Ge, { titleId: null, descriptionId: null, panelRef: (0, import_react79.createRef)() }), P5 = o2(() => l13(false)), Y3 = o2((t18) => te5({ type: 0, id: t18 })), S10 = l2() ? T7 ? false : p7 === 0 : false, x4 = M7 > 1, j5 = (0, import_react79.useContext)(I6) !== null, [oe5, re5] = ee2(), ne5 = { get current() {
    var t18;
    return (t18 = h9.panelRef.current) != null ? t18 : D7.current;
  } }, { resolveContainers: w6, mainTreeNodeRef: L2, MainTreeNode: le3 } = N4({ portals: oe5, defaultContainers: [ne5] }), ae3 = x4 ? "parent" : "leaf", J6 = E8 !== null ? (E8 & d5.Closing) === d5.Closing : false, ie5 = /* @__PURE__ */ (() => j5 || J6 ? false : S10)(), se4 = (0, import_react79.useCallback)(() => {
    var t18, c16;
    return (c16 = Array.from((t18 = g5 == null ? void 0 : g5.querySelectorAll("body > *")) != null ? t18 : []).find((d16) => d16.id === "headlessui-portal-root" ? false : d16.contains(L2.current) && d16 instanceof HTMLElement)) != null ? c16 : null;
  }, [L2]);
  b2(se4, ie5);
  let pe2 = /* @__PURE__ */ (() => x4 ? true : S10)(), de6 = (0, import_react79.useCallback)(() => {
    var t18, c16;
    return (c16 = Array.from((t18 = g5 == null ? void 0 : g5.querySelectorAll("[data-headlessui-portal]")) != null ? t18 : []).find((d16) => d16.contains(L2.current) && d16 instanceof HTMLElement)) != null ? c16 : null;
  }, [L2]);
  b2(de6, pe2);
  let ue7 = /* @__PURE__ */ (() => !(!S10 || x4))();
  y2(w6, (t18) => {
    t18.preventDefault(), P5();
  }, ue7);
  let fe4 = /* @__PURE__ */ (() => !(x4 || p7 !== 0))();
  E3(g5 == null ? void 0 : g5.defaultView, "keydown", (t18) => {
    fe4 && (t18.defaultPrevented || t18.key === o11.Escape && (t18.preventDefault(), t18.stopPropagation(), P5()));
  });
  let ge5 = /* @__PURE__ */ (() => !(J6 || p7 !== 0 || j5))();
  Be(g5, ge5, w6), (0, import_react79.useEffect)(() => {
    if (p7 !== 0 || !D7.current) return;
    let t18 = new ResizeObserver((c16) => {
      for (let d16 of c16) {
        let F10 = d16.target.getBoundingClientRect();
        F10.x === 0 && F10.y === 0 && F10.width === 0 && F10.height === 0 && P5();
      }
    });
    return t18.observe(D7.current), () => t18.disconnect();
  }, [p7, D7, P5]);
  let [Te3, ce4] = w3(), De4 = (0, import_react79.useMemo)(() => [{ dialogState: p7, close: P5, setTitleId: Y3 }, h9], [p7, h9, P5, Y3]), X5 = (0, import_react79.useMemo)(() => ({ open: p7 === 0 }), [p7]), me4 = { ref: ee8, id: i8, role: a11, "aria-modal": p7 === 0 ? true : void 0, "aria-labelledby": h9.titleId, "aria-describedby": Te3 };
  return import_react79.default.createElement(b3, { type: "Dialog", enabled: p7 === 0, element: D7, onUpdate: o2((t18, c16) => {
    c16 === "Dialog" && u(t18, { [s13.Add]: () => f14((d16) => d16 + 1), [s13.Remove]: () => f14((d16) => d16 - 1) });
  }) }, import_react79.default.createElement(l6, { force: true }, import_react79.default.createElement(te, null, import_react79.default.createElement(I6.Provider, { value: De4 }, import_react79.default.createElement(te.Group, { target: D7 }, import_react79.default.createElement(l6, { force: false }, import_react79.default.createElement(ce4, { slot: X5, name: "Dialog.Description" }, import_react79.default.createElement(de2, { initialFocus: s17, containers: w6, features: S10 ? u(ae3, { parent: de2.features.RestoreFocus, leaf: de2.features.All & ~de2.features.FocusLock }) : de2.features.None }, import_react79.default.createElement(re5, null, C({ ourProps: me4, theirProps: m13, slot: X5, defaultTag: Ne, features: Ue, visible: p7 === 0, name: "Dialog" }))))))))), import_react79.default.createElement(le3, null));
}
var $e2 = "div";
function Ye2(o13, e4) {
  let r9 = I(), { id: i8 = `headlessui-dialog-overlay-${r9}`, ...n7 } = o13, [{ dialogState: l13, close: s17 }] = b4("Dialog.Overlay"), a11 = y3(e4), T7 = o2((f14) => {
    if (f14.target === f14.currentTarget) {
      if (r2(f14.currentTarget)) return f14.preventDefault();
      f14.preventDefault(), f14.stopPropagation(), s17();
    }
  }), m13 = (0, import_react79.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return C({ ourProps: { ref: a11, id: i8, "aria-hidden": true, onClick: T7 }, theirProps: n7, slot: m13, defaultTag: $e2, name: "Dialog.Overlay" });
}
var je = "div";
function Je(o13, e4) {
  let r9 = I(), { id: i8 = `headlessui-dialog-backdrop-${r9}`, ...n7 } = o13, [{ dialogState: l13 }, s17] = b4("Dialog.Backdrop"), a11 = y3(e4);
  (0, import_react79.useEffect)(() => {
    if (s17.panelRef.current === null) throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [s17.panelRef]);
  let T7 = (0, import_react79.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return import_react79.default.createElement(l6, { force: true }, import_react79.default.createElement(te, null, C({ ourProps: { ref: a11, id: i8, "aria-hidden": true }, theirProps: n7, slot: T7, defaultTag: je, name: "Dialog.Backdrop" })));
}
var Xe = "div";
function Ke(o13, e4) {
  let r9 = I(), { id: i8 = `headlessui-dialog-panel-${r9}`, ...n7 } = o13, [{ dialogState: l13 }, s17] = b4("Dialog.Panel"), a11 = y3(e4, s17.panelRef), T7 = (0, import_react79.useMemo)(() => ({ open: l13 === 0 }), [l13]), m13 = o2((f14) => {
    f14.stopPropagation();
  });
  return C({ ourProps: { ref: a11, id: i8, onClick: m13 }, theirProps: n7, slot: T7, defaultTag: Xe, name: "Dialog.Panel" });
}
var Ve2 = "h2";
function qe2(o13, e4) {
  let r9 = I(), { id: i8 = `headlessui-dialog-title-${r9}`, ...n7 } = o13, [{ dialogState: l13, setTitleId: s17 }] = b4("Dialog.Title"), a11 = y3(e4);
  (0, import_react79.useEffect)(() => (s17(i8), () => s17(null)), [i8, s17]);
  let T7 = (0, import_react79.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return C({ ourProps: { ref: a11, id: i8 }, theirProps: n7, slot: T7, defaultTag: Ve2, name: "Dialog.Title" });
}
var ze2 = U(We);
var Qe2 = U(Je);
var Ze2 = U(Ke);
var et2 = U(Ye2);
var tt2 = U(qe2);
var _t = Object.assign(ze2, { Backdrop: Qe2, Panel: Ze2, Overlay: et2, Title: tt2, Description: G });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var import_react81 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/start-transition.js
var import_react80 = __toESM(require_react(), 1);
var t17;
var a8 = (t17 = import_react80.default.startTransition) != null ? t17 : function(i8) {
  i8();
};

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var Q2 = ((o13) => (o13[o13.Open = 0] = "Open", o13[o13.Closed = 1] = "Closed", o13))(Q2 || {});
var V2 = ((t18) => (t18[t18.ToggleDisclosure = 0] = "ToggleDisclosure", t18[t18.CloseDisclosure = 1] = "CloseDisclosure", t18[t18.SetButtonId = 2] = "SetButtonId", t18[t18.SetPanelId = 3] = "SetPanelId", t18[t18.LinkPanel = 4] = "LinkPanel", t18[t18.UnlinkPanel = 5] = "UnlinkPanel", t18))(V2 || {});
var Y2 = { [0]: (e4) => ({ ...e4, disclosureState: u(e4.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e4) => e4.disclosureState === 1 ? e4 : { ...e4, disclosureState: 1 }, [4](e4) {
  return e4.linkedPanel === true ? e4 : { ...e4, linkedPanel: true };
}, [5](e4) {
  return e4.linkedPanel === false ? e4 : { ...e4, linkedPanel: false };
}, [2](e4, n7) {
  return e4.buttonId === n7.buttonId ? e4 : { ...e4, buttonId: n7.buttonId };
}, [3](e4, n7) {
  return e4.panelId === n7.panelId ? e4 : { ...e4, panelId: n7.panelId };
} };
var M3 = (0, import_react81.createContext)(null);
M3.displayName = "DisclosureContext";
function _4(e4) {
  let n7 = (0, import_react81.useContext)(M3);
  if (n7 === null) {
    let o13 = new Error(`<${e4} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, _4), o13;
  }
  return n7;
}
var v2 = (0, import_react81.createContext)(null);
v2.displayName = "DisclosureAPIContext";
function K2(e4) {
  let n7 = (0, import_react81.useContext)(v2);
  if (n7 === null) {
    let o13 = new Error(`<${e4} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o13, K2), o13;
  }
  return n7;
}
var F5 = (0, import_react81.createContext)(null);
F5.displayName = "DisclosurePanelContext";
function Z2() {
  return (0, import_react81.useContext)(F5);
}
function ee3(e4, n7) {
  return u(n7.type, Y2, e4, n7);
}
var te2 = import_react81.Fragment;
function ne(e4, n7) {
  let { defaultOpen: o13 = false, ...i8 } = e4, f14 = (0, import_react81.useRef)(null), l13 = y3(n7, T4((u13) => {
    f14.current = u13;
  }, e4.as === void 0 || e4.as === import_react81.Fragment)), t18 = (0, import_react81.useRef)(null), d16 = (0, import_react81.useRef)(null), s17 = (0, import_react81.useReducer)(ee3, { disclosureState: o13 ? 0 : 1, linkedPanel: false, buttonRef: d16, panelRef: t18, buttonId: null, panelId: null }), [{ disclosureState: c16, buttonId: a11 }, D7] = s17, p7 = o2((u13) => {
    D7({ type: 1 });
    let y7 = o7(f14);
    if (!y7 || !a11) return;
    let r9 = (() => u13 ? u13 instanceof HTMLElement ? u13 : u13.current instanceof HTMLElement ? u13.current : y7.getElementById(a11) : y7.getElementById(a11))();
    r9 == null || r9.focus();
  }), P5 = (0, import_react81.useMemo)(() => ({ close: p7 }), [p7]), T7 = (0, import_react81.useMemo)(() => ({ open: c16 === 0, close: p7 }), [c16, p7]), C7 = { ref: l13 };
  return import_react81.default.createElement(M3.Provider, { value: s17 }, import_react81.default.createElement(v2.Provider, { value: P5 }, import_react81.default.createElement(s9, { value: u(c16, { [0]: d5.Open, [1]: d5.Closed }) }, C({ ourProps: C7, theirProps: i8, slot: T7, defaultTag: te2, name: "Disclosure" }))));
}
var le = "button";
function oe(e4, n7) {
  let o13 = I(), { id: i8 = `headlessui-disclosure-button-${o13}`, ...f14 } = e4, [l13, t18] = _4("Disclosure.Button"), d16 = Z2(), s17 = d16 === null ? false : d16 === l13.panelId, c16 = (0, import_react81.useRef)(null), a11 = y3(c16, n7, s17 ? null : l13.buttonRef), D7 = I3();
  (0, import_react81.useEffect)(() => {
    if (!s17) return t18({ type: 2, buttonId: i8 }), () => {
      t18({ type: 2, buttonId: null });
    };
  }, [i8, t18, s17]);
  let p7 = o2((r9) => {
    var m13;
    if (s17) {
      if (l13.disclosureState === 1) return;
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 }), (m13 = l13.buttonRef.current) == null || m13.focus();
          break;
      }
    } else switch (r9.key) {
      case o11.Space:
      case o11.Enter:
        r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 });
        break;
    }
  }), P5 = o2((r9) => {
    switch (r9.key) {
      case o11.Space:
        r9.preventDefault();
        break;
    }
  }), T7 = o2((r9) => {
    var m13;
    r2(r9.currentTarget) || e4.disabled || (s17 ? (t18({ type: 0 }), (m13 = l13.buttonRef.current) == null || m13.focus()) : t18({ type: 0 }));
  }), C7 = (0, import_react81.useMemo)(() => ({ open: l13.disclosureState === 0 }), [l13]), u13 = T3(e4, c16), y7 = s17 ? { ref: a11, type: u13, onKeyDown: p7, onClick: T7 } : { ref: a11, id: i8, type: u13, "aria-expanded": l13.disclosureState === 0, "aria-controls": l13.linkedPanel ? l13.panelId : void 0, onKeyDown: p7, onKeyUp: P5, onClick: T7 };
  return C({ mergeRefs: D7, ourProps: y7, theirProps: f14, slot: C7, defaultTag: le, name: "Disclosure.Button" });
}
var re = "div";
var se = O2.RenderStrategy | O2.Static;
function ue2(e4, n7) {
  let o13 = I(), { id: i8 = `headlessui-disclosure-panel-${o13}`, ...f14 } = e4, [l13, t18] = _4("Disclosure.Panel"), { close: d16 } = K2("Disclosure.Panel"), s17 = I3(), c16 = y3(n7, l13.panelRef, (T7) => {
    a8(() => t18({ type: T7 ? 4 : 5 }));
  });
  (0, import_react81.useEffect)(() => (t18({ type: 3, panelId: i8 }), () => {
    t18({ type: 3, panelId: null });
  }), [i8, t18]);
  let a11 = u5(), D7 = (() => a11 !== null ? (a11 & d5.Open) === d5.Open : l13.disclosureState === 0)(), p7 = (0, import_react81.useMemo)(() => ({ open: l13.disclosureState === 0, close: d16 }), [l13, d16]), P5 = { ref: c16, id: i8 };
  return import_react81.default.createElement(F5.Provider, { value: l13.panelId }, C({ mergeRefs: s17, ourProps: P5, theirProps: f14, slot: p7, defaultTag: re, features: se, visible: D7, name: "Disclosure.Panel" }));
}
var ie2 = U(ne);
var ae = U(oe);
var pe = U(ue2);
var Ae2 = Object.assign(ie2, { Button: ae, Panel: pe });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var import_react83 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-text-value.js
var import_react82 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/get-text-value.js
var a9 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o12(e4) {
  var r9, i8;
  let n7 = (r9 = e4.innerText) != null ? r9 : "", t18 = e4.cloneNode(true);
  if (!(t18 instanceof HTMLElement)) return n7;
  let u13 = false;
  for (let f14 of t18.querySelectorAll('[hidden],[aria-hidden],[role="img"]')) f14.remove(), u13 = true;
  let l13 = u13 ? (i8 = t18.innerText) != null ? i8 : "" : n7;
  return a9.test(l13) && (l13 = l13.replace(a9, "")), l13;
}
function g3(e4) {
  let n7 = e4.getAttribute("aria-label");
  if (typeof n7 == "string") return n7.trim();
  let t18 = e4.getAttribute("aria-labelledby");
  if (t18) {
    let u13 = t18.split(" ").map((l13) => {
      let r9 = document.getElementById(l13);
      if (r9) {
        let i8 = r9.getAttribute("aria-label");
        return typeof i8 == "string" ? i8.trim() : o12(r9).trim();
      }
      return null;
    }).filter(Boolean);
    if (u13.length > 0) return u13.join(", ");
  }
  return o12(e4).trim();
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-text-value.js
function s14(c16) {
  let t18 = (0, import_react82.useRef)(""), r9 = (0, import_react82.useRef)("");
  return o2(() => {
    let e4 = c16.current;
    if (!e4) return "";
    let u13 = e4.innerText;
    if (t18.current === u13) return r9.current;
    let n7 = g3(e4).trim().toLowerCase();
    return t18.current = u13, r9.current = n7, n7;
  });
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var Be2 = ((n7) => (n7[n7.Open = 0] = "Open", n7[n7.Closed = 1] = "Closed", n7))(Be2 || {});
var He2 = ((n7) => (n7[n7.Single = 0] = "Single", n7[n7.Multi = 1] = "Multi", n7))(He2 || {});
var Ge2 = ((n7) => (n7[n7.Pointer = 0] = "Pointer", n7[n7.Other = 1] = "Other", n7))(Ge2 || {});
var Ne2 = ((i8) => (i8[i8.OpenListbox = 0] = "OpenListbox", i8[i8.CloseListbox = 1] = "CloseListbox", i8[i8.GoToOption = 2] = "GoToOption", i8[i8.Search = 3] = "Search", i8[i8.ClearSearch = 4] = "ClearSearch", i8[i8.RegisterOption = 5] = "RegisterOption", i8[i8.UnregisterOption = 6] = "UnregisterOption", i8[i8.RegisterLabel = 7] = "RegisterLabel", i8))(Ne2 || {});
function z2(e4, a11 = (n7) => n7) {
  let n7 = e4.activeOptionIndex !== null ? e4.options[e4.activeOptionIndex] : null, r9 = I2(a11(e4.options.slice()), (t18) => t18.dataRef.current.domRef.current), l13 = n7 ? r9.indexOf(n7) : null;
  return l13 === -1 && (l13 = null), { options: r9, activeOptionIndex: l13 };
}
var je2 = { [1](e4) {
  return e4.dataRef.current.disabled || e4.listboxState === 1 ? e4 : { ...e4, activeOptionIndex: null, listboxState: 1 };
}, [0](e4) {
  if (e4.dataRef.current.disabled || e4.listboxState === 0) return e4;
  let a11 = e4.activeOptionIndex, { isSelected: n7 } = e4.dataRef.current, r9 = e4.options.findIndex((l13) => n7(l13.dataRef.current.value));
  return r9 !== -1 && (a11 = r9), { ...e4, listboxState: 0, activeOptionIndex: a11 };
}, [2](e4, a11) {
  var l13;
  if (e4.dataRef.current.disabled || e4.listboxState === 1) return e4;
  let n7 = z2(e4), r9 = f5(a11, { resolveItems: () => n7.options, resolveActiveIndex: () => n7.activeOptionIndex, resolveId: (t18) => t18.id, resolveDisabled: (t18) => t18.dataRef.current.disabled });
  return { ...e4, ...n7, searchQuery: "", activeOptionIndex: r9, activationTrigger: (l13 = a11.trigger) != null ? l13 : 1 };
}, [3]: (e4, a11) => {
  if (e4.dataRef.current.disabled || e4.listboxState === 1) return e4;
  let r9 = e4.searchQuery !== "" ? 0 : 1, l13 = e4.searchQuery + a11.value.toLowerCase(), p7 = (e4.activeOptionIndex !== null ? e4.options.slice(e4.activeOptionIndex + r9).concat(e4.options.slice(0, e4.activeOptionIndex + r9)) : e4.options).find((i8) => {
    var b8;
    return !i8.dataRef.current.disabled && ((b8 = i8.dataRef.current.textValue) == null ? void 0 : b8.startsWith(l13));
  }), u13 = p7 ? e4.options.indexOf(p7) : -1;
  return u13 === -1 || u13 === e4.activeOptionIndex ? { ...e4, searchQuery: l13 } : { ...e4, searchQuery: l13, activeOptionIndex: u13, activationTrigger: 1 };
}, [4](e4) {
  return e4.dataRef.current.disabled || e4.listboxState === 1 || e4.searchQuery === "" ? e4 : { ...e4, searchQuery: "" };
}, [5]: (e4, a11) => {
  let n7 = { id: a11.id, dataRef: a11.dataRef }, r9 = z2(e4, (l13) => [...l13, n7]);
  return e4.activeOptionIndex === null && e4.dataRef.current.isSelected(a11.dataRef.current.value) && (r9.activeOptionIndex = r9.options.indexOf(n7)), { ...e4, ...r9 };
}, [6]: (e4, a11) => {
  let n7 = z2(e4, (r9) => {
    let l13 = r9.findIndex((t18) => t18.id === a11.id);
    return l13 !== -1 && r9.splice(l13, 1), r9;
  });
  return { ...e4, ...n7, activationTrigger: 1 };
}, [7]: (e4, a11) => ({ ...e4, labelId: a11.id }) };
var J = (0, import_react83.createContext)(null);
J.displayName = "ListboxActionsContext";
function k2(e4) {
  let a11 = (0, import_react83.useContext)(J);
  if (a11 === null) {
    let n7 = new Error(`<${e4} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, k2), n7;
  }
  return a11;
}
var q2 = (0, import_react83.createContext)(null);
q2.displayName = "ListboxDataContext";
function w4(e4) {
  let a11 = (0, import_react83.useContext)(q2);
  if (a11 === null) {
    let n7 = new Error(`<${e4} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, w4), n7;
  }
  return a11;
}
function Ve3(e4, a11) {
  return u(a11.type, je2, e4, a11);
}
var Ke2 = import_react83.Fragment;
function Qe3(e4, a11) {
  let { value: n7, defaultValue: r9, form: l13, name: t18, onChange: p7, by: u13 = (s17, c16) => s17 === c16, disabled: i8 = false, horizontal: b8 = false, multiple: R4 = false, ...m13 } = e4;
  const P5 = b8 ? "horizontal" : "vertical";
  let S10 = y3(a11), [g5 = R4 ? [] : void 0, x4] = T(n7, p7, r9), [T7, o13] = (0, import_react83.useReducer)(Ve3, { dataRef: (0, import_react83.createRef)(), listboxState: 1, options: [], searchQuery: "", labelId: null, activeOptionIndex: null, activationTrigger: 1 }), L2 = (0, import_react83.useRef)({ static: false, hold: false }), U7 = (0, import_react83.useRef)(null), B4 = (0, import_react83.useRef)(null), W = (0, import_react83.useRef)(null), I11 = o2(typeof u13 == "string" ? (s17, c16) => {
    let O4 = u13;
    return (s17 == null ? void 0 : s17[O4]) === (c16 == null ? void 0 : c16[O4]);
  } : u13), A3 = (0, import_react83.useCallback)((s17) => u(d16.mode, { [1]: () => g5.some((c16) => I11(c16, s17)), [0]: () => I11(g5, s17) }), [g5]), d16 = (0, import_react83.useMemo)(() => ({ ...T7, value: g5, disabled: i8, mode: R4 ? 1 : 0, orientation: P5, compare: I11, isSelected: A3, optionsPropsRef: L2, labelRef: U7, buttonRef: B4, optionsRef: W }), [g5, i8, R4, T7]);
  l(() => {
    T7.dataRef.current = d16;
  }, [d16]), y2([d16.buttonRef, d16.optionsRef], (s17, c16) => {
    var O4;
    o13({ type: 1 }), h(c16, T2.Loose) || (s17.preventDefault(), (O4 = d16.buttonRef.current) == null || O4.focus());
  }, d16.listboxState === 0);
  let H6 = (0, import_react83.useMemo)(() => ({ open: d16.listboxState === 0, disabled: i8, value: g5 }), [d16, i8, g5]), ie5 = o2((s17) => {
    let c16 = d16.options.find((O4) => O4.id === s17);
    c16 && X5(c16.dataRef.current.value);
  }), re5 = o2(() => {
    if (d16.activeOptionIndex !== null) {
      let { dataRef: s17, id: c16 } = d16.options[d16.activeOptionIndex];
      X5(s17.current.value), o13({ type: 2, focus: c4.Specific, id: c16 });
    }
  }), ae3 = o2(() => o13({ type: 0 })), le3 = o2(() => o13({ type: 1 })), se4 = o2((s17, c16, O4) => s17 === c4.Specific ? o13({ type: 2, focus: c4.Specific, id: c16, trigger: O4 }) : o13({ type: 2, focus: s17, trigger: O4 })), pe2 = o2((s17, c16) => (o13({ type: 5, id: s17, dataRef: c16 }), () => o13({ type: 6, id: s17 }))), ue7 = o2((s17) => (o13({ type: 7, id: s17 }), () => o13({ type: 7, id: null }))), X5 = o2((s17) => u(d16.mode, { [0]() {
    return x4 == null ? void 0 : x4(s17);
  }, [1]() {
    let c16 = d16.value.slice(), O4 = c16.findIndex((C7) => I11(C7, s17));
    return O4 === -1 ? c16.push(s17) : c16.splice(O4, 1), x4 == null ? void 0 : x4(c16);
  } })), de6 = o2((s17) => o13({ type: 3, value: s17 })), ce4 = o2(() => o13({ type: 4 })), fe4 = (0, import_react83.useMemo)(() => ({ onChange: X5, registerOption: pe2, registerLabel: ue7, goToOption: se4, closeListbox: le3, openListbox: ae3, selectActiveOption: re5, selectOption: ie5, search: de6, clearSearch: ce4 }), []), Te3 = { ref: S10 }, G4 = (0, import_react83.useRef)(null), be4 = p();
  return (0, import_react83.useEffect)(() => {
    G4.current && r9 !== void 0 && be4.addEventListener(G4.current, "reset", () => {
      x4 == null || x4(r9);
    });
  }, [G4, x4]), import_react83.default.createElement(J.Provider, { value: fe4 }, import_react83.default.createElement(q2.Provider, { value: d16 }, import_react83.default.createElement(s9, { value: u(d16.listboxState, { [0]: d5.Open, [1]: d5.Closed }) }, t18 != null && g5 != null && e({ [t18]: g5 }).map(([s17, c16], O4) => import_react83.default.createElement(u4, { features: s8.Hidden, ref: O4 === 0 ? (C7) => {
    var Y3;
    G4.current = (Y3 = C7 == null ? void 0 : C7.closest("form")) != null ? Y3 : null;
  } : void 0, ...x({ key: s17, as: "input", type: "hidden", hidden: true, readOnly: true, form: l13, disabled: i8, name: s17, value: c16 }) })), C({ ourProps: Te3, theirProps: m13, slot: H6, defaultTag: Ke2, name: "Listbox" }))));
}
var We2 = "button";
function Xe2(e4, a11) {
  var x4;
  let n7 = I(), { id: r9 = `headlessui-listbox-button-${n7}`, ...l13 } = e4, t18 = w4("Listbox.Button"), p7 = k2("Listbox.Button"), u13 = y3(t18.buttonRef, a11), i8 = p(), b8 = o2((T7) => {
    switch (T7.key) {
      case o11.Space:
      case o11.Enter:
      case o11.ArrowDown:
        T7.preventDefault(), p7.openListbox(), i8.nextFrame(() => {
          t18.value || p7.goToOption(c4.First);
        });
        break;
      case o11.ArrowUp:
        T7.preventDefault(), p7.openListbox(), i8.nextFrame(() => {
          t18.value || p7.goToOption(c4.Last);
        });
        break;
    }
  }), R4 = o2((T7) => {
    switch (T7.key) {
      case o11.Space:
        T7.preventDefault();
        break;
    }
  }), m13 = o2((T7) => {
    if (r2(T7.currentTarget)) return T7.preventDefault();
    t18.listboxState === 0 ? (p7.closeListbox(), i8.nextFrame(() => {
      var o13;
      return (o13 = t18.buttonRef.current) == null ? void 0 : o13.focus({ preventScroll: true });
    })) : (T7.preventDefault(), p7.openListbox());
  }), P5 = i2(() => {
    if (t18.labelId) return [t18.labelId, r9].join(" ");
  }, [t18.labelId, r9]), S10 = (0, import_react83.useMemo)(() => ({ open: t18.listboxState === 0, disabled: t18.disabled, value: t18.value }), [t18]), g5 = { ref: u13, id: r9, type: T3(e4, t18.buttonRef), "aria-haspopup": "listbox", "aria-controls": (x4 = t18.optionsRef.current) == null ? void 0 : x4.id, "aria-expanded": t18.listboxState === 0, "aria-labelledby": P5, disabled: t18.disabled, onKeyDown: b8, onKeyUp: R4, onClick: m13 };
  return C({ ourProps: g5, theirProps: l13, slot: S10, defaultTag: We2, name: "Listbox.Button" });
}
var $e3 = "label";
function ze3(e4, a11) {
  let n7 = I(), { id: r9 = `headlessui-listbox-label-${n7}`, ...l13 } = e4, t18 = w4("Listbox.Label"), p7 = k2("Listbox.Label"), u13 = y3(t18.labelRef, a11);
  l(() => p7.registerLabel(r9), [r9]);
  let i8 = o2(() => {
    var m13;
    return (m13 = t18.buttonRef.current) == null ? void 0 : m13.focus({ preventScroll: true });
  }), b8 = (0, import_react83.useMemo)(() => ({ open: t18.listboxState === 0, disabled: t18.disabled }), [t18]);
  return C({ ourProps: { ref: u13, id: r9, onClick: i8 }, theirProps: l13, slot: b8, defaultTag: $e3, name: "Listbox.Label" });
}
var Je2 = "ul";
var qe3 = O2.RenderStrategy | O2.Static;
function Ye3(e4, a11) {
  var T7;
  let n7 = I(), { id: r9 = `headlessui-listbox-options-${n7}`, ...l13 } = e4, t18 = w4("Listbox.Options"), p7 = k2("Listbox.Options"), u13 = y3(t18.optionsRef, a11), i8 = p(), b8 = p(), R4 = u5(), m13 = (() => R4 !== null ? (R4 & d5.Open) === d5.Open : t18.listboxState === 0)();
  (0, import_react83.useEffect)(() => {
    var L2;
    let o13 = t18.optionsRef.current;
    o13 && t18.listboxState === 0 && o13 !== ((L2 = o7(o13)) == null ? void 0 : L2.activeElement) && o13.focus({ preventScroll: true });
  }, [t18.listboxState, t18.optionsRef]);
  let P5 = o2((o13) => {
    switch (b8.dispose(), o13.key) {
      case o11.Space:
        if (t18.searchQuery !== "") return o13.preventDefault(), o13.stopPropagation(), p7.search(o13.key);
      case o11.Enter:
        if (o13.preventDefault(), o13.stopPropagation(), t18.activeOptionIndex !== null) {
          let { dataRef: L2 } = t18.options[t18.activeOptionIndex];
          p7.onChange(L2.current.value);
        }
        t18.mode === 0 && (p7.closeListbox(), o4().nextFrame(() => {
          var L2;
          return (L2 = t18.buttonRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
        }));
        break;
      case u(t18.orientation, { vertical: o11.ArrowDown, horizontal: o11.ArrowRight }):
        return o13.preventDefault(), o13.stopPropagation(), p7.goToOption(c4.Next);
      case u(t18.orientation, { vertical: o11.ArrowUp, horizontal: o11.ArrowLeft }):
        return o13.preventDefault(), o13.stopPropagation(), p7.goToOption(c4.Previous);
      case o11.Home:
      case o11.PageUp:
        return o13.preventDefault(), o13.stopPropagation(), p7.goToOption(c4.First);
      case o11.End:
      case o11.PageDown:
        return o13.preventDefault(), o13.stopPropagation(), p7.goToOption(c4.Last);
      case o11.Escape:
        return o13.preventDefault(), o13.stopPropagation(), p7.closeListbox(), i8.nextFrame(() => {
          var L2;
          return (L2 = t18.buttonRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
        });
      case o11.Tab:
        o13.preventDefault(), o13.stopPropagation();
        break;
      default:
        o13.key.length === 1 && (p7.search(o13.key), b8.setTimeout(() => p7.clearSearch(), 350));
        break;
    }
  }), S10 = i2(() => {
    var o13;
    return (o13 = t18.buttonRef.current) == null ? void 0 : o13.id;
  }, [t18.buttonRef.current]), g5 = (0, import_react83.useMemo)(() => ({ open: t18.listboxState === 0 }), [t18]), x4 = { "aria-activedescendant": t18.activeOptionIndex === null || (T7 = t18.options[t18.activeOptionIndex]) == null ? void 0 : T7.id, "aria-multiselectable": t18.mode === 1 ? true : void 0, "aria-labelledby": S10, "aria-orientation": t18.orientation, id: r9, onKeyDown: P5, role: "listbox", tabIndex: 0, ref: u13 };
  return C({ ourProps: x4, theirProps: l13, slot: g5, defaultTag: Je2, features: qe3, visible: m13, name: "Listbox.Options" });
}
var Ze3 = "li";
function et3(e4, a11) {
  let n7 = I(), { id: r9 = `headlessui-listbox-option-${n7}`, disabled: l13 = false, value: t18, ...p7 } = e4, u13 = w4("Listbox.Option"), i8 = k2("Listbox.Option"), b8 = u13.activeOptionIndex !== null ? u13.options[u13.activeOptionIndex].id === r9 : false, R4 = u13.isSelected(t18), m13 = (0, import_react83.useRef)(null), P5 = s14(m13), S10 = s2({ disabled: l13, value: t18, domRef: m13, get textValue() {
    return P5();
  } }), g5 = y3(a11, m13);
  l(() => {
    if (u13.listboxState !== 0 || !b8 || u13.activationTrigger === 0) return;
    let A3 = o4();
    return A3.requestAnimationFrame(() => {
      var d16, H6;
      (H6 = (d16 = m13.current) == null ? void 0 : d16.scrollIntoView) == null || H6.call(d16, { block: "nearest" });
    }), A3.dispose;
  }, [m13, b8, u13.listboxState, u13.activationTrigger, u13.activeOptionIndex]), l(() => i8.registerOption(r9, S10), [S10, r9]);
  let x4 = o2((A3) => {
    if (l13) return A3.preventDefault();
    i8.onChange(t18), u13.mode === 0 && (i8.closeListbox(), o4().nextFrame(() => {
      var d16;
      return (d16 = u13.buttonRef.current) == null ? void 0 : d16.focus({ preventScroll: true });
    }));
  }), T7 = o2(() => {
    if (l13) return i8.goToOption(c4.Nothing);
    i8.goToOption(c4.Specific, r9);
  }), o13 = u3(), L2 = o2((A3) => o13.update(A3)), U7 = o2((A3) => {
    o13.wasMoved(A3) && (l13 || b8 || i8.goToOption(c4.Specific, r9, 0));
  }), B4 = o2((A3) => {
    o13.wasMoved(A3) && (l13 || b8 && i8.goToOption(c4.Nothing));
  }), W = (0, import_react83.useMemo)(() => ({ active: b8, selected: R4, disabled: l13 }), [b8, R4, l13]);
  return C({ ourProps: { id: r9, ref: g5, role: "option", tabIndex: l13 === true ? void 0 : -1, "aria-disabled": l13 === true ? true : void 0, "aria-selected": R4, disabled: void 0, onClick: x4, onFocus: T7, onPointerEnter: L2, onMouseEnter: L2, onPointerMove: U7, onMouseMove: U7, onPointerLeave: B4, onMouseLeave: B4 }, theirProps: p7, slot: W, defaultTag: Ze3, name: "Listbox.Option" });
}
var tt3 = U(Qe3);
var ot2 = U(Xe2);
var nt2 = U(ze3);
var it2 = U(Ye3);
var rt2 = U(et3);
var It = Object.assign(tt3, { Button: ot2, Label: nt2, Options: it2, Option: rt2 });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/menu/menu.js
var import_react84 = __toESM(require_react(), 1);
var me2 = ((r9) => (r9[r9.Open = 0] = "Open", r9[r9.Closed = 1] = "Closed", r9))(me2 || {});
var de3 = ((r9) => (r9[r9.Pointer = 0] = "Pointer", r9[r9.Other = 1] = "Other", r9))(de3 || {});
var fe = ((a11) => (a11[a11.OpenMenu = 0] = "OpenMenu", a11[a11.CloseMenu = 1] = "CloseMenu", a11[a11.GoToItem = 2] = "GoToItem", a11[a11.Search = 3] = "Search", a11[a11.ClearSearch = 4] = "ClearSearch", a11[a11.RegisterItem = 5] = "RegisterItem", a11[a11.UnregisterItem = 6] = "UnregisterItem", a11))(fe || {});
function w5(e4, u13 = (r9) => r9) {
  let r9 = e4.activeItemIndex !== null ? e4.items[e4.activeItemIndex] : null, s17 = I2(u13(e4.items.slice()), (t18) => t18.dataRef.current.domRef.current), i8 = r9 ? s17.indexOf(r9) : null;
  return i8 === -1 && (i8 = null), { items: s17, activeItemIndex: i8 };
}
var Te = { [1](e4) {
  return e4.menuState === 1 ? e4 : { ...e4, activeItemIndex: null, menuState: 1 };
}, [0](e4) {
  return e4.menuState === 0 ? e4 : { ...e4, __demoMode: false, menuState: 0 };
}, [2]: (e4, u13) => {
  var i8;
  let r9 = w5(e4), s17 = f5(u13, { resolveItems: () => r9.items, resolveActiveIndex: () => r9.activeItemIndex, resolveId: (t18) => t18.id, resolveDisabled: (t18) => t18.dataRef.current.disabled });
  return { ...e4, ...r9, searchQuery: "", activeItemIndex: s17, activationTrigger: (i8 = u13.trigger) != null ? i8 : 1 };
}, [3]: (e4, u13) => {
  let s17 = e4.searchQuery !== "" ? 0 : 1, i8 = e4.searchQuery + u13.value.toLowerCase(), o13 = (e4.activeItemIndex !== null ? e4.items.slice(e4.activeItemIndex + s17).concat(e4.items.slice(0, e4.activeItemIndex + s17)) : e4.items).find((l13) => {
    var m13;
    return ((m13 = l13.dataRef.current.textValue) == null ? void 0 : m13.startsWith(i8)) && !l13.dataRef.current.disabled;
  }), a11 = o13 ? e4.items.indexOf(o13) : -1;
  return a11 === -1 || a11 === e4.activeItemIndex ? { ...e4, searchQuery: i8 } : { ...e4, searchQuery: i8, activeItemIndex: a11, activationTrigger: 1 };
}, [4](e4) {
  return e4.searchQuery === "" ? e4 : { ...e4, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e4, u13) => {
  let r9 = w5(e4, (s17) => [...s17, { id: u13.id, dataRef: u13.dataRef }]);
  return { ...e4, ...r9 };
}, [6]: (e4, u13) => {
  let r9 = w5(e4, (s17) => {
    let i8 = s17.findIndex((t18) => t18.id === u13.id);
    return i8 !== -1 && s17.splice(i8, 1), s17;
  });
  return { ...e4, ...r9, activationTrigger: 1 };
} };
var U4 = (0, import_react84.createContext)(null);
U4.displayName = "MenuContext";
function C3(e4) {
  let u13 = (0, import_react84.useContext)(U4);
  if (u13 === null) {
    let r9 = new Error(`<${e4} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r9, C3), r9;
  }
  return u13;
}
function ye3(e4, u13) {
  return u(u13.type, Te, e4, u13);
}
var Ie2 = import_react84.Fragment;
function Me2(e4, u13) {
  let { __demoMode: r9 = false, ...s17 } = e4, i8 = (0, import_react84.useReducer)(ye3, { __demoMode: r9, menuState: r9 ? 0 : 1, buttonRef: (0, import_react84.createRef)(), itemsRef: (0, import_react84.createRef)(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: t18, itemsRef: o13, buttonRef: a11 }, l13] = i8, m13 = y3(u13);
  y2([a11, o13], (g5, R4) => {
    var p7;
    l13({ type: 1 }), h(R4, T2.Loose) || (g5.preventDefault(), (p7 = a11.current) == null || p7.focus());
  }, t18 === 0);
  let I11 = o2(() => {
    l13({ type: 1 });
  }), A3 = (0, import_react84.useMemo)(() => ({ open: t18 === 0, close: I11 }), [t18, I11]), f14 = { ref: m13 };
  return import_react84.default.createElement(U4.Provider, { value: i8 }, import_react84.default.createElement(s9, { value: u(t18, { [0]: d5.Open, [1]: d5.Closed }) }, C({ ourProps: f14, theirProps: s17, slot: A3, defaultTag: Ie2, name: "Menu" })));
}
var ge2 = "button";
function Re(e4, u13) {
  var R4;
  let r9 = I(), { id: s17 = `headlessui-menu-button-${r9}`, ...i8 } = e4, [t18, o13] = C3("Menu.Button"), a11 = y3(t18.buttonRef, u13), l13 = p(), m13 = o2((p7) => {
    switch (p7.key) {
      case o11.Space:
      case o11.Enter:
      case o11.ArrowDown:
        p7.preventDefault(), p7.stopPropagation(), o13({ type: 0 }), l13.nextFrame(() => o13({ type: 2, focus: c4.First }));
        break;
      case o11.ArrowUp:
        p7.preventDefault(), p7.stopPropagation(), o13({ type: 0 }), l13.nextFrame(() => o13({ type: 2, focus: c4.Last }));
        break;
    }
  }), I11 = o2((p7) => {
    switch (p7.key) {
      case o11.Space:
        p7.preventDefault();
        break;
    }
  }), A3 = o2((p7) => {
    if (r2(p7.currentTarget)) return p7.preventDefault();
    e4.disabled || (t18.menuState === 0 ? (o13({ type: 1 }), l13.nextFrame(() => {
      var M7;
      return (M7 = t18.buttonRef.current) == null ? void 0 : M7.focus({ preventScroll: true });
    })) : (p7.preventDefault(), o13({ type: 0 })));
  }), f14 = (0, import_react84.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), g5 = { ref: a11, id: s17, type: T3(e4, t18.buttonRef), "aria-haspopup": "menu", "aria-controls": (R4 = t18.itemsRef.current) == null ? void 0 : R4.id, "aria-expanded": t18.menuState === 0, onKeyDown: m13, onKeyUp: I11, onClick: A3 };
  return C({ ourProps: g5, theirProps: i8, slot: f14, defaultTag: ge2, name: "Menu.Button" });
}
var Ae3 = "div";
var be2 = O2.RenderStrategy | O2.Static;
function Ee2(e4, u13) {
  var M7, b8;
  let r9 = I(), { id: s17 = `headlessui-menu-items-${r9}`, ...i8 } = e4, [t18, o13] = C3("Menu.Items"), a11 = y3(t18.itemsRef, u13), l13 = n2(t18.itemsRef), m13 = p(), I11 = u5(), A3 = (() => I11 !== null ? (I11 & d5.Open) === d5.Open : t18.menuState === 0)();
  (0, import_react84.useEffect)(() => {
    let n7 = t18.itemsRef.current;
    n7 && t18.menuState === 0 && n7 !== (l13 == null ? void 0 : l13.activeElement) && n7.focus({ preventScroll: true });
  }, [t18.menuState, t18.itemsRef, l13]), F2({ container: t18.itemsRef.current, enabled: t18.menuState === 0, accept(n7) {
    return n7.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : n7.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(n7) {
    n7.setAttribute("role", "none");
  } });
  let f14 = o2((n7) => {
    var E8, x4;
    switch (m13.dispose(), n7.key) {
      case o11.Space:
        if (t18.searchQuery !== "") return n7.preventDefault(), n7.stopPropagation(), o13({ type: 3, value: n7.key });
      case o11.Enter:
        if (n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), t18.activeItemIndex !== null) {
          let { dataRef: S10 } = t18.items[t18.activeItemIndex];
          (x4 = (E8 = S10.current) == null ? void 0 : E8.domRef.current) == null || x4.click();
        }
        D(t18.buttonRef.current);
        break;
      case o11.ArrowDown:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: c4.Next });
      case o11.ArrowUp:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: c4.Previous });
      case o11.Home:
      case o11.PageUp:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: c4.First });
      case o11.End:
      case o11.PageDown:
        return n7.preventDefault(), n7.stopPropagation(), o13({ type: 2, focus: c4.Last });
      case o11.Escape:
        n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), o4().nextFrame(() => {
          var S10;
          return (S10 = t18.buttonRef.current) == null ? void 0 : S10.focus({ preventScroll: true });
        });
        break;
      case o11.Tab:
        n7.preventDefault(), n7.stopPropagation(), o13({ type: 1 }), o4().nextFrame(() => {
          _(t18.buttonRef.current, n7.shiftKey ? M.Previous : M.Next);
        });
        break;
      default:
        n7.key.length === 1 && (o13({ type: 3, value: n7.key }), m13.setTimeout(() => o13({ type: 4 }), 350));
        break;
    }
  }), g5 = o2((n7) => {
    switch (n7.key) {
      case o11.Space:
        n7.preventDefault();
        break;
    }
  }), R4 = (0, import_react84.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), p7 = { "aria-activedescendant": t18.activeItemIndex === null || (M7 = t18.items[t18.activeItemIndex]) == null ? void 0 : M7.id, "aria-labelledby": (b8 = t18.buttonRef.current) == null ? void 0 : b8.id, id: s17, onKeyDown: f14, onKeyUp: g5, role: "menu", tabIndex: 0, ref: a11 };
  return C({ ourProps: p7, theirProps: i8, slot: R4, defaultTag: Ae3, features: be2, visible: A3, name: "Menu.Items" });
}
var Se = import_react84.Fragment;
function xe2(e4, u13) {
  let r9 = I(), { id: s17 = `headlessui-menu-item-${r9}`, disabled: i8 = false, ...t18 } = e4, [o13, a11] = C3("Menu.Item"), l13 = o13.activeItemIndex !== null ? o13.items[o13.activeItemIndex].id === s17 : false, m13 = (0, import_react84.useRef)(null), I11 = y3(u13, m13);
  l(() => {
    if (o13.__demoMode || o13.menuState !== 0 || !l13 || o13.activationTrigger === 0) return;
    let T7 = o4();
    return T7.requestAnimationFrame(() => {
      var P5, B4;
      (B4 = (P5 = m13.current) == null ? void 0 : P5.scrollIntoView) == null || B4.call(P5, { block: "nearest" });
    }), T7.dispose;
  }, [o13.__demoMode, m13, l13, o13.menuState, o13.activationTrigger, o13.activeItemIndex]);
  let A3 = s14(m13), f14 = (0, import_react84.useRef)({ disabled: i8, domRef: m13, get textValue() {
    return A3();
  } });
  l(() => {
    f14.current.disabled = i8;
  }, [f14, i8]), l(() => (a11({ type: 5, id: s17, dataRef: f14 }), () => a11({ type: 6, id: s17 })), [f14, s17]);
  let g5 = o2(() => {
    a11({ type: 1 });
  }), R4 = o2((T7) => {
    if (i8) return T7.preventDefault();
    a11({ type: 1 }), D(o13.buttonRef.current);
  }), p7 = o2(() => {
    if (i8) return a11({ type: 2, focus: c4.Nothing });
    a11({ type: 2, focus: c4.Specific, id: s17 });
  }), M7 = u3(), b8 = o2((T7) => M7.update(T7)), n7 = o2((T7) => {
    M7.wasMoved(T7) && (i8 || l13 || a11({ type: 2, focus: c4.Specific, id: s17, trigger: 0 }));
  }), E8 = o2((T7) => {
    M7.wasMoved(T7) && (i8 || l13 && a11({ type: 2, focus: c4.Nothing }));
  }), x4 = (0, import_react84.useMemo)(() => ({ active: l13, disabled: i8, close: g5 }), [l13, i8, g5]);
  return C({ ourProps: { id: s17, ref: I11, role: "menuitem", tabIndex: i8 === true ? void 0 : -1, "aria-disabled": i8 === true ? true : void 0, disabled: void 0, onClick: R4, onFocus: p7, onPointerEnter: b8, onMouseEnter: b8, onPointerMove: n7, onMouseMove: n7, onPointerLeave: E8, onMouseLeave: E8 }, theirProps: t18, slot: x4, defaultTag: Se, name: "Menu.Item" });
}
var Pe3 = U(Me2);
var ve = U(Re);
var he = U(Ee2);
var De = U(xe2);
var qe4 = Object.assign(Pe3, { Button: ve, Items: he, Item: De });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/popover/popover.js
var import_react85 = __toESM(require_react(), 1);
var he2 = ((u13) => (u13[u13.Open = 0] = "Open", u13[u13.Closed = 1] = "Closed", u13))(he2 || {});
var He3 = ((e4) => (e4[e4.TogglePopover = 0] = "TogglePopover", e4[e4.ClosePopover = 1] = "ClosePopover", e4[e4.SetButton = 2] = "SetButton", e4[e4.SetButtonId = 3] = "SetButtonId", e4[e4.SetPanel = 4] = "SetPanel", e4[e4.SetPanelId = 5] = "SetPanelId", e4))(He3 || {});
var Ge3 = { [0]: (t18) => {
  let o13 = { ...t18, popoverState: u(t18.popoverState, { [0]: 1, [1]: 0 }) };
  return o13.popoverState === 0 && (o13.__demoMode = false), o13;
}, [1](t18) {
  return t18.popoverState === 1 ? t18 : { ...t18, popoverState: 1 };
}, [2](t18, o13) {
  return t18.button === o13.button ? t18 : { ...t18, button: o13.button };
}, [3](t18, o13) {
  return t18.buttonId === o13.buttonId ? t18 : { ...t18, buttonId: o13.buttonId };
}, [4](t18, o13) {
  return t18.panel === o13.panel ? t18 : { ...t18, panel: o13.panel };
}, [5](t18, o13) {
  return t18.panelId === o13.panelId ? t18 : { ...t18, panelId: o13.panelId };
} };
var ue3 = (0, import_react85.createContext)(null);
ue3.displayName = "PopoverContext";
function oe2(t18) {
  let o13 = (0, import_react85.useContext)(ue3);
  if (o13 === null) {
    let u13 = new Error(`<${t18} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u13, oe2), u13;
  }
  return o13;
}
var ie3 = (0, import_react85.createContext)(null);
ie3.displayName = "PopoverAPIContext";
function fe2(t18) {
  let o13 = (0, import_react85.useContext)(ie3);
  if (o13 === null) {
    let u13 = new Error(`<${t18} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u13, fe2), u13;
  }
  return o13;
}
var Pe4 = (0, import_react85.createContext)(null);
Pe4.displayName = "PopoverGroupContext";
function Ee3() {
  return (0, import_react85.useContext)(Pe4);
}
var re2 = (0, import_react85.createContext)(null);
re2.displayName = "PopoverPanelContext";
function Ne3() {
  return (0, import_react85.useContext)(re2);
}
function ke(t18, o13) {
  return u(o13.type, Ge3, t18, o13);
}
var we2 = "div";
function Ue2(t18, o13) {
  var B4;
  let { __demoMode: u13 = false, ...M7 } = t18, x4 = (0, import_react85.useRef)(null), n7 = y3(o13, T4((l13) => {
    x4.current = l13;
  })), e4 = (0, import_react85.useRef)([]), c16 = (0, import_react85.useReducer)(ke, { __demoMode: u13, popoverState: u13 ? 0 : 1, buttons: e4, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: (0, import_react85.createRef)(), afterPanelSentinel: (0, import_react85.createRef)() }), [{ popoverState: f14, button: s17, buttonId: I11, panel: a11, panelId: v6, beforePanelSentinel: y7, afterPanelSentinel: A3 }, P5] = c16, p7 = n2((B4 = x4.current) != null ? B4 : s17), E8 = (0, import_react85.useMemo)(() => {
    if (!s17 || !a11) return false;
    for (let W of document.querySelectorAll("body > *")) if (Number(W == null ? void 0 : W.contains(s17)) ^ Number(W == null ? void 0 : W.contains(a11))) return true;
    let l13 = f2(), S10 = l13.indexOf(s17), q6 = (S10 + l13.length - 1) % l13.length, U7 = (S10 + 1) % l13.length, z4 = l13[q6], be4 = l13[U7];
    return !a11.contains(z4) && !a11.contains(be4);
  }, [s17, a11]), F10 = s2(I11), D7 = s2(v6), _5 = (0, import_react85.useMemo)(() => ({ buttonId: F10, panelId: D7, close: () => P5({ type: 1 }) }), [F10, D7, P5]), O4 = Ee3(), L2 = O4 == null ? void 0 : O4.registerPopover, $6 = o2(() => {
    var l13;
    return (l13 = O4 == null ? void 0 : O4.isFocusWithinPopoverGroup()) != null ? l13 : (p7 == null ? void 0 : p7.activeElement) && ((s17 == null ? void 0 : s17.contains(p7.activeElement)) || (a11 == null ? void 0 : a11.contains(p7.activeElement)));
  });
  (0, import_react85.useEffect)(() => L2 == null ? void 0 : L2(_5), [L2, _5]);
  let [i8, b8] = ee2(), T7 = N4({ mainTreeNodeRef: O4 == null ? void 0 : O4.mainTreeNodeRef, portals: i8, defaultContainers: [s17, a11] });
  E3(p7 == null ? void 0 : p7.defaultView, "focus", (l13) => {
    var S10, q6, U7, z4;
    l13.target !== window && l13.target instanceof HTMLElement && f14 === 0 && ($6() || s17 && a11 && (T7.contains(l13.target) || (q6 = (S10 = y7.current) == null ? void 0 : S10.contains) != null && q6.call(S10, l13.target) || (z4 = (U7 = A3.current) == null ? void 0 : U7.contains) != null && z4.call(U7, l13.target) || P5({ type: 1 })));
  }, true), y2(T7.resolveContainers, (l13, S10) => {
    P5({ type: 1 }), h(S10, T2.Loose) || (l13.preventDefault(), s17 == null || s17.focus());
  }, f14 === 0);
  let d16 = o2((l13) => {
    P5({ type: 1 });
    let S10 = (() => l13 ? l13 instanceof HTMLElement ? l13 : "current" in l13 && l13.current instanceof HTMLElement ? l13.current : s17 : s17)();
    S10 == null || S10.focus();
  }), r9 = (0, import_react85.useMemo)(() => ({ close: d16, isPortalled: E8 }), [d16, E8]), m13 = (0, import_react85.useMemo)(() => ({ open: f14 === 0, close: d16 }), [f14, d16]), g5 = { ref: n7 };
  return import_react85.default.createElement(re2.Provider, { value: null }, import_react85.default.createElement(ue3.Provider, { value: c16 }, import_react85.default.createElement(ie3.Provider, { value: r9 }, import_react85.default.createElement(s9, { value: u(f14, { [0]: d5.Open, [1]: d5.Closed }) }, import_react85.default.createElement(b8, null, C({ ourProps: g5, theirProps: M7, slot: m13, defaultTag: we2, name: "Popover" }), import_react85.default.createElement(T7.MainTreeNode, null))))));
}
var We3 = "button";
function Ke3(t18, o13) {
  let u13 = I(), { id: M7 = `headlessui-popover-button-${u13}`, ...x4 } = t18, [n7, e4] = oe2("Popover.Button"), { isPortalled: c16 } = fe2("Popover.Button"), f14 = (0, import_react85.useRef)(null), s17 = `headlessui-focus-sentinel-${I()}`, I11 = Ee3(), a11 = I11 == null ? void 0 : I11.closeOthers, y7 = Ne3() !== null;
  (0, import_react85.useEffect)(() => {
    if (!y7) return e4({ type: 3, buttonId: M7 }), () => {
      e4({ type: 3, buttonId: null });
    };
  }, [y7, M7, e4]);
  let [A3] = (0, import_react85.useState)(() => Symbol()), P5 = y3(f14, o13, y7 ? null : (r9) => {
    if (r9) n7.buttons.current.push(A3);
    else {
      let m13 = n7.buttons.current.indexOf(A3);
      m13 !== -1 && n7.buttons.current.splice(m13, 1);
    }
    n7.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), r9 && e4({ type: 2, button: r9 });
  }), p7 = y3(f14, o13), E8 = n2(f14), F10 = o2((r9) => {
    var m13, g5, B4;
    if (y7) {
      if (n7.popoverState === 1) return;
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), (g5 = (m13 = r9.target).click) == null || g5.call(m13), e4({ type: 1 }), (B4 = n7.button) == null || B4.focus();
          break;
      }
    } else switch (r9.key) {
      case o11.Space:
      case o11.Enter:
        r9.preventDefault(), r9.stopPropagation(), n7.popoverState === 1 && (a11 == null || a11(n7.buttonId)), e4({ type: 0 });
        break;
      case o11.Escape:
        if (n7.popoverState !== 0) return a11 == null ? void 0 : a11(n7.buttonId);
        if (!f14.current || E8 != null && E8.activeElement && !f14.current.contains(E8.activeElement)) return;
        r9.preventDefault(), r9.stopPropagation(), e4({ type: 1 });
        break;
    }
  }), D7 = o2((r9) => {
    y7 || r9.key === o11.Space && r9.preventDefault();
  }), _5 = o2((r9) => {
    var m13, g5;
    r2(r9.currentTarget) || t18.disabled || (y7 ? (e4({ type: 1 }), (m13 = n7.button) == null || m13.focus()) : (r9.preventDefault(), r9.stopPropagation(), n7.popoverState === 1 && (a11 == null || a11(n7.buttonId)), e4({ type: 0 }), (g5 = n7.button) == null || g5.focus()));
  }), O4 = o2((r9) => {
    r9.preventDefault(), r9.stopPropagation();
  }), L2 = n7.popoverState === 0, $6 = (0, import_react85.useMemo)(() => ({ open: L2 }), [L2]), i8 = T3(t18, f14), b8 = y7 ? { ref: p7, type: i8, onKeyDown: F10, onClick: _5 } : { ref: P5, id: n7.buttonId, type: i8, "aria-expanded": n7.popoverState === 0, "aria-controls": n7.panel ? n7.panelId : void 0, onKeyDown: F10, onKeyUp: D7, onClick: _5, onMouseDown: O4 }, T7 = n5(), d16 = o2(() => {
    let r9 = n7.panel;
    if (!r9) return;
    function m13() {
      u(T7.current, { [s10.Forwards]: () => O(r9, M.First), [s10.Backwards]: () => O(r9, M.Last) }) === N.Error && O(f2().filter((B4) => B4.dataset.headlessuiFocusGuard !== "true"), u(T7.current, { [s10.Forwards]: M.Next, [s10.Backwards]: M.Previous }), { relativeTo: n7.button });
    }
    m13();
  });
  return import_react85.default.createElement(import_react85.default.Fragment, null, C({ ourProps: b8, theirProps: x4, slot: $6, defaultTag: We3, name: "Popover.Button" }), L2 && !y7 && c16 && import_react85.default.createElement(u4, { id: s17, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: d16 }));
}
var je3 = "div";
var Ve4 = O2.RenderStrategy | O2.Static;
function $e4(t18, o13) {
  let u13 = I(), { id: M7 = `headlessui-popover-overlay-${u13}`, ...x4 } = t18, [{ popoverState: n7 }, e4] = oe2("Popover.Overlay"), c16 = y3(o13), f14 = u5(), s17 = (() => f14 !== null ? (f14 & d5.Open) === d5.Open : n7 === 0)(), I11 = o2((y7) => {
    if (r2(y7.currentTarget)) return y7.preventDefault();
    e4({ type: 1 });
  }), a11 = (0, import_react85.useMemo)(() => ({ open: n7 === 0 }), [n7]);
  return C({ ourProps: { ref: c16, id: M7, "aria-hidden": true, onClick: I11 }, theirProps: x4, slot: a11, defaultTag: je3, features: Ve4, visible: s17, name: "Popover.Overlay" });
}
var Je3 = "div";
var Xe3 = O2.RenderStrategy | O2.Static;
function Ye4(t18, o13) {
  let u13 = I(), { id: M7 = `headlessui-popover-panel-${u13}`, focus: x4 = false, ...n7 } = t18, [e4, c16] = oe2("Popover.Panel"), { close: f14, isPortalled: s17 } = fe2("Popover.Panel"), I11 = `headlessui-focus-sentinel-before-${I()}`, a11 = `headlessui-focus-sentinel-after-${I()}`, v6 = (0, import_react85.useRef)(null), y7 = y3(v6, o13, (i8) => {
    c16({ type: 4, panel: i8 });
  }), A3 = n2(v6), P5 = I3();
  l(() => (c16({ type: 5, panelId: M7 }), () => {
    c16({ type: 5, panelId: null });
  }), [M7, c16]);
  let p7 = u5(), E8 = (() => p7 !== null ? (p7 & d5.Open) === d5.Open : e4.popoverState === 0)(), F10 = o2((i8) => {
    var b8;
    switch (i8.key) {
      case o11.Escape:
        if (e4.popoverState !== 0 || !v6.current || A3 != null && A3.activeElement && !v6.current.contains(A3.activeElement)) return;
        i8.preventDefault(), i8.stopPropagation(), c16({ type: 1 }), (b8 = e4.button) == null || b8.focus();
        break;
    }
  });
  (0, import_react85.useEffect)(() => {
    var i8;
    t18.static || e4.popoverState === 1 && ((i8 = t18.unmount) == null || i8) && c16({ type: 4, panel: null });
  }, [e4.popoverState, t18.unmount, t18.static, c16]), (0, import_react85.useEffect)(() => {
    if (e4.__demoMode || !x4 || e4.popoverState !== 0 || !v6.current) return;
    let i8 = A3 == null ? void 0 : A3.activeElement;
    v6.current.contains(i8) || O(v6.current, M.First);
  }, [e4.__demoMode, x4, v6, e4.popoverState]);
  let D7 = (0, import_react85.useMemo)(() => ({ open: e4.popoverState === 0, close: f14 }), [e4, f14]), _5 = { ref: y7, id: M7, onKeyDown: F10, onBlur: x4 && e4.popoverState === 0 ? (i8) => {
    var T7, d16, r9, m13, g5;
    let b8 = i8.relatedTarget;
    b8 && v6.current && ((T7 = v6.current) != null && T7.contains(b8) || (c16({ type: 1 }), ((r9 = (d16 = e4.beforePanelSentinel.current) == null ? void 0 : d16.contains) != null && r9.call(d16, b8) || (g5 = (m13 = e4.afterPanelSentinel.current) == null ? void 0 : m13.contains) != null && g5.call(m13, b8)) && b8.focus({ preventScroll: true })));
  } : void 0, tabIndex: -1 }, O4 = n5(), L2 = o2(() => {
    let i8 = v6.current;
    if (!i8) return;
    function b8() {
      u(O4.current, { [s10.Forwards]: () => {
        var d16;
        O(i8, M.First) === N.Error && ((d16 = e4.afterPanelSentinel.current) == null || d16.focus());
      }, [s10.Backwards]: () => {
        var T7;
        (T7 = e4.button) == null || T7.focus({ preventScroll: true });
      } });
    }
    b8();
  }), $6 = o2(() => {
    let i8 = v6.current;
    if (!i8) return;
    function b8() {
      u(O4.current, { [s10.Forwards]: () => {
        var B4;
        if (!e4.button) return;
        let T7 = f2(), d16 = T7.indexOf(e4.button), r9 = T7.slice(0, d16 + 1), g5 = [...T7.slice(d16 + 1), ...r9];
        for (let l13 of g5.slice()) if (l13.dataset.headlessuiFocusGuard === "true" || (B4 = e4.panel) != null && B4.contains(l13)) {
          let S10 = g5.indexOf(l13);
          S10 !== -1 && g5.splice(S10, 1);
        }
        O(g5, M.First, { sorted: false });
      }, [s10.Backwards]: () => {
        var d16;
        O(i8, M.Previous) === N.Error && ((d16 = e4.button) == null || d16.focus());
      } });
    }
    b8();
  });
  return import_react85.default.createElement(re2.Provider, { value: M7 }, E8 && s17 && import_react85.default.createElement(u4, { id: I11, ref: e4.beforePanelSentinel, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: L2 }), C({ mergeRefs: P5, ourProps: _5, theirProps: n7, slot: D7, defaultTag: Je3, features: Xe3, visible: E8, name: "Popover.Panel" }), E8 && s17 && import_react85.default.createElement(u4, { id: a11, ref: e4.afterPanelSentinel, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: $6 }));
}
var qe5 = "div";
function ze4(t18, o13) {
  let u13 = (0, import_react85.useRef)(null), M7 = y3(u13, o13), [x4, n7] = (0, import_react85.useState)([]), e4 = y5(), c16 = o2((P5) => {
    n7((p7) => {
      let E8 = p7.indexOf(P5);
      if (E8 !== -1) {
        let F10 = p7.slice();
        return F10.splice(E8, 1), F10;
      }
      return p7;
    });
  }), f14 = o2((P5) => (n7((p7) => [...p7, P5]), () => c16(P5))), s17 = o2(() => {
    var E8;
    let P5 = o7(u13);
    if (!P5) return false;
    let p7 = P5.activeElement;
    return (E8 = u13.current) != null && E8.contains(p7) ? true : x4.some((F10) => {
      var D7, _5;
      return ((D7 = P5.getElementById(F10.buttonId.current)) == null ? void 0 : D7.contains(p7)) || ((_5 = P5.getElementById(F10.panelId.current)) == null ? void 0 : _5.contains(p7));
    });
  }), I11 = o2((P5) => {
    for (let p7 of x4) p7.buttonId.current !== P5 && p7.close();
  }), a11 = (0, import_react85.useMemo)(() => ({ registerPopover: f14, unregisterPopover: c16, isFocusWithinPopoverGroup: s17, closeOthers: I11, mainTreeNodeRef: e4.mainTreeNodeRef }), [f14, c16, s17, I11, e4.mainTreeNodeRef]), v6 = (0, import_react85.useMemo)(() => ({}), []), y7 = t18, A3 = { ref: M7 };
  return import_react85.default.createElement(Pe4.Provider, { value: a11 }, C({ ourProps: A3, theirProps: y7, slot: v6, defaultTag: qe5, name: "Popover.Group" }), import_react85.default.createElement(e4.MainTreeNode, null));
}
var Qe4 = U(Ue2);
var Ze4 = U(Ke3);
var et4 = U($e4);
var tt4 = U(Ye4);
var ot3 = U(ze4);
var Ct = Object.assign(Qe4, { Button: Ze4, Overlay: et4, Panel: tt4, Group: ot3 });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var import_react88 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/label/label.js
var import_react86 = __toESM(require_react(), 1);
var d14 = (0, import_react86.createContext)(null);
function u12() {
  let a11 = (0, import_react86.useContext)(d14);
  if (a11 === null) {
    let t18 = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t18, u12), t18;
  }
  return a11;
}
function F6() {
  let [a11, t18] = (0, import_react86.useState)([]);
  return [a11.length > 0 ? a11.join(" ") : void 0, (0, import_react86.useMemo)(() => function(e4) {
    let s17 = o2((r9) => (t18((l13) => [...l13, r9]), () => t18((l13) => {
      let n7 = l13.slice(), p7 = n7.indexOf(r9);
      return p7 !== -1 && n7.splice(p7, 1), n7;
    }))), o13 = (0, import_react86.useMemo)(() => ({ register: s17, slot: e4.slot, name: e4.name, props: e4.props }), [s17, e4.slot, e4.name, e4.props]);
    return import_react86.default.createElement(d14.Provider, { value: o13 }, e4.children);
  }, [t18])];
}
var A = "label";
function h8(a11, t18) {
  let i8 = I(), { id: e4 = `headlessui-label-${i8}`, passive: s17 = false, ...o13 } = a11, r9 = u12(), l13 = y3(t18);
  l(() => r9.register(e4), [e4, r9.register]);
  let n7 = { ref: l13, ...r9.props, id: e4 };
  return s17 && ("onClick" in n7 && (delete n7.htmlFor, delete n7.onClick), "onClick" in o13 && delete o13.onClick), C({ ourProps: n7, theirProps: o13, slot: r9.slot || {}, defaultTag: A, name: r9.name || "Label" });
}
var v4 = U(h8);
var B2 = Object.assign(v4, {});

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-flags.js
var import_react87 = __toESM(require_react(), 1);
function c11(a11 = 0) {
  let [l13, r9] = (0, import_react87.useState)(a11), t18 = f7(), o13 = (0, import_react87.useCallback)((e4) => {
    t18.current && r9((u13) => u13 | e4);
  }, [l13, t18]), m13 = (0, import_react87.useCallback)((e4) => Boolean(l13 & e4), [l13]), s17 = (0, import_react87.useCallback)((e4) => {
    t18.current && r9((u13) => u13 & ~e4);
  }, [r9, t18]), g5 = (0, import_react87.useCallback)((e4) => {
    t18.current && r9((u13) => u13 ^ e4);
  }, [r9]);
  return { flags: l13, addFlag: o13, hasFlag: m13, removeFlag: s17, toggleFlag: g5 };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var Ge4 = ((t18) => (t18[t18.RegisterOption = 0] = "RegisterOption", t18[t18.UnregisterOption = 1] = "UnregisterOption", t18))(Ge4 || {});
var Ce2 = { [0](o13, r9) {
  let t18 = [...o13.options, { id: r9.id, element: r9.element, propsRef: r9.propsRef }];
  return { ...o13, options: I2(t18, (p7) => p7.element.current) };
}, [1](o13, r9) {
  let t18 = o13.options.slice(), p7 = o13.options.findIndex((T7) => T7.id === r9.id);
  return p7 === -1 ? o13 : (t18.splice(p7, 1), { ...o13, options: t18 });
} };
var B3 = (0, import_react88.createContext)(null);
B3.displayName = "RadioGroupDataContext";
function oe3(o13) {
  let r9 = (0, import_react88.useContext)(B3);
  if (r9 === null) {
    let t18 = new Error(`<${o13} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, oe3), t18;
  }
  return r9;
}
var $3 = (0, import_react88.createContext)(null);
$3.displayName = "RadioGroupActionsContext";
function ne2(o13) {
  let r9 = (0, import_react88.useContext)($3);
  if (r9 === null) {
    let t18 = new Error(`<${o13} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, ne2), t18;
  }
  return r9;
}
function ke2(o13, r9) {
  return u(r9.type, Ce2, o13, r9);
}
var Le2 = "div";
function he3(o13, r9) {
  let t18 = I(), { id: p7 = `headlessui-radiogroup-${t18}`, value: T7, defaultValue: v6, form: M7, name: m13, onChange: H6, by: G4 = (e4, i8) => e4 === i8, disabled: P5 = false, ...N7 } = o13, y7 = o2(typeof G4 == "string" ? (e4, i8) => {
    let n7 = G4;
    return (e4 == null ? void 0 : e4[n7]) === (i8 == null ? void 0 : i8[n7]);
  } : G4), [A3, L2] = (0, import_react88.useReducer)(ke2, { options: [] }), a11 = A3.options, [h9, R4] = F6(), [C7, U7] = w3(), k3 = (0, import_react88.useRef)(null), W = y3(k3, r9), [l13, s17] = T(T7, H6, v6), b8 = (0, import_react88.useMemo)(() => a11.find((e4) => !e4.propsRef.current.disabled), [a11]), x4 = (0, import_react88.useMemo)(() => a11.some((e4) => y7(e4.propsRef.current.value, l13)), [a11, l13]), d16 = o2((e4) => {
    var n7;
    if (P5 || y7(e4, l13)) return false;
    let i8 = (n7 = a11.find((f14) => y7(f14.propsRef.current.value, e4))) == null ? void 0 : n7.propsRef.current;
    return i8 != null && i8.disabled ? false : (s17 == null || s17(e4), true);
  });
  F2({ container: k3.current, accept(e4) {
    return e4.getAttribute("role") === "radio" ? NodeFilter.FILTER_REJECT : e4.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(e4) {
    e4.setAttribute("role", "none");
  } });
  let F10 = o2((e4) => {
    let i8 = k3.current;
    if (!i8) return;
    let n7 = o7(i8), f14 = a11.filter((u13) => u13.propsRef.current.disabled === false).map((u13) => u13.element.current);
    switch (e4.key) {
      case o11.Enter:
        p4(e4.currentTarget);
        break;
      case o11.ArrowLeft:
      case o11.ArrowUp:
        if (e4.preventDefault(), e4.stopPropagation(), O(f14, M.Previous | M.WrapAround) === N.Success) {
          let g5 = a11.find((K4) => K4.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d16(g5.propsRef.current.value);
        }
        break;
      case o11.ArrowRight:
      case o11.ArrowDown:
        if (e4.preventDefault(), e4.stopPropagation(), O(f14, M.Next | M.WrapAround) === N.Success) {
          let g5 = a11.find((K4) => K4.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d16(g5.propsRef.current.value);
        }
        break;
      case o11.Space:
        {
          e4.preventDefault(), e4.stopPropagation();
          let u13 = a11.find((g5) => g5.element.current === (n7 == null ? void 0 : n7.activeElement));
          u13 && d16(u13.propsRef.current.value);
        }
        break;
    }
  }), c16 = o2((e4) => (L2({ type: 0, ...e4 }), () => L2({ type: 1, id: e4.id }))), w6 = (0, import_react88.useMemo)(() => ({ value: l13, firstOption: b8, containsCheckedOption: x4, disabled: P5, compare: y7, ...A3 }), [l13, b8, x4, P5, y7, A3]), ie5 = (0, import_react88.useMemo)(() => ({ registerOption: c16, change: d16 }), [c16, d16]), ae3 = { ref: W, id: p7, role: "radiogroup", "aria-labelledby": h9, "aria-describedby": C7, onKeyDown: F10 }, pe2 = (0, import_react88.useMemo)(() => ({ value: l13 }), [l13]), I11 = (0, import_react88.useRef)(null), le3 = p();
  return (0, import_react88.useEffect)(() => {
    I11.current && v6 !== void 0 && le3.addEventListener(I11.current, "reset", () => {
      d16(v6);
    });
  }, [I11, d16]), import_react88.default.createElement(U7, { name: "RadioGroup.Description" }, import_react88.default.createElement(R4, { name: "RadioGroup.Label" }, import_react88.default.createElement($3.Provider, { value: ie5 }, import_react88.default.createElement(B3.Provider, { value: w6 }, m13 != null && l13 != null && e({ [m13]: l13 }).map(([e4, i8], n7) => import_react88.default.createElement(u4, { features: s8.Hidden, ref: n7 === 0 ? (f14) => {
    var u13;
    I11.current = (u13 = f14 == null ? void 0 : f14.closest("form")) != null ? u13 : null;
  } : void 0, ...x({ key: e4, as: "input", type: "radio", checked: i8 != null, hidden: true, readOnly: true, form: M7, disabled: P5, name: e4, value: i8 }) })), C({ ourProps: ae3, theirProps: N7, slot: pe2, defaultTag: Le2, name: "RadioGroup" })))));
}
var xe3 = ((t18) => (t18[t18.Empty = 1] = "Empty", t18[t18.Active = 2] = "Active", t18))(xe3 || {});
var Fe2 = "div";
function we3(o13, r9) {
  var F10;
  let t18 = I(), { id: p7 = `headlessui-radiogroup-option-${t18}`, value: T7, disabled: v6 = false, ...M7 } = o13, m13 = (0, import_react88.useRef)(null), H6 = y3(m13, r9), [G4, P5] = F6(), [N7, y7] = w3(), { addFlag: A3, removeFlag: L2, hasFlag: a11 } = c11(1), h9 = s2({ value: T7, disabled: v6 }), R4 = oe3("RadioGroup.Option"), C7 = ne2("RadioGroup.Option");
  l(() => C7.registerOption({ id: p7, element: m13, propsRef: h9 }), [p7, C7, m13, h9]);
  let U7 = o2((c16) => {
    var w6;
    if (r2(c16.currentTarget)) return c16.preventDefault();
    C7.change(T7) && (A3(2), (w6 = m13.current) == null || w6.focus());
  }), k3 = o2((c16) => {
    if (r2(c16.currentTarget)) return c16.preventDefault();
    A3(2);
  }), W = o2(() => L2(2)), l13 = ((F10 = R4.firstOption) == null ? void 0 : F10.id) === p7, s17 = R4.disabled || v6, b8 = R4.compare(R4.value, T7), x4 = { ref: H6, id: p7, role: "radio", "aria-checked": b8 ? "true" : "false", "aria-labelledby": G4, "aria-describedby": N7, "aria-disabled": s17 ? true : void 0, tabIndex: (() => s17 ? -1 : b8 || !R4.containsCheckedOption && l13 ? 0 : -1)(), onClick: s17 ? void 0 : U7, onFocus: s17 ? void 0 : k3, onBlur: s17 ? void 0 : W }, d16 = (0, import_react88.useMemo)(() => ({ checked: b8, disabled: s17, active: a11(2) }), [b8, s17, a11]);
  return import_react88.default.createElement(y7, { name: "RadioGroup.Description" }, import_react88.default.createElement(P5, { name: "RadioGroup.Label" }, C({ ourProps: x4, theirProps: M7, slot: d16, defaultTag: Fe2, name: "RadioGroup.Option" })));
}
var Ie3 = U(he3);
var Se2 = U(we3);
var it3 = Object.assign(Ie3, { Option: Se2, Label: B2, Description: G });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/switch/switch.js
var import_react89 = __toESM(require_react(), 1);
var S8 = (0, import_react89.createContext)(null);
S8.displayName = "GroupContext";
var ee6 = import_react89.Fragment;
function te4(r9) {
  var u13;
  let [n7, p7] = (0, import_react89.useState)(null), [c16, T7] = F6(), [o13, b8] = w3(), a11 = (0, import_react89.useMemo)(() => ({ switch: n7, setSwitch: p7, labelledby: c16, describedby: o13 }), [n7, p7, c16, o13]), d16 = {}, y7 = r9;
  return import_react89.default.createElement(b8, { name: "Switch.Description" }, import_react89.default.createElement(T7, { name: "Switch.Label", props: { htmlFor: (u13 = a11.switch) == null ? void 0 : u13.id, onClick(m13) {
    n7 && (m13.currentTarget.tagName === "LABEL" && m13.preventDefault(), n7.click(), n7.focus({ preventScroll: true }));
  } } }, import_react89.default.createElement(S8.Provider, { value: a11 }, C({ ourProps: d16, theirProps: y7, defaultTag: ee6, name: "Switch.Group" }))));
}
var ne3 = "button";
function re3(r9, n7) {
  var E8;
  let p7 = I(), { id: c16 = `headlessui-switch-${p7}`, checked: T7, defaultChecked: o13 = false, onChange: b8, disabled: a11 = false, name: d16, value: y7, form: u13, ...m13 } = r9, t18 = (0, import_react89.useContext)(S8), f14 = (0, import_react89.useRef)(null), C7 = y3(f14, n7, t18 === null ? null : t18.setSwitch), [i8, s17] = T(T7, b8, o13), w6 = o2(() => s17 == null ? void 0 : s17(!i8)), L2 = o2((e4) => {
    if (r2(e4.currentTarget)) return e4.preventDefault();
    e4.preventDefault(), w6();
  }), x4 = o2((e4) => {
    e4.key === o11.Space ? (e4.preventDefault(), w6()) : e4.key === o11.Enter && p4(e4.currentTarget);
  }), v6 = o2((e4) => e4.preventDefault()), G4 = (0, import_react89.useMemo)(() => ({ checked: i8 }), [i8]), R4 = { id: c16, ref: C7, role: "switch", type: T3(r9, f14), tabIndex: r9.tabIndex === -1 ? 0 : (E8 = r9.tabIndex) != null ? E8 : 0, "aria-checked": i8, "aria-labelledby": t18 == null ? void 0 : t18.labelledby, "aria-describedby": t18 == null ? void 0 : t18.describedby, disabled: a11, onClick: L2, onKeyUp: x4, onKeyPress: v6 }, k3 = p();
  return (0, import_react89.useEffect)(() => {
    var _5;
    let e4 = (_5 = f14.current) == null ? void 0 : _5.closest("form");
    e4 && o13 !== void 0 && k3.addEventListener(e4, "reset", () => {
      s17(o13);
    });
  }, [f14, s17]), import_react89.default.createElement(import_react89.default.Fragment, null, d16 != null && i8 && import_react89.default.createElement(u4, { features: s8.Hidden, ...x({ as: "input", type: "checkbox", hidden: true, readOnly: true, disabled: a11, form: u13, checked: i8, name: d16, value: y7 }) }), C({ ourProps: R4, theirProps: m13, slot: G4, defaultTag: ne3, name: "Switch" }));
}
var oe4 = U(re3);
var ie4 = te4;
var _e2 = Object.assign(oe4, { Group: ie4, Label: B2, Description: G });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var import_react91 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/internal/focus-sentinel.js
var import_react90 = __toESM(require_react(), 1);
function b6({ onFocus: n7 }) {
  let [r9, o13] = (0, import_react90.useState)(true), u13 = f7();
  return r9 ? import_react90.default.createElement(u4, { as: "button", type: "button", features: s8.Focusable, onFocus: (a11) => {
    a11.preventDefault();
    let e4, i8 = 50;
    function t18() {
      if (i8-- <= 0) {
        e4 && cancelAnimationFrame(e4);
        return;
      }
      if (n7()) {
        if (cancelAnimationFrame(e4), !u13.current) return;
        o13(false);
        return;
      }
      e4 = requestAnimationFrame(t18);
    }
    e4 = requestAnimationFrame(t18);
  } }) : null;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/stable-collection.js
var r8 = __toESM(require_react(), 1);
var s16 = r8.createContext(null);
function a10() {
  return { groups: /* @__PURE__ */ new Map(), get(n7, t18) {
    var c16;
    let e4 = this.groups.get(n7);
    e4 || (e4 = /* @__PURE__ */ new Map(), this.groups.set(n7, e4));
    let l13 = (c16 = e4.get(t18)) != null ? c16 : 0;
    e4.set(t18, l13 + 1);
    let o13 = Array.from(e4.keys()).indexOf(t18);
    function i8() {
      let u13 = e4.get(t18);
      u13 > 1 ? e4.set(t18, u13 - 1) : e4.delete(t18);
    }
    return [o13, i8];
  } };
}
function C5({ children: n7 }) {
  let t18 = r8.useRef(a10());
  return r8.createElement(s16.Provider, { value: t18 }, n7);
}
function d15(n7) {
  let t18 = r8.useContext(s16);
  if (!t18) throw new Error("You must wrap your component in a <StableCollection>");
  let e4 = f13(), [l13, o13] = t18.current.get(n7, e4);
  return r8.useEffect(() => o13, []), l13;
}
function f13() {
  var l13, o13, i8;
  let n7 = (i8 = (o13 = (l13 = r8.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : l13.ReactCurrentOwner) == null ? void 0 : o13.current) != null ? i8 : null;
  if (!n7) return Symbol();
  let t18 = [], e4 = n7;
  for (; e4; ) t18.push(e4.index), e4 = e4.return;
  return "$." + t18.join(".");
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var ue5 = ((t18) => (t18[t18.Forwards = 0] = "Forwards", t18[t18.Backwards = 1] = "Backwards", t18))(ue5 || {});
var Te2 = ((l13) => (l13[l13.Less = -1] = "Less", l13[l13.Equal = 0] = "Equal", l13[l13.Greater = 1] = "Greater", l13))(Te2 || {});
var de5 = ((a11) => (a11[a11.SetSelectedIndex = 0] = "SetSelectedIndex", a11[a11.RegisterTab = 1] = "RegisterTab", a11[a11.UnregisterTab = 2] = "UnregisterTab", a11[a11.RegisterPanel = 3] = "RegisterPanel", a11[a11.UnregisterPanel = 4] = "UnregisterPanel", a11))(de5 || {});
var ce3 = { [0](e4, n7) {
  var i8;
  let t18 = I2(e4.tabs, (c16) => c16.current), l13 = I2(e4.panels, (c16) => c16.current), o13 = t18.filter((c16) => {
    var p7;
    return !((p7 = c16.current) != null && p7.hasAttribute("disabled"));
  }), a11 = { ...e4, tabs: t18, panels: l13 };
  if (n7.index < 0 || n7.index > t18.length - 1) {
    let c16 = u(Math.sign(n7.index - e4.selectedIndex), { [-1]: () => 1, [0]: () => u(Math.sign(n7.index), { [-1]: () => 0, [0]: () => 0, [1]: () => 1 }), [1]: () => 0 });
    if (o13.length === 0) return a11;
    let p7 = u(c16, { [0]: () => t18.indexOf(o13[0]), [1]: () => t18.indexOf(o13[o13.length - 1]) });
    return { ...a11, selectedIndex: p7 === -1 ? e4.selectedIndex : p7 };
  }
  let T7 = t18.slice(0, n7.index), m13 = [...t18.slice(n7.index), ...T7].find((c16) => o13.includes(c16));
  if (!m13) return a11;
  let b8 = (i8 = t18.indexOf(m13)) != null ? i8 : e4.selectedIndex;
  return b8 === -1 && (b8 = e4.selectedIndex), { ...a11, selectedIndex: b8 };
}, [1](e4, n7) {
  if (e4.tabs.includes(n7.tab)) return e4;
  let t18 = e4.tabs[e4.selectedIndex], l13 = I2([...e4.tabs, n7.tab], (a11) => a11.current), o13 = e4.selectedIndex;
  return e4.info.current.isControlled || (o13 = l13.indexOf(t18), o13 === -1 && (o13 = e4.selectedIndex)), { ...e4, tabs: l13, selectedIndex: o13 };
}, [2](e4, n7) {
  return { ...e4, tabs: e4.tabs.filter((t18) => t18 !== n7.tab) };
}, [3](e4, n7) {
  return e4.panels.includes(n7.panel) ? e4 : { ...e4, panels: I2([...e4.panels, n7.panel], (t18) => t18.current) };
}, [4](e4, n7) {
  return { ...e4, panels: e4.panels.filter((t18) => t18 !== n7.panel) };
} };
var X3 = (0, import_react91.createContext)(null);
X3.displayName = "TabsDataContext";
function F8(e4) {
  let n7 = (0, import_react91.useContext)(X3);
  if (n7 === null) {
    let t18 = new Error(`<${e4} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, F8), t18;
  }
  return n7;
}
var $4 = (0, import_react91.createContext)(null);
$4.displayName = "TabsActionsContext";
function q4(e4) {
  let n7 = (0, import_react91.useContext)($4);
  if (n7 === null) {
    let t18 = new Error(`<${e4} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, q4), t18;
  }
  return n7;
}
function fe3(e4, n7) {
  return u(n7.type, ce3, e4, n7);
}
var be3 = import_react91.Fragment;
function me3(e4, n7) {
  let { defaultIndex: t18 = 0, vertical: l13 = false, manual: o13 = false, onChange: a11, selectedIndex: T7 = null, ...R4 } = e4;
  const m13 = l13 ? "vertical" : "horizontal", b8 = o13 ? "manual" : "auto";
  let i8 = T7 !== null, c16 = s2({ isControlled: i8 }), p7 = y3(n7), [u13, f14] = (0, import_react91.useReducer)(fe3, { info: c16, selectedIndex: T7 != null ? T7 : t18, tabs: [], panels: [] }), P5 = (0, import_react91.useMemo)(() => ({ selectedIndex: u13.selectedIndex }), [u13.selectedIndex]), g5 = s2(a11 || (() => {
  })), E8 = s2(u13.tabs), L2 = (0, import_react91.useMemo)(() => ({ orientation: m13, activation: b8, ...u13 }), [m13, b8, u13]), A3 = o2((s17) => (f14({ type: 1, tab: s17 }), () => f14({ type: 2, tab: s17 }))), S10 = o2((s17) => (f14({ type: 3, panel: s17 }), () => f14({ type: 4, panel: s17 }))), k3 = o2((s17) => {
    h9.current !== s17 && g5.current(s17), i8 || f14({ type: 0, index: s17 });
  }), h9 = s2(i8 ? e4.selectedIndex : u13.selectedIndex), W = (0, import_react91.useMemo)(() => ({ registerTab: A3, registerPanel: S10, change: k3 }), []);
  l(() => {
    f14({ type: 0, index: T7 != null ? T7 : t18 });
  }, [T7]), l(() => {
    if (h9.current === void 0 || u13.tabs.length <= 0) return;
    let s17 = I2(u13.tabs, (d16) => d16.current);
    s17.some((d16, M7) => u13.tabs[M7] !== d16) && k3(s17.indexOf(u13.tabs[h9.current]));
  });
  let O4 = { ref: p7 };
  return import_react91.default.createElement(C5, null, import_react91.default.createElement($4.Provider, { value: W }, import_react91.default.createElement(X3.Provider, { value: L2 }, L2.tabs.length <= 0 && import_react91.default.createElement(b6, { onFocus: () => {
    var s17, r9;
    for (let d16 of E8.current) if (((s17 = d16.current) == null ? void 0 : s17.tabIndex) === 0) return (r9 = d16.current) == null || r9.focus(), true;
    return false;
  } }), C({ ourProps: O4, theirProps: R4, slot: P5, defaultTag: be3, name: "Tabs" }))));
}
var Pe5 = "div";
function ye4(e4, n7) {
  let { orientation: t18, selectedIndex: l13 } = F8("Tab.List"), o13 = y3(n7);
  return C({ ourProps: { ref: o13, role: "tablist", "aria-orientation": t18 }, theirProps: e4, slot: { selectedIndex: l13 }, defaultTag: Pe5, name: "Tabs.List" });
}
var xe4 = "button";
function ge4(e4, n7) {
  var O4, s17;
  let t18 = I(), { id: l13 = `headlessui-tabs-tab-${t18}`, ...o13 } = e4, { orientation: a11, activation: T7, selectedIndex: R4, tabs: m13, panels: b8 } = F8("Tab"), i8 = q4("Tab"), c16 = F8("Tab"), p7 = (0, import_react91.useRef)(null), u13 = y3(p7, n7);
  l(() => i8.registerTab(p7), [i8, p7]);
  let f14 = d15("tabs"), P5 = m13.indexOf(p7);
  P5 === -1 && (P5 = f14);
  let g5 = P5 === R4, E8 = o2((r9) => {
    var M7;
    let d16 = r9();
    if (d16 === N.Success && T7 === "auto") {
      let K4 = (M7 = o7(p7)) == null ? void 0 : M7.activeElement, z4 = c16.tabs.findIndex((te5) => te5.current === K4);
      z4 !== -1 && i8.change(z4);
    }
    return d16;
  }), L2 = o2((r9) => {
    let d16 = m13.map((K4) => K4.current).filter(Boolean);
    if (r9.key === o11.Space || r9.key === o11.Enter) {
      r9.preventDefault(), r9.stopPropagation(), i8.change(P5);
      return;
    }
    switch (r9.key) {
      case o11.Home:
      case o11.PageUp:
        return r9.preventDefault(), r9.stopPropagation(), E8(() => O(d16, M.First));
      case o11.End:
      case o11.PageDown:
        return r9.preventDefault(), r9.stopPropagation(), E8(() => O(d16, M.Last));
    }
    if (E8(() => u(a11, { vertical() {
      return r9.key === o11.ArrowUp ? O(d16, M.Previous | M.WrapAround) : r9.key === o11.ArrowDown ? O(d16, M.Next | M.WrapAround) : N.Error;
    }, horizontal() {
      return r9.key === o11.ArrowLeft ? O(d16, M.Previous | M.WrapAround) : r9.key === o11.ArrowRight ? O(d16, M.Next | M.WrapAround) : N.Error;
    } })) === N.Success) return r9.preventDefault();
  }), A3 = (0, import_react91.useRef)(false), S10 = o2(() => {
    var r9;
    A3.current || (A3.current = true, (r9 = p7.current) == null || r9.focus({ preventScroll: true }), i8.change(P5), t3(() => {
      A3.current = false;
    }));
  }), k3 = o2((r9) => {
    r9.preventDefault();
  }), h9 = (0, import_react91.useMemo)(() => {
    var r9;
    return { selected: g5, disabled: (r9 = e4.disabled) != null ? r9 : false };
  }, [g5, e4.disabled]), W = { ref: u13, onKeyDown: L2, onMouseDown: k3, onClick: S10, id: l13, role: "tab", type: T3(e4, p7), "aria-controls": (s17 = (O4 = b8[P5]) == null ? void 0 : O4.current) == null ? void 0 : s17.id, "aria-selected": g5, tabIndex: g5 ? 0 : -1 };
  return C({ ourProps: W, theirProps: o13, slot: h9, defaultTag: xe4, name: "Tabs.Tab" });
}
var Ee4 = "div";
function Ae4(e4, n7) {
  let { selectedIndex: t18 } = F8("Tab.Panels"), l13 = y3(n7), o13 = (0, import_react91.useMemo)(() => ({ selectedIndex: t18 }), [t18]);
  return C({ ourProps: { ref: l13 }, theirProps: e4, slot: o13, defaultTag: Ee4, name: "Tabs.Panels" });
}
var Re2 = "div";
var Le3 = O2.RenderStrategy | O2.Static;
function _e3(e4, n7) {
  var E8, L2, A3, S10;
  let t18 = I(), { id: l13 = `headlessui-tabs-panel-${t18}`, tabIndex: o13 = 0, ...a11 } = e4, { selectedIndex: T7, tabs: R4, panels: m13 } = F8("Tab.Panel"), b8 = q4("Tab.Panel"), i8 = (0, import_react91.useRef)(null), c16 = y3(i8, n7);
  l(() => b8.registerPanel(i8), [b8, i8, l13]);
  let p7 = d15("panels"), u13 = m13.indexOf(i8);
  u13 === -1 && (u13 = p7);
  let f14 = u13 === T7, P5 = (0, import_react91.useMemo)(() => ({ selected: f14 }), [f14]), g5 = { ref: c16, id: l13, role: "tabpanel", "aria-labelledby": (L2 = (E8 = R4[u13]) == null ? void 0 : E8.current) == null ? void 0 : L2.id, tabIndex: f14 ? o13 : -1 };
  return !f14 && ((A3 = a11.unmount) == null || A3) && !((S10 = a11.static) != null && S10) ? import_react91.default.createElement(u4, { as: "span", "aria-hidden": "true", ...g5 }) : C({ ourProps: g5, theirProps: a11, slot: P5, defaultTag: Re2, features: Le3, visible: f14, name: "Tabs.Panel" });
}
var Se3 = U(ge4);
var Ie4 = U(me3);
var De2 = U(ye4);
var Fe3 = U(Ae4);
var he4 = U(_e3);
var $e5 = Object.assign(Se3, { Group: Ie4, List: De2, Panels: Fe3, Panel: he4 });

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/transitions/transition.js
var import_react92 = __toESM(require_react(), 1);

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/utils/once.js
function l12(r9) {
  let e4 = { called: false };
  return (...t18) => {
    if (!e4.called) return e4.called = true, r9(...t18);
  };
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/transitions/utils/transition.js
function g4(t18, ...e4) {
  t18 && e4.length > 0 && t18.classList.add(...e4);
}
function v5(t18, ...e4) {
  t18 && e4.length > 0 && t18.classList.remove(...e4);
}
function b7(t18, e4) {
  let n7 = o4();
  if (!t18) return n7.dispose;
  let { transitionDuration: m13, transitionDelay: a11 } = getComputedStyle(t18), [u13, p7] = [m13, a11].map((l13) => {
    let [r9 = 0] = l13.split(",").filter(Boolean).map((i8) => i8.includes("ms") ? parseFloat(i8) : parseFloat(i8) * 1e3).sort((i8, T7) => T7 - i8);
    return r9;
  }), o13 = u13 + p7;
  if (o13 !== 0) {
    n7.group((r9) => {
      r9.setTimeout(() => {
        e4(), r9.dispose();
      }, o13), r9.addEventListener(t18, "transitionrun", (i8) => {
        i8.target === i8.currentTarget && r9.dispose();
      });
    });
    let l13 = n7.addEventListener(t18, "transitionend", (r9) => {
      r9.target === r9.currentTarget && (e4(), l13());
    });
  } else e4();
  return n7.add(() => e4()), n7.dispose;
}
function M5(t18, e4, n7, m13) {
  let a11 = n7 ? "enter" : "leave", u13 = o4(), p7 = m13 !== void 0 ? l12(m13) : () => {
  };
  a11 === "enter" && (t18.removeAttribute("hidden"), t18.style.display = "");
  let o13 = u(a11, { enter: () => e4.enter, leave: () => e4.leave }), l13 = u(a11, { enter: () => e4.enterTo, leave: () => e4.leaveTo }), r9 = u(a11, { enter: () => e4.enterFrom, leave: () => e4.leaveFrom });
  return v5(t18, ...e4.base, ...e4.enter, ...e4.enterTo, ...e4.enterFrom, ...e4.leave, ...e4.leaveFrom, ...e4.leaveTo, ...e4.entered), g4(t18, ...e4.base, ...o13, ...r9), u13.nextFrame(() => {
    v5(t18, ...e4.base, ...o13, ...r9), g4(t18, ...e4.base, ...o13, ...l13), b7(t18, () => (v5(t18, ...e4.base, ...o13), g4(t18, ...e4.base, ...e4.entered), p7()));
  }), u13.dispose;
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/hooks/use-transition.js
function D6({ immediate: t18, container: s17, direction: n7, classes: u13, onStart: a11, onStop: c16 }) {
  let l13 = f7(), d16 = p(), e4 = s2(n7);
  l(() => {
    t18 && (e4.current = "enter");
  }, [t18]), l(() => {
    let r9 = o4();
    d16.add(r9.dispose);
    let i8 = s17.current;
    if (i8 && e4.current !== "idle" && l13.current) return r9.dispose(), a11.current(e4.current), r9.add(M5(i8, u13.current, e4.current === "enter", () => {
      r9.dispose(), c16.current(e4.current);
    })), r9.dispose;
  }, [n7]);
}

// node_modules/.pnpm/@headlessui+react@1.7.19_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@headlessui/react/dist/components/transitions/transition.js
function S9(t18 = "") {
  return t18.split(/\s+/).filter((n7) => n7.length > 1);
}
var I10 = (0, import_react92.createContext)(null);
I10.displayName = "TransitionContext";
var Se4 = ((r9) => (r9.Visible = "visible", r9.Hidden = "hidden", r9))(Se4 || {});
function ye5() {
  let t18 = (0, import_react92.useContext)(I10);
  if (t18 === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
function xe5() {
  let t18 = (0, import_react92.useContext)(M6);
  if (t18 === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
var M6 = (0, import_react92.createContext)(null);
M6.displayName = "NestingContext";
function U6(t18) {
  return "children" in t18 ? U6(t18.children) : t18.current.filter(({ el: n7 }) => n7.current !== null).filter(({ state: n7 }) => n7 === "visible").length > 0;
}
function se3(t18, n7) {
  let r9 = s2(t18), s17 = (0, import_react92.useRef)([]), R4 = f7(), D7 = p(), p7 = o2((i8, e4 = v.Hidden) => {
    let a11 = s17.current.findIndex(({ el: o13 }) => o13 === i8);
    a11 !== -1 && (u(e4, { [v.Unmount]() {
      s17.current.splice(a11, 1);
    }, [v.Hidden]() {
      s17.current[a11].state = "hidden";
    } }), D7.microTask(() => {
      var o13;
      !U6(s17) && R4.current && ((o13 = r9.current) == null || o13.call(r9));
    }));
  }), x4 = o2((i8) => {
    let e4 = s17.current.find(({ el: a11 }) => a11 === i8);
    return e4 ? e4.state !== "visible" && (e4.state = "visible") : s17.current.push({ el: i8, state: "visible" }), () => p7(i8, v.Unmount);
  }), h9 = (0, import_react92.useRef)([]), v6 = (0, import_react92.useRef)(Promise.resolve()), u13 = (0, import_react92.useRef)({ enter: [], leave: [], idle: [] }), g5 = o2((i8, e4, a11) => {
    h9.current.splice(0), n7 && (n7.chains.current[e4] = n7.chains.current[e4].filter(([o13]) => o13 !== i8)), n7 == null || n7.chains.current[e4].push([i8, new Promise((o13) => {
      h9.current.push(o13);
    })]), n7 == null || n7.chains.current[e4].push([i8, new Promise((o13) => {
      Promise.all(u13.current[e4].map(([f14, N7]) => N7)).then(() => o13());
    })]), e4 === "enter" ? v6.current = v6.current.then(() => n7 == null ? void 0 : n7.wait.current).then(() => a11(e4)) : a11(e4);
  }), d16 = o2((i8, e4, a11) => {
    Promise.all(u13.current[e4].splice(0).map(([o13, f14]) => f14)).then(() => {
      var o13;
      (o13 = h9.current.shift()) == null || o13();
    }).then(() => a11(e4));
  });
  return (0, import_react92.useMemo)(() => ({ children: s17, register: x4, unregister: p7, onStart: g5, onStop: d16, wait: v6, chains: u13 }), [x4, p7, s17, g5, d16, u13, v6]);
}
function Ne4() {
}
var Pe6 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function ae2(t18) {
  var r9;
  let n7 = {};
  for (let s17 of Pe6) n7[s17] = (r9 = t18[s17]) != null ? r9 : Ne4;
  return n7;
}
function Re3(t18) {
  let n7 = (0, import_react92.useRef)(ae2(t18));
  return (0, import_react92.useEffect)(() => {
    n7.current = ae2(t18);
  }, [t18]), n7;
}
var De3 = "div";
var le2 = O2.RenderStrategy;
function He4(t18, n7) {
  var Q5, Y3;
  let { beforeEnter: r9, afterEnter: s17, beforeLeave: R4, afterLeave: D7, enter: p7, enterFrom: x4, enterTo: h9, entered: v6, leave: u13, leaveFrom: g5, leaveTo: d16, ...i8 } = t18, e4 = (0, import_react92.useRef)(null), a11 = y3(e4, n7), o13 = (Q5 = i8.unmount) == null || Q5 ? v.Unmount : v.Hidden, { show: f14, appear: N7, initial: T7 } = ye5(), [l13, j5] = (0, import_react92.useState)(f14 ? "visible" : "hidden"), z4 = xe5(), { register: L2, unregister: O4 } = z4;
  (0, import_react92.useEffect)(() => L2(e4), [L2, e4]), (0, import_react92.useEffect)(() => {
    if (o13 === v.Hidden && e4.current) {
      if (f14 && l13 !== "visible") {
        j5("visible");
        return;
      }
      return u(l13, { ["hidden"]: () => O4(e4), ["visible"]: () => L2(e4) });
    }
  }, [l13, e4, L2, O4, f14, o13]);
  let k3 = s2({ base: S9(i8.className), enter: S9(p7), enterFrom: S9(x4), enterTo: S9(h9), entered: S9(v6), leave: S9(u13), leaveFrom: S9(g5), leaveTo: S9(d16) }), V5 = Re3({ beforeEnter: r9, afterEnter: s17, beforeLeave: R4, afterLeave: D7 }), G4 = l2();
  (0, import_react92.useEffect)(() => {
    if (G4 && l13 === "visible" && e4.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [e4, l13, G4]);
  let Te3 = T7 && !N7, K4 = N7 && f14 && T7, de6 = /* @__PURE__ */ (() => !G4 || Te3 ? "idle" : f14 ? "enter" : "leave")(), H6 = c11(0), fe4 = o2((C7) => u(C7, { enter: () => {
    H6.addFlag(d5.Opening), V5.current.beforeEnter();
  }, leave: () => {
    H6.addFlag(d5.Closing), V5.current.beforeLeave();
  }, idle: () => {
  } })), me4 = o2((C7) => u(C7, { enter: () => {
    H6.removeFlag(d5.Opening), V5.current.afterEnter();
  }, leave: () => {
    H6.removeFlag(d5.Closing), V5.current.afterLeave();
  }, idle: () => {
  } })), w6 = se3(() => {
    j5("hidden"), O4(e4);
  }, z4), B4 = (0, import_react92.useRef)(false);
  D6({ immediate: K4, container: e4, classes: k3, direction: de6, onStart: s2((C7) => {
    B4.current = true, w6.onStart(e4, C7, fe4);
  }), onStop: s2((C7) => {
    B4.current = false, w6.onStop(e4, C7, me4), C7 === "leave" && !U6(w6) && (j5("hidden"), O4(e4));
  }) });
  let P5 = i8, ce4 = { ref: a11 };
  return K4 ? P5 = { ...P5, className: t9(i8.className, ...k3.current.enter, ...k3.current.enterFrom) } : B4.current && (P5.className = t9(i8.className, (Y3 = e4.current) == null ? void 0 : Y3.className), P5.className === "" && delete P5.className), import_react92.default.createElement(M6.Provider, { value: w6 }, import_react92.default.createElement(s9, { value: u(l13, { ["visible"]: d5.Open, ["hidden"]: d5.Closed }) | H6.flags }, C({ ourProps: ce4, theirProps: P5, defaultTag: De3, features: le2, visible: l13 === "visible", name: "Transition.Child" })));
}
function Fe4(t18, n7) {
  let { show: r9, appear: s17 = false, unmount: R4 = true, ...D7 } = t18, p7 = (0, import_react92.useRef)(null), x4 = y3(p7, n7);
  l2();
  let h9 = u5();
  if (r9 === void 0 && h9 !== null && (r9 = (h9 & d5.Open) === d5.Open), ![true, false].includes(r9)) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [v6, u13] = (0, import_react92.useState)(r9 ? "visible" : "hidden"), g5 = se3(() => {
    u13("hidden");
  }), [d16, i8] = (0, import_react92.useState)(true), e4 = (0, import_react92.useRef)([r9]);
  l(() => {
    d16 !== false && e4.current[e4.current.length - 1] !== r9 && (e4.current.push(r9), i8(false));
  }, [e4, r9]);
  let a11 = (0, import_react92.useMemo)(() => ({ show: r9, appear: s17, initial: d16 }), [r9, s17, d16]);
  (0, import_react92.useEffect)(() => {
    if (r9) u13("visible");
    else if (!U6(g5)) u13("hidden");
    else {
      let T7 = p7.current;
      if (!T7) return;
      let l13 = T7.getBoundingClientRect();
      l13.x === 0 && l13.y === 0 && l13.width === 0 && l13.height === 0 && u13("hidden");
    }
  }, [r9, g5]);
  let o13 = { unmount: R4 }, f14 = o2(() => {
    var T7;
    d16 && i8(false), (T7 = t18.beforeEnter) == null || T7.call(t18);
  }), N7 = o2(() => {
    var T7;
    d16 && i8(false), (T7 = t18.beforeLeave) == null || T7.call(t18);
  });
  return import_react92.default.createElement(M6.Provider, { value: g5 }, import_react92.default.createElement(I10.Provider, { value: a11 }, C({ ourProps: { ...o13, as: import_react92.Fragment, children: import_react92.default.createElement(ue6, { ref: x4, ...o13, ...D7, beforeEnter: f14, beforeLeave: N7 }) }, theirProps: {}, defaultTag: import_react92.Fragment, features: le2, visible: v6 === "visible", name: "Transition" })));
}
function _e4(t18, n7) {
  let r9 = (0, import_react92.useContext)(I10) !== null, s17 = u5() !== null;
  return import_react92.default.createElement(import_react92.default.Fragment, null, !r9 && s17 ? import_react92.default.createElement(q5, { ref: n7, ...t18 }) : import_react92.default.createElement(ue6, { ref: n7, ...t18 }));
}
var q5 = U(Fe4);
var ue6 = U(He4);
var Le4 = U(_e4);
var qe6 = Object.assign(q5, { Child: Le4, Root: q5 });

// node_modules/.pnpm/@graphiql+react@0.29.0_@codemirror+language@6.0.0_graphql@16.11.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@graphiql/react/dist/index.mjs
var import_react_dom2 = __toESM(require_react_dom(), 1);
function createNullableContext(name) {
  const context = (0, import_react93.createContext)(null);
  context.displayName = name;
  return context;
}
function createContextHook(context) {
  function useGivenContext(options) {
    var _a;
    const value = (0, import_react93.useContext)(context);
    if (value === null && (options == null ? void 0 : options.nonNull)) {
      throw new Error(`Tried to use \`${((_a = options.caller) == null ? void 0 : _a.name) || "a component"}\` without the necessary context. Make sure to render the \`${context.displayName}Provider\` component higher up the tree.`);
    }
    return value;
  }
  Object.defineProperty(useGivenContext, "name", {
    value: `use${context.displayName}`
  });
  return useGivenContext;
}
var StorageContext = createNullableContext("StorageContext");
function StorageContextProvider(props) {
  const $6 = (0, import_react_compiler_runtime.c)(8);
  const isInitialRender = (0, import_react93.useRef)(true);
  let t0;
  if ($6[0] !== props.storage) {
    t0 = () => new StorageAPI(props.storage);
    $6[0] = props.storage;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  const [storage, setStorage] = (0, import_react93.useState)(t0);
  let t1;
  let t22;
  if ($6[2] !== props.storage) {
    t1 = () => {
      if (isInitialRender.current) {
        isInitialRender.current = false;
      } else {
        setStorage(new StorageAPI(props.storage));
      }
    };
    t22 = [props.storage];
    $6[2] = props.storage;
    $6[3] = t1;
    $6[4] = t22;
  } else {
    t1 = $6[3];
    t22 = $6[4];
  }
  (0, import_react93.useEffect)(t1, t22);
  let t32;
  if ($6[5] !== props.children || $6[6] !== storage) {
    t32 = (0, import_jsx_runtime.jsx)(StorageContext.Provider, { value: storage, children: props.children });
    $6[5] = props.children;
    $6[6] = storage;
    $6[7] = t32;
  } else {
    t32 = $6[7];
  }
  return t32;
}
var useStorageContext = createContextHook(StorageContext);
var SvgArgument = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("rect", { x: 6, y: 6, width: 2, height: 2, rx: 1, fill: "currentColor" }));
var SvgChevronDown = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", strokeWidth: 1.5 }));
var SvgChevronLeft = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 7 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M6 1.04819L2 5.04819L6 9.04819", stroke: "currentColor", strokeWidth: 1.75 }));
var SvgChevronUp = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M13 8L7 2L1 8", stroke: "currentColor", strokeWidth: 1.5 }));
var SvgClose = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", stroke: "currentColor", strokeWidth: 3, xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M1 1L12.9998 12.9997" }), React12.createElement("path", { d: "M13 1L1.00079 13.0003" }));
var SvgCopy = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M11.25 14.2105V15.235C11.25 16.3479 10.3479 17.25 9.23501 17.25H2.76499C1.65214 17.25 0.75 16.3479 0.75 15.235L0.75 8.76499C0.75 7.65214 1.65214 6.75 2.76499 6.75L3.78947 6.75", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("rect", { x: 6.75, y: 0.75, width: 10.5, height: 10.5, rx: 2.2069, stroke: "currentColor", strokeWidth: 1.5 }));
var SvgDeprecatedArgument = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M5 9L9 5", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M5 5L9 9", stroke: "currentColor", strokeWidth: 1.2 }));
var SvgDeprecatedEnumValue = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" }));
var SvgDeprecatedField = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 0.6, y: 0.6, width: 10.8, height: 10.8, rx: 3.4, stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }));
var SvgDirective = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0.5 12 12", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 7, y: 5.5, width: 2, height: 2, rx: 1, transform: "rotate(90 7 5.5)", fill: "currentColor" }), React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M10.8 9L10.8 9.5C10.8 10.4941 9.99411 11.3 9 11.3L3 11.3C2.00589 11.3 1.2 10.4941 1.2 9.5L1.2 9L-3.71547e-07 9L-3.93402e-07 9.5C-4.65826e-07 11.1569 1.34314 12.5 3 12.5L9 12.5C10.6569 12.5 12 11.1569 12 9.5L12 9L10.8 9ZM10.8 4L12 4L12 3.5C12 1.84315 10.6569 0.5 9 0.5L3 0.5C1.34315 0.5 -5.87117e-08 1.84315 -1.31135e-07 3.5L-1.5299e-07 4L1.2 4L1.2 3.5C1.2 2.50589 2.00589 1.7 3 1.7L9 1.7C9.99411 1.7 10.8 2.50589 10.8 3.5L10.8 4Z", fill: "currentColor" }));
var SvgDocsFilled = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H17.25C17.8023 0.75 18.25 1.19772 18.25 1.75V5.25", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H18.25C18.8023 5.25 19.25 5.69771 19.25 6.25V22.25C19.25 22.8023 18.8023 23.25 18.25 23.25H3C1.75736 23.25 0.75 22.2426 0.75 21V3Z", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M3 5.25C1.75736 5.25 0.75 4.24264 0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H3ZM13 11L6 11V12.5L13 12.5V11Z", fill: "currentColor" }));
var SvgDocs = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H17.25M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H16.25C16.8023 0.75 17.25 1.19772 17.25 1.75V5.25M0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H17.25", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("line", { x1: 13, y1: 11.75, x2: 6, y2: 11.75, stroke: "currentColor", strokeWidth: 1.5 }));
var SvgEnumValue = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 5, y: 5, width: 2, height: 2, rx: 1, fill: "currentColor" }), React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" }));
var SvgField = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 12 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 0.6, y: 1.1, width: 10.8, height: 10.8, rx: 2.4, stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("rect", { x: 5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" }));
var SvgHistory = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 24 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M1.59375 9.52344L4.87259 12.9944L8.07872 9.41249", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), React12.createElement("path", { d: "M13.75 5.25V10.75H18.75", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), React12.createElement("path", { d: "M4.95427 11.9332C4.55457 10.0629 4.74441 8.11477 5.49765 6.35686C6.25089 4.59894 7.5305 3.11772 9.16034 2.11709C10.7902 1.11647 12.6901 0.645626 14.5986 0.769388C16.5071 0.893151 18.3303 1.60543 19.8172 2.80818C21.3042 4.01093 22.3818 5.64501 22.9017 7.48548C23.4216 9.32595 23.3582 11.2823 22.7203 13.0853C22.0824 14.8883 20.9013 16.4492 19.3396 17.5532C17.778 18.6572 15.9125 19.25 14 19.25", stroke: "currentColor", strokeWidth: 1.5 }));
var SvgImplements = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("circle", { cx: 6, cy: 6, r: 5.4, stroke: "currentColor", strokeWidth: 1.2, strokeDasharray: "4.241025 4.241025", transform: "rotate(22.5)", "transform-origin": "center" }), React12.createElement("circle", { cx: 6, cy: 6, r: 1, fill: "currentColor" }));
var SvgKeyboardShortcut = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 19 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M1.5 14.5653C1.5 15.211 1.75652 15.8303 2.21314 16.2869C2.66975 16.7435 3.28905 17 3.9348 17C4.58054 17 5.19984 16.7435 5.65646 16.2869C6.11307 15.8303 6.36959 15.211 6.36959 14.5653V12.1305H3.9348C3.28905 12.1305 2.66975 12.387 2.21314 12.8437C1.75652 13.3003 1.5 13.9195 1.5 14.5653Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React12.createElement("path", { d: "M3.9348 1.00063C3.28905 1.00063 2.66975 1.25715 2.21314 1.71375C1.75652 2.17035 1.5 2.78964 1.5 3.43537C1.5 4.0811 1.75652 4.70038 2.21314 5.15698C2.66975 5.61358 3.28905 5.8701 3.9348 5.8701H6.36959V3.43537C6.36959 2.78964 6.11307 2.17035 5.65646 1.71375C5.19984 1.25715 4.58054 1.00063 3.9348 1.00063Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React12.createElement("path", { d: "M15.0652 12.1305H12.6304V14.5653C12.6304 15.0468 12.7732 15.5175 13.0407 15.9179C13.3083 16.3183 13.6885 16.6304 14.1334 16.8147C14.5783 16.9989 15.0679 17.0472 15.5402 16.9532C16.0125 16.8593 16.4464 16.6274 16.7869 16.2869C17.1274 15.9464 17.3593 15.5126 17.4532 15.0403C17.5472 14.568 17.4989 14.0784 17.3147 13.6335C17.1304 13.1886 16.8183 12.8084 16.4179 12.5409C16.0175 12.2733 15.5468 12.1305 15.0652 12.1305Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React12.createElement("path", { d: "M12.6318 5.86775H6.36955V12.1285H12.6318V5.86775Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), React12.createElement("path", { d: "M17.5 3.43473C17.5 2.789 17.2435 2.16972 16.7869 1.71312C16.3303 1.25652 15.711 1 15.0652 1C14.4195 1 13.8002 1.25652 13.3435 1.71312C12.8869 2.16972 12.6304 2.789 12.6304 3.43473V5.86946H15.0652C15.711 5.86946 16.3303 5.61295 16.7869 5.15635C17.2435 4.69975 17.5 4.08046 17.5 3.43473Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }));
var SvgMagnifyingGlass = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("circle", { cx: 5, cy: 5, r: 4.35, stroke: "currentColor", strokeWidth: 1.3 }), React12.createElement("line", { x1: 8.45962, y1: 8.54038, x2: 11.7525, y2: 11.8333, stroke: "currentColor", strokeWidth: 1.3 }));
var SvgMerge = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M17.2492 6V2.9569C17.2492 1.73806 16.2611 0.75 15.0423 0.75L2.9569 0.75C1.73806 0.75 0.75 1.73806 0.75 2.9569L0.75 6", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("path", { d: "M0.749873 12V15.0431C0.749873 16.2619 1.73794 17.25 2.95677 17.25H15.0421C16.261 17.25 17.249 16.2619 17.249 15.0431V12", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("path", { d: "M6 4.5L9 7.5L12 4.5", stroke: "currentColor", strokeWidth: 1.5 }), React12.createElement("path", { d: "M12 13.5L9 10.5L6 13.5", stroke: "currentColor", strokeWidth: 1.5 }));
var SvgPen = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M0.75 13.25L0.0554307 12.967C-0.0593528 13.2488 0.00743073 13.5719 0.224488 13.7851C0.441545 13.9983 0.765869 14.0592 1.04549 13.9393L0.75 13.25ZM12.8214 1.83253L12.2911 2.36286L12.2911 2.36286L12.8214 1.83253ZM12.8214 3.90194L13.3517 4.43227L12.8214 3.90194ZM10.0981 1.17859L9.56773 0.648259L10.0981 1.17859ZM12.1675 1.17859L12.6978 0.648258L12.6978 0.648257L12.1675 1.17859ZM2.58049 8.75697L3.27506 9.03994L2.58049 8.75697ZM2.70066 8.57599L3.23099 9.10632L2.70066 8.57599ZM5.2479 11.4195L4.95355 10.7297L5.2479 11.4195ZM5.42036 11.303L4.89003 10.7727L5.42036 11.303ZM4.95355 10.7297C4.08882 11.0987 3.41842 11.362 2.73535 11.6308C2.05146 11.9 1.35588 12.1743 0.454511 12.5607L1.04549 13.9393C1.92476 13.5624 2.60256 13.2951 3.28469 13.0266C3.96762 12.7578 4.65585 12.4876 5.54225 12.1093L4.95355 10.7297ZM1.44457 13.533L3.27506 9.03994L1.88592 8.474L0.0554307 12.967L1.44457 13.533ZM3.23099 9.10632L10.6284 1.70892L9.56773 0.648259L2.17033 8.04566L3.23099 9.10632ZM11.6371 1.70892L12.2911 2.36286L13.3517 1.3022L12.6978 0.648258L11.6371 1.70892ZM12.2911 3.37161L4.89003 10.7727L5.95069 11.8333L13.3517 4.43227L12.2911 3.37161ZM12.2911 2.36286C12.5696 2.64142 12.5696 3.09305 12.2911 3.37161L13.3517 4.43227C14.2161 3.56792 14.2161 2.16654 13.3517 1.3022L12.2911 2.36286ZM10.6284 1.70892C10.9069 1.43036 11.3586 1.43036 11.6371 1.70892L12.6978 0.648257C11.8335 -0.216088 10.4321 -0.216084 9.56773 0.648259L10.6284 1.70892ZM3.27506 9.03994C3.26494 9.06479 3.24996 9.08735 3.23099 9.10632L2.17033 8.04566C2.04793 8.16806 1.95123 8.31369 1.88592 8.474L3.27506 9.03994ZM5.54225 12.1093C5.69431 12.0444 5.83339 11.9506 5.95069 11.8333L4.89003 10.7727C4.90863 10.7541 4.92988 10.7398 4.95355 10.7297L5.54225 12.1093Z", fill: "currentColor" }), React12.createElement("path", { d: "M11.5 4.5L9.5 2.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }), React12.createElement("path", { d: "M5.5 10.5L3.5 8.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }));
var SvgPlay = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 16 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M1.32226e-07 1.6609C7.22332e-08 0.907329 0.801887 0.424528 1.46789 0.777117L15.3306 8.11621C16.0401 8.49182 16.0401 9.50818 15.3306 9.88379L1.46789 17.2229C0.801886 17.5755 1.36076e-06 17.0927 1.30077e-06 16.3391L1.32226e-07 1.6609Z", fill: "currentColor" }));
var SvgPlus = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 10 16", fill: "currentColor", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.25 9.25V13.5H5.75V9.25L10 9.25V7.75L5.75 7.75V3.5H4.25V7.75L0 7.75V9.25L4.25 9.25Z" }));
var SvgPrettify = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { width: 25, height: 25, viewBox: "0 0 25 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M10.2852 24.0745L13.7139 18.0742", stroke: "currentColor", strokeWidth: 1.5625 }), React12.createElement("path", { d: "M14.5742 24.0749L17.1457 19.7891", stroke: "currentColor", strokeWidth: 1.5625 }), React12.createElement("path", { d: "M19.4868 24.0735L20.7229 21.7523C21.3259 20.6143 21.5457 19.3122 21.3496 18.0394C21.1535 16.7666 20.5519 15.591 19.6342 14.6874L23.7984 6.87853C24.0123 6.47728 24.0581 6.00748 23.9256 5.57249C23.7932 5.1375 23.4933 4.77294 23.0921 4.55901C22.6908 4.34509 22.221 4.29932 21.7861 4.43178C21.3511 4.56424 20.9865 4.86408 20.7726 5.26533L16.6084 13.0742C15.3474 12.8142 14.0362 12.9683 12.8699 13.5135C11.7035 14.0586 10.7443 14.9658 10.135 16.1L6 24.0735", stroke: "currentColor", strokeWidth: 1.5625 }), React12.createElement("path", { d: "M4 15L5 13L7 12L5 11L4 9L3 11L1 12L3 13L4 15Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }), React12.createElement("path", { d: "M11.5 8L12.6662 5.6662L15 4.5L12.6662 3.3338L11.5 1L10.3338 3.3338L8 4.5L10.3338 5.6662L11.5 8Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }));
var SvgReload = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M4.75 9.25H1.25V12.75", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), React12.createElement("path", { d: "M11.25 6.75H14.75V3.25", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), React12.createElement("path", { d: "M14.1036 6.65539C13.8 5.27698 13.0387 4.04193 11.9437 3.15131C10.8487 2.26069 9.48447 1.76694 8.0731 1.75043C6.66173 1.73392 5.28633 2.19563 4.17079 3.0604C3.05526 3.92516 2.26529 5.14206 1.92947 6.513", stroke: "currentColor", strokeWidth: 1 }), React12.createElement("path", { d: "M1.89635 9.34461C2.20001 10.723 2.96131 11.9581 4.05631 12.8487C5.15131 13.7393 6.51553 14.2331 7.9269 14.2496C9.33827 14.2661 10.7137 13.8044 11.8292 12.9396C12.9447 12.0748 13.7347 10.8579 14.0705 9.487", stroke: "currentColor", strokeWidth: 1 }));
var SvgRootType = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("path", { d: "M4.25 7.5C4.25 6 5.75 5 6.5 6.5C7.25 8 8.75 7 8.75 5.5", stroke: "currentColor", strokeWidth: 1.2 }));
var SvgSettings = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 21 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.29186 1.92702C9.06924 1.82745 8.87014 1.68202 8.70757 1.50024L7.86631 0.574931C7.62496 0.309957 7.30773 0.12592 6.95791 0.0479385C6.60809 -0.0300431 6.24274 0.00182978 5.91171 0.139208C5.58068 0.276585 5.3001 0.512774 5.10828 0.815537C4.91645 1.1183 4.82272 1.47288 4.83989 1.83089L4.90388 3.08019C4.91612 3.32348 4.87721 3.56662 4.78968 3.79394C4.70215 4.02126 4.56794 4.2277 4.39571 4.39994C4.22347 4.57219 4.01704 4.7064 3.78974 4.79394C3.56243 4.88147 3.3193 4.92038 3.07603 4.90814L1.8308 4.84414C1.47162 4.82563 1.11553 4.91881 0.811445 5.11086C0.507359 5.30292 0.270203 5.58443 0.132561 5.91671C-0.00508149 6.249 -0.0364554 6.61576 0.0427496 6.9666C0.121955 7.31744 0.307852 7.63514 0.5749 7.87606L1.50016 8.71204C1.68193 8.87461 1.82735 9.07373 1.92692 9.29636C2.02648 9.51898 2.07794 9.76012 2.07794 10.004C2.07794 10.2479 2.02648 10.489 1.92692 10.7116C1.82735 10.9343 1.68193 11.1334 1.50016 11.296L0.5749 12.1319C0.309856 12.3729 0.125575 12.6898 0.0471809 13.0393C-0.0312128 13.3888 9.64098e-05 13.754 0.13684 14.0851C0.273583 14.4162 0.509106 14.6971 0.811296 14.8894C1.11349 15.0817 1.46764 15.1762 1.82546 15.1599L3.0707 15.0959C3.31397 15.0836 3.5571 15.1225 3.7844 15.2101C4.01171 15.2976 4.21814 15.4318 4.39037 15.6041C4.56261 15.7763 4.69682 15.9827 4.78435 16.2101C4.87188 16.4374 4.91078 16.6805 4.89855 16.9238L4.83455 18.1691C4.81605 18.5283 4.90921 18.8844 5.10126 19.1885C5.2933 19.4926 5.5748 19.7298 5.90707 19.8674C6.23934 20.0051 6.60608 20.0365 6.9569 19.9572C7.30772 19.878 7.6254 19.6921 7.86631 19.4251L8.7129 18.4998C8.87547 18.318 9.07458 18.1725 9.29719 18.073C9.51981 17.9734 9.76093 17.9219 10.0048 17.9219C10.2487 17.9219 10.4898 17.9734 10.7124 18.073C10.935 18.1725 11.1341 18.318 11.2967 18.4998L12.1326 19.4251C12.3735 19.6921 12.6912 19.878 13.042 19.9572C13.3929 20.0365 13.7596 20.0051 14.0919 19.8674C14.4241 19.7298 14.7056 19.4926 14.8977 19.1885C15.0897 18.8844 15.1829 18.5283 15.1644 18.1691L15.1004 16.9238C15.0882 16.6805 15.1271 16.4374 15.2146 16.2101C15.3021 15.9827 15.4363 15.7763 15.6086 15.6041C15.7808 15.4318 15.9872 15.2976 16.2145 15.2101C16.4418 15.1225 16.685 15.0836 16.9282 15.0959L18.1735 15.1599C18.5326 15.1784 18.8887 15.0852 19.1928 14.8931C19.4969 14.7011 19.7341 14.4196 19.8717 14.0873C20.0093 13.755 20.0407 13.3882 19.9615 13.0374C19.8823 12.6866 19.6964 12.3689 19.4294 12.1279L18.5041 11.292C18.3223 11.1294 18.1769 10.9303 18.0774 10.7076C17.9778 10.485 17.9263 10.2439 17.9263 10C17.9263 9.75612 17.9778 9.51499 18.0774 9.29236C18.1769 9.06973 18.3223 8.87062 18.5041 8.70804L19.4294 7.87206C19.6964 7.63114 19.8823 7.31344 19.9615 6.9626C20.0407 6.61176 20.0093 6.245 19.8717 5.91271C19.7341 5.58043 19.4969 5.29892 19.1928 5.10686C18.8887 4.91481 18.5326 4.82163 18.1735 4.84014L16.9282 4.90414C16.685 4.91638 16.4418 4.87747 16.2145 4.78994C15.9872 4.7024 15.7808 4.56818 15.6086 4.39594C15.4363 4.2237 15.3021 4.01726 15.2146 3.78994C15.1271 3.56262 15.0882 3.31948 15.1004 3.07619L15.1644 1.83089C15.1829 1.4717 15.0897 1.11559 14.8977 0.811487C14.7056 0.507385 14.4241 0.270217 14.0919 0.132568C13.7596 -0.00508182 13.3929 -0.0364573 13.042 0.0427519C12.6912 0.121961 12.3735 0.307869 12.1326 0.574931L11.2914 1.50024C11.1288 1.68202 10.9297 1.82745 10.7071 1.92702C10.4845 2.02659 10.2433 2.07805 9.99947 2.07805C9.7556 2.07805 9.51448 2.02659 9.29186 1.92702ZM14.3745 10C14.3745 12.4162 12.4159 14.375 9.99977 14.375C7.58365 14.375 5.625 12.4162 5.625 10C5.625 7.58375 7.58365 5.625 9.99977 5.625C12.4159 5.625 14.3745 7.58375 14.3745 10Z", fill: "currentColor" }));
var SvgStarFilled = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", fill: "currentColor", stroke: "currentColor" }));
var SvgStar = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", stroke: "currentColor", strokeWidth: 1.5 }));
var SvgStop = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { width: 16, height: 16, rx: 2, fill: "currentColor" }));
var SvgTrash = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { width: "1em", height: "5em", xmlns: "http://www.w3.org/2000/svg", fillRule: "evenodd", "aria-hidden": "true", viewBox: "0 0 23 23", style: {
  height: "1.5em"
}, clipRule: "evenodd", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("path", { d: "M19 24h-14c-1.104 0-2-.896-2-2v-17h-1v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2h-1v17c0 1.104-.896 2-2 2zm0-19h-14v16.5c0 .276.224.5.5.5h13c.276 0 .5-.224.5-.5v-16.5zm-7 7.586l3.293-3.293 1.414 1.414-3.293 3.293 3.293 3.293-1.414 1.414-3.293-3.293-3.293 3.293-1.414-1.414 3.293-3.293-3.293-3.293 1.414-1.414 3.293 3.293zm2-10.586h-4v1h4v-1z", fill: "currentColor", strokeWidth: 0.25, stroke: "currentColor" }));
var SvgType = ({
  title,
  titleId,
  ...props
}) => React12.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": titleId, ...props }, title ? React12.createElement("title", { id: titleId }, title) : null, React12.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), React12.createElement("rect", { x: 5.5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" }));
var ArgumentIcon = generateIcon(SvgArgument);
var ChevronDownIcon = generateIcon(SvgChevronDown);
var ChevronLeftIcon = generateIcon(SvgChevronLeft);
var ChevronUpIcon = generateIcon(SvgChevronUp);
var CloseIcon = generateIcon(SvgClose);
var CopyIcon = generateIcon(SvgCopy);
var DeprecatedArgumentIcon = generateIcon(SvgDeprecatedArgument);
var DeprecatedEnumValueIcon = generateIcon(SvgDeprecatedEnumValue);
var DeprecatedFieldIcon = generateIcon(SvgDeprecatedField);
var DirectiveIcon = generateIcon(SvgDirective);
var DocsFilledIcon = generateIcon(SvgDocsFilled);
var DocsIcon = generateIcon(SvgDocs);
var EnumValueIcon = generateIcon(SvgEnumValue);
var FieldIcon = generateIcon(SvgField);
var HistoryIcon = generateIcon(SvgHistory);
var ImplementsIcon = generateIcon(SvgImplements);
var KeyboardShortcutIcon = generateIcon(SvgKeyboardShortcut);
var MagnifyingGlassIcon = generateIcon(SvgMagnifyingGlass);
var MergeIcon = generateIcon(SvgMerge);
var PenIcon = generateIcon(SvgPen);
var PlayIcon = generateIcon(SvgPlay);
var PlusIcon = generateIcon(SvgPlus);
var PrettifyIcon = generateIcon(SvgPrettify);
var ReloadIcon = generateIcon(SvgReload);
var RootTypeIcon = generateIcon(SvgRootType);
var SettingsIcon = generateIcon(SvgSettings);
var StarFilledIcon = generateIcon(SvgStarFilled);
var StarIcon = generateIcon(SvgStar);
var StopIcon = generateIcon(SvgStop);
var TrashIcon = generateIcon(SvgTrash);
var TypeIcon = generateIcon(SvgType);
function generateIcon(RawComponent) {
  const title = RawComponent.name.replace("Svg", "").replaceAll(/([A-Z])/g, " $1").trimStart().toLowerCase() + " icon";
  function IconComponent(props) {
    const $6 = (0, import_react_compiler_runtime.c)(2);
    let t0;
    if ($6[0] !== props) {
      t0 = (0, import_jsx_runtime.jsx)(RawComponent, { title, ...props });
      $6[0] = props;
      $6[1] = t0;
    } else {
      t0 = $6[1];
    }
    return t0;
  }
  IconComponent.displayName = RawComponent.name;
  return IconComponent;
}
var UnStyledButton = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-un-styled", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props || $6[3] !== ref || $6[4] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)("button", { ...props, ref, className: t0 });
    $6[2] = props;
    $6[3] = ref;
    $6[4] = t0;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  return t1;
});
UnStyledButton.displayName = "UnStyledButton";
var Button$1 = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  let t0;
  if ($6[0] !== props.className || $6[1] !== props.state) {
    t0 = clsx("graphiql-button", {
      success: "graphiql-button-success",
      error: "graphiql-button-error"
    }[props.state], props.className);
    $6[0] = props.className;
    $6[1] = props.state;
    $6[2] = t0;
  } else {
    t0 = $6[2];
  }
  let t1;
  if ($6[3] !== props || $6[4] !== ref || $6[5] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)("button", { ...props, ref, className: t0 });
    $6[3] = props;
    $6[4] = ref;
    $6[5] = t0;
    $6[6] = t1;
  } else {
    t1 = $6[6];
  }
  return t1;
});
Button$1.displayName = "Button";
var ButtonGroup = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-button-group", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props || $6[3] !== ref || $6[4] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)("div", { ...props, ref, className: t0 });
    $6[2] = props;
    $6[3] = ref;
    $6[4] = t0;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  return t1;
});
ButtonGroup.displayName = "ButtonGroup";
var createComponentGroup = (root, children) => Object.entries(children).reduce((r9, [key, value]) => {
  r9[key] = value;
  return r9;
}, root);
var DialogClose = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(8);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-dialog-close", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  let t22;
  if ($6[2] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime.jsx)(Root2, { children: "Close dialog" });
    t22 = (0, import_jsx_runtime.jsx)(CloseIcon, {});
    $6[2] = t1;
    $6[3] = t22;
  } else {
    t1 = $6[2];
    t22 = $6[3];
  }
  let t32;
  if ($6[4] !== props || $6[5] !== ref || $6[6] !== t0) {
    t32 = (0, import_jsx_runtime.jsx)(Close, { asChild: true, children: (0, import_jsx_runtime.jsxs)(UnStyledButton, { ...props, ref, type: "button", className: t0, children: [
      t1,
      t22
    ] }) });
    $6[4] = props;
    $6[5] = ref;
    $6[6] = t0;
    $6[7] = t32;
  } else {
    t32 = $6[7];
  }
  return t32;
});
DialogClose.displayName = "Dialog.Close";
function DialogRoot(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(9);
  let children;
  let props;
  if ($6[0] !== t0) {
    ({
      children,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = props;
  } else {
    children = $6[1];
    props = $6[2];
  }
  let t1;
  if ($6[3] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime.jsx)(Overlay, { className: "graphiql-dialog-overlay" });
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  let t22;
  if ($6[4] !== children) {
    t22 = (0, import_jsx_runtime.jsxs)(Portal, { children: [
      t1,
      (0, import_jsx_runtime.jsx)(Content, { className: "graphiql-dialog", children })
    ] });
    $6[4] = children;
    $6[5] = t22;
  } else {
    t22 = $6[5];
  }
  let t32;
  if ($6[6] !== props || $6[7] !== t22) {
    t32 = (0, import_jsx_runtime.jsx)(Root, { ...props, children: t22 });
    $6[6] = props;
    $6[7] = t22;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  return t32;
}
var Dialog = createComponentGroup(DialogRoot, {
  Close: DialogClose,
  Title,
  Trigger,
  Description
});
var Button = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-un-styled", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props || $6[3] !== ref || $6[4] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)(Trigger2, { asChild: true, children: (0, import_jsx_runtime.jsx)("button", { ...props, ref, className: t0 }) });
    $6[2] = props;
    $6[3] = ref;
    $6[4] = t0;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  return t1;
});
Button.displayName = "DropdownMenuButton";
function Content3(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(14);
  let children;
  let className;
  let props;
  let t1;
  let t22;
  if ($6[0] !== t0) {
    ({
      children,
      align: t1,
      sideOffset: t22,
      className,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = className;
    $6[3] = props;
    $6[4] = t1;
    $6[5] = t22;
  } else {
    children = $6[1];
    className = $6[2];
    props = $6[3];
    t1 = $6[4];
    t22 = $6[5];
  }
  const align = t1 === void 0 ? "start" : t1;
  const sideOffset = t22 === void 0 ? 5 : t22;
  let t32;
  if ($6[6] !== className) {
    t32 = clsx("graphiql-dropdown-content", className);
    $6[6] = className;
    $6[7] = t32;
  } else {
    t32 = $6[7];
  }
  let t42;
  if ($6[8] !== align || $6[9] !== children || $6[10] !== props || $6[11] !== sideOffset || $6[12] !== t32) {
    t42 = (0, import_jsx_runtime.jsx)(Portal2, { children: (0, import_jsx_runtime.jsx)(Content2, { align, sideOffset, className: t32, ...props, children }) });
    $6[8] = align;
    $6[9] = children;
    $6[10] = props;
    $6[11] = sideOffset;
    $6[12] = t32;
    $6[13] = t42;
  } else {
    t42 = $6[13];
  }
  return t42;
}
var Item3 = (t0) => {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  let children;
  let className;
  let props;
  if ($6[0] !== t0) {
    ({
      className,
      children,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = className;
    $6[3] = props;
  } else {
    children = $6[1];
    className = $6[2];
    props = $6[3];
  }
  let t1;
  if ($6[4] !== className) {
    t1 = clsx("graphiql-dropdown-item", className);
    $6[4] = className;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  let t22;
  if ($6[6] !== children || $6[7] !== props || $6[8] !== t1) {
    t22 = (0, import_jsx_runtime.jsx)(Item2, { className: t1, ...props, children });
    $6[6] = children;
    $6[7] = props;
    $6[8] = t1;
    $6[9] = t22;
  } else {
    t22 = $6[9];
  }
  return t22;
};
var DropdownMenu = createComponentGroup(Root22, {
  Button,
  Item: Item3,
  Content: Content3
});
var markdown = new lib_default({
  breaks: true,
  linkify: true
});
var MarkdownContent = (0, import_react93.forwardRef)((t0, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(18);
  let children;
  let onlyShowFirstChild;
  let props;
  let type;
  if ($6[0] !== t0) {
    ({
      children,
      onlyShowFirstChild,
      type,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = onlyShowFirstChild;
    $6[3] = props;
    $6[4] = type;
  } else {
    children = $6[1];
    onlyShowFirstChild = $6[2];
    props = $6[3];
    type = $6[4];
  }
  const t1 = `graphiql-markdown-${type}`;
  const t22 = onlyShowFirstChild && "graphiql-markdown-preview";
  let t32;
  if ($6[5] !== props.className || $6[6] !== t1 || $6[7] !== t22) {
    t32 = clsx(t1, t22, props.className);
    $6[5] = props.className;
    $6[6] = t1;
    $6[7] = t22;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  let t42;
  if ($6[9] !== children) {
    t42 = markdown.render(children);
    $6[9] = children;
    $6[10] = t42;
  } else {
    t42 = $6[10];
  }
  let t52;
  if ($6[11] !== t42) {
    t52 = {
      __html: t42
    };
    $6[11] = t42;
    $6[12] = t52;
  } else {
    t52 = $6[12];
  }
  let t62;
  if ($6[13] !== props || $6[14] !== ref || $6[15] !== t32 || $6[16] !== t52) {
    t62 = (0, import_jsx_runtime.jsx)("div", { ...props, ref, className: t32, dangerouslySetInnerHTML: t52 });
    $6[13] = props;
    $6[14] = ref;
    $6[15] = t32;
    $6[16] = t52;
    $6[17] = t62;
  } else {
    t62 = $6[17];
  }
  return t62;
});
MarkdownContent.displayName = "MarkdownContent";
var Spinner = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-spinner", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props || $6[3] !== ref || $6[4] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)("div", { ...props, ref, className: t0 });
    $6[2] = props;
    $6[3] = ref;
    $6[4] = t0;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  return t1;
});
Spinner.displayName = "Spinner";
function TooltipRoot(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  const {
    children,
    align: t1,
    side: t22,
    sideOffset: t32,
    label
  } = t0;
  const align = t1 === void 0 ? "start" : t1;
  const side = t22 === void 0 ? "bottom" : t22;
  const sideOffset = t32 === void 0 ? 5 : t32;
  let t42;
  if ($6[0] !== children) {
    t42 = (0, import_jsx_runtime.jsx)(Trigger3, { asChild: true, children });
    $6[0] = children;
    $6[1] = t42;
  } else {
    t42 = $6[1];
  }
  let t52;
  if ($6[2] !== align || $6[3] !== label || $6[4] !== side || $6[5] !== sideOffset) {
    t52 = (0, import_jsx_runtime.jsx)(Portal3, { children: (0, import_jsx_runtime.jsx)(Content22, { className: "graphiql-tooltip", align, side, sideOffset, children: label }) });
    $6[2] = align;
    $6[3] = label;
    $6[4] = side;
    $6[5] = sideOffset;
    $6[6] = t52;
  } else {
    t52 = $6[6];
  }
  let t62;
  if ($6[7] !== t42 || $6[8] !== t52) {
    t62 = (0, import_jsx_runtime.jsxs)(Root3, { children: [
      t42,
      t52
    ] });
    $6[7] = t42;
    $6[8] = t52;
    $6[9] = t62;
  } else {
    t62 = $6[9];
  }
  return t62;
}
var Tooltip = createComponentGroup(TooltipRoot, {
  Provider
});
var TabRoot = (0, import_react93.forwardRef)((t0, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(16);
  let children;
  let className;
  let isActive;
  let props;
  let value;
  if ($6[0] !== t0) {
    ({
      isActive,
      value,
      children,
      className,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = className;
    $6[3] = isActive;
    $6[4] = props;
    $6[5] = value;
  } else {
    children = $6[1];
    className = $6[2];
    isActive = $6[3];
    props = $6[4];
    value = $6[5];
  }
  const t1 = isActive ? "true" : void 0;
  const t22 = isActive && "graphiql-tab-active";
  let t32;
  if ($6[6] !== className || $6[7] !== t22) {
    t32 = clsx("graphiql-tab", t22, className);
    $6[6] = className;
    $6[7] = t22;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  let t42;
  if ($6[9] !== children || $6[10] !== props || $6[11] !== ref || $6[12] !== t1 || $6[13] !== t32 || $6[14] !== value) {
    t42 = (0, import_jsx_runtime.jsx)(Reorder.Item, { ...props, ref, value, "aria-selected": t1, role: "tab", className: t32, children });
    $6[9] = children;
    $6[10] = props;
    $6[11] = ref;
    $6[12] = t1;
    $6[13] = t32;
    $6[14] = value;
    $6[15] = t42;
  } else {
    t42 = $6[15];
  }
  return t42;
});
TabRoot.displayName = "Tab";
var TabButton = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-tab-button", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props || $6[3] !== ref || $6[4] !== t0) {
    t1 = (0, import_jsx_runtime.jsx)(UnStyledButton, { ...props, ref, type: "button", className: t0, children: props.children });
    $6[2] = props;
    $6[3] = ref;
    $6[4] = t0;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  return t1;
});
TabButton.displayName = "Tab.Button";
var TabClose = (0, import_react93.forwardRef)((props, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  let t0;
  if ($6[0] !== props.className) {
    t0 = clsx("graphiql-tab-close", props.className);
    $6[0] = props.className;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime.jsx)(CloseIcon, {});
    $6[2] = t1;
  } else {
    t1 = $6[2];
  }
  let t22;
  if ($6[3] !== props || $6[4] !== ref || $6[5] !== t0) {
    t22 = (0, import_jsx_runtime.jsx)(Tooltip, { label: "Close Tab", children: (0, import_jsx_runtime.jsx)(UnStyledButton, { "aria-label": "Close Tab", ...props, ref, type: "button", className: t0, children: t1 }) });
    $6[3] = props;
    $6[4] = ref;
    $6[5] = t0;
    $6[6] = t22;
  } else {
    t22 = $6[6];
  }
  return t22;
});
TabClose.displayName = "Tab.Close";
var Tab = createComponentGroup(TabRoot, {
  Button: TabButton,
  Close: TabClose
});
var Tabs = (0, import_react93.forwardRef)((t0, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(15);
  let children;
  let className;
  let onReorder;
  let props;
  let values;
  if ($6[0] !== t0) {
    ({
      values,
      onReorder,
      children,
      className,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = children;
    $6[2] = className;
    $6[3] = onReorder;
    $6[4] = props;
    $6[5] = values;
  } else {
    children = $6[1];
    className = $6[2];
    onReorder = $6[3];
    props = $6[4];
    values = $6[5];
  }
  let t1;
  if ($6[6] !== className) {
    t1 = clsx("graphiql-tabs", className);
    $6[6] = className;
    $6[7] = t1;
  } else {
    t1 = $6[7];
  }
  let t22;
  if ($6[8] !== children || $6[9] !== onReorder || $6[10] !== props || $6[11] !== ref || $6[12] !== t1 || $6[13] !== values) {
    t22 = (0, import_jsx_runtime.jsx)(Reorder.Group, { ...props, ref, values, onReorder, axis: "x", role: "tablist", className: t1, children });
    $6[8] = children;
    $6[9] = onReorder;
    $6[10] = props;
    $6[11] = ref;
    $6[12] = t1;
    $6[13] = values;
    $6[14] = t22;
  } else {
    t22 = $6[14];
  }
  return t22;
});
Tabs.displayName = "Tabs";
var HistoryContext = createNullableContext("HistoryContext");
function HistoryContextProvider(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(11);
  const {
    maxHistoryLength: t1,
    children
  } = t0;
  const maxHistoryLength = t1 === void 0 ? DEFAULT_HISTORY_LENGTH : t1;
  const storage = useStorageContext();
  let t22;
  if ($6[0] !== maxHistoryLength || $6[1] !== storage) {
    t22 = () => new HistoryStore(storage || new StorageAPI(null), maxHistoryLength);
    $6[0] = maxHistoryLength;
    $6[1] = storage;
    $6[2] = t22;
  } else {
    t22 = $6[2];
  }
  const [historyStore] = (0, import_react93.useState)(t22);
  let t32;
  if ($6[3] !== historyStore.queries) {
    t32 = () => historyStore.queries || [];
    $6[3] = historyStore.queries;
    $6[4] = t32;
  } else {
    t32 = $6[4];
  }
  const [items, setItems] = (0, import_react93.useState)(t32);
  let t42;
  if ($6[5] !== historyStore || $6[6] !== items) {
    t42 = {
      addToHistory(operation) {
        historyStore.updateHistory(operation);
        setItems(historyStore.queries);
      },
      editLabel(operation_0, index) {
        historyStore.editLabel(operation_0, index);
        setItems(historyStore.queries);
      },
      items,
      toggleFavorite(operation_1) {
        historyStore.toggleFavorite(operation_1);
        setItems(historyStore.queries);
      },
      setActive: _temp$9,
      deleteFromHistory(item_0, clearFavorites) {
        historyStore.deleteHistory(item_0, clearFavorites);
        setItems(historyStore.queries);
      }
    };
    $6[5] = historyStore;
    $6[6] = items;
    $6[7] = t42;
  } else {
    t42 = $6[7];
  }
  const value = t42;
  let t52;
  if ($6[8] !== children || $6[9] !== value) {
    t52 = (0, import_jsx_runtime.jsx)(HistoryContext.Provider, { value, children });
    $6[8] = children;
    $6[9] = value;
    $6[10] = t52;
  } else {
    t52 = $6[10];
  }
  return t52;
}
function _temp$9(item) {
  return item;
}
var useHistoryContext = createContextHook(HistoryContext);
var DEFAULT_HISTORY_LENGTH = 20;
function handleDelete(items, deleteFromHistory) {
  for (const item of items) {
    deleteFromHistory(item, true);
  }
}
function History() {
  const $6 = (0, import_react_compiler_runtime.c)(11);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    items: all,
    deleteFromHistory
  } = useHistoryContext(t0);
  let items;
  items = all.slice().map(_temp$8).reverse();
  const favorites = items.filter(_temp2$5);
  if (favorites.length) {
    items = items.filter(_temp3$4);
  }
  const [clearStatus, setClearStatus] = (0, import_react93.useState)(null);
  let t1;
  let t22;
  if ($6[1] !== clearStatus) {
    t1 = () => {
      if (clearStatus) {
        setTimeout(() => {
          setClearStatus(null);
        }, 2e3);
      }
    };
    t22 = [clearStatus];
    $6[1] = clearStatus;
    $6[2] = t1;
    $6[3] = t22;
  } else {
    t1 = $6[2];
    t22 = $6[3];
  }
  (0, import_react93.useEffect)(t1, t22);
  const handleClearStatus = () => {
    try {
      handleDelete(items, deleteFromHistory);
      setClearStatus("success");
    } catch {
      setClearStatus("error");
    }
  };
  const t32 = "History";
  const t42 = "graphiql-history";
  const t52 = (clearStatus || items.length > 0) && (0, import_jsx_runtime.jsx)(Button$1, { type: "button", state: clearStatus || void 0, disabled: !items.length, onClick: handleClearStatus, children: {
    success: "Cleared",
    error: "Failed to Clear"
  }[clearStatus] || "Clear" });
  let t62;
  if ($6[4] !== t52) {
    t62 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-history-header", children: [
      "History",
      t52
    ] });
    $6[4] = t52;
    $6[5] = t62;
  } else {
    t62 = $6[5];
  }
  const t72 = Boolean(favorites.length) && (0, import_jsx_runtime.jsx)("ul", { className: "graphiql-history-items", children: favorites.map(_temp4$3) });
  const t82 = Boolean(favorites.length) && Boolean(items.length) && (0, import_jsx_runtime.jsx)("div", { className: "graphiql-history-item-spacer" });
  const t92 = Boolean(items.length) && (0, import_jsx_runtime.jsx)("ul", { className: "graphiql-history-items", children: items.map(_temp5$1) });
  let t102;
  if ($6[6] !== t62 || $6[7] !== t72 || $6[8] !== t82 || $6[9] !== t92) {
    t102 = (0, import_jsx_runtime.jsxs)("section", { "aria-label": t32, className: t42, children: [
      t62,
      t72,
      t82,
      t92
    ] });
    $6[6] = t62;
    $6[7] = t72;
    $6[8] = t82;
    $6[9] = t92;
    $6[10] = t102;
  } else {
    t102 = $6[10];
  }
  return t102;
}
function _temp5$1(item_3) {
  return (0, import_jsx_runtime.jsx)(HistoryItem, { item: item_3 }, item_3.index);
}
function _temp4$3(item_2) {
  return (0, import_jsx_runtime.jsx)(HistoryItem, { item: item_2 }, item_2.index);
}
function _temp3$4(item_1) {
  return !item_1.favorite;
}
function _temp2$5(item_0) {
  return item_0.favorite;
}
function _temp$8(item, i8) {
  return {
    ...item,
    index: i8
  };
}
function HistoryItem(props) {
  const $6 = (0, import_react_compiler_runtime.c)(40);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: HistoryItem
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    editLabel,
    toggleFavorite,
    deleteFromHistory,
    setActive
  } = useHistoryContext(t0);
  let t1;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: HistoryItem
    };
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    headerEditor,
    queryEditor,
    variableEditor
  } = useEditorContext(t1);
  const inputRef = (0, import_react93.useRef)(null);
  const buttonRef = (0, import_react93.useRef)(null);
  const [isEditable, setIsEditable] = (0, import_react93.useState)(false);
  let t22;
  let t32;
  if ($6[2] !== isEditable) {
    t22 = () => {
      var _a;
      if (isEditable) {
        (_a = inputRef.current) == null ? void 0 : _a.focus();
      }
    };
    t32 = [isEditable];
    $6[2] = isEditable;
    $6[3] = t22;
    $6[4] = t32;
  } else {
    t22 = $6[3];
    t32 = $6[4];
  }
  (0, import_react93.useEffect)(t22, t32);
  let t42;
  if ($6[5] !== props.item.label || $6[6] !== props.item.operationName || $6[7] !== props.item.query) {
    t42 = props.item.label || props.item.operationName || formatQuery(props.item.query);
    $6[5] = props.item.label;
    $6[6] = props.item.operationName;
    $6[7] = props.item.query;
    $6[8] = t42;
  } else {
    t42 = $6[8];
  }
  const displayName = t42;
  let t52;
  if ($6[9] !== editLabel || $6[10] !== props.item) {
    t52 = () => {
      var _a;
      setIsEditable(false);
      const {
        index,
        ...item
      } = props.item;
      editLabel({
        ...item,
        label: (_a = inputRef.current) == null ? void 0 : _a.value
      }, index);
    };
    $6[9] = editLabel;
    $6[10] = props.item;
    $6[11] = t52;
  } else {
    t52 = $6[11];
  }
  const handleSave = t52;
  let t62;
  if ($6[12] === Symbol.for("react.memo_cache_sentinel")) {
    t62 = () => {
      setIsEditable(false);
    };
    $6[12] = t62;
  } else {
    t62 = $6[12];
  }
  const handleClose = t62;
  let t72;
  if ($6[13] === Symbol.for("react.memo_cache_sentinel")) {
    t72 = (e4) => {
      e4.stopPropagation();
      setIsEditable(true);
    };
    $6[13] = t72;
  } else {
    t72 = $6[13];
  }
  const handleEditLabel = t72;
  let t82;
  if ($6[14] !== headerEditor || $6[15] !== props.item || $6[16] !== queryEditor || $6[17] !== setActive || $6[18] !== variableEditor) {
    t82 = () => {
      const {
        query,
        variables,
        headers
      } = props.item;
      queryEditor == null ? void 0 : queryEditor.setValue(query ?? "");
      variableEditor == null ? void 0 : variableEditor.setValue(variables ?? "");
      headerEditor == null ? void 0 : headerEditor.setValue(headers ?? "");
      setActive(props.item);
    };
    $6[14] = headerEditor;
    $6[15] = props.item;
    $6[16] = queryEditor;
    $6[17] = setActive;
    $6[18] = variableEditor;
    $6[19] = t82;
  } else {
    t82 = $6[19];
  }
  const handleHistoryItemClick = t82;
  let t92;
  if ($6[20] !== deleteFromHistory || $6[21] !== props.item) {
    t92 = (e_0) => {
      e_0.stopPropagation();
      deleteFromHistory(props.item);
    };
    $6[20] = deleteFromHistory;
    $6[21] = props.item;
    $6[22] = t92;
  } else {
    t92 = $6[22];
  }
  const handleDeleteItemFromHistory = t92;
  let t102;
  if ($6[23] !== props.item || $6[24] !== toggleFavorite) {
    t102 = (e_1) => {
      e_1.stopPropagation();
      toggleFavorite(props.item);
    };
    $6[23] = props.item;
    $6[24] = toggleFavorite;
    $6[25] = t102;
  } else {
    t102 = $6[25];
  }
  const handleToggleFavorite = t102;
  const t112 = isEditable && "editable";
  let t122;
  if ($6[26] !== t112) {
    t122 = clsx("graphiql-history-item", t112);
    $6[26] = t112;
    $6[27] = t122;
  } else {
    t122 = $6[27];
  }
  let t132;
  if ($6[28] !== displayName || $6[29] !== editLabel || $6[30] !== handleDeleteItemFromHistory || $6[31] !== handleHistoryItemClick || $6[32] !== handleSave || $6[33] !== handleToggleFavorite || $6[34] !== isEditable || $6[35] !== props.item) {
    t132 = isEditable ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      (0, import_jsx_runtime.jsx)("input", { type: "text", defaultValue: props.item.label, ref: inputRef, onKeyDown: (e_2) => {
        if (e_2.key === "Esc") {
          setIsEditable(false);
        } else {
          if (e_2.key === "Enter") {
            setIsEditable(false);
            editLabel({
              ...props.item,
              label: e_2.currentTarget.value
            });
          }
        }
      }, placeholder: "Type a label" }),
      (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", ref: buttonRef, onClick: handleSave, children: "Save" }),
      (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", ref: buttonRef, onClick: handleClose, children: (0, import_jsx_runtime.jsx)(CloseIcon, {}) })
    ] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(Tooltip, { label: "Set active", children: (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", className: "graphiql-history-item-label", onClick: handleHistoryItemClick, "aria-label": "Set active", children: displayName }) }),
      (0, import_jsx_runtime.jsx)(Tooltip, { label: "Edit label", children: (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", className: "graphiql-history-item-action", onClick: handleEditLabel, "aria-label": "Edit label", children: (0, import_jsx_runtime.jsx)(PenIcon, { "aria-hidden": "true" }) }) }),
      (0, import_jsx_runtime.jsx)(Tooltip, { label: props.item.favorite ? "Remove favorite" : "Add favorite", children: (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", className: "graphiql-history-item-action", onClick: handleToggleFavorite, "aria-label": props.item.favorite ? "Remove favorite" : "Add favorite", children: props.item.favorite ? (0, import_jsx_runtime.jsx)(StarFilledIcon, { "aria-hidden": "true" }) : (0, import_jsx_runtime.jsx)(StarIcon, { "aria-hidden": "true" }) }) }),
      (0, import_jsx_runtime.jsx)(Tooltip, { label: "Delete from history", children: (0, import_jsx_runtime.jsx)(UnStyledButton, { type: "button", className: "graphiql-history-item-action", onClick: handleDeleteItemFromHistory, "aria-label": "Delete from history", children: (0, import_jsx_runtime.jsx)(TrashIcon, { "aria-hidden": "true" }) }) })
    ] });
    $6[28] = displayName;
    $6[29] = editLabel;
    $6[30] = handleDeleteItemFromHistory;
    $6[31] = handleHistoryItemClick;
    $6[32] = handleSave;
    $6[33] = handleToggleFavorite;
    $6[34] = isEditable;
    $6[35] = props.item;
    $6[36] = t132;
  } else {
    t132 = $6[36];
  }
  let t142;
  if ($6[37] !== t122 || $6[38] !== t132) {
    t142 = (0, import_jsx_runtime.jsx)("li", { className: t122, children: t132 });
    $6[37] = t122;
    $6[38] = t132;
    $6[39] = t142;
  } else {
    t142 = $6[39];
  }
  return t142;
}
function formatQuery(query) {
  return query == null ? void 0 : query.split("\n").map((line) => line.replace(/#(.*)/, "")).join(" ").replaceAll("{", " { ").replaceAll("}", " } ").replaceAll(/[\s]{2,}/g, " ");
}
var ExecutionContext = createNullableContext("ExecutionContext");
function ExecutionContextProvider(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(27);
  const {
    fetcher,
    getDefaultFieldNames,
    children,
    operationName
  } = t0;
  if (!fetcher) {
    throw new TypeError("The `ExecutionContextProvider` component requires a `fetcher` function to be passed as prop.");
  }
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: ExecutionContextProvider
    };
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  const {
    externalFragments,
    headerEditor,
    queryEditor,
    responseEditor,
    variableEditor,
    updateActiveTabValues
  } = useEditorContext(t1);
  const history = useHistoryContext();
  let t22;
  if ($6[1] !== getDefaultFieldNames) {
    t22 = {
      getDefaultFieldNames,
      caller: ExecutionContextProvider
    };
    $6[1] = getDefaultFieldNames;
    $6[2] = t22;
  } else {
    t22 = $6[2];
  }
  const autoCompleteLeafs = useAutoCompleteLeafs(t22);
  const [isFetching, setIsFetching] = (0, import_react93.useState)(false);
  const [subscription, setSubscription] = (0, import_react93.useState)(null);
  const queryIdRef = (0, import_react93.useRef)(0);
  let t32;
  if ($6[3] !== subscription) {
    t32 = () => {
      subscription == null ? void 0 : subscription.unsubscribe();
      setIsFetching(false);
      setSubscription(null);
    };
    $6[3] = subscription;
    $6[4] = t32;
  } else {
    t32 = $6[4];
  }
  const stop = t32;
  let t42;
  if ($6[5] !== autoCompleteLeafs || $6[6] !== externalFragments || $6[7] !== fetcher || $6[8] !== headerEditor || $6[9] !== history || $6[10] !== operationName || $6[11] !== queryEditor || $6[12] !== responseEditor || $6[13] !== stop || $6[14] !== subscription || $6[15] !== updateActiveTabValues || $6[16] !== variableEditor) {
    t42 = async () => {
      if (!queryEditor || !responseEditor) {
        return;
      }
      if (subscription) {
        stop();
        return;
      }
      const setResponse = (value) => {
        responseEditor.setValue(value);
        updateActiveTabValues({
          response: value
        });
      };
      queryIdRef.current = queryIdRef.current + 1;
      const queryId = queryIdRef.current;
      let query = autoCompleteLeafs() || queryEditor.getValue();
      const variablesString = variableEditor == null ? void 0 : variableEditor.getValue();
      let variables;
      try {
        variables = tryParseJsonObject({
          json: variablesString,
          errorMessageParse: "Variables are invalid JSON",
          errorMessageType: "Variables are not a JSON object."
        });
      } catch (t522) {
        const error = t522;
        setResponse(error instanceof Error ? error.message : `${error}`);
        return;
      }
      const headersString = headerEditor == null ? void 0 : headerEditor.getValue();
      let headers;
      try {
        headers = tryParseJsonObject({
          json: headersString,
          errorMessageParse: "Headers are invalid JSON",
          errorMessageType: "Headers are not a JSON object."
        });
      } catch (t622) {
        const error_0 = t622;
        setResponse(error_0 instanceof Error ? error_0.message : `${error_0}`);
        return;
      }
      if (externalFragments) {
        const fragmentDependencies = queryEditor.documentAST ? getFragmentDependenciesForAST(queryEditor.documentAST, externalFragments) : [];
        if (fragmentDependencies.length > 0) {
          query = query + ("\n" + fragmentDependencies.map(_temp$7).join("\n"));
        }
      }
      setResponse("");
      setIsFetching(true);
      const opName = operationName ?? queryEditor.operationName ?? void 0;
      history == null ? void 0 : history.addToHistory({
        query,
        variables: variablesString,
        headers: headersString,
        operationName: opName
      });
      const _headers = headers ?? void 0;
      const documentAST = queryEditor.documentAST ?? void 0;
      try {
        const fullResponse = {};
        const handleResponse = (result) => {
          if (queryId !== queryIdRef.current) {
            return;
          }
          let maybeMultipart = Array.isArray(result) ? result : false;
          if (!maybeMultipart && typeof result === "object" && result !== null && "hasNext" in result) {
            maybeMultipart = [result];
          }
          if (maybeMultipart) {
            for (const part of maybeMultipart) {
              mergeIncrementalResult(fullResponse, part);
            }
            setIsFetching(false);
            setResponse(formatResult(fullResponse));
          } else {
            const response = formatResult(result);
            setIsFetching(false);
            setResponse(response);
          }
        };
        const fetch2 = fetcher({
          query,
          variables,
          operationName: opName
        }, {
          headers: _headers,
          documentAST
        });
        const value_0 = await Promise.resolve(fetch2);
        if (isObservable(value_0)) {
          setSubscription(value_0.subscribe({
            next(result_0) {
              handleResponse(result_0);
            },
            error(error_2) {
              setIsFetching(false);
              if (error_2) {
                setResponse(formatError(error_2));
              }
              setSubscription(null);
            },
            complete() {
              setIsFetching(false);
              setSubscription(null);
            }
          }));
        } else {
          if (isAsyncIterable(value_0)) {
            setSubscription({
              unsubscribe: () => {
                var _a, _b;
                return (_b = (_a = value_0[Symbol.asyncIterator]()).return) == null ? void 0 : _b.call(_a);
              }
            });
            await handleAsyncResults(handleResponse, value_0);
            setIsFetching(false);
            setSubscription(null);
          } else {
            handleResponse(value_0);
          }
        }
      } catch (t722) {
        const error_1 = t722;
        setIsFetching(false);
        setResponse(formatError(error_1));
        setSubscription(null);
      }
    };
    $6[5] = autoCompleteLeafs;
    $6[6] = externalFragments;
    $6[7] = fetcher;
    $6[8] = headerEditor;
    $6[9] = history;
    $6[10] = operationName;
    $6[11] = queryEditor;
    $6[12] = responseEditor;
    $6[13] = stop;
    $6[14] = subscription;
    $6[15] = updateActiveTabValues;
    $6[16] = variableEditor;
    $6[17] = t42;
  } else {
    t42 = $6[17];
  }
  const run = t42;
  const isSubscribed = Boolean(subscription);
  const t52 = operationName ?? null;
  let t62;
  if ($6[18] !== isFetching || $6[19] !== isSubscribed || $6[20] !== run || $6[21] !== stop || $6[22] !== t52) {
    t62 = {
      isFetching,
      isSubscribed,
      operationName: t52,
      run,
      stop
    };
    $6[18] = isFetching;
    $6[19] = isSubscribed;
    $6[20] = run;
    $6[21] = stop;
    $6[22] = t52;
    $6[23] = t62;
  } else {
    t62 = $6[23];
  }
  const value_1 = t62;
  let t72;
  if ($6[24] !== children || $6[25] !== value_1) {
    t72 = (0, import_jsx_runtime.jsx)(ExecutionContext.Provider, { value: value_1, children });
    $6[24] = children;
    $6[25] = value_1;
    $6[26] = t72;
  } else {
    t72 = $6[26];
  }
  return t72;
}
function _temp$7(node) {
  return print(node);
}
async function handleAsyncResults(onResponse, value) {
  for await (const result of value) {
    onResponse(result);
  }
}
var useExecutionContext = createContextHook(ExecutionContext);
function tryParseJsonObject({
  json,
  errorMessageParse,
  errorMessageType
}) {
  let parsed;
  try {
    parsed = json && json.trim() !== "" ? JSON.parse(json) : void 0;
  } catch (error) {
    throw new Error(`${errorMessageParse}: ${error instanceof Error ? error.message : error}.`);
  }
  const isObject = typeof parsed === "object" && parsed !== null && !Array.isArray(parsed);
  if (parsed !== void 0 && !isObject) {
    throw new Error(errorMessageType);
  }
  return parsed;
}
var pathsMap = /* @__PURE__ */ new WeakMap();
function mergeIncrementalResult(executionResult, incrementalResult) {
  var _a, _b, _c;
  let path = ["data", ...incrementalResult.path ?? []];
  for (const result of [executionResult, incrementalResult]) {
    if (result.pending) {
      let paths = pathsMap.get(executionResult);
      if (paths === void 0) {
        paths = /* @__PURE__ */ new Map();
        pathsMap.set(executionResult, paths);
      }
      for (const {
        id: id2,
        path: pendingPath
      } of result.pending) {
        paths.set(id2, ["data", ...pendingPath]);
      }
    }
  }
  const {
    items
  } = incrementalResult;
  if (items) {
    const {
      id: id2
    } = incrementalResult;
    if (id2) {
      path = (_a = pathsMap.get(executionResult)) == null ? void 0 : _a.get(id2);
      if (path === void 0) {
        throw new Error("Invalid incremental delivery format.");
      }
      const list = (0, import_get_value.default)(executionResult, path.join("."));
      list.push(...items);
    } else {
      path = ["data", ...incrementalResult.path ?? []];
      for (const item of items) {
        (0, import_set_value.default)(executionResult, path.join("."), item);
        path[path.length - 1]++;
      }
    }
  }
  const {
    data
  } = incrementalResult;
  if (data) {
    const {
      id: id2
    } = incrementalResult;
    if (id2) {
      path = (_b = pathsMap.get(executionResult)) == null ? void 0 : _b.get(id2);
      if (path === void 0) {
        throw new Error("Invalid incremental delivery format.");
      }
      const {
        subPath
      } = incrementalResult;
      if (subPath !== void 0) {
        path = [...path, ...subPath];
      }
    }
    (0, import_set_value.default)(executionResult, path.join("."), data, {
      merge: true
    });
  }
  if (incrementalResult.errors) {
    executionResult.errors || (executionResult.errors = []);
    executionResult.errors.push(...incrementalResult.errors);
  }
  if (incrementalResult.extensions) {
    (0, import_set_value.default)(executionResult, "extensions", incrementalResult.extensions, {
      merge: true
    });
  }
  if (incrementalResult.incremental) {
    for (const incrementalSubResult of incrementalResult.incremental) {
      mergeIncrementalResult(executionResult, incrementalSubResult);
    }
  }
  if (incrementalResult.completed) {
    for (const {
      id: id2,
      errors
    } of incrementalResult.completed) {
      (_c = pathsMap.get(executionResult)) == null ? void 0 : _c.delete(id2);
      if (errors) {
        executionResult.errors || (executionResult.errors = []);
        executionResult.errors.push(...errors);
      }
    }
  }
}
var isMacOs = typeof navigator !== "undefined" && navigator.userAgent.includes("Mac");
var DEFAULT_EDITOR_THEME = "graphiql";
var DEFAULT_KEY_MAP = "sublime";
var commonKeys = {
  // Persistent search box in Query Editor
  [isMacOs ? "Cmd-F" : "Ctrl-F"]: "findPersistent",
  "Cmd-G": "findPersistent",
  "Ctrl-G": "findPersistent",
  // Editor improvements
  "Ctrl-Left": "goSubwordLeft",
  "Ctrl-Right": "goSubwordRight",
  "Alt-Left": "goGroupLeft",
  "Alt-Right": "goGroupRight"
};
async function importCodeMirror(addons, options) {
  const CodeMirror = await import("./codemirror-NR2RZP6B.js").then((c22) => (
    // Depending on bundler and settings the dynamic import either returns a
    // function (e.g. parcel) or an object containing a `default` property
    typeof c22 === "function" ? c22 : c22.default
  ));
  await Promise.all((options == null ? void 0 : options.useCommonAddons) === false ? addons : [
    import("./show-hint-HM5H6SZ3.js"),
    import("./matchbrackets-723U24PC.js"),
    import("./closebrackets-BPCCA3Y4.js"),
    import("./brace-fold-LNSZTFJT.js"),
    import("./foldgutter-VHW2MTZR.js"),
    import("./lint-6S2M7KEI.js"),
    import("./searchcursor-YMQ7VRWI.js"),
    import("./jump-to-line-CGXO2MT5.js"),
    import("./dialog-OEIXDBIB.js"),
    // @ts-expect-error
    import("./sublime-FHAOGNF3.js"),
    ...addons
  ]);
  return CodeMirror;
}
var printDefault = (ast) => {
  if (!ast) {
    return "";
  }
  return print(ast);
};
function DefaultValue(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(12);
  const {
    field
  } = t0;
  if (!("defaultValue" in field) || field.defaultValue === void 0) {
    return null;
  }
  const t1 = field.defaultValue;
  const t22 = field.type;
  let t32;
  let t42;
  let t52;
  let t62;
  if ($6[0] !== field.defaultValue || $6[1] !== field.type) {
    t62 = Symbol.for("react.early_return_sentinel");
    bb0: {
      const ast = astFromValue(t1, t22);
      if (!ast) {
        t62 = null;
        break bb0;
      }
      t52 = " = ";
      t32 = "graphiql-doc-explorer-default-value";
      t42 = printDefault(ast);
    }
    $6[0] = field.defaultValue;
    $6[1] = field.type;
    $6[2] = t32;
    $6[3] = t42;
    $6[4] = t52;
    $6[5] = t62;
  } else {
    t32 = $6[2];
    t42 = $6[3];
    t52 = $6[4];
    t62 = $6[5];
  }
  if (t62 !== Symbol.for("react.early_return_sentinel")) {
    return t62;
  }
  let t72;
  if ($6[6] !== t32 || $6[7] !== t42) {
    t72 = (0, import_jsx_runtime.jsx)("span", { className: t32, children: t42 });
    $6[6] = t32;
    $6[7] = t42;
    $6[8] = t72;
  } else {
    t72 = $6[8];
  }
  let t82;
  if ($6[9] !== t52 || $6[10] !== t72) {
    t82 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t52,
      t72
    ] });
    $6[9] = t52;
    $6[10] = t72;
    $6[11] = t82;
  } else {
    t82 = $6[11];
  }
  return t82;
}
var SchemaContext = createNullableContext("SchemaContext");
function SchemaContextProvider(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(38);
  let fetcher;
  let onSchemaChange;
  let props;
  if ($6[0] !== t0) {
    ({
      fetcher,
      onSchemaChange,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = fetcher;
    $6[2] = onSchemaChange;
    $6[3] = props;
  } else {
    fetcher = $6[1];
    onSchemaChange = $6[2];
    props = $6[3];
  }
  if (!fetcher) {
    throw new TypeError("The `SchemaContextProvider` component requires a `fetcher` function to be passed as prop.");
  }
  let t1;
  if ($6[4] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: SchemaContextProvider
    };
    $6[4] = t1;
  } else {
    t1 = $6[4];
  }
  const {
    initialHeaders,
    headerEditor
  } = useEditorContext(t1);
  const [schema, setSchema] = (0, import_react93.useState)();
  const [isFetching, setIsFetching] = (0, import_react93.useState)(false);
  const [fetchError, setFetchError] = (0, import_react93.useState)(null);
  const counterRef = (0, import_react93.useRef)(0);
  let t22;
  let t32;
  if ($6[5] !== props.schema) {
    t22 = () => {
      setSchema(isSchema(props.schema) || props.schema == null ? props.schema : void 0);
      counterRef.current = counterRef.current + 1;
    };
    t32 = [props.schema];
    $6[5] = props.schema;
    $6[6] = t22;
    $6[7] = t32;
  } else {
    t22 = $6[6];
    t32 = $6[7];
  }
  (0, import_react93.useEffect)(t22, t32);
  const headersRef = (0, import_react93.useRef)(initialHeaders);
  let t42;
  if ($6[8] !== headerEditor) {
    t42 = () => {
      if (headerEditor) {
        headersRef.current = headerEditor.getValue();
      }
    };
    $6[8] = headerEditor;
    $6[9] = t42;
  } else {
    t42 = $6[9];
  }
  (0, import_react93.useEffect)(t42);
  let t52;
  if ($6[10] !== props.inputValueDeprecation || $6[11] !== props.introspectionQueryName || $6[12] !== props.schemaDescription) {
    t52 = {
      inputValueDeprecation: props.inputValueDeprecation,
      introspectionQueryName: props.introspectionQueryName,
      schemaDescription: props.schemaDescription
    };
    $6[10] = props.inputValueDeprecation;
    $6[11] = props.introspectionQueryName;
    $6[12] = props.schemaDescription;
    $6[13] = t52;
  } else {
    t52 = $6[13];
  }
  const {
    introspectionQuery,
    introspectionQueryName,
    introspectionQuerySansSubscriptions
  } = useIntrospectionQuery(t52);
  let t62;
  if ($6[14] !== fetcher || $6[15] !== introspectionQuery || $6[16] !== introspectionQueryName || $6[17] !== introspectionQuerySansSubscriptions || $6[18] !== onSchemaChange || $6[19] !== props.schema) {
    t62 = () => {
      if (isSchema(props.schema) || props.schema === null) {
        return;
      }
      const counter2 = counterRef.current = counterRef.current + 1;
      const maybeIntrospectionData = props.schema;
      const fetchIntrospectionData = async function fetchIntrospectionData2() {
        if (maybeIntrospectionData) {
          return maybeIntrospectionData;
        }
        const parsedHeaders = parseHeaderString(headersRef.current);
        if (!parsedHeaders.isValidJSON) {
          setFetchError("Introspection failed as headers are invalid.");
          return;
        }
        const fetcherOpts = parsedHeaders.headers ? {
          headers: parsedHeaders.headers
        } : {};
        const fetch2 = fetcherReturnToPromise(fetcher({
          query: introspectionQuery,
          operationName: introspectionQueryName
        }, fetcherOpts));
        if (!isPromise(fetch2)) {
          setFetchError("Fetcher did not return a Promise for introspection.");
          return;
        }
        setIsFetching(true);
        setFetchError(null);
        let result = await fetch2;
        if (typeof result !== "object" || result === null || !("data" in result)) {
          const fetch22 = fetcherReturnToPromise(fetcher({
            query: introspectionQuerySansSubscriptions,
            operationName: introspectionQueryName
          }, fetcherOpts));
          if (!isPromise(fetch22)) {
            throw new Error("Fetcher did not return a Promise for introspection.");
          }
          result = await fetch22;
        }
        setIsFetching(false);
        if ((result == null ? void 0 : result.data) && "__schema" in result.data) {
          return result.data;
        }
        const responseString = typeof result === "string" ? result : formatResult(result);
        setFetchError(responseString);
      };
      fetchIntrospectionData().then((introspectionData) => {
        if (counter2 !== counterRef.current || !introspectionData) {
          return;
        }
        try {
          const newSchema = buildClientSchema(introspectionData);
          setSchema(newSchema);
          if (onSchemaChange) {
            onSchemaChange(newSchema);
          }
        } catch (t722) {
          const error = t722;
          setFetchError(formatError(error));
        }
      }).catch((error_0) => {
        if (counter2 !== counterRef.current) {
          return;
        }
        setFetchError(formatError(error_0));
        setIsFetching(false);
      });
    };
    $6[14] = fetcher;
    $6[15] = introspectionQuery;
    $6[16] = introspectionQueryName;
    $6[17] = introspectionQuerySansSubscriptions;
    $6[18] = onSchemaChange;
    $6[19] = props.schema;
    $6[20] = t62;
  } else {
    t62 = $6[20];
  }
  const introspect = t62;
  let t72;
  let t82;
  if ($6[21] !== introspect) {
    t72 = () => {
      introspect();
    };
    t82 = [introspect];
    $6[21] = introspect;
    $6[22] = t72;
    $6[23] = t82;
  } else {
    t72 = $6[22];
    t82 = $6[23];
  }
  (0, import_react93.useEffect)(t72, t82);
  let t92;
  if ($6[24] !== introspect) {
    t92 = () => {
      const triggerIntrospection = function triggerIntrospection2(event) {
        if (event.ctrlKey && event.key === "R") {
          introspect();
        }
      };
      window.addEventListener("keydown", triggerIntrospection);
      return () => {
        window.removeEventListener("keydown", triggerIntrospection);
      };
    };
    $6[24] = introspect;
    $6[25] = t92;
  } else {
    t92 = $6[25];
  }
  (0, import_react93.useEffect)(t92);
  let t102;
  if ($6[26] !== props.dangerouslyAssumeSchemaIsValid || $6[27] !== schema) {
    t102 = !schema || props.dangerouslyAssumeSchemaIsValid ? [] : validateSchema(schema);
    $6[26] = props.dangerouslyAssumeSchemaIsValid;
    $6[27] = schema;
    $6[28] = t102;
  } else {
    t102 = $6[28];
  }
  const validationErrors = t102;
  let t112;
  if ($6[29] !== fetchError || $6[30] !== introspect || $6[31] !== isFetching || $6[32] !== schema || $6[33] !== validationErrors) {
    t112 = {
      fetchError,
      introspect,
      isFetching,
      schema,
      validationErrors
    };
    $6[29] = fetchError;
    $6[30] = introspect;
    $6[31] = isFetching;
    $6[32] = schema;
    $6[33] = validationErrors;
    $6[34] = t112;
  } else {
    t112 = $6[34];
  }
  const value = t112;
  let t122;
  if ($6[35] !== props.children || $6[36] !== value) {
    t122 = (0, import_jsx_runtime.jsx)(SchemaContext.Provider, { value, children: props.children });
    $6[35] = props.children;
    $6[36] = value;
    $6[37] = t122;
  } else {
    t122 = $6[37];
  }
  return t122;
}
var useSchemaContext = createContextHook(SchemaContext);
function useIntrospectionQuery({
  inputValueDeprecation,
  introspectionQueryName,
  schemaDescription
}) {
  const queryName = introspectionQueryName || "IntrospectionQuery";
  let query = getIntrospectionQuery({
    inputValueDeprecation,
    schemaDescription
  });
  if (introspectionQueryName) {
    query = query.replace("query IntrospectionQuery", `query ${queryName}`);
  }
  const querySansSubscriptions = query.replace("subscriptionType { name }", "");
  return {
    introspectionQueryName: queryName,
    introspectionQuery: query,
    introspectionQuerySansSubscriptions: querySansSubscriptions
  };
}
function parseHeaderString(headersString) {
  let headers = null;
  let isValidJSON = true;
  try {
    if (headersString) {
      headers = JSON.parse(headersString);
    }
  } catch {
    isValidJSON = false;
  }
  return {
    headers,
    isValidJSON
  };
}
var initialNavStackItem = {
  name: "Docs"
};
var ExplorerContext = createNullableContext("ExplorerContext");
function ExplorerContextProvider(props) {
  const $6 = (0, import_react_compiler_runtime.c)(14);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: ExplorerContextProvider
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    schema,
    validationErrors
  } = useSchemaContext(t0);
  let t1;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = [initialNavStackItem];
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const [navStack, setNavStack] = (0, import_react93.useState)(t1);
  let t22;
  if ($6[2] === Symbol.for("react.memo_cache_sentinel")) {
    t22 = (item) => {
      setNavStack((currentState) => {
        const lastItem = currentState.at(-1);
        return lastItem.def === item.def ? currentState : [...currentState, item];
      });
    };
    $6[2] = t22;
  } else {
    t22 = $6[2];
  }
  const push = t22;
  let t32;
  if ($6[3] === Symbol.for("react.memo_cache_sentinel")) {
    t32 = () => {
      setNavStack(_temp$6);
    };
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const pop = t32;
  let t42;
  if ($6[4] === Symbol.for("react.memo_cache_sentinel")) {
    t42 = () => {
      setNavStack(_temp2$4);
    };
    $6[4] = t42;
  } else {
    t42 = $6[4];
  }
  const reset = t42;
  let t52;
  let t62;
  if ($6[5] !== schema || $6[6] !== validationErrors) {
    t52 = () => {
      if (schema == null || validationErrors.length > 0) {
        reset();
      } else {
        setNavStack((oldNavStack) => {
          if (oldNavStack.length === 1) {
            return oldNavStack;
          }
          const newNavStack = [initialNavStackItem];
          let lastEntity = null;
          for (const item_0 of oldNavStack) {
            if (item_0 === initialNavStackItem) {
              continue;
            }
            if (item_0.def) {
              if (isNamedType(item_0.def)) {
                const newType = schema.getType(item_0.def.name);
                if (newType) {
                  newNavStack.push({
                    name: item_0.name,
                    def: newType
                  });
                  lastEntity = newType;
                } else {
                  break;
                }
              } else {
                if (lastEntity === null) {
                  break;
                } else {
                  if (isObjectType(lastEntity) || isInputObjectType(lastEntity)) {
                    const field = lastEntity.getFields()[item_0.name];
                    if (field) {
                      newNavStack.push({
                        name: item_0.name,
                        def: field
                      });
                    } else {
                      break;
                    }
                  } else {
                    if (isScalarType(lastEntity) || isEnumType(lastEntity) || isInterfaceType(lastEntity) || isUnionType(lastEntity)) {
                      break;
                    } else {
                      const field_0 = lastEntity;
                      const arg = field_0.args.find((a11) => a11.name === item_0.name);
                      if (arg) {
                        newNavStack.push({
                          name: item_0.name,
                          def: field_0
                        });
                      } else {
                        break;
                      }
                    }
                  }
                }
              }
            } else {
              lastEntity = null;
              newNavStack.push(item_0);
            }
          }
          return newNavStack;
        });
      }
    };
    t62 = [schema, validationErrors];
    $6[5] = schema;
    $6[6] = validationErrors;
    $6[7] = t52;
    $6[8] = t62;
  } else {
    t52 = $6[7];
    t62 = $6[8];
  }
  (0, import_react93.useEffect)(t52, t62);
  let t72;
  if ($6[9] !== navStack) {
    t72 = {
      explorerNavStack: navStack,
      push,
      pop,
      reset
    };
    $6[9] = navStack;
    $6[10] = t72;
  } else {
    t72 = $6[10];
  }
  const value = t72;
  let t82;
  if ($6[11] !== props.children || $6[12] !== value) {
    t82 = (0, import_jsx_runtime.jsx)(ExplorerContext.Provider, { value, children: props.children });
    $6[11] = props.children;
    $6[12] = value;
    $6[13] = t82;
  } else {
    t82 = $6[13];
  }
  return t82;
}
function _temp2$4(currentState_1) {
  return currentState_1.length === 1 ? currentState_1 : [initialNavStackItem];
}
function _temp$6(currentState_0) {
  return currentState_0.length > 1 ? currentState_0.slice(0, -1) : currentState_0;
}
var useExplorerContext = createContextHook(ExplorerContext);
function renderType(type, renderNamedType) {
  if (isNonNullType(type)) {
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      renderType(type.ofType, renderNamedType),
      "!"
    ] });
  }
  if (isListType(type)) {
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      "[",
      renderType(type.ofType, renderNamedType),
      "]"
    ] });
  }
  return renderNamedType(type);
}
function TypeLink(props) {
  const $6 = (0, import_react_compiler_runtime.c)(6);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: TypeLink
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    push
  } = useExplorerContext(t0);
  if (!props.type) {
    return null;
  }
  let t1;
  if ($6[1] !== push) {
    t1 = (namedType) => (0, import_jsx_runtime.jsx)("a", { className: "graphiql-doc-explorer-type-name", onClick: (event) => {
      event.preventDefault();
      push({
        name: namedType.name,
        def: namedType
      });
    }, href: "#", children: namedType.name });
    $6[1] = push;
    $6[2] = t1;
  } else {
    t1 = $6[2];
  }
  let t22;
  if ($6[3] !== props.type || $6[4] !== t1) {
    t22 = renderType(props.type, t1);
    $6[3] = props.type;
    $6[4] = t1;
    $6[5] = t22;
  } else {
    t22 = $6[5];
  }
  return t22;
}
function Argument(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(19);
  const {
    arg,
    showDefaultValue,
    inline
  } = t0;
  let t1;
  if ($6[0] !== arg.name) {
    t1 = (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-argument-name", children: arg.name });
    $6[0] = arg.name;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  let t22;
  if ($6[2] !== arg.type) {
    t22 = (0, import_jsx_runtime.jsx)(TypeLink, { type: arg.type });
    $6[2] = arg.type;
    $6[3] = t22;
  } else {
    t22 = $6[3];
  }
  let t32;
  if ($6[4] !== arg || $6[5] !== showDefaultValue) {
    t32 = showDefaultValue !== false && (0, import_jsx_runtime.jsx)(DefaultValue, { field: arg });
    $6[4] = arg;
    $6[5] = showDefaultValue;
    $6[6] = t32;
  } else {
    t32 = $6[6];
  }
  let t42;
  if ($6[7] !== t1 || $6[8] !== t22 || $6[9] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)("span", { children: [
      t1,
      ": ",
      t22,
      t32
    ] });
    $6[7] = t1;
    $6[8] = t22;
    $6[9] = t32;
    $6[10] = t42;
  } else {
    t42 = $6[10];
  }
  const definition = t42;
  if (inline) {
    return definition;
  }
  let t52;
  if ($6[11] !== arg.description) {
    t52 = arg.description ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", children: arg.description }) : null;
    $6[11] = arg.description;
    $6[12] = t52;
  } else {
    t52 = $6[12];
  }
  let t62;
  if ($6[13] !== arg.deprecationReason) {
    t62 = arg.deprecationReason ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument-deprecation", children: [
      (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-argument-deprecation-label", children: "Deprecated" }),
      (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "deprecation", children: arg.deprecationReason })
    ] }) : null;
    $6[13] = arg.deprecationReason;
    $6[14] = t62;
  } else {
    t62 = $6[14];
  }
  let t72;
  if ($6[15] !== definition || $6[16] !== t52 || $6[17] !== t62) {
    t72 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument", children: [
      definition,
      t52,
      t62
    ] });
    $6[15] = definition;
    $6[16] = t52;
    $6[17] = t62;
    $6[18] = t72;
  } else {
    t72 = $6[18];
  }
  return t72;
}
function DeprecationReason(props) {
  const $6 = (0, import_react_compiler_runtime.c)(3);
  let t0;
  if ($6[0] !== props.children || $6[1] !== props.preview) {
    t0 = props.children ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-deprecation", children: [
      (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-deprecation-label", children: "Deprecated" }),
      (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "deprecation", onlyShowFirstChild: props.preview ?? true, children: props.children })
    ] }) : null;
    $6[0] = props.children;
    $6[1] = props.preview;
    $6[2] = t0;
  } else {
    t0 = $6[2];
  }
  return t0;
}
function Directive(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(2);
  const {
    directive
  } = t0;
  let t1;
  if ($6[0] !== directive.name.value) {
    t1 = (0, import_jsx_runtime.jsxs)("span", { className: "graphiql-doc-explorer-directive", children: [
      "@",
      directive.name.value
    ] });
    $6[0] = directive.name.value;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  return t1;
}
function ExplorerSection(props) {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  const Icon2 = TYPE_TO_ICON[props.title];
  let t0;
  if ($6[0] !== Icon2) {
    t0 = (0, import_jsx_runtime.jsx)(Icon2, {});
    $6[0] = Icon2;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props.title || $6[3] !== t0) {
    t1 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-section-title", children: [
      t0,
      props.title
    ] });
    $6[2] = props.title;
    $6[3] = t0;
    $6[4] = t1;
  } else {
    t1 = $6[4];
  }
  let t22;
  if ($6[5] !== props.children) {
    t22 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-section-content", children: props.children });
    $6[5] = props.children;
    $6[6] = t22;
  } else {
    t22 = $6[6];
  }
  let t32;
  if ($6[7] !== t1 || $6[8] !== t22) {
    t32 = (0, import_jsx_runtime.jsxs)("div", { children: [
      t1,
      t22
    ] });
    $6[7] = t1;
    $6[8] = t22;
    $6[9] = t32;
  } else {
    t32 = $6[9];
  }
  return t32;
}
var TYPE_TO_ICON = {
  Arguments: ArgumentIcon,
  "Deprecated Arguments": DeprecatedArgumentIcon,
  "Deprecated Enum Values": DeprecatedEnumValueIcon,
  "Deprecated Fields": DeprecatedFieldIcon,
  Directives: DirectiveIcon,
  "Enum Values": EnumValueIcon,
  Fields: FieldIcon,
  Implements: ImplementsIcon,
  Implementations: TypeIcon,
  "Possible Types": TypeIcon,
  "Root Types": RootTypeIcon,
  Type: TypeIcon,
  "All Schema Types": TypeIcon
};
function FieldDocumentation(props) {
  const $6 = (0, import_react_compiler_runtime.c)(15);
  let t0;
  if ($6[0] !== props.field.description) {
    t0 = props.field.description ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", children: props.field.description }) : null;
    $6[0] = props.field.description;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== props.field.deprecationReason) {
    t1 = (0, import_jsx_runtime.jsx)(DeprecationReason, { preview: false, children: props.field.deprecationReason });
    $6[2] = props.field.deprecationReason;
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  let t22;
  if ($6[4] !== props.field.type) {
    t22 = (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Type", children: (0, import_jsx_runtime.jsx)(TypeLink, { type: props.field.type }) });
    $6[4] = props.field.type;
    $6[5] = t22;
  } else {
    t22 = $6[5];
  }
  let t32;
  let t42;
  if ($6[6] !== props.field) {
    t32 = (0, import_jsx_runtime.jsx)(Arguments, { field: props.field });
    t42 = (0, import_jsx_runtime.jsx)(Directives, { field: props.field });
    $6[6] = props.field;
    $6[7] = t32;
    $6[8] = t42;
  } else {
    t32 = $6[7];
    t42 = $6[8];
  }
  let t52;
  if ($6[9] !== t0 || $6[10] !== t1 || $6[11] !== t22 || $6[12] !== t32 || $6[13] !== t42) {
    t52 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t0,
      t1,
      t22,
      t32,
      t42
    ] });
    $6[9] = t0;
    $6[10] = t1;
    $6[11] = t22;
    $6[12] = t32;
    $6[13] = t42;
    $6[14] = t52;
  } else {
    t52 = $6[14];
  }
  return t52;
}
function Arguments(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(12);
  const {
    field
  } = t0;
  const [showDeprecated, setShowDeprecated] = (0, import_react93.useState)(false);
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = () => {
      setShowDeprecated(true);
    };
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  const handleShowDeprecated = t1;
  if (!("args" in field)) {
    return null;
  }
  let args;
  let deprecatedArgs;
  let t22;
  if ($6[1] !== field.args) {
    args = [];
    deprecatedArgs = [];
    for (const argument of field.args) {
      if (argument.deprecationReason) {
        deprecatedArgs.push(argument);
      } else {
        args.push(argument);
      }
    }
    t22 = args.length > 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Arguments", children: args.map(_temp$5) }) : null;
    $6[1] = field.args;
    $6[2] = args;
    $6[3] = deprecatedArgs;
    $6[4] = t22;
  } else {
    args = $6[2];
    deprecatedArgs = $6[3];
    t22 = $6[4];
  }
  let t32;
  if ($6[5] !== args.length || $6[6] !== deprecatedArgs || $6[7] !== showDeprecated) {
    t32 = deprecatedArgs.length > 0 ? showDeprecated || args.length === 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Deprecated Arguments", children: deprecatedArgs.map(_temp2$3) }) : (0, import_jsx_runtime.jsx)(Button$1, { type: "button", onClick: handleShowDeprecated, children: "Show Deprecated Arguments" }) : null;
    $6[5] = args.length;
    $6[6] = deprecatedArgs;
    $6[7] = showDeprecated;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  let t42;
  if ($6[9] !== t22 || $6[10] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t22,
      t32
    ] });
    $6[9] = t22;
    $6[10] = t32;
    $6[11] = t42;
  } else {
    t42 = $6[11];
  }
  return t42;
}
function _temp2$3(arg_0) {
  return (0, import_jsx_runtime.jsx)(Argument, { arg: arg_0 }, arg_0.name);
}
function _temp$5(arg) {
  return (0, import_jsx_runtime.jsx)(Argument, { arg }, arg.name);
}
function Directives(t0) {
  var _a, _b, _c;
  const $6 = (0, import_react_compiler_runtime.c)(6);
  const {
    field
  } = t0;
  let t1;
  if ($6[0] !== ((_a = field.astNode) == null ? void 0 : _a.directives)) {
    t1 = ((_b = field.astNode) == null ? void 0 : _b.directives) || [];
    $6[0] = (_c = field.astNode) == null ? void 0 : _c.directives;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const directives = t1;
  if (!directives || directives.length === 0) {
    return null;
  }
  let t22;
  if ($6[2] !== directives) {
    t22 = directives.map(_temp3$3);
    $6[2] = directives;
    $6[3] = t22;
  } else {
    t22 = $6[3];
  }
  let t32;
  if ($6[4] !== t22) {
    t32 = (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Directives", children: t22 });
    $6[4] = t22;
    $6[5] = t32;
  } else {
    t32 = $6[5];
  }
  return t32;
}
function _temp3$3(directive) {
  return (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(Directive, { directive }) }, directive.name.value);
}
function SchemaDocumentation(props) {
  var _a, _b, _c, _d;
  const $6 = (0, import_react_compiler_runtime.c)(39);
  let t0;
  if ($6[0] !== props.schema) {
    t0 = props.schema.getQueryType();
    $6[0] = props.schema;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  const queryType = t0;
  let t1;
  if ($6[2] !== props.schema) {
    t1 = (_b = (_a = props.schema).getMutationType) == null ? void 0 : _b.call(_a);
    $6[2] = props.schema;
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  const mutationType = t1;
  let t22;
  if ($6[4] !== props.schema) {
    t22 = (_d = (_c = props.schema).getSubscriptionType) == null ? void 0 : _d.call(_c);
    $6[4] = props.schema;
    $6[5] = t22;
  } else {
    t22 = $6[5];
  }
  const subscriptionType = t22;
  let T0;
  let t32;
  let t42;
  let t52;
  let t62;
  if ($6[6] !== mutationType || $6[7] !== props.schema || $6[8] !== queryType || $6[9] !== subscriptionType) {
    const typeMap = props.schema.getTypeMap();
    const t722 = queryType == null ? void 0 : queryType.name;
    const t822 = mutationType == null ? void 0 : mutationType.name;
    const t92 = subscriptionType == null ? void 0 : subscriptionType.name;
    let t102;
    if ($6[15] !== t722 || $6[16] !== t822 || $6[17] !== t92) {
      t102 = [t722, t822, t92];
      $6[15] = t722;
      $6[16] = t822;
      $6[17] = t92;
      $6[18] = t102;
    } else {
      t102 = $6[18];
    }
    const ignoreTypesInAllSchema = t102;
    const t112 = props.schema.description || "A GraphQL schema provides a root type for each kind of operation.";
    if ($6[19] !== t112) {
      t52 = (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", children: t112 });
      $6[19] = t112;
      $6[20] = t52;
    } else {
      t52 = $6[20];
    }
    let t122;
    if ($6[21] !== queryType) {
      t122 = queryType ? (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "query" }),
        ": ",
        (0, import_jsx_runtime.jsx)(TypeLink, { type: queryType })
      ] }) : null;
      $6[21] = queryType;
      $6[22] = t122;
    } else {
      t122 = $6[22];
    }
    let t132;
    if ($6[23] !== mutationType) {
      t132 = mutationType && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "mutation" }),
        ": ",
        (0, import_jsx_runtime.jsx)(TypeLink, { type: mutationType })
      ] });
      $6[23] = mutationType;
      $6[24] = t132;
    } else {
      t132 = $6[24];
    }
    let t142;
    if ($6[25] !== subscriptionType) {
      t142 = subscriptionType && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "subscription" }),
        ": ",
        (0, import_jsx_runtime.jsx)(TypeLink, { type: subscriptionType })
      ] });
      $6[25] = subscriptionType;
      $6[26] = t142;
    } else {
      t142 = $6[26];
    }
    if ($6[27] !== t122 || $6[28] !== t132 || $6[29] !== t142) {
      t62 = (0, import_jsx_runtime.jsxs)(ExplorerSection, { title: "Root Types", children: [
        t122,
        t132,
        t142
      ] });
      $6[27] = t122;
      $6[28] = t132;
      $6[29] = t142;
      $6[30] = t62;
    } else {
      t62 = $6[30];
    }
    T0 = ExplorerSection;
    t32 = "All Schema Types";
    t42 = typeMap && (0, import_jsx_runtime.jsx)("div", { children: Object.values(typeMap).map((type) => {
      if (ignoreTypesInAllSchema.includes(type.name) || type.name.startsWith("__")) {
        return null;
      }
      return (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(TypeLink, { type }) }, type.name);
    }) });
    $6[6] = mutationType;
    $6[7] = props.schema;
    $6[8] = queryType;
    $6[9] = subscriptionType;
    $6[10] = T0;
    $6[11] = t32;
    $6[12] = t42;
    $6[13] = t52;
    $6[14] = t62;
  } else {
    T0 = $6[10];
    t32 = $6[11];
    t42 = $6[12];
    t52 = $6[13];
    t62 = $6[14];
  }
  let t72;
  if ($6[31] !== T0 || $6[32] !== t32 || $6[33] !== t42) {
    t72 = (0, import_jsx_runtime.jsx)(T0, { title: t32, children: t42 });
    $6[31] = T0;
    $6[32] = t32;
    $6[33] = t42;
    $6[34] = t72;
  } else {
    t72 = $6[34];
  }
  let t82;
  if ($6[35] !== t52 || $6[36] !== t62 || $6[37] !== t72) {
    t82 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t52,
      t62,
      t72
    ] });
    $6[35] = t52;
    $6[36] = t62;
    $6[37] = t72;
    $6[38] = t82;
  } else {
    t82 = $6[38];
  }
  return t82;
}
function debounce(duration, fn) {
  let timeout;
  return function(...args) {
    if (timeout) {
      window.clearTimeout(timeout);
    }
    timeout = window.setTimeout(() => {
      timeout = null;
      fn(...args);
    }, duration);
  };
}
var Search = () => {
  const $6 = (0, import_react_compiler_runtime.c)(33);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: Search
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    explorerNavStack,
    push
  } = useExplorerContext(t0);
  const inputRef = (0, import_react93.useRef)(null);
  const getSearchResults = useSearchResults();
  const [searchValue, setSearchValue] = (0, import_react93.useState)("");
  let t1;
  if ($6[1] !== getSearchResults || $6[2] !== searchValue) {
    t1 = () => getSearchResults(searchValue);
    $6[1] = getSearchResults;
    $6[2] = searchValue;
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  const [results2, setResults] = (0, import_react93.useState)(t1);
  let t22;
  if ($6[4] !== getSearchResults) {
    t22 = debounce(200, (search) => {
      setResults(getSearchResults(search));
    });
    $6[4] = getSearchResults;
    $6[5] = t22;
  } else {
    t22 = $6[5];
  }
  const debouncedGetSearchResults = t22;
  const [ref] = (0, import_react93.useState)(inputRef);
  const isFocused = ref.current === document.activeElement;
  let t32;
  let t42;
  if ($6[6] !== debouncedGetSearchResults || $6[7] !== searchValue) {
    t32 = () => {
      debouncedGetSearchResults(searchValue);
    };
    t42 = [debouncedGetSearchResults, searchValue];
    $6[6] = debouncedGetSearchResults;
    $6[7] = searchValue;
    $6[8] = t32;
    $6[9] = t42;
  } else {
    t32 = $6[8];
    t42 = $6[9];
  }
  (0, import_react93.useEffect)(t32, t42);
  let t52;
  let t62;
  if ($6[10] === Symbol.for("react.memo_cache_sentinel")) {
    t52 = () => {
      const handleKeyDown = function handleKeyDown2(event) {
        if (event.metaKey && event.key === "k") {
          inputRef.current.focus();
        }
      };
      window.addEventListener("keydown", handleKeyDown);
      return () => window.removeEventListener("keydown", handleKeyDown);
    };
    t62 = [];
    $6[10] = t52;
    $6[11] = t62;
  } else {
    t52 = $6[10];
    t62 = $6[11];
  }
  (0, import_react93.useEffect)(t52, t62);
  let navItem;
  let onSelect;
  let t72;
  if ($6[12] !== explorerNavStack || $6[13] !== push) {
    navItem = explorerNavStack.at(-1);
    let t822;
    if ($6[17] !== push) {
      t822 = (def) => {
        push("field" in def ? {
          name: def.field.name,
          def: def.field
        } : {
          name: def.type.name,
          def: def.type
        });
      };
      $6[17] = push;
      $6[18] = t822;
    } else {
      t822 = $6[18];
    }
    onSelect = t822;
    t72 = explorerNavStack.length === 1 || isObjectType(navItem.def) || isInterfaceType(navItem.def) || isInputObjectType(navItem.def);
    $6[12] = explorerNavStack;
    $6[13] = push;
    $6[14] = navItem;
    $6[15] = onSelect;
    $6[16] = t72;
  } else {
    navItem = $6[14];
    onSelect = $6[15];
    t72 = $6[16];
  }
  const shouldSearchBoxAppear = t72;
  if (!shouldSearchBoxAppear) {
    return null;
  }
  const t82 = isFocused ? void 0 : "idle";
  const t92 = `Search ${navItem.name}...`;
  let t102;
  let t112;
  if ($6[19] === Symbol.for("react.memo_cache_sentinel")) {
    t102 = () => {
      inputRef.current.focus();
    };
    t112 = (0, import_jsx_runtime.jsx)(MagnifyingGlassIcon, {});
    $6[19] = t102;
    $6[20] = t112;
  } else {
    t102 = $6[19];
    t112 = $6[20];
  }
  let t122;
  if ($6[21] === Symbol.for("react.memo_cache_sentinel")) {
    t122 = (event_0) => setSearchValue(event_0.target.value);
    $6[21] = t122;
  } else {
    t122 = $6[21];
  }
  let t132;
  if ($6[22] !== searchValue) {
    t132 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-search-input", onClick: t102, children: [
      t112,
      (0, import_jsx_runtime.jsx)(qt.Input, { autoComplete: "off", onChange: t122, placeholder: `${isMacOs ? "⌘" : "Ctrl"} K`, ref: inputRef, value: searchValue, "data-cy": "doc-explorer-input" })
    ] });
    $6[22] = searchValue;
    $6[23] = t132;
  } else {
    t132 = $6[23];
  }
  let t142;
  if ($6[24] !== isFocused || $6[25] !== results2) {
    t142 = isFocused && (0, import_jsx_runtime.jsxs)(qt.Options, { "data-cy": "doc-explorer-list", children: [
      results2.within.length + results2.types.length + results2.fields.length === 0 ? (0, import_jsx_runtime.jsx)("li", { className: "graphiql-doc-explorer-search-empty", children: "No results found" }) : results2.within.map(_temp$4),
      results2.within.length > 0 && results2.types.length + results2.fields.length > 0 ? (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-search-divider", children: "Other results" }) : null,
      results2.types.map(_temp2$2),
      results2.fields.map(_temp3$2)
    ] });
    $6[24] = isFocused;
    $6[25] = results2;
    $6[26] = t142;
  } else {
    t142 = $6[26];
  }
  let t152;
  if ($6[27] !== onSelect || $6[28] !== t132 || $6[29] !== t142 || $6[30] !== t82 || $6[31] !== t92) {
    t152 = (0, import_jsx_runtime.jsxs)(qt, { as: "div", className: "graphiql-doc-explorer-search", onChange: onSelect, "data-state": t82, "aria-label": t92, children: [
      t132,
      t142
    ] });
    $6[27] = onSelect;
    $6[28] = t132;
    $6[29] = t142;
    $6[30] = t82;
    $6[31] = t92;
    $6[32] = t152;
  } else {
    t152 = $6[32];
  }
  return t152;
};
var _useSearchResults = useSearchResults;
function useSearchResults(caller) {
  const $6 = (0, import_react_compiler_runtime.c)(9);
  const t0 = caller || _useSearchResults;
  let t1;
  if ($6[0] !== t0) {
    t1 = {
      nonNull: true,
      caller: t0
    };
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    explorerNavStack
  } = useExplorerContext(t1);
  const t22 = caller || _useSearchResults;
  let t32;
  if ($6[2] !== t22) {
    t32 = {
      nonNull: true,
      caller: t22
    };
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const {
    schema
  } = useSchemaContext(t32);
  let t42;
  if ($6[4] !== explorerNavStack) {
    t42 = explorerNavStack.at(-1);
    $6[4] = explorerNavStack;
    $6[5] = t42;
  } else {
    t42 = $6[5];
  }
  const navItem = t42;
  let t52;
  if ($6[6] !== navItem || $6[7] !== schema) {
    t52 = (searchValue) => {
      const matches = {
        within: [],
        types: [],
        fields: []
      };
      if (!schema) {
        return matches;
      }
      const withinType = navItem.def;
      const typeMap = schema.getTypeMap();
      let typeNames = Object.keys(typeMap);
      if (withinType) {
        typeNames = typeNames.filter((n7) => n7 !== withinType.name);
        typeNames.unshift(withinType.name);
      }
      for (const typeName of typeNames) {
        if (matches.within.length + matches.types.length + matches.fields.length >= 100) {
          break;
        }
        const type = typeMap[typeName];
        if (withinType !== type && isMatch(typeName, searchValue)) {
          matches.types.push({
            type
          });
        }
        if (!isObjectType(type) && !isInterfaceType(type) && !isInputObjectType(type)) {
          continue;
        }
        const fields = type.getFields();
        for (const fieldName in fields) {
          const field = fields[fieldName];
          let matchingArgs;
          if (!isMatch(fieldName, searchValue)) {
            if ("args" in field) {
              matchingArgs = field.args.filter((arg) => isMatch(arg.name, searchValue));
              if (matchingArgs.length === 0) {
                continue;
              }
            } else {
              continue;
            }
          }
          matches[withinType === type ? "within" : "fields"].push(...matchingArgs ? matchingArgs.map((argument) => ({
            type,
            field,
            argument
          })) : [{
            type,
            field
          }]);
        }
      }
      return matches;
    };
    $6[6] = navItem;
    $6[7] = schema;
    $6[8] = t52;
  } else {
    t52 = $6[8];
  }
  return t52;
}
function isMatch(sourceText, searchValue) {
  try {
    const escaped = searchValue.replaceAll(/[^_0-9A-Za-z]/g, (ch) => "\\" + ch);
    return new RegExp(escaped, "i").test(sourceText);
  } catch {
    return sourceText.toLowerCase().includes(searchValue.toLowerCase());
  }
}
function Type(props) {
  const $6 = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($6[0] !== props.type.name) {
    t0 = (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-type", children: props.type.name });
    $6[0] = props.type.name;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
function Field$1(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  const {
    field,
    argument
  } = t0;
  let t1;
  if ($6[0] !== field.name) {
    t1 = (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-field", children: field.name });
    $6[0] = field.name;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  let t22;
  if ($6[2] !== argument) {
    t22 = argument ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      "(",
      (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-argument", children: argument.name }),
      ":",
      " ",
      renderType(argument.type, _temp4$2),
      ")"
    ] }) : null;
    $6[2] = argument;
    $6[3] = t22;
  } else {
    t22 = $6[3];
  }
  let t32;
  if ($6[4] !== t1 || $6[5] !== t22) {
    t32 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t1,
      t22
    ] });
    $6[4] = t1;
    $6[5] = t22;
    $6[6] = t32;
  } else {
    t32 = $6[6];
  }
  return t32;
}
function _temp4$2(namedType) {
  return (0, import_jsx_runtime.jsx)(Type, { type: namedType });
}
function _temp$4(result, i8) {
  return (0, import_jsx_runtime.jsx)(qt.Option, { value: result, "data-cy": "doc-explorer-option", children: (0, import_jsx_runtime.jsx)(Field$1, { field: result.field, argument: result.argument }) }, `within-${i8}`);
}
function _temp2$2(result_0, i_0) {
  return (0, import_jsx_runtime.jsx)(qt.Option, { value: result_0, "data-cy": "doc-explorer-option", children: (0, import_jsx_runtime.jsx)(Type, { type: result_0.type }) }, `type-${i_0}`);
}
function _temp3$2(result_1, i_1) {
  return (0, import_jsx_runtime.jsxs)(qt.Option, { value: result_1, "data-cy": "doc-explorer-option", children: [
    (0, import_jsx_runtime.jsx)(Type, { type: result_1.type }),
    ".",
    (0, import_jsx_runtime.jsx)(Field$1, { field: result_1.field, argument: result_1.argument })
  ] }, `field-${i_1}`);
}
function FieldLink(props) {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    push
  } = useExplorerContext(t0);
  let t1;
  if ($6[1] !== props.field || $6[2] !== push) {
    t1 = (event) => {
      event.preventDefault();
      push({
        name: props.field.name,
        def: props.field
      });
    };
    $6[1] = props.field;
    $6[2] = push;
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  let t22;
  if ($6[4] !== props.field.name || $6[5] !== t1) {
    t22 = (0, import_jsx_runtime.jsx)("a", { className: "graphiql-doc-explorer-field-name", onClick: t1, href: "#", children: props.field.name });
    $6[4] = props.field.name;
    $6[5] = t1;
    $6[6] = t22;
  } else {
    t22 = $6[6];
  }
  return t22;
}
function TypeDocumentation(props) {
  const $6 = (0, import_react_compiler_runtime.c)(2);
  let t0;
  if ($6[0] !== props.type) {
    t0 = isNamedType(props.type) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      props.type.description ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", children: props.type.description }) : null,
      (0, import_jsx_runtime.jsx)(ImplementsInterfaces, { type: props.type }),
      (0, import_jsx_runtime.jsx)(Fields, { type: props.type }),
      (0, import_jsx_runtime.jsx)(EnumValues, { type: props.type }),
      (0, import_jsx_runtime.jsx)(PossibleTypes, { type: props.type })
    ] }) : null;
    $6[0] = props.type;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
function ImplementsInterfaces(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(5);
  const {
    type
  } = t0;
  if (!isObjectType(type)) {
    return null;
  }
  let t1;
  if ($6[0] !== type) {
    t1 = type.getInterfaces();
    $6[0] = type;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const interfaces = t1;
  let t22;
  if ($6[2] !== interfaces.length || $6[3] !== type) {
    t22 = interfaces.length > 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Implements", children: type.getInterfaces().map(_temp$3) }) : null;
    $6[2] = interfaces.length;
    $6[3] = type;
    $6[4] = t22;
  } else {
    t22 = $6[4];
  }
  return t22;
}
function _temp$3(implementedInterface) {
  return (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(TypeLink, { type: implementedInterface }) }, implementedInterface.name);
}
function Fields(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(12);
  const {
    type
  } = t0;
  const [showDeprecated, setShowDeprecated] = (0, import_react93.useState)(false);
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = () => {
      setShowDeprecated(true);
    };
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  const handleShowDeprecated = t1;
  if (!isObjectType(type) && !isInterfaceType(type) && !isInputObjectType(type)) {
    return null;
  }
  let deprecatedFields;
  let fields;
  let t22;
  if ($6[1] !== type) {
    const fieldMap = type.getFields();
    fields = [];
    deprecatedFields = [];
    for (const field of Object.keys(fieldMap).map((name) => fieldMap[name])) {
      if (field.deprecationReason) {
        deprecatedFields.push(field);
      } else {
        fields.push(field);
      }
    }
    t22 = fields.length > 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Fields", children: fields.map(_temp2$1) }) : null;
    $6[1] = type;
    $6[2] = deprecatedFields;
    $6[3] = fields;
    $6[4] = t22;
  } else {
    deprecatedFields = $6[2];
    fields = $6[3];
    t22 = $6[4];
  }
  let t32;
  if ($6[5] !== deprecatedFields || $6[6] !== fields.length || $6[7] !== showDeprecated) {
    t32 = deprecatedFields.length > 0 ? showDeprecated || fields.length === 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Deprecated Fields", children: deprecatedFields.map(_temp3$1) }) : (0, import_jsx_runtime.jsx)(Button$1, { type: "button", onClick: handleShowDeprecated, children: "Show Deprecated Fields" }) : null;
    $6[5] = deprecatedFields;
    $6[6] = fields.length;
    $6[7] = showDeprecated;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  let t42;
  if ($6[9] !== t22 || $6[10] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t22,
      t32
    ] });
    $6[9] = t22;
    $6[10] = t32;
    $6[11] = t42;
  } else {
    t42 = $6[11];
  }
  return t42;
}
function _temp3$1(field_1) {
  return (0, import_jsx_runtime.jsx)(Field, { field: field_1 }, field_1.name);
}
function _temp2$1(field_0) {
  return (0, import_jsx_runtime.jsx)(Field, { field: field_0 }, field_0.name);
}
function Field(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(22);
  const {
    field
  } = t0;
  let t1;
  let t22;
  let t32;
  if ($6[0] !== field) {
    const args = "args" in field ? field.args.filter(_temp4$1) : [];
    t32 = "graphiql-doc-explorer-item";
    t1 = (0, import_jsx_runtime.jsx)(FieldLink, { field });
    t22 = args.length > 0 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      "(",
      (0, import_jsx_runtime.jsx)("span", { children: args.map((arg_0) => args.length === 1 ? (0, import_jsx_runtime.jsx)(Argument, { arg: arg_0, inline: true }, arg_0.name) : (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-argument-multiple", children: (0, import_jsx_runtime.jsx)(Argument, { arg: arg_0, inline: true }) }, arg_0.name)) }),
      ")"
    ] }) : null;
    $6[0] = field;
    $6[1] = t1;
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t1 = $6[1];
    t22 = $6[2];
    t32 = $6[3];
  }
  let t42;
  if ($6[4] !== field.type) {
    t42 = (0, import_jsx_runtime.jsx)(TypeLink, { type: field.type });
    $6[4] = field.type;
    $6[5] = t42;
  } else {
    t42 = $6[5];
  }
  let t52;
  if ($6[6] !== field) {
    t52 = (0, import_jsx_runtime.jsx)(DefaultValue, { field });
    $6[6] = field;
    $6[7] = t52;
  } else {
    t52 = $6[7];
  }
  let t62;
  if ($6[8] !== t1 || $6[9] !== t22 || $6[10] !== t42 || $6[11] !== t52) {
    t62 = (0, import_jsx_runtime.jsxs)("div", { children: [
      t1,
      t22,
      ": ",
      t42,
      t52
    ] });
    $6[8] = t1;
    $6[9] = t22;
    $6[10] = t42;
    $6[11] = t52;
    $6[12] = t62;
  } else {
    t62 = $6[12];
  }
  let t72;
  if ($6[13] !== field.description) {
    t72 = field.description ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", onlyShowFirstChild: true, children: field.description }) : null;
    $6[13] = field.description;
    $6[14] = t72;
  } else {
    t72 = $6[14];
  }
  let t82;
  if ($6[15] !== field.deprecationReason) {
    t82 = (0, import_jsx_runtime.jsx)(DeprecationReason, { children: field.deprecationReason });
    $6[15] = field.deprecationReason;
    $6[16] = t82;
  } else {
    t82 = $6[16];
  }
  let t92;
  if ($6[17] !== t32 || $6[18] !== t62 || $6[19] !== t72 || $6[20] !== t82) {
    t92 = (0, import_jsx_runtime.jsxs)("div", { className: t32, children: [
      t62,
      t72,
      t82
    ] });
    $6[17] = t32;
    $6[18] = t62;
    $6[19] = t72;
    $6[20] = t82;
    $6[21] = t92;
  } else {
    t92 = $6[21];
  }
  return t92;
}
function _temp4$1(arg) {
  return !arg.deprecationReason;
}
function EnumValues(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(12);
  const {
    type
  } = t0;
  const [showDeprecated, setShowDeprecated] = (0, import_react93.useState)(false);
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = () => {
      setShowDeprecated(true);
    };
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  const handleShowDeprecated = t1;
  if (!isEnumType(type)) {
    return null;
  }
  let deprecatedValues;
  let t22;
  let values;
  if ($6[1] !== type) {
    values = [];
    deprecatedValues = [];
    for (const value of type.getValues()) {
      if (value.deprecationReason) {
        deprecatedValues.push(value);
      } else {
        values.push(value);
      }
    }
    t22 = values.length > 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Enum Values", children: values.map(_temp5) }) : null;
    $6[1] = type;
    $6[2] = deprecatedValues;
    $6[3] = t22;
    $6[4] = values;
  } else {
    deprecatedValues = $6[2];
    t22 = $6[3];
    values = $6[4];
  }
  let t32;
  if ($6[5] !== deprecatedValues || $6[6] !== showDeprecated || $6[7] !== values.length) {
    t32 = deprecatedValues.length > 0 ? showDeprecated || values.length === 0 ? (0, import_jsx_runtime.jsx)(ExplorerSection, { title: "Deprecated Enum Values", children: deprecatedValues.map(_temp6) }) : (0, import_jsx_runtime.jsx)(Button$1, { type: "button", onClick: handleShowDeprecated, children: "Show Deprecated Values" }) : null;
    $6[5] = deprecatedValues;
    $6[6] = showDeprecated;
    $6[7] = values.length;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  let t42;
  if ($6[9] !== t22 || $6[10] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      t22,
      t32
    ] });
    $6[9] = t22;
    $6[10] = t32;
    $6[11] = t42;
  } else {
    t42 = $6[11];
  }
  return t42;
}
function _temp6(value_1) {
  return (0, import_jsx_runtime.jsx)(EnumValue, { value: value_1 }, value_1.name);
}
function _temp5(value_0) {
  return (0, import_jsx_runtime.jsx)(EnumValue, { value: value_0 }, value_0.name);
}
function EnumValue(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  const {
    value
  } = t0;
  let t1;
  if ($6[0] !== value.name) {
    t1 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-enum-value", children: value.name });
    $6[0] = value.name;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  let t22;
  if ($6[2] !== value.description) {
    t22 = value.description ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "description", children: value.description }) : null;
    $6[2] = value.description;
    $6[3] = t22;
  } else {
    t22 = $6[3];
  }
  let t32;
  if ($6[4] !== value.deprecationReason) {
    t32 = value.deprecationReason ? (0, import_jsx_runtime.jsx)(MarkdownContent, { type: "deprecation", children: value.deprecationReason }) : null;
    $6[4] = value.deprecationReason;
    $6[5] = t32;
  } else {
    t32 = $6[5];
  }
  let t42;
  if ($6[6] !== t1 || $6[7] !== t22 || $6[8] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-item", children: [
      t1,
      t22,
      t32
    ] });
    $6[6] = t1;
    $6[7] = t22;
    $6[8] = t32;
    $6[9] = t42;
  } else {
    t42 = $6[9];
  }
  return t42;
}
function PossibleTypes(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  const {
    type
  } = t0;
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true
    };
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  const {
    schema
  } = useSchemaContext(t1);
  if (!schema || !isAbstractType(type)) {
    return null;
  }
  const t22 = isInterfaceType(type) ? "Implementations" : "Possible Types";
  let t32;
  if ($6[1] !== schema || $6[2] !== type) {
    t32 = schema.getPossibleTypes(type).map(_temp7);
    $6[1] = schema;
    $6[2] = type;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  let t42;
  if ($6[4] !== t22 || $6[5] !== t32) {
    t42 = (0, import_jsx_runtime.jsx)(ExplorerSection, { title: t22, children: t32 });
    $6[4] = t22;
    $6[5] = t32;
    $6[6] = t42;
  } else {
    t42 = $6[6];
  }
  return t42;
}
function _temp7(possibleType) {
  return (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(TypeLink, { type: possibleType }) }, possibleType.name);
}
function DocExplorer() {
  const $6 = (0, import_react_compiler_runtime.c)(40);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: DocExplorer
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    fetchError,
    isFetching,
    schema,
    validationErrors
  } = useSchemaContext(t0);
  let t1;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: DocExplorer
    };
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    explorerNavStack,
    pop
  } = useExplorerContext(t1);
  let content;
  let navItem;
  if ($6[2] !== explorerNavStack || $6[3] !== fetchError || $6[4] !== isFetching || $6[5] !== schema || $6[6] !== validationErrors) {
    navItem = explorerNavStack.at(-1);
    content = null;
    if (fetchError) {
      let t222;
      if ($6[9] === Symbol.for("react.memo_cache_sentinel")) {
        t222 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "Error fetching schema" });
        $6[9] = t222;
      } else {
        t222 = $6[9];
      }
      content = t222;
    } else {
      if (validationErrors.length > 0) {
        let t222;
        if ($6[10] !== validationErrors[0].message) {
          t222 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-error", children: [
            "Schema is invalid: ",
            validationErrors[0].message
          ] });
          $6[10] = validationErrors[0].message;
          $6[11] = t222;
        } else {
          t222 = $6[11];
        }
        content = t222;
      } else {
        if (isFetching) {
          let t222;
          if ($6[12] === Symbol.for("react.memo_cache_sentinel")) {
            t222 = (0, import_jsx_runtime.jsx)(Spinner, {});
            $6[12] = t222;
          } else {
            t222 = $6[12];
          }
          content = t222;
        } else {
          if (!schema) {
            let t222;
            if ($6[13] === Symbol.for("react.memo_cache_sentinel")) {
              t222 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "No GraphQL schema available" });
              $6[13] = t222;
            } else {
              t222 = $6[13];
            }
            content = t222;
          } else {
            if (explorerNavStack.length === 1) {
              let t222;
              if ($6[14] !== schema) {
                t222 = (0, import_jsx_runtime.jsx)(SchemaDocumentation, { schema });
                $6[14] = schema;
                $6[15] = t222;
              } else {
                t222 = $6[15];
              }
              content = t222;
            } else {
              if (isType(navItem.def)) {
                let t222;
                if ($6[16] !== navItem.def) {
                  t222 = (0, import_jsx_runtime.jsx)(TypeDocumentation, { type: navItem.def });
                  $6[16] = navItem.def;
                  $6[17] = t222;
                } else {
                  t222 = $6[17];
                }
                content = t222;
              } else {
                if (navItem.def) {
                  let t222;
                  if ($6[18] !== navItem.def) {
                    t222 = (0, import_jsx_runtime.jsx)(FieldDocumentation, { field: navItem.def });
                    $6[18] = navItem.def;
                    $6[19] = t222;
                  } else {
                    t222 = $6[19];
                  }
                  content = t222;
                }
              }
            }
          }
        }
      }
    }
    $6[2] = explorerNavStack;
    $6[3] = fetchError;
    $6[4] = isFetching;
    $6[5] = schema;
    $6[6] = validationErrors;
    $6[7] = content;
    $6[8] = navItem;
  } else {
    content = $6[7];
    navItem = $6[8];
  }
  let prevName;
  if (explorerNavStack.length > 1) {
    let t222;
    if ($6[20] !== explorerNavStack) {
      t222 = explorerNavStack.at(-2);
      $6[20] = explorerNavStack;
      $6[21] = t222;
    } else {
      t222 = $6[21];
    }
    prevName = t222.name;
  }
  let t22;
  if ($6[22] !== pop || $6[23] !== prevName) {
    t22 = prevName && (0, import_jsx_runtime.jsxs)("a", { href: "#", className: "graphiql-doc-explorer-back", onClick: (event) => {
      event.preventDefault();
      pop();
    }, "aria-label": `Go back to ${prevName}`, children: [
      (0, import_jsx_runtime.jsx)(ChevronLeftIcon, {}),
      prevName
    ] });
    $6[22] = pop;
    $6[23] = prevName;
    $6[24] = t22;
  } else {
    t22 = $6[24];
  }
  let t32;
  if ($6[25] !== navItem.name) {
    t32 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-title", children: navItem.name });
    $6[25] = navItem.name;
    $6[26] = t32;
  } else {
    t32 = $6[26];
  }
  let t42;
  if ($6[27] !== t22 || $6[28] !== t32) {
    t42 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header-content", children: [
      t22,
      t32
    ] });
    $6[27] = t22;
    $6[28] = t32;
    $6[29] = t42;
  } else {
    t42 = $6[29];
  }
  let t52;
  if ($6[30] !== navItem.name) {
    t52 = (0, import_jsx_runtime.jsx)(Search, {}, navItem.name);
    $6[30] = navItem.name;
    $6[31] = t52;
  } else {
    t52 = $6[31];
  }
  let t62;
  if ($6[32] !== t42 || $6[33] !== t52) {
    t62 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header", children: [
      t42,
      t52
    ] });
    $6[32] = t42;
    $6[33] = t52;
    $6[34] = t62;
  } else {
    t62 = $6[34];
  }
  let t72;
  if ($6[35] !== content) {
    t72 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-content", children: content });
    $6[35] = content;
    $6[36] = t72;
  } else {
    t72 = $6[36];
  }
  let t82;
  if ($6[37] !== t62 || $6[38] !== t72) {
    t82 = (0, import_jsx_runtime.jsxs)("section", { className: "graphiql-doc-explorer", "aria-label": "Documentation Explorer", children: [
      t62,
      t72
    ] });
    $6[37] = t62;
    $6[38] = t72;
    $6[39] = t82;
  } else {
    t82 = $6[39];
  }
  return t82;
}
var DOC_EXPLORER_PLUGIN = {
  title: "Documentation Explorer",
  icon: function Icon() {
    const pluginContext = usePluginContext();
    return (pluginContext == null ? void 0 : pluginContext.visiblePlugin) === DOC_EXPLORER_PLUGIN ? (0, import_jsx_runtime.jsx)(DocsFilledIcon, {}) : (0, import_jsx_runtime.jsx)(DocsIcon, {});
  },
  content: DocExplorer
};
var HISTORY_PLUGIN = {
  title: "History",
  icon: HistoryIcon,
  content: History
};
var PluginContext = createNullableContext("PluginContext");
function PluginContextProvider(props) {
  const $6 = (0, import_react_compiler_runtime.c)(27);
  const storage = useStorageContext();
  const explorerContext = useExplorerContext();
  const historyContext = useHistoryContext();
  const hasExplorerContext = Boolean(explorerContext);
  const hasHistoryContext = Boolean(historyContext);
  let t0;
  let pluginList;
  if ($6[0] !== hasExplorerContext || $6[1] !== hasHistoryContext || $6[2] !== props.plugins) {
    pluginList = [];
    const pluginTitles = {};
    if (hasExplorerContext) {
      pluginList.push(DOC_EXPLORER_PLUGIN);
      pluginTitles[DOC_EXPLORER_PLUGIN.title] = true;
    }
    if (hasHistoryContext) {
      pluginList.push(HISTORY_PLUGIN);
      pluginTitles[HISTORY_PLUGIN.title] = true;
    }
    let t122;
    if ($6[4] !== props.plugins) {
      t122 = props.plugins || [];
      $6[4] = props.plugins;
      $6[5] = t122;
    } else {
      t122 = $6[5];
    }
    for (const plugin of t122) {
      if (typeof plugin.title !== "string" || !plugin.title) {
        throw new Error("All GraphiQL plugins must have a unique title");
      }
      if (pluginTitles[plugin.title]) {
        throw new Error(`All GraphiQL plugins must have a unique title, found two plugins with the title '${plugin.title}'`);
      } else {
        pluginList.push(plugin);
        pluginTitles[plugin.title] = true;
      }
    }
    $6[0] = hasExplorerContext;
    $6[1] = hasHistoryContext;
    $6[2] = props.plugins;
    $6[3] = pluginList;
  } else {
    pluginList = $6[3];
  }
  t0 = pluginList;
  const plugins = t0;
  let t1;
  if ($6[6] !== plugins || $6[7] !== props.visiblePlugin || $6[8] !== storage) {
    t1 = () => {
      const storedValue = storage == null ? void 0 : storage.get(STORAGE_KEY$4);
      const pluginForStoredValue = plugins.find((plugin_0) => plugin_0.title === storedValue);
      if (pluginForStoredValue) {
        return pluginForStoredValue;
      }
      if (storedValue) {
        storage == null ? void 0 : storage.set(STORAGE_KEY$4, "");
      }
      if (!props.visiblePlugin) {
        return null;
      }
      return plugins.find((plugin_1) => (typeof props.visiblePlugin === "string" ? plugin_1.title : plugin_1) === props.visiblePlugin) || null;
    };
    $6[6] = plugins;
    $6[7] = props.visiblePlugin;
    $6[8] = storage;
    $6[9] = t1;
  } else {
    t1 = $6[9];
  }
  const [visiblePlugin, internalSetVisiblePlugin] = (0, import_react93.useState)(t1);
  const {
    onTogglePluginVisibility,
    children
  } = props;
  let t22;
  if ($6[10] !== onTogglePluginVisibility || $6[11] !== plugins) {
    t22 = (plugin_2) => {
      const newVisiblePlugin = plugin_2 ? plugins.find((p7) => (typeof plugin_2 === "string" ? p7.title : p7) === plugin_2) || null : null;
      internalSetVisiblePlugin((current) => {
        if (newVisiblePlugin === current) {
          return current;
        }
        onTogglePluginVisibility == null ? void 0 : onTogglePluginVisibility(newVisiblePlugin);
        return newVisiblePlugin;
      });
    };
    $6[10] = onTogglePluginVisibility;
    $6[11] = plugins;
    $6[12] = t22;
  } else {
    t22 = $6[12];
  }
  const setVisiblePlugin = t22;
  let t32;
  if ($6[13] !== props.visiblePlugin || $6[14] !== setVisiblePlugin) {
    t32 = () => {
      if (props.visiblePlugin) {
        setVisiblePlugin(props.visiblePlugin);
      }
    };
    $6[13] = props.visiblePlugin;
    $6[14] = setVisiblePlugin;
    $6[15] = t32;
  } else {
    t32 = $6[15];
  }
  let t42;
  if ($6[16] !== plugins || $6[17] !== props.visiblePlugin || $6[18] !== setVisiblePlugin) {
    t42 = [plugins, props.visiblePlugin, setVisiblePlugin];
    $6[16] = plugins;
    $6[17] = props.visiblePlugin;
    $6[18] = setVisiblePlugin;
    $6[19] = t42;
  } else {
    t42 = $6[19];
  }
  (0, import_react93.useEffect)(t32, t42);
  let t52;
  if ($6[20] !== plugins || $6[21] !== setVisiblePlugin || $6[22] !== visiblePlugin) {
    t52 = {
      plugins,
      setVisiblePlugin,
      visiblePlugin
    };
    $6[20] = plugins;
    $6[21] = setVisiblePlugin;
    $6[22] = visiblePlugin;
    $6[23] = t52;
  } else {
    t52 = $6[23];
  }
  const value = t52;
  let t62;
  if ($6[24] !== children || $6[25] !== value) {
    t62 = (0, import_jsx_runtime.jsx)(PluginContext.Provider, { value, children });
    $6[24] = children;
    $6[25] = value;
    $6[26] = t62;
  } else {
    t62 = $6[26];
  }
  return t62;
}
var usePluginContext = createContextHook(PluginContext);
var STORAGE_KEY$4 = "visiblePlugin";
function onHasCompletion(_cm, data, schema, explorer, plugin, callback) {
  void importCodeMirror([], {
    useCommonAddons: false
  }).then((CodeMirror) => {
    let information;
    let fieldName;
    let typeNamePill;
    let typeNamePrefix;
    let typeName;
    let typeNameSuffix;
    let description;
    let deprecation;
    let deprecationReason;
    CodeMirror.on(
      data,
      "select",
      // @ts-expect-error
      (ctx, el) => {
        if (!information) {
          const hintsUl = el.parentNode;
          information = document.createElement("div");
          information.className = "CodeMirror-hint-information";
          hintsUl.append(information);
          const header = document.createElement("header");
          header.className = "CodeMirror-hint-information-header";
          information.append(header);
          fieldName = document.createElement("span");
          fieldName.className = "CodeMirror-hint-information-field-name";
          header.append(fieldName);
          typeNamePill = document.createElement("span");
          typeNamePill.className = "CodeMirror-hint-information-type-name-pill";
          header.append(typeNamePill);
          typeNamePrefix = document.createElement("span");
          typeNamePill.append(typeNamePrefix);
          typeName = document.createElement("a");
          typeName.className = "CodeMirror-hint-information-type-name";
          typeName.href = "javascript:void 0";
          typeName.addEventListener("click", onClickHintInformation);
          typeNamePill.append(typeName);
          typeNameSuffix = document.createElement("span");
          typeNamePill.append(typeNameSuffix);
          description = document.createElement("div");
          description.className = "CodeMirror-hint-information-description";
          information.append(description);
          deprecation = document.createElement("div");
          deprecation.className = "CodeMirror-hint-information-deprecation";
          information.append(deprecation);
          const deprecationLabel = document.createElement("span");
          deprecationLabel.className = "CodeMirror-hint-information-deprecation-label";
          deprecationLabel.textContent = "Deprecated";
          deprecation.append(deprecationLabel);
          deprecationReason = document.createElement("div");
          deprecationReason.className = "CodeMirror-hint-information-deprecation-reason";
          deprecation.append(deprecationReason);
          const defaultInformationPadding = parseInt(window.getComputedStyle(information).paddingBottom.replace(/px$/, ""), 10) || 0;
          const defaultInformationMaxHeight = parseInt(window.getComputedStyle(information).maxHeight.replace(/px$/, ""), 10) || 0;
          const handleScroll = () => {
            if (information) {
              information.style.paddingTop = hintsUl.scrollTop + defaultInformationPadding + "px";
              information.style.maxHeight = hintsUl.scrollTop + defaultInformationMaxHeight + "px";
            }
          };
          hintsUl.addEventListener("scroll", handleScroll);
          let onRemoveFn;
          hintsUl.addEventListener("DOMNodeRemoved", onRemoveFn = (event) => {
            if (event.target !== hintsUl) {
              return;
            }
            hintsUl.removeEventListener("scroll", handleScroll);
            hintsUl.removeEventListener("DOMNodeRemoved", onRemoveFn);
            if (information) {
              information.removeEventListener("click", onClickHintInformation);
            }
            information = null;
            fieldName = null;
            typeNamePill = null;
            typeNamePrefix = null;
            typeName = null;
            typeNameSuffix = null;
            description = null;
            deprecation = null;
            deprecationReason = null;
            onRemoveFn = null;
          });
        }
        if (fieldName) {
          fieldName.textContent = ctx.text;
        }
        if (typeNamePill && typeNamePrefix && typeName && typeNameSuffix) {
          if (ctx.type) {
            typeNamePill.style.display = "inline";
            const renderType2 = (type) => {
              if (isNonNullType(type)) {
                typeNameSuffix.textContent = "!" + typeNameSuffix.textContent;
                renderType2(type.ofType);
              } else if (isListType(type)) {
                typeNamePrefix.textContent += "[";
                typeNameSuffix.textContent = "]" + typeNameSuffix.textContent;
                renderType2(type.ofType);
              } else {
                typeName.textContent = type.name;
              }
            };
            typeNamePrefix.textContent = "";
            typeNameSuffix.textContent = "";
            renderType2(ctx.type);
          } else {
            typeNamePrefix.textContent = "";
            typeName.textContent = "";
            typeNameSuffix.textContent = "";
            typeNamePill.style.display = "none";
          }
        }
        if (description) {
          if (ctx.description) {
            description.style.display = "block";
            description.innerHTML = markdown.render(ctx.description);
          } else {
            description.style.display = "none";
            description.innerHTML = "";
          }
        }
        if (deprecation && deprecationReason) {
          if (ctx.deprecationReason) {
            deprecation.style.display = "block";
            deprecationReason.innerHTML = markdown.render(ctx.deprecationReason);
          } else {
            deprecation.style.display = "none";
            deprecationReason.innerHTML = "";
          }
        }
      }
    );
  });
  function onClickHintInformation(event) {
    if (!schema || !explorer || !plugin || !(event.currentTarget instanceof HTMLElement)) {
      return;
    }
    const typeName = event.currentTarget.textContent || "";
    const type = schema.getType(typeName);
    if (type) {
      plugin.setVisiblePlugin(DOC_EXPLORER_PLUGIN);
      explorer.push({
        name: type.name,
        def: type
      });
      callback == null ? void 0 : callback(type);
    }
  }
}
function useSynchronizeValue(editor, value) {
  const $6 = (0, import_react_compiler_runtime.c)(4);
  let t0;
  let t1;
  if ($6[0] !== editor || $6[1] !== value) {
    t0 = () => {
      if (editor && typeof value === "string" && value !== editor.getValue()) {
        editor.setValue(value);
      }
    };
    t1 = [editor, value];
    $6[0] = editor;
    $6[1] = value;
    $6[2] = t0;
    $6[3] = t1;
  } else {
    t0 = $6[2];
    t1 = $6[3];
  }
  (0, import_react93.useEffect)(t0, t1);
}
function useSynchronizeOption(editor, option, value) {
  const $6 = (0, import_react_compiler_runtime.c)(5);
  let t0;
  let t1;
  if ($6[0] !== editor || $6[1] !== option || $6[2] !== value) {
    t0 = () => {
      if (editor) {
        editor.setOption(option, value);
      }
    };
    t1 = [editor, option, value];
    $6[0] = editor;
    $6[1] = option;
    $6[2] = value;
    $6[3] = t0;
    $6[4] = t1;
  } else {
    t0 = $6[3];
    t1 = $6[4];
  }
  (0, import_react93.useEffect)(t0, t1);
}
function useChangeHandler(editor, callback, storageKey, tabProperty, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  let t0;
  if ($6[0] !== caller) {
    t0 = {
      nonNull: true,
      caller
    };
    $6[0] = caller;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  const {
    updateActiveTabValues
  } = useEditorContext(t0);
  const storage = useStorageContext();
  let t1;
  let t22;
  if ($6[2] !== callback || $6[3] !== editor || $6[4] !== storage || $6[5] !== storageKey || $6[6] !== tabProperty || $6[7] !== updateActiveTabValues) {
    t1 = () => {
      if (!editor) {
        return;
      }
      const store = debounce(500, (value) => {
        if (!storage || storageKey === null) {
          return;
        }
        storage.set(storageKey, value);
      });
      const updateTab = debounce(100, (value_0) => {
        updateActiveTabValues({
          [tabProperty]: value_0
        });
      });
      const handleChange = (editorInstance, changeObj) => {
        if (!changeObj) {
          return;
        }
        const newValue = editorInstance.getValue();
        store(newValue);
        updateTab(newValue);
        callback == null ? void 0 : callback(newValue);
      };
      editor.on("change", handleChange);
      return () => editor.off("change", handleChange);
    };
    t22 = [callback, editor, storage, storageKey, tabProperty, updateActiveTabValues];
    $6[2] = callback;
    $6[3] = editor;
    $6[4] = storage;
    $6[5] = storageKey;
    $6[6] = tabProperty;
    $6[7] = updateActiveTabValues;
    $6[8] = t1;
    $6[9] = t22;
  } else {
    t1 = $6[8];
    t22 = $6[9];
  }
  (0, import_react93.useEffect)(t1, t22);
}
function useCompletion(editor, callback, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(9);
  let t0;
  if ($6[0] !== caller) {
    t0 = {
      nonNull: true,
      caller
    };
    $6[0] = caller;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  const {
    schema
  } = useSchemaContext(t0);
  const explorer = useExplorerContext();
  const plugin = usePluginContext();
  let t1;
  let t22;
  if ($6[2] !== callback || $6[3] !== editor || $6[4] !== explorer || $6[5] !== plugin || $6[6] !== schema) {
    t1 = () => {
      if (!editor) {
        return;
      }
      const handleCompletion = (instance, changeObj) => {
        onHasCompletion(instance, changeObj, schema, explorer, plugin, (type) => {
          callback == null ? void 0 : callback({
            kind: "Type",
            type,
            schema: schema || void 0
          });
        });
      };
      editor.on("hasCompletion", handleCompletion);
      return () => editor.off("hasCompletion", handleCompletion);
    };
    t22 = [callback, editor, explorer, plugin, schema];
    $6[2] = callback;
    $6[3] = editor;
    $6[4] = explorer;
    $6[5] = plugin;
    $6[6] = schema;
    $6[7] = t1;
    $6[8] = t22;
  } else {
    t1 = $6[7];
    t22 = $6[8];
  }
  (0, import_react93.useEffect)(t1, t22);
}
function useKeyMap(editor, keys, callback) {
  const $6 = (0, import_react_compiler_runtime.c)(5);
  let t0;
  let t1;
  if ($6[0] !== callback || $6[1] !== editor || $6[2] !== keys) {
    t0 = () => {
      if (!editor) {
        return;
      }
      for (const key of keys) {
        editor.removeKeyMap(key);
      }
      if (callback) {
        const keyMap = {};
        for (const key_0 of keys) {
          keyMap[key_0] = () => callback();
        }
        editor.addKeyMap(keyMap);
      }
    };
    t1 = [editor, keys, callback];
    $6[0] = callback;
    $6[1] = editor;
    $6[2] = keys;
    $6[3] = t0;
    $6[4] = t1;
  } else {
    t0 = $6[3];
    t1 = $6[4];
  }
  (0, import_react93.useEffect)(t0, t1);
}
var _useCopyQuery = useCopyQuery;
var _useMergeQuery = useMergeQuery;
var _usePrettifyEditors = usePrettifyEditors;
var _useAutoCompleteLeafs = useAutoCompleteLeafs;
function useCopyQuery(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    caller,
    onCopyQuery
  } = t1;
  const t22 = caller || _useCopyQuery;
  let t32;
  if ($6[2] !== t22) {
    t32 = {
      nonNull: true,
      caller: t22
    };
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const {
    queryEditor
  } = useEditorContext(t32);
  let t42;
  if ($6[4] !== onCopyQuery || $6[5] !== queryEditor) {
    t42 = () => {
      if (!queryEditor) {
        return;
      }
      const query = queryEditor.getValue();
      (0, import_copy_to_clipboard.default)(query);
      onCopyQuery == null ? void 0 : onCopyQuery(query);
    };
    $6[4] = onCopyQuery;
    $6[5] = queryEditor;
    $6[6] = t42;
  } else {
    t42 = $6[6];
  }
  return t42;
}
function useMergeQuery(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(8);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    caller
  } = t1;
  const t22 = caller || _useMergeQuery;
  let t32;
  if ($6[2] !== t22) {
    t32 = {
      nonNull: true,
      caller: t22
    };
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const {
    queryEditor
  } = useEditorContext(t32);
  let t42;
  if ($6[4] === Symbol.for("react.memo_cache_sentinel")) {
    t42 = {
      nonNull: true,
      caller: _useMergeQuery
    };
    $6[4] = t42;
  } else {
    t42 = $6[4];
  }
  const {
    schema
  } = useSchemaContext(t42);
  let t52;
  if ($6[5] !== queryEditor || $6[6] !== schema) {
    t52 = () => {
      const documentAST = queryEditor == null ? void 0 : queryEditor.documentAST;
      const query = queryEditor == null ? void 0 : queryEditor.getValue();
      if (!documentAST || !query) {
        return;
      }
      queryEditor.setValue(print(mergeAst(documentAST, schema)));
    };
    $6[5] = queryEditor;
    $6[6] = schema;
    $6[7] = t52;
  } else {
    t52 = $6[7];
  }
  return t52;
}
function usePrettifyEditors(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(8);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    caller
  } = t1;
  const t22 = caller || _usePrettifyEditors;
  let t32;
  if ($6[2] !== t22) {
    t32 = {
      nonNull: true,
      caller: t22
    };
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const {
    queryEditor,
    headerEditor,
    variableEditor
  } = useEditorContext(t32);
  let t42;
  if ($6[4] !== headerEditor || $6[5] !== queryEditor || $6[6] !== variableEditor) {
    t42 = () => {
      if (variableEditor) {
        const variableEditorContent = variableEditor.getValue();
        try {
          const prettifiedVariableEditorContent = JSON.stringify(JSON.parse(variableEditorContent), null, 2);
          if (prettifiedVariableEditorContent !== variableEditorContent) {
            variableEditor.setValue(prettifiedVariableEditorContent);
          }
        } catch {
        }
      }
      if (headerEditor) {
        const headerEditorContent = headerEditor.getValue();
        try {
          const prettifiedHeaderEditorContent = JSON.stringify(JSON.parse(headerEditorContent), null, 2);
          if (prettifiedHeaderEditorContent !== headerEditorContent) {
            headerEditor.setValue(prettifiedHeaderEditorContent);
          }
        } catch {
        }
      }
      if (queryEditor) {
        const editorContent = queryEditor.getValue();
        const prettifiedEditorContent = print(parse(editorContent));
        if (prettifiedEditorContent !== editorContent) {
          queryEditor.setValue(prettifiedEditorContent);
        }
      }
    };
    $6[4] = headerEditor;
    $6[5] = queryEditor;
    $6[6] = variableEditor;
    $6[7] = t42;
  } else {
    t42 = $6[7];
  }
  return t42;
}
function useAutoCompleteLeafs(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(10);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    getDefaultFieldNames,
    caller
  } = t1;
  const t22 = caller || _useAutoCompleteLeafs;
  let t32;
  if ($6[2] !== t22) {
    t32 = {
      nonNull: true,
      caller: t22
    };
    $6[2] = t22;
    $6[3] = t32;
  } else {
    t32 = $6[3];
  }
  const {
    schema
  } = useSchemaContext(t32);
  const t42 = caller || _useAutoCompleteLeafs;
  let t52;
  if ($6[4] !== t42) {
    t52 = {
      nonNull: true,
      caller: t42
    };
    $6[4] = t42;
    $6[5] = t52;
  } else {
    t52 = $6[5];
  }
  const {
    queryEditor
  } = useEditorContext(t52);
  let t62;
  if ($6[6] !== getDefaultFieldNames || $6[7] !== queryEditor || $6[8] !== schema) {
    t62 = () => {
      if (!queryEditor) {
        return;
      }
      const query = queryEditor.getValue();
      const {
        insertions,
        result
      } = fillLeafs(schema, query, getDefaultFieldNames);
      if (insertions && insertions.length > 0) {
        queryEditor.operation(() => {
          const cursor = queryEditor.getCursor();
          const cursorIndex = queryEditor.indexFromPos(cursor);
          queryEditor.setValue(result || "");
          let added;
          added = 0;
          const markers = insertions.map((t72) => {
            const {
              index,
              string
            } = t72;
            added = added + string.length;
            return queryEditor.markText(queryEditor.posFromIndex(index + added), queryEditor.posFromIndex(index + added), {
              className: "auto-inserted-leaf",
              clearOnEnter: true,
              title: "Automatically added leaf fields"
            });
          });
          setTimeout(() => {
            for (const marker of markers) {
              marker.clear();
            }
          }, 7e3);
          let newCursorIndex = cursorIndex;
          for (const {
            index: index_0,
            string: string_0
          } of insertions) {
            if (index_0 < cursorIndex) {
              newCursorIndex = newCursorIndex + string_0.length;
            }
          }
          queryEditor.setCursor(queryEditor.posFromIndex(newCursorIndex));
        });
      }
      return result;
    };
    $6[6] = getDefaultFieldNames;
    $6[7] = queryEditor;
    $6[8] = schema;
    $6[9] = t62;
  } else {
    t62 = $6[9];
  }
  return t62;
}
function importCodeMirrorImports$3() {
  return importCodeMirror([
    // @ts-expect-error
    import("./javascript-GD66RJFB.js")
  ]);
}
var _useHeaderEditor = useHeaderEditor;
function useHeaderEditor(t0, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(17);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    editorTheme: t22,
    keyMap: t32,
    onEdit,
    readOnly: t42
  } = t1;
  const editorTheme = t22 === void 0 ? DEFAULT_EDITOR_THEME : t22;
  const keyMap = t32 === void 0 ? DEFAULT_KEY_MAP : t32;
  const readOnly = t42 === void 0 ? false : t42;
  const t52 = caller || _useHeaderEditor;
  let t62;
  if ($6[2] !== t52) {
    t62 = {
      nonNull: true,
      caller: t52
    };
    $6[2] = t52;
    $6[3] = t62;
  } else {
    t62 = $6[3];
  }
  const {
    initialHeaders,
    headerEditor,
    setHeaderEditor,
    shouldPersistHeaders
  } = useEditorContext(t62);
  const executionContext = useExecutionContext();
  const t72 = caller || _useHeaderEditor;
  let t82;
  if ($6[4] !== t72) {
    t82 = {
      caller: t72
    };
    $6[4] = t72;
    $6[5] = t82;
  } else {
    t82 = $6[5];
  }
  const merge = useMergeQuery(t82);
  const t92 = caller || _useHeaderEditor;
  let t102;
  if ($6[6] !== t92) {
    t102 = {
      caller: t92
    };
    $6[6] = t92;
    $6[7] = t102;
  } else {
    t102 = $6[7];
  }
  const prettify = usePrettifyEditors(t102);
  const ref = (0, import_react93.useRef)(null);
  let t112;
  let t122;
  if ($6[8] !== editorTheme || $6[9] !== initialHeaders || $6[10] !== readOnly || $6[11] !== setHeaderEditor) {
    t112 = () => {
      let isActive;
      isActive = true;
      importCodeMirrorImports$3().then((CodeMirror) => {
        if (!isActive) {
          return;
        }
        const container = ref.current;
        if (!container) {
          return;
        }
        const newEditor = CodeMirror(container, {
          value: initialHeaders,
          lineNumbers: true,
          tabSize: 2,
          mode: {
            name: "javascript",
            json: true
          },
          theme: editorTheme,
          autoCloseBrackets: true,
          matchBrackets: true,
          showCursorWhenSelecting: true,
          readOnly: readOnly ? "nocursor" : false,
          foldGutter: true,
          gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
          extraKeys: commonKeys
        });
        newEditor.addKeyMap({
          "Cmd-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Ctrl-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Alt-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Shift-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          }
        });
        newEditor.on("keyup", _temp$2);
        setHeaderEditor(newEditor);
      });
      return () => {
        isActive = false;
      };
    };
    t122 = [editorTheme, initialHeaders, readOnly, setHeaderEditor];
    $6[8] = editorTheme;
    $6[9] = initialHeaders;
    $6[10] = readOnly;
    $6[11] = setHeaderEditor;
    $6[12] = t112;
    $6[13] = t122;
  } else {
    t112 = $6[12];
    t122 = $6[13];
  }
  (0, import_react93.useEffect)(t112, t122);
  useSynchronizeOption(headerEditor, "keyMap", keyMap);
  useChangeHandler(headerEditor, onEdit, shouldPersistHeaders ? STORAGE_KEY$3 : null, "headers", _useHeaderEditor);
  let t132;
  if ($6[14] === Symbol.for("react.memo_cache_sentinel")) {
    t132 = ["Cmd-Enter", "Ctrl-Enter"];
    $6[14] = t132;
  } else {
    t132 = $6[14];
  }
  useKeyMap(headerEditor, t132, executionContext == null ? void 0 : executionContext.run);
  let t142;
  if ($6[15] === Symbol.for("react.memo_cache_sentinel")) {
    t142 = ["Shift-Ctrl-P"];
    $6[15] = t142;
  } else {
    t142 = $6[15];
  }
  useKeyMap(headerEditor, t142, prettify);
  let t152;
  if ($6[16] === Symbol.for("react.memo_cache_sentinel")) {
    t152 = ["Shift-Ctrl-M"];
    $6[16] = t152;
  } else {
    t152 = $6[16];
  }
  useKeyMap(headerEditor, t152, merge);
  return ref;
}
function _temp$2(editorInstance, event) {
  const {
    code,
    key,
    shiftKey
  } = event;
  const isLetter = code.startsWith("Key");
  const isNumber2 = !shiftKey && code.startsWith("Digit");
  if (isLetter || isNumber2 || key === "_" || key === '"') {
    editorInstance.execCommand("autocomplete");
  }
}
var STORAGE_KEY$3 = "headers";
var invalidCharacters = Array.from({
  length: 11
}, (_5, i8) => {
  return String.fromCharCode(8192 + i8);
}).concat(["\u2028", "\u2029", " ", " "]);
var sanitizeRegex = new RegExp("[" + invalidCharacters.join("") + "]", "g");
function normalizeWhitespace(line) {
  return line.replace(sanitizeRegex, " ");
}
function importCodeMirrorImports$2() {
  return importCodeMirror([import("./comment-6ZPQZD2V.js"), import("./search-WNJY32EN.js"), import("./hint-KSNNMJFX.js"), import("./lint-Z43RZL6E.js"), import("./info-IXF46N5J.js"), import("./jump-XGA6BLIV.js"), import("./mode-FXYCUDJM.js")]);
}
var _useQueryEditor = useQueryEditor;
function updateVariableEditor(variableEditor, operationFacts) {
  variableEditor.state.lint.linterOptions.variableToType = operationFacts == null ? void 0 : operationFacts.variableToType;
  variableEditor.options.lint.variableToType = operationFacts == null ? void 0 : operationFacts.variableToType;
  variableEditor.options.hintOptions.variableToType = operationFacts == null ? void 0 : operationFacts.variableToType;
}
function updateEditorSchema(editor, schema) {
  editor.state.lint.linterOptions.schema = schema;
  editor.options.lint.schema = schema;
  editor.options.hintOptions.schema = schema;
  editor.options.info.schema = schema;
  editor.options.jump.schema = schema;
}
function updateEditorValidationRules(editor, validationRules) {
  editor.state.lint.linterOptions.validationRules = validationRules;
  editor.options.lint.validationRules = validationRules;
}
function updateEditorExternalFragments(editor, externalFragmentList) {
  editor.state.lint.linterOptions.externalFragments = externalFragmentList;
  editor.options.lint.externalFragments = externalFragmentList;
  editor.options.hintOptions.externalFragments = externalFragmentList;
}
function useQueryEditor(t0, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(41);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    editorTheme: t22,
    keyMap: t32,
    onClickReference,
    onCopyQuery,
    onEdit,
    readOnly: t42
  } = t1;
  const editorTheme = t22 === void 0 ? DEFAULT_EDITOR_THEME : t22;
  const keyMap = t32 === void 0 ? DEFAULT_KEY_MAP : t32;
  const readOnly = t42 === void 0 ? false : t42;
  const t52 = caller || _useQueryEditor;
  let t62;
  if ($6[2] !== t52) {
    t62 = {
      nonNull: true,
      caller: t52
    };
    $6[2] = t52;
    $6[3] = t62;
  } else {
    t62 = $6[3];
  }
  const {
    schema
  } = useSchemaContext(t62);
  const t72 = caller || _useQueryEditor;
  let t82;
  if ($6[4] !== t72) {
    t82 = {
      nonNull: true,
      caller: t72
    };
    $6[4] = t72;
    $6[5] = t82;
  } else {
    t82 = $6[5];
  }
  const {
    externalFragments,
    initialQuery,
    queryEditor,
    setOperationName,
    setQueryEditor,
    validationRules,
    variableEditor,
    updateActiveTabValues
  } = useEditorContext(t82);
  const executionContext = useExecutionContext();
  const storage = useStorageContext();
  const explorer = useExplorerContext();
  const plugin = usePluginContext();
  const t92 = caller || _useQueryEditor;
  let t102;
  if ($6[6] !== onCopyQuery || $6[7] !== t92) {
    t102 = {
      caller: t92,
      onCopyQuery
    };
    $6[6] = onCopyQuery;
    $6[7] = t92;
    $6[8] = t102;
  } else {
    t102 = $6[8];
  }
  const copy = useCopyQuery(t102);
  const t112 = caller || _useQueryEditor;
  let t122;
  if ($6[9] !== t112) {
    t122 = {
      caller: t112
    };
    $6[9] = t112;
    $6[10] = t122;
  } else {
    t122 = $6[10];
  }
  const merge = useMergeQuery(t122);
  const t132 = caller || _useQueryEditor;
  let t142;
  if ($6[11] !== t132) {
    t142 = {
      caller: t132
    };
    $6[11] = t132;
    $6[12] = t142;
  } else {
    t142 = $6[12];
  }
  const prettify = usePrettifyEditors(t142);
  const ref = (0, import_react93.useRef)(null);
  const codeMirrorRef = (0, import_react93.useRef)();
  const onClickReferenceRef = (0, import_react93.useRef)(_temp$1);
  let t152;
  let t162;
  if ($6[13] !== explorer || $6[14] !== onClickReference || $6[15] !== plugin) {
    t152 = () => {
      onClickReferenceRef.current = (reference) => {
        if (!explorer || !plugin) {
          return;
        }
        plugin.setVisiblePlugin(DOC_EXPLORER_PLUGIN);
        bb47: switch (reference.kind) {
          case "Type": {
            explorer.push({
              name: reference.type.name,
              def: reference.type
            });
            break bb47;
          }
          case "Field": {
            explorer.push({
              name: reference.field.name,
              def: reference.field
            });
            break bb47;
          }
          case "Argument": {
            if (reference.field) {
              explorer.push({
                name: reference.field.name,
                def: reference.field
              });
            }
            break bb47;
          }
          case "EnumValue": {
            if (reference.type) {
              explorer.push({
                name: reference.type.name,
                def: reference.type
              });
            }
          }
        }
        onClickReference == null ? void 0 : onClickReference(reference);
      };
    };
    t162 = [explorer, onClickReference, plugin];
    $6[13] = explorer;
    $6[14] = onClickReference;
    $6[15] = plugin;
    $6[16] = t152;
    $6[17] = t162;
  } else {
    t152 = $6[16];
    t162 = $6[17];
  }
  (0, import_react93.useEffect)(t152, t162);
  let t172;
  let t18;
  if ($6[18] !== editorTheme || $6[19] !== initialQuery || $6[20] !== readOnly || $6[21] !== setQueryEditor) {
    t172 = () => {
      let isActive;
      isActive = true;
      importCodeMirrorImports$2().then((CodeMirror) => {
        if (!isActive) {
          return;
        }
        codeMirrorRef.current = CodeMirror;
        const container = ref.current;
        if (!container) {
          return;
        }
        const newEditor = CodeMirror(container, {
          value: initialQuery,
          lineNumbers: true,
          tabSize: 2,
          foldGutter: true,
          mode: "graphql",
          theme: editorTheme,
          autoCloseBrackets: true,
          matchBrackets: true,
          showCursorWhenSelecting: true,
          readOnly: readOnly ? "nocursor" : false,
          lint: {
            schema: void 0,
            validationRules: null,
            externalFragments: void 0
          },
          hintOptions: {
            schema: void 0,
            closeOnUnfocus: false,
            completeSingle: false,
            container,
            externalFragments: void 0,
            autocompleteOptions: {
              mode: GraphQLDocumentMode.EXECUTABLE
            }
          },
          info: {
            schema: void 0,
            renderDescription: _temp2,
            onClick(reference_0) {
              onClickReferenceRef.current(reference_0);
            }
          },
          jump: {
            schema: void 0,
            onClick(reference_1) {
              onClickReferenceRef.current(reference_1);
            }
          },
          gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
          extraKeys: {
            ...commonKeys,
            "Cmd-S"() {
            },
            "Ctrl-S"() {
            }
          }
        });
        newEditor.addKeyMap({
          "Cmd-Space"() {
            newEditor.showHint({
              completeSingle: true,
              container
            });
          },
          "Ctrl-Space"() {
            newEditor.showHint({
              completeSingle: true,
              container
            });
          },
          "Alt-Space"() {
            newEditor.showHint({
              completeSingle: true,
              container
            });
          },
          "Shift-Space"() {
            newEditor.showHint({
              completeSingle: true,
              container
            });
          },
          "Shift-Alt-Space"() {
            newEditor.showHint({
              completeSingle: true,
              container
            });
          }
        });
        newEditor.on("keyup", _temp3);
        let showingHints;
        showingHints = false;
        newEditor.on("startCompletion", () => {
          showingHints = true;
        });
        newEditor.on("endCompletion", () => {
          showingHints = false;
        });
        newEditor.on("keydown", (editorInstance_0, event_0) => {
          if (event_0.key === "Escape" && showingHints) {
            event_0.stopPropagation();
          }
        });
        newEditor.on("beforeChange", _temp4);
        newEditor.documentAST = null;
        newEditor.operationName = null;
        newEditor.operations = null;
        newEditor.variableToType = null;
        setQueryEditor(newEditor);
      });
      return () => {
        isActive = false;
      };
    };
    t18 = [editorTheme, initialQuery, readOnly, setQueryEditor];
    $6[18] = editorTheme;
    $6[19] = initialQuery;
    $6[20] = readOnly;
    $6[21] = setQueryEditor;
    $6[22] = t172;
    $6[23] = t18;
  } else {
    t172 = $6[22];
    t18 = $6[23];
  }
  (0, import_react93.useEffect)(t172, t18);
  useSynchronizeOption(queryEditor, "keyMap", keyMap);
  let t19;
  let t20;
  if ($6[24] !== onEdit || $6[25] !== queryEditor || $6[26] !== schema || $6[27] !== setOperationName || $6[28] !== storage || $6[29] !== updateActiveTabValues || $6[30] !== variableEditor) {
    t19 = () => {
      if (!queryEditor) {
        return;
      }
      const getAndUpdateOperationFacts = function getAndUpdateOperationFacts2(editorInstance_2) {
        var _a;
        const operationFacts = getOperationFacts(schema, editorInstance_2.getValue());
        const operationName = getSelectedOperationName(editorInstance_2.operations ?? void 0, editorInstance_2.operationName ?? void 0, operationFacts == null ? void 0 : operationFacts.operations);
        editorInstance_2.documentAST = (operationFacts == null ? void 0 : operationFacts.documentAST) ?? null;
        editorInstance_2.operationName = operationName ?? null;
        editorInstance_2.operations = (operationFacts == null ? void 0 : operationFacts.operations) ?? null;
        if (variableEditor) {
          updateVariableEditor(variableEditor, operationFacts);
          (_a = codeMirrorRef.current) == null ? void 0 : _a.signal(variableEditor, "change", variableEditor);
        }
        return operationFacts ? {
          ...operationFacts,
          operationName
        } : null;
      };
      const handleChange = debounce(100, (editorInstance_3) => {
        const query = editorInstance_3.getValue();
        storage == null ? void 0 : storage.set(STORAGE_KEY_QUERY, query);
        const currentOperationName = editorInstance_3.operationName;
        const operationFacts_0 = getAndUpdateOperationFacts(editorInstance_3);
        if ((operationFacts_0 == null ? void 0 : operationFacts_0.operationName) !== void 0) {
          storage == null ? void 0 : storage.set(STORAGE_KEY_OPERATION_NAME, operationFacts_0.operationName);
        }
        onEdit == null ? void 0 : onEdit(query, operationFacts_0 == null ? void 0 : operationFacts_0.documentAST);
        if ((operationFacts_0 == null ? void 0 : operationFacts_0.operationName) && currentOperationName !== operationFacts_0.operationName) {
          setOperationName(operationFacts_0.operationName);
        }
        updateActiveTabValues({
          query,
          operationName: (operationFacts_0 == null ? void 0 : operationFacts_0.operationName) ?? null
        });
      });
      getAndUpdateOperationFacts(queryEditor);
      queryEditor.on("change", handleChange);
      return () => queryEditor.off("change", handleChange);
    };
    t20 = [onEdit, queryEditor, schema, setOperationName, storage, variableEditor, updateActiveTabValues];
    $6[24] = onEdit;
    $6[25] = queryEditor;
    $6[26] = schema;
    $6[27] = setOperationName;
    $6[28] = storage;
    $6[29] = updateActiveTabValues;
    $6[30] = variableEditor;
    $6[31] = t19;
    $6[32] = t20;
  } else {
    t19 = $6[31];
    t20 = $6[32];
  }
  (0, import_react93.useEffect)(t19, t20);
  useSynchronizeSchema(queryEditor, schema ?? null, codeMirrorRef);
  useSynchronizeValidationRules(queryEditor, validationRules ?? null, codeMirrorRef);
  useSynchronizeExternalFragments(queryEditor, externalFragments, codeMirrorRef);
  useCompletion(queryEditor, onClickReference || null, _useQueryEditor);
  const run = executionContext == null ? void 0 : executionContext.run;
  let t21;
  if ($6[33] !== queryEditor || $6[34] !== run || $6[35] !== setOperationName) {
    t21 = () => {
      var _a;
      if (!run || !queryEditor || !queryEditor.operations || !queryEditor.hasFocus()) {
        run == null ? void 0 : run();
        return;
      }
      const cursorIndex = queryEditor.indexFromPos(queryEditor.getCursor());
      let operationName_0;
      for (const operation of queryEditor.operations) {
        if (operation.loc && operation.loc.start <= cursorIndex && operation.loc.end >= cursorIndex) {
          operationName_0 = (_a = operation.name) == null ? void 0 : _a.value;
        }
      }
      if (operationName_0 && operationName_0 !== queryEditor.operationName) {
        setOperationName(operationName_0);
      }
      run();
    };
    $6[33] = queryEditor;
    $6[34] = run;
    $6[35] = setOperationName;
    $6[36] = t21;
  } else {
    t21 = $6[36];
  }
  const runAtCursor = t21;
  let t222;
  if ($6[37] === Symbol.for("react.memo_cache_sentinel")) {
    t222 = ["Cmd-Enter", "Ctrl-Enter"];
    $6[37] = t222;
  } else {
    t222 = $6[37];
  }
  useKeyMap(queryEditor, t222, runAtCursor);
  let t23;
  if ($6[38] === Symbol.for("react.memo_cache_sentinel")) {
    t23 = ["Shift-Ctrl-C"];
    $6[38] = t23;
  } else {
    t23 = $6[38];
  }
  useKeyMap(queryEditor, t23, copy);
  let t24;
  if ($6[39] === Symbol.for("react.memo_cache_sentinel")) {
    t24 = ["Shift-Ctrl-P", "Shift-Ctrl-F"];
    $6[39] = t24;
  } else {
    t24 = $6[39];
  }
  useKeyMap(queryEditor, t24, prettify);
  let t25;
  if ($6[40] === Symbol.for("react.memo_cache_sentinel")) {
    t25 = ["Shift-Ctrl-M"];
    $6[40] = t25;
  } else {
    t25 = $6[40];
  }
  useKeyMap(queryEditor, t25, merge);
  return ref;
}
function _temp4(editorInstance_1, change) {
  var _a;
  if (change.origin === "paste") {
    const text_0 = change.text.map(normalizeWhitespace);
    (_a = change.update) == null ? void 0 : _a.call(change, change.from, change.to, text_0);
  }
}
function _temp3(editorInstance, event) {
  if (AUTO_COMPLETE_AFTER_KEY.test(event.key)) {
    editorInstance.execCommand("autocomplete");
  }
}
function _temp2(text) {
  return markdown.render(text);
}
function _temp$1() {
}
function useSynchronizeSchema(editor, schema, codeMirrorRef) {
  const $6 = (0, import_react_compiler_runtime.c)(5);
  let t0;
  let t1;
  if ($6[0] !== codeMirrorRef || $6[1] !== editor || $6[2] !== schema) {
    t0 = () => {
      if (!editor) {
        return;
      }
      const didChange = editor.options.lint.schema !== schema;
      updateEditorSchema(editor, schema);
      if (didChange && codeMirrorRef.current) {
        codeMirrorRef.current.signal(editor, "change", editor);
      }
    };
    t1 = [editor, schema, codeMirrorRef];
    $6[0] = codeMirrorRef;
    $6[1] = editor;
    $6[2] = schema;
    $6[3] = t0;
    $6[4] = t1;
  } else {
    t0 = $6[3];
    t1 = $6[4];
  }
  (0, import_react93.useEffect)(t0, t1);
}
function useSynchronizeValidationRules(editor, validationRules, codeMirrorRef) {
  const $6 = (0, import_react_compiler_runtime.c)(5);
  let t0;
  let t1;
  if ($6[0] !== codeMirrorRef || $6[1] !== editor || $6[2] !== validationRules) {
    t0 = () => {
      if (!editor) {
        return;
      }
      const didChange = editor.options.lint.validationRules !== validationRules;
      updateEditorValidationRules(editor, validationRules);
      if (didChange && codeMirrorRef.current) {
        codeMirrorRef.current.signal(editor, "change", editor);
      }
    };
    t1 = [editor, validationRules, codeMirrorRef];
    $6[0] = codeMirrorRef;
    $6[1] = editor;
    $6[2] = validationRules;
    $6[3] = t0;
    $6[4] = t1;
  } else {
    t0 = $6[3];
    t1 = $6[4];
  }
  (0, import_react93.useEffect)(t0, t1);
}
function useSynchronizeExternalFragments(editor, externalFragments, codeMirrorRef) {
  const $6 = (0, import_react_compiler_runtime.c)(7);
  let t0;
  if ($6[0] !== externalFragments) {
    t0 = [...externalFragments.values()];
    $6[0] = externalFragments;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  const externalFragmentList = t0;
  let t1;
  let t22;
  if ($6[2] !== codeMirrorRef || $6[3] !== editor || $6[4] !== externalFragmentList) {
    t1 = () => {
      if (!editor) {
        return;
      }
      const didChange = editor.options.lint.externalFragments !== externalFragmentList;
      updateEditorExternalFragments(editor, externalFragmentList);
      if (didChange && codeMirrorRef.current) {
        codeMirrorRef.current.signal(editor, "change", editor);
      }
    };
    t22 = [editor, externalFragmentList, codeMirrorRef];
    $6[2] = codeMirrorRef;
    $6[3] = editor;
    $6[4] = externalFragmentList;
    $6[5] = t1;
    $6[6] = t22;
  } else {
    t1 = $6[5];
    t22 = $6[6];
  }
  (0, import_react93.useEffect)(t1, t22);
}
var AUTO_COMPLETE_AFTER_KEY = /^[a-zA-Z0-9_@(]$/;
var STORAGE_KEY_QUERY = "query";
var STORAGE_KEY_OPERATION_NAME = "operationName";
function getDefaultTabState({
  defaultQuery,
  defaultHeaders,
  headers,
  defaultTabs,
  query,
  variables,
  storage,
  shouldPersistHeaders
}) {
  const storedState = storage == null ? void 0 : storage.get(STORAGE_KEY$2);
  try {
    if (!storedState) {
      throw new Error("Storage for tabs is empty");
    }
    const parsed = JSON.parse(storedState);
    const headersForHash = shouldPersistHeaders ? headers : void 0;
    if (isTabsState(parsed)) {
      const expectedHash = hashFromTabContents({
        query,
        variables,
        headers: headersForHash
      });
      let matchingTabIndex = -1;
      for (let index = 0; index < parsed.tabs.length; index++) {
        const tab = parsed.tabs[index];
        tab.hash = hashFromTabContents({
          query: tab.query,
          variables: tab.variables,
          headers: tab.headers
        });
        if (tab.hash === expectedHash) {
          matchingTabIndex = index;
        }
      }
      if (matchingTabIndex >= 0) {
        parsed.activeTabIndex = matchingTabIndex;
      } else {
        const operationName = query ? fuzzyExtractOperationName(query) : null;
        parsed.tabs.push({
          id: guid(),
          hash: expectedHash,
          title: operationName || DEFAULT_TITLE,
          query,
          variables,
          headers,
          operationName,
          response: null
        });
        parsed.activeTabIndex = parsed.tabs.length - 1;
      }
      return parsed;
    }
    throw new Error("Storage for tabs is invalid");
  } catch {
    return {
      activeTabIndex: 0,
      tabs: (defaultTabs || [{
        query: query ?? defaultQuery,
        variables,
        headers: headers ?? defaultHeaders
      }]).map(createTab)
    };
  }
}
function isTabsState(obj) {
  return obj && typeof obj === "object" && !Array.isArray(obj) && hasNumberKey(obj, "activeTabIndex") && "tabs" in obj && Array.isArray(obj.tabs) && obj.tabs.every(isTabState);
}
function isTabState(obj) {
  return obj && typeof obj === "object" && !Array.isArray(obj) && hasStringKey(obj, "id") && hasStringKey(obj, "title") && hasStringOrNullKey(obj, "query") && hasStringOrNullKey(obj, "variables") && hasStringOrNullKey(obj, "headers") && hasStringOrNullKey(obj, "operationName") && hasStringOrNullKey(obj, "response");
}
function hasNumberKey(obj, key) {
  return key in obj && typeof obj[key] === "number";
}
function hasStringKey(obj, key) {
  return key in obj && typeof obj[key] === "string";
}
function hasStringOrNullKey(obj, key) {
  return key in obj && (typeof obj[key] === "string" || obj[key] === null);
}
function useSynchronizeActiveTabValues({
  queryEditor,
  variableEditor,
  headerEditor,
  responseEditor
}) {
  return (0, import_react93.useCallback)((state) => {
    const query = (queryEditor == null ? void 0 : queryEditor.getValue()) ?? null;
    const variables = (variableEditor == null ? void 0 : variableEditor.getValue()) ?? null;
    const headers = (headerEditor == null ? void 0 : headerEditor.getValue()) ?? null;
    const operationName = (queryEditor == null ? void 0 : queryEditor.operationName) ?? null;
    const response = (responseEditor == null ? void 0 : responseEditor.getValue()) ?? null;
    return setPropertiesInActiveTab(state, {
      query,
      variables,
      headers,
      response,
      operationName
    });
  }, [queryEditor, variableEditor, headerEditor, responseEditor]);
}
function serializeTabState(tabState, shouldPersistHeaders = false) {
  return JSON.stringify(tabState, (key, value) => key === "hash" || key === "response" || !shouldPersistHeaders && key === "headers" ? null : value);
}
function useStoreTabs({
  storage,
  shouldPersistHeaders
}) {
  const store = (0, import_react93.useMemo)(() => debounce(500, (value) => {
    storage == null ? void 0 : storage.set(STORAGE_KEY$2, value);
  }), [storage]);
  return (0, import_react93.useCallback)((currentState) => {
    store(serializeTabState(currentState, shouldPersistHeaders));
  }, [shouldPersistHeaders, store]);
}
function useSetEditorValues({
  queryEditor,
  variableEditor,
  headerEditor,
  responseEditor,
  defaultHeaders
}) {
  return (0, import_react93.useCallback)(({
    query,
    variables,
    headers,
    response
  }) => {
    queryEditor == null ? void 0 : queryEditor.setValue(query ?? "");
    variableEditor == null ? void 0 : variableEditor.setValue(variables ?? "");
    headerEditor == null ? void 0 : headerEditor.setValue(headers ?? defaultHeaders ?? "");
    responseEditor == null ? void 0 : responseEditor.setValue(response ?? "");
  }, [headerEditor, queryEditor, responseEditor, variableEditor, defaultHeaders]);
}
function createTab({
  query = null,
  variables = null,
  headers = null
} = {}) {
  return {
    id: guid(),
    hash: hashFromTabContents({
      query,
      variables,
      headers
    }),
    title: query && fuzzyExtractOperationName(query) || DEFAULT_TITLE,
    query,
    variables,
    headers,
    operationName: null,
    response: null
  };
}
function setPropertiesInActiveTab(state, partialTab) {
  return {
    ...state,
    tabs: state.tabs.map((tab, index) => {
      if (index !== state.activeTabIndex) {
        return tab;
      }
      const newTab = {
        ...tab,
        ...partialTab
      };
      return {
        ...newTab,
        hash: hashFromTabContents(newTab),
        title: newTab.operationName || (newTab.query ? fuzzyExtractOperationName(newTab.query) : void 0) || DEFAULT_TITLE
      };
    })
  };
}
function guid() {
  const s42 = () => {
    return Math.floor((1 + Math.random()) * 65536).toString(16).slice(1);
  };
  return `${s42()}${s42()}-${s42()}-${s42()}-${s42()}-${s42()}${s42()}${s42()}`;
}
function hashFromTabContents(args) {
  return [args.query ?? "", args.variables ?? "", args.headers ?? ""].join("|");
}
function fuzzyExtractOperationName(str) {
  const regex = /^(?!#).*(query|subscription|mutation)\s+([a-zA-Z0-9_]+)/m;
  const match = regex.exec(str);
  return (match == null ? void 0 : match[2]) ?? null;
}
function clearHeadersFromTabs(storage) {
  const persistedTabs = storage == null ? void 0 : storage.get(STORAGE_KEY$2);
  if (persistedTabs) {
    const parsedTabs = JSON.parse(persistedTabs);
    storage == null ? void 0 : storage.set(STORAGE_KEY$2, JSON.stringify(parsedTabs, (key, value) => key === "headers" ? null : value));
  }
}
var DEFAULT_TITLE = "<untitled>";
var STORAGE_KEY$2 = "tabState";
function importCodeMirrorImports$1() {
  return importCodeMirror([import("./hint-7J224TPK.js"), import("./lint-QQVONPF3.js"), import("./mode-BM35N5RI.js")]);
}
var _useVariableEditor = useVariableEditor;
function useVariableEditor(t0, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(17);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    editorTheme: t22,
    keyMap: t32,
    onClickReference,
    onEdit,
    readOnly: t42
  } = t1;
  const editorTheme = t22 === void 0 ? DEFAULT_EDITOR_THEME : t22;
  const keyMap = t32 === void 0 ? DEFAULT_KEY_MAP : t32;
  const readOnly = t42 === void 0 ? false : t42;
  const t52 = caller || _useVariableEditor;
  let t62;
  if ($6[2] !== t52) {
    t62 = {
      nonNull: true,
      caller: t52
    };
    $6[2] = t52;
    $6[3] = t62;
  } else {
    t62 = $6[3];
  }
  const {
    initialVariables,
    variableEditor,
    setVariableEditor
  } = useEditorContext(t62);
  const executionContext = useExecutionContext();
  const t72 = caller || _useVariableEditor;
  let t82;
  if ($6[4] !== t72) {
    t82 = {
      caller: t72
    };
    $6[4] = t72;
    $6[5] = t82;
  } else {
    t82 = $6[5];
  }
  const merge = useMergeQuery(t82);
  const t92 = caller || _useVariableEditor;
  let t102;
  if ($6[6] !== t92) {
    t102 = {
      caller: t92
    };
    $6[6] = t92;
    $6[7] = t102;
  } else {
    t102 = $6[7];
  }
  const prettify = usePrettifyEditors(t102);
  const ref = (0, import_react93.useRef)(null);
  const codeMirrorRef = (0, import_react93.useRef)();
  let t112;
  let t122;
  if ($6[8] !== editorTheme || $6[9] !== initialVariables || $6[10] !== readOnly || $6[11] !== setVariableEditor) {
    t112 = () => {
      let isActive;
      isActive = true;
      importCodeMirrorImports$1().then((CodeMirror) => {
        if (!isActive) {
          return;
        }
        codeMirrorRef.current = CodeMirror;
        const container = ref.current;
        if (!container) {
          return;
        }
        const newEditor = CodeMirror(container, {
          value: initialVariables,
          lineNumbers: true,
          tabSize: 2,
          mode: "graphql-variables",
          theme: editorTheme,
          autoCloseBrackets: true,
          matchBrackets: true,
          showCursorWhenSelecting: true,
          readOnly: readOnly ? "nocursor" : false,
          foldGutter: true,
          lint: {
            variableToType: void 0
          },
          hintOptions: {
            closeOnUnfocus: false,
            completeSingle: false,
            container,
            variableToType: void 0
          },
          gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
          extraKeys: commonKeys
        });
        newEditor.addKeyMap({
          "Cmd-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Ctrl-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Alt-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          },
          "Shift-Space"() {
            newEditor.showHint({
              completeSingle: false,
              container
            });
          }
        });
        newEditor.on("keyup", _temp);
        setVariableEditor(newEditor);
      });
      return () => {
        isActive = false;
      };
    };
    t122 = [editorTheme, initialVariables, readOnly, setVariableEditor];
    $6[8] = editorTheme;
    $6[9] = initialVariables;
    $6[10] = readOnly;
    $6[11] = setVariableEditor;
    $6[12] = t112;
    $6[13] = t122;
  } else {
    t112 = $6[12];
    t122 = $6[13];
  }
  (0, import_react93.useEffect)(t112, t122);
  useSynchronizeOption(variableEditor, "keyMap", keyMap);
  useChangeHandler(variableEditor, onEdit, STORAGE_KEY$1, "variables", _useVariableEditor);
  useCompletion(variableEditor, onClickReference || null, _useVariableEditor);
  let t132;
  if ($6[14] === Symbol.for("react.memo_cache_sentinel")) {
    t132 = ["Cmd-Enter", "Ctrl-Enter"];
    $6[14] = t132;
  } else {
    t132 = $6[14];
  }
  useKeyMap(variableEditor, t132, executionContext == null ? void 0 : executionContext.run);
  let t142;
  if ($6[15] === Symbol.for("react.memo_cache_sentinel")) {
    t142 = ["Shift-Ctrl-P"];
    $6[15] = t142;
  } else {
    t142 = $6[15];
  }
  useKeyMap(variableEditor, t142, prettify);
  let t152;
  if ($6[16] === Symbol.for("react.memo_cache_sentinel")) {
    t152 = ["Shift-Ctrl-M"];
    $6[16] = t152;
  } else {
    t152 = $6[16];
  }
  useKeyMap(variableEditor, t152, merge);
  return ref;
}
function _temp(editorInstance, event) {
  const {
    code,
    key,
    shiftKey
  } = event;
  const isLetter = code.startsWith("Key");
  const isNumber2 = !shiftKey && code.startsWith("Digit");
  if (isLetter || isNumber2 || key === "_" || key === '"') {
    editorInstance.execCommand("autocomplete");
  }
}
var STORAGE_KEY$1 = "variables";
var EditorContext = createNullableContext("EditorContext");
function EditorContextProvider(props) {
  const $6 = (0, import_react_compiler_runtime.c)(89);
  const storage = useStorageContext();
  const [headerEditor, setHeaderEditor] = (0, import_react93.useState)(null);
  const [queryEditor, setQueryEditor] = (0, import_react93.useState)(null);
  const [responseEditor, setResponseEditor] = (0, import_react93.useState)(null);
  const [variableEditor, setVariableEditor] = (0, import_react93.useState)(null);
  let t0;
  if ($6[0] !== props.shouldPersistHeaders || $6[1] !== storage) {
    t0 = () => {
      const isStored = (storage == null ? void 0 : storage.get(PERSIST_HEADERS_STORAGE_KEY)) !== null;
      return props.shouldPersistHeaders !== false && isStored ? (storage == null ? void 0 : storage.get(PERSIST_HEADERS_STORAGE_KEY)) === "true" : Boolean(props.shouldPersistHeaders);
    };
    $6[0] = props.shouldPersistHeaders;
    $6[1] = storage;
    $6[2] = t0;
  } else {
    t0 = $6[2];
  }
  const [shouldPersistHeaders, setShouldPersistHeadersInternal] = (0, import_react93.useState)(t0);
  useSynchronizeValue(headerEditor, props.headers);
  useSynchronizeValue(queryEditor, props.query);
  useSynchronizeValue(responseEditor, props.response);
  useSynchronizeValue(variableEditor, props.variables);
  let t1;
  if ($6[3] !== shouldPersistHeaders || $6[4] !== storage) {
    t1 = {
      storage,
      shouldPersistHeaders
    };
    $6[3] = shouldPersistHeaders;
    $6[4] = storage;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  const storeTabs = useStoreTabs(t1);
  let t22;
  if ($6[6] !== props.defaultHeaders || $6[7] !== props.defaultQuery || $6[8] !== props.defaultTabs || $6[9] !== props.headers || $6[10] !== props.query || $6[11] !== props.response || $6[12] !== props.variables || $6[13] !== shouldPersistHeaders || $6[14] !== storage || $6[15] !== storeTabs) {
    t22 = () => {
      const query = props.query ?? (storage == null ? void 0 : storage.get(STORAGE_KEY_QUERY)) ?? null;
      const variables = props.variables ?? (storage == null ? void 0 : storage.get(STORAGE_KEY$1)) ?? null;
      const headers = props.headers ?? (storage == null ? void 0 : storage.get(STORAGE_KEY$3)) ?? null;
      const response = props.response ?? "";
      const tabState = getDefaultTabState({
        query,
        variables,
        headers,
        defaultTabs: props.defaultTabs,
        defaultQuery: props.defaultQuery || DEFAULT_QUERY,
        defaultHeaders: props.defaultHeaders,
        storage,
        shouldPersistHeaders
      });
      storeTabs(tabState);
      return {
        query: query ?? (tabState.activeTabIndex === 0 ? tabState.tabs[0].query : null) ?? "",
        variables: variables ?? "",
        headers: headers ?? props.defaultHeaders ?? "",
        response,
        tabState
      };
    };
    $6[6] = props.defaultHeaders;
    $6[7] = props.defaultQuery;
    $6[8] = props.defaultTabs;
    $6[9] = props.headers;
    $6[10] = props.query;
    $6[11] = props.response;
    $6[12] = props.variables;
    $6[13] = shouldPersistHeaders;
    $6[14] = storage;
    $6[15] = storeTabs;
    $6[16] = t22;
  } else {
    t22 = $6[16];
  }
  const [initialState] = (0, import_react93.useState)(t22);
  const [tabState_0, setTabState] = (0, import_react93.useState)(initialState.tabState);
  let t32;
  if ($6[17] !== headerEditor || $6[18] !== storage || $6[19] !== tabState_0) {
    t32 = (persist) => {
      if (persist) {
        storage == null ? void 0 : storage.set(STORAGE_KEY$3, (headerEditor == null ? void 0 : headerEditor.getValue()) ?? "");
        const serializedTabs = serializeTabState(tabState_0, true);
        storage == null ? void 0 : storage.set(STORAGE_KEY$2, serializedTabs);
      } else {
        storage == null ? void 0 : storage.set(STORAGE_KEY$3, "");
        clearHeadersFromTabs(storage);
      }
      setShouldPersistHeadersInternal(persist);
      storage == null ? void 0 : storage.set(PERSIST_HEADERS_STORAGE_KEY, persist.toString());
    };
    $6[17] = headerEditor;
    $6[18] = storage;
    $6[19] = tabState_0;
    $6[20] = t32;
  } else {
    t32 = $6[20];
  }
  const setShouldPersistHeaders = t32;
  const lastShouldPersistHeadersProp = (0, import_react93.useRef)();
  let t42;
  let t52;
  if ($6[21] !== props.shouldPersistHeaders || $6[22] !== setShouldPersistHeaders) {
    t42 = () => {
      const propValue = Boolean(props.shouldPersistHeaders);
      if ((lastShouldPersistHeadersProp == null ? void 0 : lastShouldPersistHeadersProp.current) !== propValue) {
        setShouldPersistHeaders(propValue);
        lastShouldPersistHeadersProp.current = propValue;
      }
    };
    t52 = [props.shouldPersistHeaders, setShouldPersistHeaders];
    $6[21] = props.shouldPersistHeaders;
    $6[22] = setShouldPersistHeaders;
    $6[23] = t42;
    $6[24] = t52;
  } else {
    t42 = $6[23];
    t52 = $6[24];
  }
  (0, import_react93.useEffect)(t42, t52);
  let t62;
  if ($6[25] !== headerEditor || $6[26] !== queryEditor || $6[27] !== responseEditor || $6[28] !== variableEditor) {
    t62 = {
      queryEditor,
      variableEditor,
      headerEditor,
      responseEditor
    };
    $6[25] = headerEditor;
    $6[26] = queryEditor;
    $6[27] = responseEditor;
    $6[28] = variableEditor;
    $6[29] = t62;
  } else {
    t62 = $6[29];
  }
  const synchronizeActiveTabValues = useSynchronizeActiveTabValues(t62);
  const {
    onTabChange,
    defaultHeaders,
    defaultQuery,
    children
  } = props;
  let t72;
  if ($6[30] !== defaultHeaders || $6[31] !== headerEditor || $6[32] !== queryEditor || $6[33] !== responseEditor || $6[34] !== variableEditor) {
    t72 = {
      queryEditor,
      variableEditor,
      headerEditor,
      responseEditor,
      defaultHeaders
    };
    $6[30] = defaultHeaders;
    $6[31] = headerEditor;
    $6[32] = queryEditor;
    $6[33] = responseEditor;
    $6[34] = variableEditor;
    $6[35] = t72;
  } else {
    t72 = $6[35];
  }
  const setEditorValues = useSetEditorValues(t72);
  let t82;
  if ($6[36] !== defaultHeaders || $6[37] !== defaultQuery || $6[38] !== onTabChange || $6[39] !== setEditorValues || $6[40] !== storeTabs || $6[41] !== synchronizeActiveTabValues) {
    t82 = () => {
      setTabState((current) => {
        const updatedValues = synchronizeActiveTabValues(current);
        const updated = {
          tabs: [...updatedValues.tabs, createTab({
            headers: defaultHeaders,
            query: defaultQuery ?? DEFAULT_QUERY
          })],
          activeTabIndex: updatedValues.tabs.length
        };
        storeTabs(updated);
        setEditorValues(updated.tabs[updated.activeTabIndex]);
        onTabChange == null ? void 0 : onTabChange(updated);
        return updated;
      });
    };
    $6[36] = defaultHeaders;
    $6[37] = defaultQuery;
    $6[38] = onTabChange;
    $6[39] = setEditorValues;
    $6[40] = storeTabs;
    $6[41] = synchronizeActiveTabValues;
    $6[42] = t82;
  } else {
    t82 = $6[42];
  }
  const addTab = t82;
  let t92;
  if ($6[43] !== onTabChange || $6[44] !== setEditorValues || $6[45] !== storeTabs) {
    t92 = (index) => {
      setTabState((current_0) => {
        const updated_0 = {
          ...current_0,
          activeTabIndex: index
        };
        storeTabs(updated_0);
        setEditorValues(updated_0.tabs[updated_0.activeTabIndex]);
        onTabChange == null ? void 0 : onTabChange(updated_0);
        return updated_0;
      });
    };
    $6[43] = onTabChange;
    $6[44] = setEditorValues;
    $6[45] = storeTabs;
    $6[46] = t92;
  } else {
    t92 = $6[46];
  }
  const changeTab = t92;
  let t102;
  if ($6[47] !== onTabChange || $6[48] !== setEditorValues || $6[49] !== storeTabs) {
    t102 = (newOrder) => {
      setTabState((current_1) => {
        const activeTab = current_1.tabs[current_1.activeTabIndex];
        const updated_1 = {
          tabs: newOrder,
          activeTabIndex: newOrder.indexOf(activeTab)
        };
        storeTabs(updated_1);
        setEditorValues(updated_1.tabs[updated_1.activeTabIndex]);
        onTabChange == null ? void 0 : onTabChange(updated_1);
        return updated_1;
      });
    };
    $6[47] = onTabChange;
    $6[48] = setEditorValues;
    $6[49] = storeTabs;
    $6[50] = t102;
  } else {
    t102 = $6[50];
  }
  const moveTab = t102;
  let t112;
  if ($6[51] !== onTabChange || $6[52] !== setEditorValues || $6[53] !== storeTabs) {
    t112 = (index_0) => {
      setTabState((current_2) => {
        const updated_2 = {
          tabs: current_2.tabs.filter((_tab, i8) => index_0 !== i8),
          activeTabIndex: Math.max(current_2.activeTabIndex - 1, 0)
        };
        storeTabs(updated_2);
        setEditorValues(updated_2.tabs[updated_2.activeTabIndex]);
        onTabChange == null ? void 0 : onTabChange(updated_2);
        return updated_2;
      });
    };
    $6[51] = onTabChange;
    $6[52] = setEditorValues;
    $6[53] = storeTabs;
    $6[54] = t112;
  } else {
    t112 = $6[54];
  }
  const closeTab = t112;
  let t122;
  if ($6[55] !== onTabChange || $6[56] !== storeTabs) {
    t122 = (partialTab) => {
      setTabState((current_3) => {
        const updated_3 = setPropertiesInActiveTab(current_3, partialTab);
        storeTabs(updated_3);
        onTabChange == null ? void 0 : onTabChange(updated_3);
        return updated_3;
      });
    };
    $6[55] = onTabChange;
    $6[56] = storeTabs;
    $6[57] = t122;
  } else {
    t122 = $6[57];
  }
  const updateActiveTabValues = t122;
  const {
    onEditOperationName
  } = props;
  let t132;
  if ($6[58] !== onEditOperationName || $6[59] !== queryEditor || $6[60] !== updateActiveTabValues) {
    t132 = (operationName) => {
      if (!queryEditor) {
        return;
      }
      updateQueryEditor(queryEditor, operationName);
      updateActiveTabValues({
        operationName
      });
      onEditOperationName == null ? void 0 : onEditOperationName(operationName);
    };
    $6[58] = onEditOperationName;
    $6[59] = queryEditor;
    $6[60] = updateActiveTabValues;
    $6[61] = t132;
  } else {
    t132 = $6[61];
  }
  const setOperationName = t132;
  let t142;
  let map;
  if ($6[62] !== props.externalFragments) {
    map = /* @__PURE__ */ new Map();
    if (Array.isArray(props.externalFragments)) {
      for (const fragment of props.externalFragments) {
        map.set(fragment.name.value, fragment);
      }
    } else {
      if (typeof props.externalFragments === "string") {
        visit(parse(props.externalFragments, {}), {
          FragmentDefinition(fragment_0) {
            map.set(fragment_0.name.value, fragment_0);
          }
        });
      } else {
        if (props.externalFragments) {
          throw new Error("The `externalFragments` prop must either be a string that contains the fragment definitions in SDL or a list of FragmentDefinitionNode objects.");
        }
      }
    }
    $6[62] = props.externalFragments;
    $6[63] = map;
  } else {
    map = $6[63];
  }
  t142 = map;
  const externalFragments = t142;
  let t152;
  if ($6[64] !== props.validationRules) {
    t152 = props.validationRules || [];
    $6[64] = props.validationRules;
    $6[65] = t152;
  } else {
    t152 = $6[65];
  }
  const validationRules = t152;
  let t162;
  if ($6[66] !== addTab || $6[67] !== changeTab || $6[68] !== closeTab || $6[69] !== externalFragments || $6[70] !== headerEditor || $6[71] !== initialState.headers || $6[72] !== initialState.query || $6[73] !== initialState.response || $6[74] !== initialState.variables || $6[75] !== moveTab || $6[76] !== queryEditor || $6[77] !== responseEditor || $6[78] !== setOperationName || $6[79] !== setShouldPersistHeaders || $6[80] !== shouldPersistHeaders || $6[81] !== tabState_0 || $6[82] !== updateActiveTabValues || $6[83] !== validationRules || $6[84] !== variableEditor) {
    t162 = {
      ...tabState_0,
      addTab,
      changeTab,
      moveTab,
      closeTab,
      updateActiveTabValues,
      headerEditor,
      queryEditor,
      responseEditor,
      variableEditor,
      setHeaderEditor,
      setQueryEditor,
      setResponseEditor,
      setVariableEditor,
      setOperationName,
      initialQuery: initialState.query,
      initialVariables: initialState.variables,
      initialHeaders: initialState.headers,
      initialResponse: initialState.response,
      externalFragments,
      validationRules,
      shouldPersistHeaders,
      setShouldPersistHeaders
    };
    $6[66] = addTab;
    $6[67] = changeTab;
    $6[68] = closeTab;
    $6[69] = externalFragments;
    $6[70] = headerEditor;
    $6[71] = initialState.headers;
    $6[72] = initialState.query;
    $6[73] = initialState.response;
    $6[74] = initialState.variables;
    $6[75] = moveTab;
    $6[76] = queryEditor;
    $6[77] = responseEditor;
    $6[78] = setOperationName;
    $6[79] = setShouldPersistHeaders;
    $6[80] = shouldPersistHeaders;
    $6[81] = tabState_0;
    $6[82] = updateActiveTabValues;
    $6[83] = validationRules;
    $6[84] = variableEditor;
    $6[85] = t162;
  } else {
    t162 = $6[85];
  }
  const value = t162;
  let t172;
  if ($6[86] !== children || $6[87] !== value) {
    t172 = (0, import_jsx_runtime.jsx)(EditorContext.Provider, { value, children });
    $6[86] = children;
    $6[87] = value;
    $6[88] = t172;
  } else {
    t172 = $6[88];
  }
  return t172;
}
function updateQueryEditor(queryEditor, operationName) {
  queryEditor.operationName = operationName;
}
var useEditorContext = createContextHook(EditorContext);
var PERSIST_HEADERS_STORAGE_KEY = "shouldPersistHeaders";
var DEFAULT_QUERY = `# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that start
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#   Prettify query:  Shift-Ctrl-P (or press the prettify button)
#
#  Merge fragments:  Shift-Ctrl-M (or press the merge button)
#
#        Run Query:  Ctrl-Enter (or press the play button)
#
#    Auto Complete:  Ctrl-Space (or just start typing)
#

`;
function HeaderEditor(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(13);
  let hookArgs;
  let isHidden;
  if ($6[0] !== t0) {
    ({
      isHidden,
      ...hookArgs
    } = t0);
    $6[0] = t0;
    $6[1] = hookArgs;
    $6[2] = isHidden;
  } else {
    hookArgs = $6[1];
    isHidden = $6[2];
  }
  let t1;
  if ($6[3] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: HeaderEditor
    };
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  const {
    headerEditor
  } = useEditorContext(t1);
  const ref = useHeaderEditor(hookArgs, HeaderEditor);
  let t22;
  let t32;
  if ($6[4] !== headerEditor || $6[5] !== isHidden) {
    t22 = () => {
      if (!isHidden) {
        headerEditor == null ? void 0 : headerEditor.refresh();
      }
    };
    t32 = [headerEditor, isHidden];
    $6[4] = headerEditor;
    $6[5] = isHidden;
    $6[6] = t22;
    $6[7] = t32;
  } else {
    t22 = $6[6];
    t32 = $6[7];
  }
  (0, import_react93.useEffect)(t22, t32);
  const t42 = isHidden && "hidden";
  let t52;
  if ($6[8] !== t42) {
    t52 = clsx("graphiql-editor", t42);
    $6[8] = t42;
    $6[9] = t52;
  } else {
    t52 = $6[9];
  }
  let t62;
  if ($6[10] !== ref || $6[11] !== t52) {
    t62 = (0, import_jsx_runtime.jsx)("div", { className: t52, ref });
    $6[10] = ref;
    $6[11] = t52;
    $6[12] = t62;
  } else {
    t62 = $6[12];
  }
  return t62;
}
function ImagePreview(props) {
  var _a;
  const $6 = (0, import_react_compiler_runtime.c)(14);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      width: null,
      height: null
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const [dimensions, setDimensions] = (0, import_react93.useState)(t0);
  const [mime, setMime] = (0, import_react93.useState)(null);
  const ref = (0, import_react93.useRef)(null);
  const src = (_a = tokenToURL(props.token)) == null ? void 0 : _a.href;
  let t1;
  let t22;
  if ($6[1] !== src) {
    t1 = () => {
      if (!ref.current) {
        return;
      }
      if (!src) {
        setDimensions({
          width: null,
          height: null
        });
        setMime(null);
        return;
      }
      fetch(src, {
        method: "HEAD"
      }).then((response) => {
        setMime(response.headers.get("Content-Type"));
      }).catch(() => {
        setMime(null);
      });
    };
    t22 = [src];
    $6[1] = src;
    $6[2] = t1;
    $6[3] = t22;
  } else {
    t1 = $6[2];
    t22 = $6[3];
  }
  (0, import_react93.useEffect)(t1, t22);
  let t32;
  if ($6[4] !== dimensions.height || $6[5] !== dimensions.width || $6[6] !== mime) {
    t32 = dimensions.width !== null && dimensions.height !== null ? (0, import_jsx_runtime.jsxs)("div", { children: [
      dimensions.width,
      "x",
      dimensions.height,
      mime === null ? null : " " + mime
    ] }) : null;
    $6[4] = dimensions.height;
    $6[5] = dimensions.width;
    $6[6] = mime;
    $6[7] = t32;
  } else {
    t32 = $6[7];
  }
  const dims = t32;
  let t42;
  if ($6[8] === Symbol.for("react.memo_cache_sentinel")) {
    t42 = () => {
      var _a2, _b;
      setDimensions({
        width: ((_a2 = ref.current) == null ? void 0 : _a2.naturalWidth) ?? null,
        height: ((_b = ref.current) == null ? void 0 : _b.naturalHeight) ?? null
      });
    };
    $6[8] = t42;
  } else {
    t42 = $6[8];
  }
  let t52;
  if ($6[9] !== src) {
    t52 = (0, import_jsx_runtime.jsx)("img", { onLoad: t42, ref, src });
    $6[9] = src;
    $6[10] = t52;
  } else {
    t52 = $6[10];
  }
  let t62;
  if ($6[11] !== dims || $6[12] !== t52) {
    t62 = (0, import_jsx_runtime.jsxs)("div", { children: [
      t52,
      dims
    ] });
    $6[11] = dims;
    $6[12] = t52;
    $6[13] = t62;
  } else {
    t62 = $6[13];
  }
  return t62;
}
ImagePreview.shouldRender = function shouldRender(token) {
  const url = tokenToURL(token);
  return url ? isImageURL(url) : false;
};
function tokenToURL(token) {
  if (token.type !== "string") {
    return;
  }
  const value = token.string.slice(1).slice(0, -1).trim();
  try {
    const {
      location
    } = window;
    return new URL(value, location.protocol + "//" + location.host);
  } catch {
    return;
  }
}
function isImageURL(url) {
  return /\.(bmp|gif|jpe?g|png|svg|webp)$/.test(url.pathname);
}
function QueryEditor(props) {
  const $6 = (0, import_react_compiler_runtime.c)(2);
  const ref = useQueryEditor(props, QueryEditor);
  let t0;
  if ($6[0] !== ref) {
    t0 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-editor", ref });
    $6[0] = ref;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
function importCodeMirrorImports() {
  return importCodeMirror([
    import("./foldgutter-VHW2MTZR.js"),
    import("./brace-fold-LNSZTFJT.js"),
    import("./dialog-OEIXDBIB.js"),
    import("./search-WNJY32EN.js"),
    import("./searchcursor-YMQ7VRWI.js"),
    import("./jump-to-line-CGXO2MT5.js"),
    // @ts-expect-error
    import("./sublime-FHAOGNF3.js"),
    import("./mode-UOM5XUON.js"),
    import("./info-addon-SJQPQVJE.js")
  ], {
    useCommonAddons: false
  });
}
var _useResponseEditor = useResponseEditor;
function useResponseEditor(t0, caller) {
  const $6 = (0, import_react_compiler_runtime.c)(19);
  let t1;
  if ($6[0] !== t0) {
    t1 = t0 === void 0 ? {} : t0;
    $6[0] = t0;
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    responseTooltip,
    editorTheme: t22,
    keyMap: t32
  } = t1;
  const editorTheme = t22 === void 0 ? DEFAULT_EDITOR_THEME : t22;
  const keyMap = t32 === void 0 ? DEFAULT_KEY_MAP : t32;
  const t42 = caller || _useResponseEditor;
  let t52;
  if ($6[2] !== t42) {
    t52 = {
      nonNull: true,
      caller: t42
    };
    $6[2] = t42;
    $6[3] = t52;
  } else {
    t52 = $6[3];
  }
  const {
    fetchError,
    validationErrors
  } = useSchemaContext(t52);
  const t62 = caller || _useResponseEditor;
  let t72;
  if ($6[4] !== t62) {
    t72 = {
      nonNull: true,
      caller: t62
    };
    $6[4] = t62;
    $6[5] = t72;
  } else {
    t72 = $6[5];
  }
  const {
    initialResponse,
    responseEditor,
    setResponseEditor
  } = useEditorContext(t72);
  const ref = (0, import_react93.useRef)(null);
  const responseTooltipRef = (0, import_react93.useRef)(responseTooltip);
  let t82;
  let t92;
  if ($6[6] !== responseTooltip) {
    t82 = () => {
      responseTooltipRef.current = responseTooltip;
    };
    t92 = [responseTooltip];
    $6[6] = responseTooltip;
    $6[7] = t82;
    $6[8] = t92;
  } else {
    t82 = $6[7];
    t92 = $6[8];
  }
  (0, import_react93.useEffect)(t82, t92);
  let t102;
  let t112;
  if ($6[9] !== editorTheme || $6[10] !== initialResponse || $6[11] !== setResponseEditor) {
    t102 = () => {
      let isActive;
      isActive = true;
      importCodeMirrorImports().then((CodeMirror) => {
        if (!isActive) {
          return;
        }
        const tooltipDiv = document.createElement("div");
        CodeMirror.registerHelper("info", "graphql-results", (token, _options, _cm, pos) => {
          const infoElements = [];
          const ResponseTooltipComponent = responseTooltipRef.current;
          if (ResponseTooltipComponent) {
            infoElements.push((0, import_jsx_runtime.jsx)(ResponseTooltipComponent, { pos, token }));
          }
          if (ImagePreview.shouldRender(token)) {
            infoElements.push((0, import_jsx_runtime.jsx)(ImagePreview, { token }, "image-preview"));
          }
          if (!infoElements.length) {
            (0, import_react_dom2.unmountComponentAtNode)(tooltipDiv);
            return null;
          }
          (0, import_react_dom2.render)(infoElements, tooltipDiv);
          return tooltipDiv;
        });
        const container = ref.current;
        if (!container) {
          return;
        }
        const newEditor = CodeMirror(container, {
          value: initialResponse,
          lineWrapping: true,
          readOnly: true,
          theme: editorTheme,
          mode: "graphql-results",
          foldGutter: true,
          gutters: ["CodeMirror-foldgutter"],
          info: true,
          extraKeys: commonKeys
        });
        setResponseEditor(newEditor);
      });
      return () => {
        isActive = false;
      };
    };
    t112 = [editorTheme, initialResponse, setResponseEditor];
    $6[9] = editorTheme;
    $6[10] = initialResponse;
    $6[11] = setResponseEditor;
    $6[12] = t102;
    $6[13] = t112;
  } else {
    t102 = $6[12];
    t112 = $6[13];
  }
  (0, import_react93.useEffect)(t102, t112);
  useSynchronizeOption(responseEditor, "keyMap", keyMap);
  let t122;
  let t132;
  if ($6[14] !== fetchError || $6[15] !== responseEditor || $6[16] !== validationErrors) {
    t122 = () => {
      if (fetchError) {
        responseEditor == null ? void 0 : responseEditor.setValue(fetchError);
      }
      if (validationErrors.length > 0) {
        responseEditor == null ? void 0 : responseEditor.setValue(formatError(validationErrors));
      }
    };
    t132 = [responseEditor, fetchError, validationErrors];
    $6[14] = fetchError;
    $6[15] = responseEditor;
    $6[16] = validationErrors;
    $6[17] = t122;
    $6[18] = t132;
  } else {
    t122 = $6[17];
    t132 = $6[18];
  }
  (0, import_react93.useEffect)(t122, t132);
  return ref;
}
function ResponseEditor(props) {
  const $6 = (0, import_react_compiler_runtime.c)(2);
  const ref = useResponseEditor(props, ResponseEditor);
  let t0;
  if ($6[0] !== ref) {
    t0 = (0, import_jsx_runtime.jsx)("section", { className: "result-window", "aria-label": "Result Window", "aria-live": "polite", "aria-atomic": "true", ref });
    $6[0] = ref;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
function VariableEditor(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(13);
  let hookArgs;
  let isHidden;
  if ($6[0] !== t0) {
    ({
      isHidden,
      ...hookArgs
    } = t0);
    $6[0] = t0;
    $6[1] = hookArgs;
    $6[2] = isHidden;
  } else {
    hookArgs = $6[1];
    isHidden = $6[2];
  }
  let t1;
  if ($6[3] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: VariableEditor
    };
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  const {
    variableEditor
  } = useEditorContext(t1);
  const ref = useVariableEditor(hookArgs, VariableEditor);
  let t22;
  let t32;
  if ($6[4] !== isHidden || $6[5] !== variableEditor) {
    t22 = () => {
      if (variableEditor && !isHidden) {
        variableEditor.refresh();
      }
    };
    t32 = [variableEditor, isHidden];
    $6[4] = isHidden;
    $6[5] = variableEditor;
    $6[6] = t22;
    $6[7] = t32;
  } else {
    t22 = $6[6];
    t32 = $6[7];
  }
  (0, import_react93.useEffect)(t22, t32);
  const t42 = isHidden && "hidden";
  let t52;
  if ($6[8] !== t42) {
    t52 = clsx("graphiql-editor", t42);
    $6[8] = t42;
    $6[9] = t52;
  } else {
    t52 = $6[9];
  }
  let t62;
  if ($6[10] !== ref || $6[11] !== t52) {
    t62 = (0, import_jsx_runtime.jsx)("div", { className: t52, ref });
    $6[10] = ref;
    $6[11] = t52;
    $6[12] = t62;
  } else {
    t62 = $6[12];
  }
  return t62;
}
function GraphiQLProvider(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(39);
  const {
    children,
    dangerouslyAssumeSchemaIsValid,
    defaultQuery,
    defaultHeaders,
    defaultTabs,
    externalFragments,
    fetcher,
    getDefaultFieldNames,
    headers,
    inputValueDeprecation,
    introspectionQueryName,
    maxHistoryLength,
    onEditOperationName,
    onSchemaChange,
    onTabChange,
    onTogglePluginVisibility,
    operationName,
    plugins,
    query,
    response,
    schema,
    schemaDescription,
    shouldPersistHeaders,
    storage,
    validationRules,
    variables,
    visiblePlugin
  } = t0;
  let t1;
  if ($6[0] !== children || $6[1] !== onTogglePluginVisibility || $6[2] !== plugins || $6[3] !== visiblePlugin) {
    t1 = (0, import_jsx_runtime.jsx)(ExplorerContextProvider, { children: (0, import_jsx_runtime.jsx)(PluginContextProvider, { onTogglePluginVisibility, plugins, visiblePlugin, children }) });
    $6[0] = children;
    $6[1] = onTogglePluginVisibility;
    $6[2] = plugins;
    $6[3] = visiblePlugin;
    $6[4] = t1;
  } else {
    t1 = $6[4];
  }
  let t22;
  if ($6[5] !== fetcher || $6[6] !== getDefaultFieldNames || $6[7] !== operationName || $6[8] !== t1) {
    t22 = (0, import_jsx_runtime.jsx)(ExecutionContextProvider, { getDefaultFieldNames, fetcher, operationName, children: t1 });
    $6[5] = fetcher;
    $6[6] = getDefaultFieldNames;
    $6[7] = operationName;
    $6[8] = t1;
    $6[9] = t22;
  } else {
    t22 = $6[9];
  }
  let t32;
  if ($6[10] !== dangerouslyAssumeSchemaIsValid || $6[11] !== fetcher || $6[12] !== inputValueDeprecation || $6[13] !== introspectionQueryName || $6[14] !== onSchemaChange || $6[15] !== schema || $6[16] !== schemaDescription || $6[17] !== t22) {
    t32 = (0, import_jsx_runtime.jsx)(SchemaContextProvider, { dangerouslyAssumeSchemaIsValid, fetcher, inputValueDeprecation, introspectionQueryName, onSchemaChange, schema, schemaDescription, children: t22 });
    $6[10] = dangerouslyAssumeSchemaIsValid;
    $6[11] = fetcher;
    $6[12] = inputValueDeprecation;
    $6[13] = introspectionQueryName;
    $6[14] = onSchemaChange;
    $6[15] = schema;
    $6[16] = schemaDescription;
    $6[17] = t22;
    $6[18] = t32;
  } else {
    t32 = $6[18];
  }
  let t42;
  if ($6[19] !== defaultHeaders || $6[20] !== defaultQuery || $6[21] !== defaultTabs || $6[22] !== externalFragments || $6[23] !== headers || $6[24] !== onEditOperationName || $6[25] !== onTabChange || $6[26] !== query || $6[27] !== response || $6[28] !== shouldPersistHeaders || $6[29] !== t32 || $6[30] !== validationRules || $6[31] !== variables) {
    t42 = (0, import_jsx_runtime.jsx)(EditorContextProvider, { defaultQuery, defaultHeaders, defaultTabs, externalFragments, headers, onEditOperationName, onTabChange, query, response, shouldPersistHeaders, validationRules, variables, children: t32 });
    $6[19] = defaultHeaders;
    $6[20] = defaultQuery;
    $6[21] = defaultTabs;
    $6[22] = externalFragments;
    $6[23] = headers;
    $6[24] = onEditOperationName;
    $6[25] = onTabChange;
    $6[26] = query;
    $6[27] = response;
    $6[28] = shouldPersistHeaders;
    $6[29] = t32;
    $6[30] = validationRules;
    $6[31] = variables;
    $6[32] = t42;
  } else {
    t42 = $6[32];
  }
  let t52;
  if ($6[33] !== maxHistoryLength || $6[34] !== t42) {
    t52 = (0, import_jsx_runtime.jsx)(HistoryContextProvider, { maxHistoryLength, children: t42 });
    $6[33] = maxHistoryLength;
    $6[34] = t42;
    $6[35] = t52;
  } else {
    t52 = $6[35];
  }
  let t62;
  if ($6[36] !== storage || $6[37] !== t52) {
    t62 = (0, import_jsx_runtime.jsx)(StorageContextProvider, { storage, children: t52 });
    $6[36] = storage;
    $6[37] = t52;
    $6[38] = t62;
  } else {
    t62 = $6[38];
  }
  return t62;
}
function useTheme(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(11);
  const defaultTheme = t0 === void 0 ? null : t0;
  const storageContext = useStorageContext();
  let t1;
  if ($6[0] !== defaultTheme || $6[1] !== storageContext) {
    t1 = () => {
      if (!storageContext) {
        return null;
      }
      const stored = storageContext.get(STORAGE_KEY);
      switch (stored) {
        case "light": {
          return "light";
        }
        case "dark": {
          return "dark";
        }
        default: {
          if (typeof stored === "string") {
            storageContext.set(STORAGE_KEY, "");
          }
          return defaultTheme;
        }
      }
    };
    $6[0] = defaultTheme;
    $6[1] = storageContext;
    $6[2] = t1;
  } else {
    t1 = $6[2];
  }
  const [theme, setThemeInternal] = (0, import_react93.useState)(t1);
  let t22;
  let t32;
  if ($6[3] !== theme) {
    t22 = () => {
      if (typeof window === "undefined") {
        return;
      }
      document.body.classList.remove("graphiql-light", "graphiql-dark");
      if (theme) {
        document.body.classList.add(`graphiql-${theme}`);
      }
    };
    t32 = [theme];
    $6[3] = theme;
    $6[4] = t22;
    $6[5] = t32;
  } else {
    t22 = $6[4];
    t32 = $6[5];
  }
  (0, import_react93.useLayoutEffect)(t22, t32);
  let t42;
  if ($6[6] !== storageContext) {
    t42 = (newTheme) => {
      storageContext == null ? void 0 : storageContext.set(STORAGE_KEY, newTheme || "");
      setThemeInternal(newTheme);
    };
    $6[6] = storageContext;
    $6[7] = t42;
  } else {
    t42 = $6[7];
  }
  const setTheme = t42;
  let t52;
  if ($6[8] !== setTheme || $6[9] !== theme) {
    t52 = {
      theme,
      setTheme
    };
    $6[8] = setTheme;
    $6[9] = theme;
    $6[10] = t52;
  } else {
    t52 = $6[10];
  }
  return t52;
}
var STORAGE_KEY = "theme";
function useDragResize(t0) {
  const $6 = (0, import_react_compiler_runtime.c)(31);
  const {
    defaultSizeRelation: t1,
    direction,
    initiallyHidden,
    onHiddenElementChange,
    sizeThresholdFirst: t22,
    sizeThresholdSecond: t32,
    storageKey
  } = t0;
  const defaultSizeRelation = t1 === void 0 ? DEFAULT_FLEX : t1;
  const sizeThresholdFirst = t22 === void 0 ? 100 : t22;
  const sizeThresholdSecond = t32 === void 0 ? 100 : t32;
  const storage = useStorageContext();
  let t42;
  if ($6[0] !== storage || $6[1] !== storageKey) {
    t42 = debounce(500, (value) => {
      if (storageKey) {
        storage == null ? void 0 : storage.set(storageKey, value);
      }
    });
    $6[0] = storage;
    $6[1] = storageKey;
    $6[2] = t42;
  } else {
    t42 = $6[2];
  }
  const store = t42;
  let t52;
  if ($6[3] !== initiallyHidden || $6[4] !== storage || $6[5] !== storageKey) {
    t52 = () => {
      const storedValue = storageKey && (storage == null ? void 0 : storage.get(storageKey));
      if (storedValue === HIDE_FIRST || initiallyHidden === "first") {
        return "first";
      }
      if (storedValue === HIDE_SECOND || initiallyHidden === "second") {
        return "second";
      }
      return null;
    };
    $6[3] = initiallyHidden;
    $6[4] = storage;
    $6[5] = storageKey;
    $6[6] = t52;
  } else {
    t52 = $6[6];
  }
  const [hiddenElement, setHiddenElement] = (0, import_react93.useState)(t52);
  let t62;
  if ($6[7] !== hiddenElement || $6[8] !== onHiddenElementChange) {
    t62 = (element) => {
      if (element !== hiddenElement) {
        setHiddenElement(element);
        onHiddenElementChange == null ? void 0 : onHiddenElementChange(element);
      }
    };
    $6[7] = hiddenElement;
    $6[8] = onHiddenElementChange;
    $6[9] = t62;
  } else {
    t62 = $6[9];
  }
  const setHiddenElementWithCallback = t62;
  const firstRef = (0, import_react93.useRef)(null);
  const dragBarRef = (0, import_react93.useRef)(null);
  const secondRef = (0, import_react93.useRef)(null);
  const defaultFlexRef = (0, import_react93.useRef)(`${defaultSizeRelation}`);
  let t72;
  if ($6[10] !== storage || $6[11] !== storageKey) {
    t72 = () => {
      const storedValue_0 = storageKey && (storage == null ? void 0 : storage.get(storageKey)) || defaultFlexRef.current;
      if (firstRef.current) {
        firstRef.current.style.display = "flex";
        firstRef.current.style.flex = storedValue_0 === HIDE_FIRST || storedValue_0 === HIDE_SECOND ? defaultFlexRef.current : storedValue_0;
      }
      if (secondRef.current) {
        secondRef.current.style.display = "flex";
        secondRef.current.style.flex = "1";
      }
      if (dragBarRef.current) {
        dragBarRef.current.style.display = "flex";
      }
    };
    $6[10] = storage;
    $6[11] = storageKey;
    $6[12] = t72;
  } else {
    t72 = $6[12];
  }
  let t82;
  if ($6[13] !== direction || $6[14] !== storage || $6[15] !== storageKey) {
    t82 = [direction, storage, storageKey];
    $6[13] = direction;
    $6[14] = storage;
    $6[15] = storageKey;
    $6[16] = t82;
  } else {
    t82 = $6[16];
  }
  (0, import_react93.useLayoutEffect)(t72, t82);
  let t102;
  let t92;
  if ($6[17] !== hiddenElement || $6[18] !== storage || $6[19] !== storageKey) {
    t92 = () => {
      const hide = (resizableElement) => {
        const element_0 = resizableElement === "first" ? firstRef.current : secondRef.current;
        if (!element_0) {
          return;
        }
        element_0.style.left = "-1000px";
        element_0.style.position = "absolute";
        element_0.style.opacity = "0";
        element_0.style.height = "500px";
        element_0.style.width = "500px";
        if (firstRef.current) {
          const flex = parseFloat(firstRef.current.style.flex);
          if (!Number.isFinite(flex) || flex < 1) {
            firstRef.current.style.flex = "1";
          }
        }
      };
      const show = (resizableElement_0) => {
        const element_1 = resizableElement_0 === "first" ? firstRef.current : secondRef.current;
        if (!element_1) {
          return;
        }
        element_1.style.width = "";
        element_1.style.height = "";
        element_1.style.opacity = "";
        element_1.style.position = "";
        element_1.style.left = "";
        if (storage && storageKey) {
          const storedValue_1 = storage.get(storageKey);
          if (firstRef.current && storedValue_1 !== HIDE_FIRST && storedValue_1 !== HIDE_SECOND) {
            firstRef.current.style.flex = storedValue_1 || defaultFlexRef.current;
          }
        }
      };
      if (hiddenElement === "first") {
        hide("first");
      } else {
        show("first");
      }
      if (hiddenElement === "second") {
        hide("second");
      } else {
        show("second");
      }
    };
    t102 = [hiddenElement, storage, storageKey];
    $6[17] = hiddenElement;
    $6[18] = storage;
    $6[19] = storageKey;
    $6[20] = t102;
    $6[21] = t92;
  } else {
    t102 = $6[20];
    t92 = $6[21];
  }
  (0, import_react93.useLayoutEffect)(t92, t102);
  let t112;
  let t122;
  if ($6[22] !== direction || $6[23] !== setHiddenElementWithCallback || $6[24] !== sizeThresholdFirst || $6[25] !== sizeThresholdSecond || $6[26] !== store) {
    t112 = () => {
      if (!dragBarRef.current || !firstRef.current || !secondRef.current) {
        return;
      }
      const dragBarContainer = dragBarRef.current;
      const firstContainer = firstRef.current;
      const wrapper = firstContainer.parentElement;
      const eventProperty = direction === "horizontal" ? "clientX" : "clientY";
      const rectProperty = direction === "horizontal" ? "left" : "top";
      const adjacentRectProperty = direction === "horizontal" ? "right" : "bottom";
      const sizeProperty = direction === "horizontal" ? "clientWidth" : "clientHeight";
      const handleMouseDown = function handleMouseDown2(downEvent) {
        downEvent.preventDefault();
        const offset = downEvent[eventProperty] - dragBarContainer.getBoundingClientRect()[rectProperty];
        const handleMouseMove = function handleMouseMove2(moveEvent) {
          if (moveEvent.buttons === 0) {
            return handleMouseUp();
          }
          const firstSize = moveEvent[eventProperty] - wrapper.getBoundingClientRect()[rectProperty] - offset;
          const secondSize = wrapper.getBoundingClientRect()[adjacentRectProperty] - moveEvent[eventProperty] + offset - dragBarContainer[sizeProperty];
          if (firstSize < sizeThresholdFirst) {
            setHiddenElementWithCallback("first");
            store(HIDE_FIRST);
          } else {
            if (secondSize < sizeThresholdSecond) {
              setHiddenElementWithCallback("second");
              store(HIDE_SECOND);
            } else {
              setHiddenElementWithCallback(null);
              const newFlex = `${firstSize / secondSize}`;
              firstContainer.style.flex = newFlex;
              store(newFlex);
            }
          }
        };
        function handleMouseUp() {
          document.removeEventListener("mousemove", handleMouseMove);
          document.removeEventListener("mouseup", handleMouseUp);
        }
        document.addEventListener("mousemove", handleMouseMove);
        document.addEventListener("mouseup", handleMouseUp);
      };
      dragBarContainer.addEventListener("mousedown", handleMouseDown);
      const reset = function reset2() {
        if (firstRef.current) {
          firstRef.current.style.flex = defaultFlexRef.current;
        }
        store(defaultFlexRef.current);
        setHiddenElementWithCallback(null);
      };
      dragBarContainer.addEventListener("dblclick", reset);
      return () => {
        dragBarContainer.removeEventListener("mousedown", handleMouseDown);
        dragBarContainer.removeEventListener("dblclick", reset);
      };
    };
    t122 = [direction, setHiddenElementWithCallback, sizeThresholdFirst, sizeThresholdSecond, store];
    $6[22] = direction;
    $6[23] = setHiddenElementWithCallback;
    $6[24] = sizeThresholdFirst;
    $6[25] = sizeThresholdSecond;
    $6[26] = store;
    $6[27] = t112;
    $6[28] = t122;
  } else {
    t112 = $6[27];
    t122 = $6[28];
  }
  (0, import_react93.useEffect)(t112, t122);
  let t132;
  if ($6[29] !== hiddenElement) {
    t132 = {
      dragBarRef,
      hiddenElement,
      firstRef,
      setHiddenElement,
      secondRef
    };
    $6[29] = hiddenElement;
    $6[30] = t132;
  } else {
    t132 = $6[30];
  }
  return t132;
}
var DEFAULT_FLEX = 1;
var HIDE_FIRST = "hide-first";
var HIDE_SECOND = "hide-second";
var ToolbarButton = (0, import_react93.forwardRef)((t0, ref) => {
  const $6 = (0, import_react_compiler_runtime.c)(19);
  let label;
  let onClick;
  let props;
  if ($6[0] !== t0) {
    ({
      label,
      onClick,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = label;
    $6[2] = onClick;
    $6[3] = props;
  } else {
    label = $6[1];
    onClick = $6[2];
    props = $6[3];
  }
  const [error, setError] = (0, import_react93.useState)(null);
  let t1;
  if ($6[4] !== onClick) {
    t1 = (event) => {
      try {
        if (onClick) {
          onClick(event);
        }
        setError(null);
      } catch (t222) {
        const err = t222;
        setError(err instanceof Error ? err : new Error(`Toolbar button click failed: ${err}`));
      }
    };
    $6[4] = onClick;
    $6[5] = t1;
  } else {
    t1 = $6[5];
  }
  const handleClick = t1;
  const t22 = error && "error";
  let t32;
  if ($6[6] !== props.className || $6[7] !== t22) {
    t32 = clsx("graphiql-toolbar-button", t22, props.className);
    $6[6] = props.className;
    $6[7] = t22;
    $6[8] = t32;
  } else {
    t32 = $6[8];
  }
  const t42 = error ? error.message : label;
  const t52 = error ? "true" : props["aria-invalid"];
  let t62;
  if ($6[9] !== handleClick || $6[10] !== props || $6[11] !== ref || $6[12] !== t32 || $6[13] !== t42 || $6[14] !== t52) {
    t62 = (0, import_jsx_runtime.jsx)(UnStyledButton, { ...props, ref, type: "button", className: t32, onClick: handleClick, "aria-label": t42, "aria-invalid": t52 });
    $6[9] = handleClick;
    $6[10] = props;
    $6[11] = ref;
    $6[12] = t32;
    $6[13] = t42;
    $6[14] = t52;
    $6[15] = t62;
  } else {
    t62 = $6[15];
  }
  let t72;
  if ($6[16] !== label || $6[17] !== t62) {
    t72 = (0, import_jsx_runtime.jsx)(Tooltip, { label, children: t62 });
    $6[16] = label;
    $6[17] = t62;
    $6[18] = t72;
  } else {
    t72 = $6[18];
  }
  return t72;
});
ToolbarButton.displayName = "ToolbarButton";
function ExecuteButton() {
  const $6 = (0, import_react_compiler_runtime.c)(19);
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true,
      caller: ExecuteButton
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const {
    queryEditor,
    setOperationName
  } = useEditorContext(t0);
  let t1;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true,
      caller: ExecuteButton
    };
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const {
    isFetching,
    isSubscribed,
    operationName,
    run,
    stop
  } = useExecutionContext(t1);
  let t22;
  if ($6[2] !== (queryEditor == null ? void 0 : queryEditor.operations)) {
    t22 = (queryEditor == null ? void 0 : queryEditor.operations) || [];
    $6[2] = queryEditor == null ? void 0 : queryEditor.operations;
    $6[3] = t22;
  } else {
    t22 = $6[3];
  }
  const operations = t22;
  const hasOptions = operations.length > 1 && typeof operationName !== "string";
  const isRunning = isFetching || isSubscribed;
  const label = `${isRunning ? "Stop" : "Execute"} query (Ctrl-Enter)`;
  let t32;
  if ($6[4] !== isRunning) {
    t32 = isRunning ? (0, import_jsx_runtime.jsx)(StopIcon, {}) : (0, import_jsx_runtime.jsx)(PlayIcon, {});
    $6[4] = isRunning;
    $6[5] = t32;
  } else {
    t32 = $6[5];
  }
  let t42;
  if ($6[6] !== label || $6[7] !== t32) {
    t42 = {
      type: "button",
      className: "graphiql-execute-button",
      children: t32,
      "aria-label": label
    };
    $6[6] = label;
    $6[7] = t32;
    $6[8] = t42;
  } else {
    t42 = $6[8];
  }
  const buttonProps = t42;
  let t52;
  if ($6[9] !== buttonProps || $6[10] !== hasOptions || $6[11] !== isRunning || $6[12] !== label || $6[13] !== operations || $6[14] !== queryEditor || $6[15] !== run || $6[16] !== setOperationName || $6[17] !== stop) {
    t52 = hasOptions && !isRunning ? (0, import_jsx_runtime.jsxs)(DropdownMenu, { children: [
      (0, import_jsx_runtime.jsx)(Tooltip, { label, children: (0, import_jsx_runtime.jsx)(DropdownMenu.Button, { ...buttonProps }) }),
      (0, import_jsx_runtime.jsx)(DropdownMenu.Content, { children: operations.map((operation, i8) => {
        const opName = operation.name ? operation.name.value : `<Unnamed ${operation.operation}>`;
        return (0, import_jsx_runtime.jsx)(DropdownMenu.Item, { onSelect: () => {
          var _a;
          const selectedOperationName = (_a = operation.name) == null ? void 0 : _a.value;
          if (queryEditor && selectedOperationName && selectedOperationName !== queryEditor.operationName) {
            setOperationName(selectedOperationName);
          }
          run();
        }, children: opName }, `${opName}-${i8}`);
      }) })
    ] }) : (0, import_jsx_runtime.jsx)(Tooltip, { label, children: (0, import_jsx_runtime.jsx)("button", { ...buttonProps, onClick: () => {
      if (isRunning) {
        stop();
      } else {
        run();
      }
    } }) });
    $6[9] = buttonProps;
    $6[10] = hasOptions;
    $6[11] = isRunning;
    $6[12] = label;
    $6[13] = operations;
    $6[14] = queryEditor;
    $6[15] = run;
    $6[16] = setOperationName;
    $6[17] = stop;
    $6[18] = t52;
  } else {
    t52 = $6[18];
  }
  return t52;
}
var ToolbarMenuRoot = (t0) => {
  const $6 = (0, import_react_compiler_runtime.c)(20);
  let button;
  let children;
  let label;
  let props;
  if ($6[0] !== t0) {
    ({
      button,
      children,
      label,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = button;
    $6[2] = children;
    $6[3] = label;
    $6[4] = props;
  } else {
    button = $6[1];
    children = $6[2];
    label = $6[3];
    props = $6[4];
  }
  let t1;
  if ($6[5] !== props.className) {
    t1 = clsx("graphiql-un-styled graphiql-toolbar-menu", props.className);
    $6[5] = props.className;
    $6[6] = t1;
  } else {
    t1 = $6[6];
  }
  let t22;
  if ($6[7] !== button || $6[8] !== label || $6[9] !== t1) {
    t22 = (0, import_jsx_runtime.jsx)(DropdownMenu.Button, { className: t1, "aria-label": label, children: button });
    $6[7] = button;
    $6[8] = label;
    $6[9] = t1;
    $6[10] = t22;
  } else {
    t22 = $6[10];
  }
  let t32;
  if ($6[11] !== label || $6[12] !== t22) {
    t32 = (0, import_jsx_runtime.jsx)(Tooltip, { label, children: t22 });
    $6[11] = label;
    $6[12] = t22;
    $6[13] = t32;
  } else {
    t32 = $6[13];
  }
  let t42;
  if ($6[14] !== children) {
    t42 = (0, import_jsx_runtime.jsx)(DropdownMenu.Content, { children });
    $6[14] = children;
    $6[15] = t42;
  } else {
    t42 = $6[15];
  }
  let t52;
  if ($6[16] !== props || $6[17] !== t32 || $6[18] !== t42) {
    t52 = (0, import_jsx_runtime.jsxs)(DropdownMenu, { ...props, children: [
      t32,
      t42
    ] });
    $6[16] = props;
    $6[17] = t32;
    $6[18] = t42;
    $6[19] = t52;
  } else {
    t52 = $6[19];
  }
  return t52;
};
var ToolbarMenu = createComponentGroup(ToolbarMenuRoot, {
  Item: DropdownMenu.Item
});

// node_modules/.pnpm/graphiql@3.9.0_@codemirror+language@6.0.0_graphql@16.11.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/graphiql/dist/index.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_react_compiler_runtime2 = __toESM(require_dist(), 1);
var import_react97 = __toESM(require_react(), 1);
var majorVersion = parseInt(import_react97.version.slice(0, 2), 10);
if (majorVersion < 16) {
  throw new Error(["GraphiQL 0.18.0 and after is not compatible with React 15 or below.", "If you are using a CDN source (jsdelivr, unpkg, etc), follow this example:", "https://github.com/graphql/graphiql/blob/master/examples/graphiql-cdn/index.html#L49"].join("\n"));
}
function GraphiQL(t0) {
  const $6 = (0, import_react_compiler_runtime2.c)(62);
  let confirmCloseTab;
  let dangerouslyAssumeSchemaIsValid;
  let defaultHeaders;
  let defaultQuery;
  let defaultTabs;
  let externalFragments;
  let fetcher;
  let getDefaultFieldNames;
  let headers;
  let inputValueDeprecation;
  let introspectionQueryName;
  let maxHistoryLength;
  let onEditOperationName;
  let onSchemaChange;
  let onTabChange;
  let onTogglePluginVisibility;
  let operationName;
  let plugins;
  let props;
  let query;
  let response;
  let schema;
  let schemaDescription;
  let shouldPersistHeaders;
  let storage;
  let validationRules;
  let variables;
  let visiblePlugin;
  if ($6[0] !== t0) {
    ({
      dangerouslyAssumeSchemaIsValid,
      confirmCloseTab,
      defaultQuery,
      defaultTabs,
      externalFragments,
      fetcher,
      getDefaultFieldNames,
      headers,
      inputValueDeprecation,
      introspectionQueryName,
      maxHistoryLength,
      onEditOperationName,
      onSchemaChange,
      onTabChange,
      onTogglePluginVisibility,
      operationName,
      plugins,
      query,
      response,
      schema,
      schemaDescription,
      shouldPersistHeaders,
      storage,
      validationRules,
      variables,
      visiblePlugin,
      defaultHeaders,
      ...props
    } = t0);
    $6[0] = t0;
    $6[1] = confirmCloseTab;
    $6[2] = dangerouslyAssumeSchemaIsValid;
    $6[3] = defaultHeaders;
    $6[4] = defaultQuery;
    $6[5] = defaultTabs;
    $6[6] = externalFragments;
    $6[7] = fetcher;
    $6[8] = getDefaultFieldNames;
    $6[9] = headers;
    $6[10] = inputValueDeprecation;
    $6[11] = introspectionQueryName;
    $6[12] = maxHistoryLength;
    $6[13] = onEditOperationName;
    $6[14] = onSchemaChange;
    $6[15] = onTabChange;
    $6[16] = onTogglePluginVisibility;
    $6[17] = operationName;
    $6[18] = plugins;
    $6[19] = props;
    $6[20] = query;
    $6[21] = response;
    $6[22] = schema;
    $6[23] = schemaDescription;
    $6[24] = shouldPersistHeaders;
    $6[25] = storage;
    $6[26] = validationRules;
    $6[27] = variables;
    $6[28] = visiblePlugin;
  } else {
    confirmCloseTab = $6[1];
    dangerouslyAssumeSchemaIsValid = $6[2];
    defaultHeaders = $6[3];
    defaultQuery = $6[4];
    defaultTabs = $6[5];
    externalFragments = $6[6];
    fetcher = $6[7];
    getDefaultFieldNames = $6[8];
    headers = $6[9];
    inputValueDeprecation = $6[10];
    introspectionQueryName = $6[11];
    maxHistoryLength = $6[12];
    onEditOperationName = $6[13];
    onSchemaChange = $6[14];
    onTabChange = $6[15];
    onTogglePluginVisibility = $6[16];
    operationName = $6[17];
    plugins = $6[18];
    props = $6[19];
    query = $6[20];
    response = $6[21];
    schema = $6[22];
    schemaDescription = $6[23];
    shouldPersistHeaders = $6[24];
    storage = $6[25];
    validationRules = $6[26];
    variables = $6[27];
    visiblePlugin = $6[28];
  }
  if (typeof fetcher !== "function") {
    throw new TypeError("The `GraphiQL` component requires a `fetcher` function to be passed as prop.");
  }
  const t1 = shouldPersistHeaders !== false;
  const t22 = props.disableTabs ?? false;
  let t32;
  if ($6[29] !== confirmCloseTab || $6[30] !== props || $6[31] !== t1 || $6[32] !== t22) {
    t32 = (0, import_jsx_runtime2.jsx)(GraphiQLInterface, { confirmCloseTab, showPersistHeadersSettings: t1, disableTabs: t22, forcedTheme: props.forcedTheme, ...props });
    $6[29] = confirmCloseTab;
    $6[30] = props;
    $6[31] = t1;
    $6[32] = t22;
    $6[33] = t32;
  } else {
    t32 = $6[33];
  }
  let t42;
  if ($6[34] !== dangerouslyAssumeSchemaIsValid || $6[35] !== defaultHeaders || $6[36] !== defaultQuery || $6[37] !== defaultTabs || $6[38] !== externalFragments || $6[39] !== fetcher || $6[40] !== getDefaultFieldNames || $6[41] !== headers || $6[42] !== inputValueDeprecation || $6[43] !== introspectionQueryName || $6[44] !== maxHistoryLength || $6[45] !== onEditOperationName || $6[46] !== onSchemaChange || $6[47] !== onTabChange || $6[48] !== onTogglePluginVisibility || $6[49] !== operationName || $6[50] !== plugins || $6[51] !== query || $6[52] !== response || $6[53] !== schema || $6[54] !== schemaDescription || $6[55] !== shouldPersistHeaders || $6[56] !== storage || $6[57] !== t32 || $6[58] !== validationRules || $6[59] !== variables || $6[60] !== visiblePlugin) {
    t42 = (0, import_jsx_runtime2.jsx)(GraphiQLProvider, { getDefaultFieldNames, dangerouslyAssumeSchemaIsValid, defaultQuery, defaultHeaders, defaultTabs, externalFragments, fetcher, headers, inputValueDeprecation, introspectionQueryName, maxHistoryLength, onEditOperationName, onSchemaChange, onTabChange, onTogglePluginVisibility, plugins, visiblePlugin, operationName, query, response, schema, schemaDescription, shouldPersistHeaders, storage, validationRules, variables, children: t32 });
    $6[34] = dangerouslyAssumeSchemaIsValid;
    $6[35] = defaultHeaders;
    $6[36] = defaultQuery;
    $6[37] = defaultTabs;
    $6[38] = externalFragments;
    $6[39] = fetcher;
    $6[40] = getDefaultFieldNames;
    $6[41] = headers;
    $6[42] = inputValueDeprecation;
    $6[43] = introspectionQueryName;
    $6[44] = maxHistoryLength;
    $6[45] = onEditOperationName;
    $6[46] = onSchemaChange;
    $6[47] = onTabChange;
    $6[48] = onTogglePluginVisibility;
    $6[49] = operationName;
    $6[50] = plugins;
    $6[51] = query;
    $6[52] = response;
    $6[53] = schema;
    $6[54] = schemaDescription;
    $6[55] = shouldPersistHeaders;
    $6[56] = storage;
    $6[57] = t32;
    $6[58] = validationRules;
    $6[59] = variables;
    $6[60] = visiblePlugin;
    $6[61] = t42;
  } else {
    t42 = $6[61];
  }
  return t42;
}
GraphiQL.Logo = GraphiQLLogo;
GraphiQL.Toolbar = GraphiQLToolbar;
GraphiQL.Footer = GraphiQLFooter;
var THEMES = ["light", "dark", "system"];
var TAB_CLASS_PREFIX = "graphiql-session-tab-";
function GraphiQLInterface(props) {
  var _a, _b, _c;
  const $6 = (0, import_react_compiler_runtime2.c)(226);
  const isHeadersEditorEnabled = props.isHeadersEditorEnabled ?? true;
  let t0;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t0 = {
      nonNull: true
    };
    $6[0] = t0;
  } else {
    t0 = $6[0];
  }
  const editorContext = useEditorContext(t0);
  let t1;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = {
      nonNull: true
    };
    $6[1] = t1;
  } else {
    t1 = $6[1];
  }
  const executionContext = useExecutionContext(t1);
  let t22;
  if ($6[2] === Symbol.for("react.memo_cache_sentinel")) {
    t22 = {
      nonNull: true
    };
    $6[2] = t22;
  } else {
    t22 = $6[2];
  }
  const schemaContext = useSchemaContext(t22);
  const storageContext = useStorageContext();
  const pluginContext = usePluginContext();
  const forcedTheme = props.forcedTheme && THEMES.includes(props.forcedTheme) ? props.forcedTheme : void 0;
  let t32;
  if ($6[3] !== props.onCopyQuery) {
    t32 = {
      onCopyQuery: props.onCopyQuery
    };
    $6[3] = props.onCopyQuery;
    $6[4] = t32;
  } else {
    t32 = $6[4];
  }
  const copy = useCopyQuery(t32);
  const merge = useMergeQuery();
  const prettify = usePrettifyEditors();
  const {
    theme,
    setTheme
  } = useTheme(props.defaultTheme);
  let t42;
  let t52;
  if ($6[5] !== forcedTheme || $6[6] !== setTheme) {
    t42 = () => {
      if (forcedTheme === "system") {
        setTheme(null);
      } else {
        if (forcedTheme === "light" || forcedTheme === "dark") {
          setTheme(forcedTheme);
        }
      }
    };
    t52 = [forcedTheme, setTheme];
    $6[5] = forcedTheme;
    $6[6] = setTheme;
    $6[7] = t42;
    $6[8] = t52;
  } else {
    t42 = $6[7];
    t52 = $6[8];
  }
  (0, import_react97.useEffect)(t42, t52);
  const PluginContent = (_a = pluginContext == null ? void 0 : pluginContext.visiblePlugin) == null ? void 0 : _a.content;
  const t62 = (pluginContext == null ? void 0 : pluginContext.visiblePlugin) ? void 0 : "first";
  let t72;
  if ($6[9] !== pluginContext || $6[10] !== t62) {
    t72 = {
      defaultSizeRelation: 0.3333333333333333,
      direction: "horizontal",
      initiallyHidden: t62,
      onHiddenElementChange(resizableElement) {
        if (resizableElement === "first") {
          pluginContext == null ? void 0 : pluginContext.setVisiblePlugin(null);
        }
      },
      sizeThresholdSecond: 200,
      storageKey: "docExplorerFlex"
    };
    $6[9] = pluginContext;
    $6[10] = t62;
    $6[11] = t72;
  } else {
    t72 = $6[11];
  }
  const pluginResize = useDragResize(t72);
  let t82;
  if ($6[12] === Symbol.for("react.memo_cache_sentinel")) {
    t82 = {
      direction: "horizontal",
      storageKey: "editorFlex"
    };
    $6[12] = t82;
  } else {
    t82 = $6[12];
  }
  const editorResize = useDragResize(t82);
  let t92;
  bb0: {
    if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
      t92 = void 0;
      break bb0;
    }
    if (typeof props.defaultEditorToolsVisibility === "boolean") {
      t92 = props.defaultEditorToolsVisibility ? void 0 : "second";
      break bb0;
    }
    t92 = editorContext.initialVariables || editorContext.initialHeaders ? void 0 : "second";
  }
  let t102;
  if ($6[13] !== t92) {
    t102 = {
      defaultSizeRelation: 3,
      direction: "vertical",
      initiallyHidden: t92,
      sizeThresholdSecond: 60,
      storageKey: "secondaryEditorFlex"
    };
    $6[13] = t92;
    $6[14] = t102;
  } else {
    t102 = $6[14];
  }
  const editorToolsResize = useDragResize(t102);
  let t112;
  if ($6[15] !== editorContext.initialHeaders || $6[16] !== editorContext.initialVariables || $6[17] !== isHeadersEditorEnabled || $6[18] !== props.defaultEditorToolsVisibility) {
    t112 = () => {
      if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
        return props.defaultEditorToolsVisibility;
      }
      return !editorContext.initialVariables && editorContext.initialHeaders && isHeadersEditorEnabled ? "headers" : "variables";
    };
    $6[15] = editorContext.initialHeaders;
    $6[16] = editorContext.initialVariables;
    $6[17] = isHeadersEditorEnabled;
    $6[18] = props.defaultEditorToolsVisibility;
    $6[19] = t112;
  } else {
    t112 = $6[19];
  }
  const [activeSecondaryEditor, setActiveSecondaryEditor] = (0, import_react97.useState)(t112);
  const [showDialog, setShowDialog] = (0, import_react97.useState)(null);
  const [clearStorageStatus, setClearStorageStatus] = (0, import_react97.useState)(null);
  let logo;
  let t122;
  let toolbar;
  if ($6[20] !== copy || $6[21] !== merge || $6[22] !== prettify || $6[23] !== props.children || $6[24] !== props.toolbar) {
    const children = import_react97.Children.toArray(props.children);
    logo = children.find(_temp8) || (0, import_jsx_runtime2.jsx)(GraphiQL.Logo, {});
    toolbar = children.find(_temp22) || (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
      (0, import_jsx_runtime2.jsx)(ToolbarButton, { onClick: prettify, label: "Prettify query (Shift-Ctrl-P)", children: (0, import_jsx_runtime2.jsx)(PrettifyIcon, { className: "graphiql-toolbar-icon", "aria-hidden": "true" }) }),
      (0, import_jsx_runtime2.jsx)(ToolbarButton, { onClick: merge, label: "Merge fragments into query (Shift-Ctrl-M)", children: (0, import_jsx_runtime2.jsx)(MergeIcon, { className: "graphiql-toolbar-icon", "aria-hidden": "true" }) }),
      (0, import_jsx_runtime2.jsx)(ToolbarButton, { onClick: copy, label: "Copy query (Shift-Ctrl-C)", children: (0, import_jsx_runtime2.jsx)(CopyIcon, { className: "graphiql-toolbar-icon", "aria-hidden": "true" }) }),
      (_b = props.toolbar) == null ? void 0 : _b.additionalContent,
      ((_c = props.toolbar) == null ? void 0 : _c.additionalComponent) && (0, import_jsx_runtime2.jsx)(props.toolbar.additionalComponent, {})
    ] });
    t122 = children.find(_temp32);
    $6[20] = copy;
    $6[21] = merge;
    $6[22] = prettify;
    $6[23] = props.children;
    $6[24] = props.toolbar;
    $6[25] = logo;
    $6[26] = t122;
    $6[27] = toolbar;
  } else {
    logo = $6[25];
    t122 = $6[26];
    toolbar = $6[27];
  }
  const footer = t122;
  let t132;
  if ($6[28] !== pluginResize) {
    t132 = () => {
      if (pluginResize.hiddenElement === "first") {
        pluginResize.setHiddenElement(null);
      }
    };
    $6[28] = pluginResize;
    $6[29] = t132;
  } else {
    t132 = $6[29];
  }
  const onClickReference = t132;
  let t142;
  if ($6[30] !== storageContext) {
    t142 = () => {
      try {
        if (storageContext) {
          storageContext.clear();
        }
        setClearStorageStatus("success");
      } catch {
        setClearStorageStatus("error");
      }
    };
    $6[30] = storageContext;
    $6[31] = t142;
  } else {
    t142 = $6[31];
  }
  const handleClearData = t142;
  let t152;
  if ($6[32] !== editorContext) {
    t152 = (event) => {
      editorContext.setShouldPersistHeaders(event.currentTarget.dataset.value === "true");
    };
    $6[32] = editorContext;
    $6[33] = t152;
  } else {
    t152 = $6[33];
  }
  const handlePersistHeaders = t152;
  let t162;
  if ($6[34] !== setTheme) {
    t162 = (event_0) => {
      const selectedTheme = event_0.currentTarget.dataset.theme;
      setTheme(selectedTheme || null);
    };
    $6[34] = setTheme;
    $6[35] = t162;
  } else {
    t162 = $6[35];
  }
  const handleChangeTheme = t162;
  const handleAddTab = editorContext.addTab;
  const handleRefetchSchema = schemaContext.introspect;
  const handleReorder = editorContext.moveTab;
  let t172;
  if ($6[36] === Symbol.for("react.memo_cache_sentinel")) {
    t172 = (event_1) => {
      setShowDialog(event_1.currentTarget.dataset.value);
    };
    $6[36] = t172;
  } else {
    t172 = $6[36];
  }
  const handleShowDialog = t172;
  let t18;
  if ($6[37] !== pluginContext || $6[38] !== pluginResize) {
    t18 = (event_2) => {
      const context = pluginContext;
      const pluginIndex = Number(event_2.currentTarget.dataset.index);
      const plugin = context.plugins.find((_5, index) => pluginIndex === index);
      const isVisible = plugin === context.visiblePlugin;
      if (isVisible) {
        context.setVisiblePlugin(null);
        pluginResize.setHiddenElement("first");
      } else {
        context.setVisiblePlugin(plugin);
        pluginResize.setHiddenElement(null);
      }
    };
    $6[37] = pluginContext;
    $6[38] = pluginResize;
    $6[39] = t18;
  } else {
    t18 = $6[39];
  }
  const handlePluginClick = t18;
  let t19;
  if ($6[40] !== editorToolsResize) {
    t19 = (event_3) => {
      if (editorToolsResize.hiddenElement === "second") {
        editorToolsResize.setHiddenElement(null);
      }
      setActiveSecondaryEditor(event_3.currentTarget.dataset.name);
    };
    $6[40] = editorToolsResize;
    $6[41] = t19;
  } else {
    t19 = $6[41];
  }
  const handleToolsTabClick = t19;
  let t20;
  if ($6[42] !== editorToolsResize) {
    t20 = () => {
      editorToolsResize.setHiddenElement(editorToolsResize.hiddenElement === "second" ? null : "second");
    };
    $6[42] = editorToolsResize;
    $6[43] = t20;
  } else {
    t20 = $6[43];
  }
  const toggleEditorTools = t20;
  let t21;
  if ($6[44] === Symbol.for("react.memo_cache_sentinel")) {
    t21 = (isOpen) => {
      if (!isOpen) {
        setShowDialog(null);
      }
    };
    $6[44] = t21;
  } else {
    t21 = $6[44];
  }
  const handleOpenShortKeysDialog = t21;
  let t222;
  if ($6[45] === Symbol.for("react.memo_cache_sentinel")) {
    t222 = (isOpen_0) => {
      if (!isOpen_0) {
        setShowDialog(null);
        setClearStorageStatus(null);
      }
    };
    $6[45] = t222;
  } else {
    t222 = $6[45];
  }
  const handleOpenSettingsDialog = t222;
  let t23;
  if ($6[46] === Symbol.for("react.memo_cache_sentinel")) {
    t23 = (0, import_jsx_runtime2.jsx)(PlusIcon, { "aria-hidden": "true" });
    $6[46] = t23;
  } else {
    t23 = $6[46];
  }
  let t24;
  if ($6[47] !== handleAddTab) {
    t24 = (0, import_jsx_runtime2.jsx)(Tooltip, { label: "Add tab", children: (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", className: "graphiql-tab-add", onClick: handleAddTab, "aria-label": "Add tab", children: t23 }) });
    $6[47] = handleAddTab;
    $6[48] = t24;
  } else {
    t24 = $6[48];
  }
  const addTab = t24;
  const className = props.className ? ` ${props.className}` : "";
  const confirmClose = props.confirmCloseTab;
  let t25;
  if ($6[49] !== confirmClose || $6[50] !== editorContext || $6[51] !== executionContext) {
    t25 = async (event_4) => {
      const tabButton = event_4.currentTarget.previousSibling;
      const index_0 = Number(tabButton.id.replace(TAB_CLASS_PREFIX, ""));
      const shouldCloseTab = confirmClose ? await confirmClose(index_0) : true;
      if (!shouldCloseTab) {
        return;
      }
      if (editorContext.activeTabIndex === index_0) {
        executionContext.stop();
      }
      editorContext.closeTab(index_0);
    };
    $6[49] = confirmClose;
    $6[50] = editorContext;
    $6[51] = executionContext;
    $6[52] = t25;
  } else {
    t25 = $6[52];
  }
  const handleTabClose = t25;
  let t26;
  if ($6[53] !== editorContext || $6[54] !== executionContext) {
    t26 = (event_5) => {
      const index_1 = Number(event_5.currentTarget.id.replace(TAB_CLASS_PREFIX, ""));
      executionContext.stop();
      editorContext.changeTab(index_1);
    };
    $6[53] = editorContext;
    $6[54] = executionContext;
    $6[55] = t26;
  } else {
    t26 = $6[55];
  }
  const handleTabClick = t26;
  const t27 = `graphiql-container${className}`;
  let t28;
  if ($6[56] !== handlePluginClick || $6[57] !== pluginContext) {
    t28 = pluginContext == null ? void 0 : pluginContext.plugins.map((plugin_0, index_2) => {
      const isVisible_0 = plugin_0 === pluginContext.visiblePlugin;
      const label = `${isVisible_0 ? "Hide" : "Show"} ${plugin_0.title}`;
      return (0, import_jsx_runtime2.jsx)(Tooltip, { label, children: (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", className: isVisible_0 ? "active" : "", onClick: handlePluginClick, "data-index": index_2, "aria-label": label, children: (0, import_jsx_runtime2.jsx)(plugin_0.icon, { "aria-hidden": "true" }) }) }, plugin_0.title);
    });
    $6[56] = handlePluginClick;
    $6[57] = pluginContext;
    $6[58] = t28;
  } else {
    t28 = $6[58];
  }
  let t29;
  if ($6[59] !== t28) {
    t29 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-sidebar-section", children: t28 });
    $6[59] = t28;
    $6[60] = t29;
  } else {
    t29 = $6[60];
  }
  const t30 = schemaContext.isFetching ? "graphiql-spin" : "";
  let t31;
  if ($6[61] !== t30) {
    t31 = (0, import_jsx_runtime2.jsx)(ReloadIcon, { className: t30, "aria-hidden": "true" });
    $6[61] = t30;
    $6[62] = t31;
  } else {
    t31 = $6[62];
  }
  let t322;
  if ($6[63] !== handleRefetchSchema || $6[64] !== schemaContext.isFetching || $6[65] !== t31) {
    t322 = (0, import_jsx_runtime2.jsx)(Tooltip, { label: "Re-fetch GraphQL schema", children: (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", disabled: schemaContext.isFetching, onClick: handleRefetchSchema, "aria-label": "Re-fetch GraphQL schema", children: t31 }) });
    $6[63] = handleRefetchSchema;
    $6[64] = schemaContext.isFetching;
    $6[65] = t31;
    $6[66] = t322;
  } else {
    t322 = $6[66];
  }
  let t33;
  if ($6[67] === Symbol.for("react.memo_cache_sentinel")) {
    t33 = (0, import_jsx_runtime2.jsx)(Tooltip, { label: "Open short keys dialog", children: (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", "data-value": "short-keys", onClick: handleShowDialog, "aria-label": "Open short keys dialog", children: (0, import_jsx_runtime2.jsx)(KeyboardShortcutIcon, { "aria-hidden": "true" }) }) });
    $6[67] = t33;
  } else {
    t33 = $6[67];
  }
  let t34;
  if ($6[68] === Symbol.for("react.memo_cache_sentinel")) {
    t34 = (0, import_jsx_runtime2.jsx)(Tooltip, { label: "Open settings dialog", children: (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", "data-value": "settings", onClick: handleShowDialog, "aria-label": "Open settings dialog", children: (0, import_jsx_runtime2.jsx)(SettingsIcon, { "aria-hidden": "true" }) }) });
    $6[68] = t34;
  } else {
    t34 = $6[68];
  }
  let t35;
  if ($6[69] !== t322) {
    t35 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-sidebar-section", children: [
      t322,
      t33,
      t34
    ] });
    $6[69] = t322;
    $6[70] = t35;
  } else {
    t35 = $6[70];
  }
  let t36;
  if ($6[71] !== t29 || $6[72] !== t35) {
    t36 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-sidebar", children: [
      t29,
      t35
    ] });
    $6[71] = t29;
    $6[72] = t35;
    $6[73] = t36;
  } else {
    t36 = $6[73];
  }
  let t37;
  if ($6[74] === Symbol.for("react.memo_cache_sentinel")) {
    t37 = {
      minWidth: "200px"
    };
    $6[74] = t37;
  } else {
    t37 = $6[74];
  }
  let t38;
  if ($6[75] !== PluginContent) {
    t38 = PluginContent ? (0, import_jsx_runtime2.jsx)(PluginContent, {}) : null;
    $6[75] = PluginContent;
    $6[76] = t38;
  } else {
    t38 = $6[76];
  }
  let t39;
  if ($6[77] !== t38) {
    t39 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-plugin", children: t38 });
    $6[77] = t38;
    $6[78] = t39;
  } else {
    t39 = $6[78];
  }
  let t40;
  if ($6[79] !== pluginResize.firstRef || $6[80] !== t39) {
    t40 = (0, import_jsx_runtime2.jsx)("div", { ref: pluginResize.firstRef, style: t37, children: t39 });
    $6[79] = pluginResize.firstRef;
    $6[80] = t39;
    $6[81] = t40;
  } else {
    t40 = $6[81];
  }
  let t41;
  if ($6[82] !== (pluginContext == null ? void 0 : pluginContext.visiblePlugin) || $6[83] !== pluginResize.dragBarRef) {
    t41 = (pluginContext == null ? void 0 : pluginContext.visiblePlugin) && (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-horizontal-drag-bar", ref: pluginResize.dragBarRef });
    $6[82] = pluginContext == null ? void 0 : pluginContext.visiblePlugin;
    $6[83] = pluginResize.dragBarRef;
    $6[84] = t41;
  } else {
    t41 = $6[84];
  }
  let t422;
  if ($6[85] !== addTab || $6[86] !== editorContext.activeTabIndex || $6[87] !== editorContext.tabs || $6[88] !== handleReorder || $6[89] !== handleTabClick || $6[90] !== handleTabClose || $6[91] !== props.disableTabs) {
    t422 = !props.disableTabs && (0, import_jsx_runtime2.jsx)(Tabs, { values: editorContext.tabs, onReorder: handleReorder, "aria-label": "Select active operation", children: editorContext.tabs.length > 1 && (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
      editorContext.tabs.map((tab, index_3) => (0, import_jsx_runtime2.jsxs)(Tab, { value: tab, isActive: index_3 === editorContext.activeTabIndex, children: [
        (0, import_jsx_runtime2.jsx)(Tab.Button, { "aria-controls": "graphiql-session", id: `${TAB_CLASS_PREFIX}${index_3}`, onClick: handleTabClick, children: tab.title }),
        (0, import_jsx_runtime2.jsx)(Tab.Close, { onClick: handleTabClose })
      ] }, tab.id)),
      addTab
    ] }) });
    $6[85] = addTab;
    $6[86] = editorContext.activeTabIndex;
    $6[87] = editorContext.tabs;
    $6[88] = handleReorder;
    $6[89] = handleTabClick;
    $6[90] = handleTabClose;
    $6[91] = props.disableTabs;
    $6[92] = t422;
  } else {
    t422 = $6[92];
  }
  const t43 = editorContext.tabs.length === 1 && addTab;
  let t44;
  if ($6[93] !== logo || $6[94] !== t43) {
    t44 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-session-header-right", children: [
      t43,
      logo
    ] });
    $6[93] = logo;
    $6[94] = t43;
    $6[95] = t44;
  } else {
    t44 = $6[95];
  }
  let t45;
  if ($6[96] !== t422 || $6[97] !== t44) {
    t45 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-session-header", children: [
      t422,
      t44
    ] });
    $6[96] = t422;
    $6[97] = t44;
    $6[98] = t45;
  } else {
    t45 = $6[98];
  }
  const t46 = `${TAB_CLASS_PREFIX}${editorContext.activeTabIndex}`;
  const t47 = `graphiql-editors${editorContext.tabs.length === 1 ? " full-height" : ""}`;
  let t48;
  if ($6[99] !== onClickReference || $6[100] !== props.editorTheme || $6[101] !== props.keyMap || $6[102] !== props.onCopyQuery || $6[103] !== props.onEditQuery || $6[104] !== props.readOnly) {
    t48 = (0, import_jsx_runtime2.jsx)(QueryEditor, { editorTheme: props.editorTheme, keyMap: props.keyMap, onClickReference, onCopyQuery: props.onCopyQuery, onEdit: props.onEditQuery, readOnly: props.readOnly });
    $6[99] = onClickReference;
    $6[100] = props.editorTheme;
    $6[101] = props.keyMap;
    $6[102] = props.onCopyQuery;
    $6[103] = props.onEditQuery;
    $6[104] = props.readOnly;
    $6[105] = t48;
  } else {
    t48 = $6[105];
  }
  let t49;
  if ($6[106] === Symbol.for("react.memo_cache_sentinel")) {
    t49 = (0, import_jsx_runtime2.jsx)(ExecuteButton, {});
    $6[106] = t49;
  } else {
    t49 = $6[106];
  }
  let t50;
  if ($6[107] !== toolbar) {
    t50 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-toolbar", role: "toolbar", "aria-label": "Editor Commands", children: [
      t49,
      toolbar
    ] });
    $6[107] = toolbar;
    $6[108] = t50;
  } else {
    t50 = $6[108];
  }
  let t51;
  if ($6[109] !== t48 || $6[110] !== t50) {
    t51 = (0, import_jsx_runtime2.jsxs)("section", { className: "graphiql-query-editor", "aria-label": "Query Editor", children: [
      t48,
      t50
    ] });
    $6[109] = t48;
    $6[110] = t50;
    $6[111] = t51;
  } else {
    t51 = $6[111];
  }
  let t522;
  if ($6[112] !== editorToolsResize.firstRef || $6[113] !== t51) {
    t522 = (0, import_jsx_runtime2.jsx)("div", { ref: editorToolsResize.firstRef, children: t51 });
    $6[112] = editorToolsResize.firstRef;
    $6[113] = t51;
    $6[114] = t522;
  } else {
    t522 = $6[114];
  }
  const t53 = activeSecondaryEditor === "variables" && editorToolsResize.hiddenElement !== "second" ? "active" : "";
  let t54;
  if ($6[115] !== handleToolsTabClick || $6[116] !== t53) {
    t54 = (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", className: t53, onClick: handleToolsTabClick, "data-name": "variables", children: "Variables" });
    $6[115] = handleToolsTabClick;
    $6[116] = t53;
    $6[117] = t54;
  } else {
    t54 = $6[117];
  }
  let t55;
  if ($6[118] !== activeSecondaryEditor || $6[119] !== editorToolsResize.hiddenElement || $6[120] !== handleToolsTabClick || $6[121] !== isHeadersEditorEnabled) {
    t55 = isHeadersEditorEnabled && (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", className: activeSecondaryEditor === "headers" && editorToolsResize.hiddenElement !== "second" ? "active" : "", onClick: handleToolsTabClick, "data-name": "headers", children: "Headers" });
    $6[118] = activeSecondaryEditor;
    $6[119] = editorToolsResize.hiddenElement;
    $6[120] = handleToolsTabClick;
    $6[121] = isHeadersEditorEnabled;
    $6[122] = t55;
  } else {
    t55 = $6[122];
  }
  const t56 = editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools";
  const t57 = editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools";
  let t58;
  if ($6[123] !== editorToolsResize.hiddenElement) {
    t58 = editorToolsResize.hiddenElement === "second" ? (0, import_jsx_runtime2.jsx)(ChevronUpIcon, { className: "graphiql-chevron-icon", "aria-hidden": "true" }) : (0, import_jsx_runtime2.jsx)(ChevronDownIcon, { className: "graphiql-chevron-icon", "aria-hidden": "true" });
    $6[123] = editorToolsResize.hiddenElement;
    $6[124] = t58;
  } else {
    t58 = $6[124];
  }
  let t59;
  if ($6[125] !== t57 || $6[126] !== t58 || $6[127] !== toggleEditorTools) {
    t59 = (0, import_jsx_runtime2.jsx)(UnStyledButton, { type: "button", onClick: toggleEditorTools, "aria-label": t57, className: "graphiql-toggle-editor-tools", children: t58 });
    $6[125] = t57;
    $6[126] = t58;
    $6[127] = toggleEditorTools;
    $6[128] = t59;
  } else {
    t59 = $6[128];
  }
  let t60;
  if ($6[129] !== t56 || $6[130] !== t59) {
    t60 = (0, import_jsx_runtime2.jsx)(Tooltip, { label: t56, children: t59 });
    $6[129] = t56;
    $6[130] = t59;
    $6[131] = t60;
  } else {
    t60 = $6[131];
  }
  let t61;
  if ($6[132] !== t54 || $6[133] !== t55 || $6[134] !== t60) {
    t61 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-editor-tools", children: [
      t54,
      t55,
      t60
    ] });
    $6[132] = t54;
    $6[133] = t55;
    $6[134] = t60;
    $6[135] = t61;
  } else {
    t61 = $6[135];
  }
  let t622;
  if ($6[136] !== editorToolsResize.dragBarRef || $6[137] !== t61) {
    t622 = (0, import_jsx_runtime2.jsx)("div", { ref: editorToolsResize.dragBarRef, children: t61 });
    $6[136] = editorToolsResize.dragBarRef;
    $6[137] = t61;
    $6[138] = t622;
  } else {
    t622 = $6[138];
  }
  const t63 = activeSecondaryEditor === "variables" ? "Variables" : "Headers";
  const t64 = activeSecondaryEditor !== "variables";
  let t65;
  if ($6[139] !== onClickReference || $6[140] !== props.editorTheme || $6[141] !== props.keyMap || $6[142] !== props.onEditVariables || $6[143] !== props.readOnly || $6[144] !== t64) {
    t65 = (0, import_jsx_runtime2.jsx)(VariableEditor, { editorTheme: props.editorTheme, isHidden: t64, keyMap: props.keyMap, onEdit: props.onEditVariables, onClickReference, readOnly: props.readOnly });
    $6[139] = onClickReference;
    $6[140] = props.editorTheme;
    $6[141] = props.keyMap;
    $6[142] = props.onEditVariables;
    $6[143] = props.readOnly;
    $6[144] = t64;
    $6[145] = t65;
  } else {
    t65 = $6[145];
  }
  let t66;
  if ($6[146] !== activeSecondaryEditor || $6[147] !== isHeadersEditorEnabled || $6[148] !== props.editorTheme || $6[149] !== props.keyMap || $6[150] !== props.onEditHeaders || $6[151] !== props.readOnly) {
    t66 = isHeadersEditorEnabled && (0, import_jsx_runtime2.jsx)(HeaderEditor, { editorTheme: props.editorTheme, isHidden: activeSecondaryEditor !== "headers", keyMap: props.keyMap, onEdit: props.onEditHeaders, readOnly: props.readOnly });
    $6[146] = activeSecondaryEditor;
    $6[147] = isHeadersEditorEnabled;
    $6[148] = props.editorTheme;
    $6[149] = props.keyMap;
    $6[150] = props.onEditHeaders;
    $6[151] = props.readOnly;
    $6[152] = t66;
  } else {
    t66 = $6[152];
  }
  let t67;
  if ($6[153] !== t63 || $6[154] !== t65 || $6[155] !== t66) {
    t67 = (0, import_jsx_runtime2.jsxs)("section", { className: "graphiql-editor-tool", "aria-label": t63, children: [
      t65,
      t66
    ] });
    $6[153] = t63;
    $6[154] = t65;
    $6[155] = t66;
    $6[156] = t67;
  } else {
    t67 = $6[156];
  }
  let t68;
  if ($6[157] !== editorToolsResize.secondRef || $6[158] !== t67) {
    t68 = (0, import_jsx_runtime2.jsx)("div", { ref: editorToolsResize.secondRef, children: t67 });
    $6[157] = editorToolsResize.secondRef;
    $6[158] = t67;
    $6[159] = t68;
  } else {
    t68 = $6[159];
  }
  let t69;
  if ($6[160] !== t47 || $6[161] !== t522 || $6[162] !== t622 || $6[163] !== t68) {
    t69 = (0, import_jsx_runtime2.jsxs)("div", { className: t47, children: [
      t522,
      t622,
      t68
    ] });
    $6[160] = t47;
    $6[161] = t522;
    $6[162] = t622;
    $6[163] = t68;
    $6[164] = t69;
  } else {
    t69 = $6[164];
  }
  let t70;
  if ($6[165] !== editorResize.firstRef || $6[166] !== t69) {
    t70 = (0, import_jsx_runtime2.jsx)("div", { ref: editorResize.firstRef, children: t69 });
    $6[165] = editorResize.firstRef;
    $6[166] = t69;
    $6[167] = t70;
  } else {
    t70 = $6[167];
  }
  let t71;
  if ($6[168] !== editorResize.dragBarRef) {
    t71 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-horizontal-drag-bar", ref: editorResize.dragBarRef });
    $6[168] = editorResize.dragBarRef;
    $6[169] = t71;
  } else {
    t71 = $6[169];
  }
  let t722;
  if ($6[170] !== executionContext.isFetching) {
    t722 = executionContext.isFetching ? (0, import_jsx_runtime2.jsx)(Spinner, {}) : null;
    $6[170] = executionContext.isFetching;
    $6[171] = t722;
  } else {
    t722 = $6[171];
  }
  let t73;
  if ($6[172] !== props.editorTheme || $6[173] !== props.keyMap || $6[174] !== props.responseTooltip) {
    t73 = (0, import_jsx_runtime2.jsx)(ResponseEditor, { editorTheme: props.editorTheme, responseTooltip: props.responseTooltip, keyMap: props.keyMap });
    $6[172] = props.editorTheme;
    $6[173] = props.keyMap;
    $6[174] = props.responseTooltip;
    $6[175] = t73;
  } else {
    t73 = $6[175];
  }
  let t74;
  if ($6[176] !== footer || $6[177] !== t722 || $6[178] !== t73) {
    t74 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-response", children: [
      t722,
      t73,
      footer
    ] });
    $6[176] = footer;
    $6[177] = t722;
    $6[178] = t73;
    $6[179] = t74;
  } else {
    t74 = $6[179];
  }
  let t75;
  if ($6[180] !== editorResize.secondRef || $6[181] !== t74) {
    t75 = (0, import_jsx_runtime2.jsx)("div", { ref: editorResize.secondRef, children: t74 });
    $6[180] = editorResize.secondRef;
    $6[181] = t74;
    $6[182] = t75;
  } else {
    t75 = $6[182];
  }
  let t76;
  if ($6[183] !== t46 || $6[184] !== t70 || $6[185] !== t71 || $6[186] !== t75) {
    t76 = (0, import_jsx_runtime2.jsxs)("div", { role: "tabpanel", id: "graphiql-session", className: "graphiql-session", "aria-labelledby": t46, children: [
      t70,
      t71,
      t75
    ] });
    $6[183] = t46;
    $6[184] = t70;
    $6[185] = t71;
    $6[186] = t75;
    $6[187] = t76;
  } else {
    t76 = $6[187];
  }
  let t77;
  if ($6[188] !== pluginResize.secondRef || $6[189] !== t45 || $6[190] !== t76) {
    t77 = (0, import_jsx_runtime2.jsxs)("div", { ref: pluginResize.secondRef, className: "graphiql-sessions", children: [
      t45,
      t76
    ] });
    $6[188] = pluginResize.secondRef;
    $6[189] = t45;
    $6[190] = t76;
    $6[191] = t77;
  } else {
    t77 = $6[191];
  }
  let t78;
  if ($6[192] !== t40 || $6[193] !== t41 || $6[194] !== t77) {
    t78 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-main", children: [
      t40,
      t41,
      t77
    ] });
    $6[192] = t40;
    $6[193] = t41;
    $6[194] = t77;
    $6[195] = t78;
  } else {
    t78 = $6[195];
  }
  const t79 = showDialog === "short-keys";
  let t80;
  if ($6[196] === Symbol.for("react.memo_cache_sentinel")) {
    t80 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-header", children: [
      (0, import_jsx_runtime2.jsx)(Dialog.Title, { className: "graphiql-dialog-title", children: "Short Keys" }),
      (0, import_jsx_runtime2.jsx)(Dialog.Close, {})
    ] });
    $6[196] = t80;
  } else {
    t80 = $6[196];
  }
  const t81 = props.keyMap || "sublime";
  let t822;
  if ($6[197] !== t81) {
    t822 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section", children: (0, import_jsx_runtime2.jsx)(ShortKeys, { keyMap: t81 }) });
    $6[197] = t81;
    $6[198] = t822;
  } else {
    t822 = $6[198];
  }
  let t83;
  if ($6[199] !== t79 || $6[200] !== t822) {
    t83 = (0, import_jsx_runtime2.jsxs)(Dialog, { open: t79, onOpenChange: handleOpenShortKeysDialog, children: [
      t80,
      t822
    ] });
    $6[199] = t79;
    $6[200] = t822;
    $6[201] = t83;
  } else {
    t83 = $6[201];
  }
  const t84 = showDialog === "settings";
  let t85;
  if ($6[202] === Symbol.for("react.memo_cache_sentinel")) {
    t85 = (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-header", children: [
      (0, import_jsx_runtime2.jsx)(Dialog.Title, { className: "graphiql-dialog-title", children: "Settings" }),
      (0, import_jsx_runtime2.jsx)(Dialog.Close, {})
    ] });
    $6[202] = t85;
  } else {
    t85 = $6[202];
  }
  let t86;
  if ($6[203] !== editorContext.shouldPersistHeaders || $6[204] !== handlePersistHeaders || $6[205] !== props.showPersistHeadersSettings) {
    t86 = props.showPersistHeadersSettings ? (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-section", children: [
      (0, import_jsx_runtime2.jsxs)("div", { children: [
        (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section-title", children: "Persist headers" }),
        (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-section-caption", children: [
          "Save headers upon reloading.",
          " ",
          (0, import_jsx_runtime2.jsx)("span", { className: "graphiql-warning-text", children: "Only enable if you trust this device." })
        ] })
      ] }),
      (0, import_jsx_runtime2.jsxs)(ButtonGroup, { children: [
        (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", id: "enable-persist-headers", className: editorContext.shouldPersistHeaders ? "active" : "", "data-value": "true", onClick: handlePersistHeaders, children: "On" }),
        (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", id: "disable-persist-headers", className: editorContext.shouldPersistHeaders ? "" : "active", onClick: handlePersistHeaders, children: "Off" })
      ] })
    ] }) : null;
    $6[203] = editorContext.shouldPersistHeaders;
    $6[204] = handlePersistHeaders;
    $6[205] = props.showPersistHeadersSettings;
    $6[206] = t86;
  } else {
    t86 = $6[206];
  }
  let t87;
  if ($6[207] !== forcedTheme || $6[208] !== handleChangeTheme || $6[209] !== theme) {
    t87 = !forcedTheme && (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-section", children: [
      (0, import_jsx_runtime2.jsxs)("div", { children: [
        (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section-title", children: "Theme" }),
        (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section-caption", children: "Adjust how the interface appears." })
      ] }),
      (0, import_jsx_runtime2.jsxs)(ButtonGroup, { children: [
        (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", className: theme === null ? "active" : "", onClick: handleChangeTheme, children: "System" }),
        (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", className: theme === "light" ? "active" : "", "data-theme": "light", onClick: handleChangeTheme, children: "Light" }),
        (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", className: theme === "dark" ? "active" : "", "data-theme": "dark", onClick: handleChangeTheme, children: "Dark" })
      ] })
    ] });
    $6[207] = forcedTheme;
    $6[208] = handleChangeTheme;
    $6[209] = theme;
    $6[210] = t87;
  } else {
    t87 = $6[210];
  }
  let t88;
  if ($6[211] !== clearStorageStatus || $6[212] !== handleClearData || $6[213] !== storageContext) {
    t88 = storageContext ? (0, import_jsx_runtime2.jsxs)("div", { className: "graphiql-dialog-section", children: [
      (0, import_jsx_runtime2.jsxs)("div", { children: [
        (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section-title", children: "Clear storage" }),
        (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-dialog-section-caption", children: "Remove all locally stored data and start fresh." })
      ] }),
      (0, import_jsx_runtime2.jsx)(Button$1, { type: "button", state: clearStorageStatus || void 0, disabled: clearStorageStatus === "success", onClick: handleClearData, children: {
        success: "Cleared data",
        error: "Failed"
      }[clearStorageStatus] || "Clear data" })
    ] }) : null;
    $6[211] = clearStorageStatus;
    $6[212] = handleClearData;
    $6[213] = storageContext;
    $6[214] = t88;
  } else {
    t88 = $6[214];
  }
  let t89;
  if ($6[215] !== t84 || $6[216] !== t86 || $6[217] !== t87 || $6[218] !== t88) {
    t89 = (0, import_jsx_runtime2.jsxs)(Dialog, { open: t84, onOpenChange: handleOpenSettingsDialog, children: [
      t85,
      t86,
      t87,
      t88
    ] });
    $6[215] = t84;
    $6[216] = t86;
    $6[217] = t87;
    $6[218] = t88;
    $6[219] = t89;
  } else {
    t89 = $6[219];
  }
  let t90;
  if ($6[220] !== t27 || $6[221] !== t36 || $6[222] !== t78 || $6[223] !== t83 || $6[224] !== t89) {
    t90 = (0, import_jsx_runtime2.jsx)(Tooltip.Provider, { children: (0, import_jsx_runtime2.jsxs)("div", { "data-testid": "graphiql-container", className: t27, children: [
      t36,
      t78,
      t83,
      t89
    ] }) });
    $6[220] = t27;
    $6[221] = t36;
    $6[222] = t78;
    $6[223] = t83;
    $6[224] = t89;
    $6[225] = t90;
  } else {
    t90 = $6[225];
  }
  return t90;
}
function _temp32(child_1) {
  return isChildComponentType(child_1, GraphiQL.Footer);
}
function _temp22(child_0) {
  return isChildComponentType(child_0, GraphiQL.Toolbar);
}
function _temp8(child) {
  return isChildComponentType(child, GraphiQL.Logo);
}
var modifier = isMacOs ? "⌘" : "Ctrl";
var SHORT_KEYS = Object.entries({
  "Search in editor": [modifier, "F"],
  "Search in documentation": [modifier, "K"],
  "Execute query": [modifier, "Enter"],
  "Prettify editors": ["Ctrl", "Shift", "P"],
  "Merge fragments definitions into operation definition": ["Ctrl", "Shift", "M"],
  "Copy query": ["Ctrl", "Shift", "C"],
  "Re-fetch schema using introspection": ["Ctrl", "Shift", "R"]
});
function ShortKeys(t0) {
  const $6 = (0, import_react_compiler_runtime2.c)(5);
  const {
    keyMap
  } = t0;
  let t1;
  if ($6[0] === Symbol.for("react.memo_cache_sentinel")) {
    t1 = (0, import_jsx_runtime2.jsxs)("table", { className: "graphiql-table", children: [
      (0, import_jsx_runtime2.jsx)("thead", { children: (0, import_jsx_runtime2.jsxs)("tr", { children: [
        (0, import_jsx_runtime2.jsx)("th", { children: "Short Key" }),
        (0, import_jsx_runtime2.jsx)("th", { children: "Function" })
      ] }) }),
      (0, import_jsx_runtime2.jsx)("tbody", { children: SHORT_KEYS.map(_temp52) })
    ] });
    $6[0] = t1;
  } else {
    t1 = $6[0];
  }
  let t22;
  if ($6[1] === Symbol.for("react.memo_cache_sentinel")) {
    t22 = (0, import_jsx_runtime2.jsx)("a", { href: "https://codemirror.net/5/doc/manual.html#keymaps", target: "_blank", rel: "noopener noreferrer", children: "CodeMirror Key Maps" });
    $6[1] = t22;
  } else {
    t22 = $6[1];
  }
  let t32;
  if ($6[2] === Symbol.for("react.memo_cache_sentinel")) {
    t32 = (0, import_jsx_runtime2.jsx)("em", { children: "i" });
    $6[2] = t32;
  } else {
    t32 = $6[2];
  }
  let t42;
  if ($6[3] !== keyMap) {
    t42 = (0, import_jsx_runtime2.jsxs)("div", { children: [
      t1,
      (0, import_jsx_runtime2.jsxs)("p", { children: [
        "The editors use",
        " ",
        t22,
        " ",
        "that add more short keys. This instance of Graph",
        t32,
        "QL uses",
        " ",
        (0, import_jsx_runtime2.jsx)("code", { children: keyMap }),
        "."
      ] })
    ] });
    $6[3] = keyMap;
    $6[4] = t42;
  } else {
    t42 = $6[4];
  }
  return t42;
}
function _temp52(t0) {
  const [title, keys] = t0;
  return (0, import_jsx_runtime2.jsxs)("tr", { children: [
    (0, import_jsx_runtime2.jsx)("td", { children: keys.map(_temp42) }),
    (0, import_jsx_runtime2.jsx)("td", { children: title })
  ] }, title);
}
function _temp42(key, index, array) {
  return (0, import_jsx_runtime2.jsxs)(import_react97.Fragment, { children: [
    (0, import_jsx_runtime2.jsx)("code", { className: "graphiql-key", children: key }),
    index !== array.length - 1 && " + "
  ] }, key);
}
function GraphiQLLogo(props) {
  const $6 = (0, import_react_compiler_runtime2.c)(4);
  let t0;
  if ($6[0] !== props.children) {
    t0 = props.children || (0, import_jsx_runtime2.jsxs)("a", { className: "graphiql-logo-link", href: "https://github.com/graphql/graphiql", target: "_blank", rel: "noreferrer", children: [
      "Graph",
      (0, import_jsx_runtime2.jsx)("em", { children: "i" }),
      "QL"
    ] });
    $6[0] = props.children;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  let t1;
  if ($6[2] !== t0) {
    t1 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-logo", children: t0 });
    $6[2] = t0;
    $6[3] = t1;
  } else {
    t1 = $6[3];
  }
  return t1;
}
GraphiQLLogo.displayName = "GraphiQLLogo";
function GraphiQLToolbar(props) {
  const $6 = (0, import_react_compiler_runtime2.c)(2);
  let t0;
  if ($6[0] !== props.children) {
    t0 = (0, import_jsx_runtime2.jsx)(import_jsx_runtime2.Fragment, { children: props.children });
    $6[0] = props.children;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
GraphiQLToolbar.displayName = "GraphiQLToolbar";
function GraphiQLFooter(props) {
  const $6 = (0, import_react_compiler_runtime2.c)(2);
  let t0;
  if ($6[0] !== props.children) {
    t0 = (0, import_jsx_runtime2.jsx)("div", { className: "graphiql-footer", children: props.children });
    $6[0] = props.children;
    $6[1] = t0;
  } else {
    t0 = $6[1];
  }
  return t0;
}
GraphiQLFooter.displayName = "GraphiQLFooter";
function isChildComponentType(child, component) {
  var _a;
  if (((_a = child == null ? void 0 : child.type) == null ? void 0 : _a.displayName) && child.type.displayName === component.displayName) {
    return true;
  }
  return child.type === component;
}
export {
  GraphiQL,
  GraphiQLInterface,
  GraphiQLProvider,
  GraphiQL as default
};
//# sourceMappingURL=graphiql.js.map
